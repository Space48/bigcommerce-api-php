openapi: '3.0.0'
info:
  title: Abandoned Cart Emails
  version: '3.0.0'
  termsOfService: 'https://www.bigcommerce.com/terms'
  description: Abandoned Cart Emails V3 API managing Handlebars-based emails.
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Abandoned Cart Emails
  - name: Template settings
paths:
  '/marketing/abandoned-cart-emails':
    get:
      description: An array of abandoned cart emails pertaining to a store.
      parameters:
        - $ref: '#/components/parameters/ChannelIdOptional'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AbandondedCartEmail'
                  meta:
                    $ref: '#/components/schemas/metaCollection_open'
              examples:
                List of abandoned cart templates:
                  value:
                    data:
                      - id: 1
                        notify_at_minutes: 60
                        coupon_code: FF11-22X4
                        template:
                          subject: 'Complete your purchase at {{ store.name }}'
                          body: 'Complete your purchase <a href="{{ notification.checkout_link }}">{{notification.checkout.link}}'
                          translations:
                            - locale: en
                              keys:
                                hello_phrase: 'Welcome back,'
                    meta: {}
      tags:
        - Abandoned Cart Emails
      summary: Get all email templates
      operationId: getAbandonedCartEmails
    post:
      summary: Create email template
      operationId: createEmailTemplate
      tags:
        - Abandoned Cart Emails
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/AbandondedCartEmail'
                  meta:
                    $ref: '#/components/schemas/metaCollection_open'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveError'
      description: Create an Abandoned Cart Email template.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbandondedCartEmailPayload'
            examples:
              Add active abandoned cart email template:
                value:
                  is_active: true
                  coupon_code: FF11-22X4
                  notify_at_minutes: 60
                  template:
                    subject: 'Complete your purchase at {{ store.name }}'
                    body: '{{lang ''hello_phrase'' }}<br>Complete your purchase <a href="{{ notification.checkout_link }}">{{notification.checkout.link}}'
                    translations:
                      - locale: en
                        keys:
                          hello_phrase: Welcome
      parameters:
        - $ref: '#/components/parameters/ChannelIdOptional'
        - $ref: '#/components/parameters/ContentType'
    parameters:
      - $ref: '#/components/parameters/Accept'
  '/marketing/abandoned-cart-emails/{id}':
    get:
      summary: Get an email template
      description: Get a single Abandoned Cart Email template.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/AbandondedCartEmail'
                  meta:
                    $ref: '#/components/schemas/metaCollection_open'
      tags:
        - Abandoned Cart Emails
      operationId: getAbandonedCartEmailTemplateId
    put:
      summary: Update an email template
      description: Update an email template.
      operationId: updateAbandonedCartEmailsId
      tags:
        - Abandoned Cart Emails
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/AbandondedCartEmail'
                  meta:
                    $ref: '#/components/schemas/metaCollection_open'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbandondedCartEmailPayload'
            examples:
              Update Abandoned Cart Email template:
                value:
                  is_active: true
                  coupon_code: FF11-22X4
                  notify_at_minutes: 60
                  template:
                    subject: 'Complete your purchase at {{ store.name }}'
                    body: 'Complete your purchase <a href="{{ notification.checkout_link }}">{{notification.checkout.link}}'
                    translations:
                      - locale: en
                        keys:
                          hello_phrase: 'Welcome back,'
              Enable email:
                value:
                  is_active: true
              Disable email:
                value:
                  is_active: false
              Update coupon code and notification time:
                value:
                  coupon_code: FF11-22X4
                  notify_at_minutes: 60
      parameters:
        - $ref: '#/components/parameters/ContentType'
    delete:
      tags:
        - Abandoned Cart Emails
      description: Delete Abandoned Cart Email template.
      summary: Delete email template
      operationId: deleteAbandonedCartEmailTemplateId
      responses:
        '204':
          description: No Content
    parameters:
      - schema:
          type: integer
          minimum: 0
        name: id
        in: path
        required: true
        description: ID of the Abandoned Cart Email template.
      - $ref: '#/components/parameters/Accept'
  '/marketing/abandoned-cart-emails/default':
    get:
      summary: Get default email template
      description: Return default Abandoned Cart Email template.
      tags:
        - Abandoned Cart Emails
      operationId: GetDefaultAbandonedCartEmailTemplate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  subject:
                    type: string
                    minLength: 1
                  body:
                    type: string
                    minLength: 1
                  translations:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - locale
                        - keys
                      properties:
                        locale:
                          type: string
                          minLength: 1
                        keys:
                          type: object
                          properties:
                            hello_phrase:
                              type: string
                              minLength: 1
                required:
                  - subject
                  - body
                  - translations
              examples:
                example-1:
                  value:
                    subject: 'Complete your purchase at {{ store.name }}'
                    body: '{{lang ''hello_phrase''}} Complete your purchase <a href="{{ notification.checkout_link }}">{{notification.checkout.link}}'
                    translations:
                      - locale: en
                        keys:
                          hello_phrase: Welcome back
    parameters:
      - $ref: '#/components/parameters/Accept'
  '/marketing/abandoned-cart-emails/settings':
    get:
      summary: Get email template settings
      tags:
        - Template settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbandonedCartSettings'
      operationId: GetAbandonedCartEmailTemplateSettings
      description: Read Abandoned Cart Email Template settings.
      parameters:
        - $ref: '#/components/parameters/ChannelIdRequired'
    put:
      summary: Update email template settings
      operationId: updateEmailTemplateSettings
      tags:
        - Template settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbandonedCartSettings'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbandonedCartSettings'
      description: Update Abandoned Cart Email template settings.
      parameters:
        - $ref: '#/components/parameters/ChannelIdOptional'
        - $ref: '#/components/parameters/ContentType'
    parameters:
      - $ref: '#/components/parameters/Accept'
components:
  schemas:
    SaveError:
      type: object
      title: SaveError
      description: ''
      properties:
        status:
          type: integer
        title:
          type: string
        type:
          type: string
        errors:
          type: array
          items:
            type: string
      x-internal: false
    BaseError:
      title: BaseError
      type: object
      properties:
        status:
          type: string
        type:
          type: string
      x-internal: false
    AbandonedCartEmailModel:
      title: AbandonedCartEmailModel
      type: object
      properties:
        notify_at_minutes:
          $ref: '#/components/schemas/NotifyAtMinutes'
        coupon_code:
          $ref: '#/components/schemas/CouponCode'
        template:
          $ref: '#/components/schemas/Template'
      x-internal: false
    AbandonedCartSettings:
      title: AbandonedCartSettings
      type: object
      properties:
        use_global:
          type: boolean
          description: Boolean value that specifies the inheritance state.
      required:
        - use_global
      x-internal: false
    AbandondedCartEmailPayload:
      type: object
      properties:
        is_active:
          type: boolean
        coupon_code:
          $ref: '#/components/schemas/CouponCode'
        notify_at_minutes:
          $ref: '#/components/schemas/NotifyAtMinutes'
        template:
          $ref: '#/components/schemas/Template'
      title: ''
      x-internal: false
    Template:
      title: Template
      type: object
      properties:
        subject:
          type: string
          example: '''Complete your purchase at {{ store.name }}'''
          maxLength: 255
        body:
          type: string
          example: '''Complete your purchase <a href="{{ notification.checkout_link }}">{{notification.checkout.link}}'''
        translation:
          type: array
          items:
            $ref: '#/components/schemas/TranslationDefinition'
      required:
        - subject
        - body
        - translations
      x-internal: false
    TranslationDefinition:
      title: TranslationDefinition
      type: object
      properties:
        locale:
          type: string
          example: en
          description: 'Locale code for this language, such as ''en'', ''en-us'', ''fr-ca''.'
        keys:
          type: string
          description: Language keys for the template. User-defined. Should match any language keys used in the template.
        additionalProperties:
          type: string
      required:
        - locale
        - keys
      x-internal: false
    NotifyAtMinutes:
      type: integer
      title: NotifyAtMinutes
      description: 'Describes when this email will be sent, in minutes. Only supports certain intervals described in the enum.'
      example: 60
      enum:
        - 60
        - 120
        - 180
        - 240
        - 300
        - 360
        - 420
        - 480
        - 540
        - 600
        - 660
        - 720
        - 780
        - 840
        - 900
        - 960
        - 1020
        - 1080
        - 1140
        - 1200
        - 1260
        - 1320
        - 1380
        - 1440
        - 2880
        - 4320
        - 5760
        - 7200
        - 8640
        - 10080
        - 11520
        - 12960
        - 14400
      x-examples:
        example-1: 60
        type: integer
      x-internal: false
    CouponCode:
      title: Coupon Code Field
      type: string
      example: FF11-22X4
      x-internal: false
    AbandondedCartEmail:
      title: AbandondedCartEmail
      type: object
      properties:
        id:
          type: integer
          example: 1
        notify_at_minutes:
          $ref: '#/components/schemas/NotifyAtMinutes'
        coupon_code:
          $ref: '#/components/schemas/CouponCode'
        template:
          $ref: '#/components/schemas/Template'
        is_active:
          type: boolean
        sent_num:
          type: integer
      x-internal: false
    metaCollection_open:
      title: Response meta
      type: object
      properties: {}
      additionalProperties: true
      description: Response metadata.
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
    ChannelIdOptional:
      in: query
      name: channel_id
      description: Channel ID to use for channel-level data.
      schema:
        type: integer
    ChannelIdRequired:
      name: channel_id
      in: query
      required: true
      schema:
        type: integer
      description: Channel ID to use for channel-specific setting.
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        | Information & Settings  | read-only  | `store_v2_information_read_only`|
        | Information & Settings  | modify     | `store_v2_information`          |

        ### Authentication header

        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading

        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header


openapi: '3.0.0'
info:
  version: ''
  title: Abandoned Carts
  description: |-
    Use `/abandoned-carts/{token}` on headless storefronts to retrieve the `cart_id` using the abandoned cart `token` passed to the storefront when a shopper clicks an abandoned cart email link. Once the cart ID has been retrieved, your application can use it to fetch and display information about the cart to the shopper using the REST Storefront API, the REST Management API, or the GraphQL Storefront API.
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Abandoned Carts
  - name: Abandoned Cart Settings
  - name: Abandoned Carts Settings
paths:
  '/abandoned-carts/settings':
    get:
      summary: Get Global Abandoned Cart Settings
      description: Returns the global abandoned cart settings of a store.
      operationId: getGlobalAbandonedCartSettings
      tags:
        - Abandoned Cart Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalAbandonedCartSettingsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters: []
    put:
      summary: Update Global Abandoned Cart Settings
      description: Updates the global abandoned cart settings of a store.
      operationId: UpdateGlobalAbandonedCartSettings
      tags:
        - Abandoned Carts Settings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalAbandonedCartSettingsRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalAbandonedCartSettingsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/ContentType'
    parameters:
      
      - $ref: '#/components/parameters/Accept'
  '/abandoned-carts/settings/channels/{channel_id}':
    get:
      summary: Get Channel Abandoned Cart Settings
      description: Returns the per-channel overrides for the abandoned cart settings of a store.
      operationId: getChannelAbandonedCartSettings
      tags:
        - Abandoned Carts Settings
      parameters:
        - name: channel_id
          description: The channel ID of the settings overrides
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelAbandonedCartSettingsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update Channel Abandoned Cart Settings
      description: |-
        Updates the per-channel overrides for the abandoned cart settings of a store.

        #### OAuth Scopes
        | UI Name                                      | Permission | Parameter                                     |
        |----------------------------------------------|------------|-----------------------------------------------|     
        | Information & Settings                       | modify     | `store_v2_information`                        |
      operationId: UpdateChannelAbandonedCartSettings
      tags:
        - Abandoned Carts Settings
      parameters:
        - name: channel_id
          description: The channel ID of the settings overrides
          in: path
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelAbandonedCartSettingsRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelAbandonedCartSettingsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security: []
    parameters:
      
      - $ref: '#/components/parameters/Accept'
      - schema:
          type: string
        name: channel_id
        in: path
        required: true
  '/abandoned-carts/{token}':
    get:
      responses:
        '200':
          $ref: '#/components/responses/abandonedCart_Resp'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_UnprocessableEntity'
        '502':
          $ref: '#/components/responses/502_GatewayError'
        '503':
          $ref: '#/components/responses/503_ServiceUnavailable'
        '504':
          $ref: '#/components/responses/504_GatewayTimeout'
        default:
          description: ''
      summary: Get an Abandoned Cart
      description: |-
        Returns the `cart_id` corresponding to the abandoned cart `{token}` passed in.

        **Usage Notes**:
        * `{token}` is the token in the query string of the abandoned cart link found in abandoned cart email notifications to shoppers
      operationId: getAbandonedCarts
      tags:
        - Abandoned Carts
    parameters:
      - name: token
        in: path
        required: true
        description: |-
          Unique cart `UUID`.

          Unique cart `UUID` token that is generated for abandoned cart emails.
        schema:
          type: string
      
      - $ref: '#/components/parameters/Accept'
components:
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
  responses:
    502_GatewayError:
      description: 'If something happens during the request that causes it to fail, a 502 response will be returned. A new request should be made; however, it could fail.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 502
                title: A login URL could not be generated. Please try another request.
                type: /api-docs/getting-started/api-status-codes
    504_GatewayTimeout:
      description: 'If this occurs, you should retry the request. Typically retrying the request several times will result in a successful request; However, if you are unable to successfully make a request, please check the BigCommerce system status [here](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up (in several hours usually)'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorDetailed_Full'
          examples:
            response:
              value:
                status: 504
                title: Gateway Timeout
                type: /api-docs/getting-started/api-status-codes
                errors: {}
    403_Unauthorized:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 403
                title: Unauthorized Access. You do not have permission to make this request.
                type: /api-docs/getting-started/api-status-codes
    400_BadRequest:
      description: |-
        Malformed request syntax. Typically need to fix the JSON
        Body to resend successfully.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 400
                title: Input is invalid.
                type: /api-docs/getting-started/api-status-codes
    404_NotFound:
      description: 'If the requested account resource is not found for the franchise, return a 404 Not Found.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 404
                title: 'Account with {id} not found'
                type: /api-docs/getting-started/api-status-codes
    422_UnprocessableEntity:
      description: This occurs when missing or unacceptable data is passed for one or more fields. Please correct the values for the fields listed in the errors object.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorDetailed_Full'
          examples:
            response:
              value:
                status: 422
                title: JSON data is missing or invalid
                type: /api-docs/getting-started/api-status-codes
                errors:
                  name: error.expected.jsstring
                  primary_contact.district: error.expected.jsstring.
    503_ServiceUnavailable:
      description: 'If this occurs, you should retry the request. If you are unable to successfully make a request, please check the BigCommerce system status [here](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up (in several hours usually)'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 503
                title: Service Unavailable
                type: /api-docs/getting-started/api-status-codes
    abandonedCart_Resp:
      description: Returned on `GET` requests to `/abandoned_carts`.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/abandonedCartInfo_Full'
              meta:
                $ref: '#/components/schemas/metaEmpty_Full'
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        | Information & Settings  | read-only  | `store_v2_information_read_only`|
        | Information & Settings  | modify     | `store_v2_information`          |

        ### Authentication header

        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading

        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header
  schemas:
    metaEmpty_Full:
      title: Response meta
      type: object
      properties: {}
      additionalProperties: true
      description: Response metadata.
    error_Full:
      type: object
      title: error_Full
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
      x-internal: false
    errorDetailed_Full:
      type: object
      properties:
        errors:
          type: object
          additionalProperties:
            type: string
          title: DetailedErrors
      title: errorDetailed_Full
      x-internal: false
    abandonedCartInfo_Full:
      type: object
      title: abandonedCartInfo_Full
      properties:
        cart_id:
          type: string
          description: The `cart_id` of the abandoned cart. Can be used to display the abandoned cart to the customer using storefront cart or
      x-internal: false
    AbandonedCartSettings:
      description: Represents all settings related to the abandoned cart functionality of a store
      type: object
      x-tags:
        - Models
      properties:
        enable_notification:
          description: Indicates whether or not abandoned cart notification is on
          type: boolean
        email_customer_until_cart_is_recovered:
          description: Indicates whether or not a customer should continue to receive abandoned cart emails until their cart is recovered
          type: boolean
        marketing_emails_require_customer_consent:
          description: Indicates whether or not a customer should receive abandoned cart emails based on their consent. By default customers will not receive emails.
          type: boolean
        email_merchant_when_cart_is_converted:
          description: Indicates whether or not a merchant should receive a notification email when a cart is converted into an order
          type: boolean
        email_merchant_when_cart_is_abandoned:
          description: Indicates whether or not a merchant should receive a notification email when a cart is abandoned
          type: boolean
        merchant_email_address:
          description: The email address for receiving merchant notifications
          type: string
          format: email
        merchant_abandoned_cart_email_frequency_type:
          description: 'Indicates whether to send an email for every abandoned cart, or to send a digest email after X number of abandoned carts'
          type: string
          enum:
            - digest
            - individual
        merchant_abandoned_cart_digest_email_frequency:
          description: The number of abandoned carts to accumulate before a digest email is sent to a merchant
          type: integer
          minimum: 2
          maximum: 1000
    ChannelAbandonedCartSettings:
      description: Represents all settings overrides related to the abandoned cart functionality of a store for a channel
      type: object
      x-tags:
        - Models
      properties:
        enable_notification:
          description: 'Indicates whether or not abandoned cart notification is on. If it is null, it means there is no override for the specified channel.'
          type: boolean
          nullable: true
        email_customer_until_cart_is_recovered:
          description: 'Indicates whether or not a customer should continue to receive abandoned cart emails until their cart is recovered. If it is null, it means there is no override for the specified channel.'
          type: boolean
          nullable: true
        marketing_emails_require_customer_consent:
          description: 'Indicates whether or not a customer should receive abandoned cart emails based on their consent. If it is null, it means there is no override for the specified channel. By default customers will not receive emails.'
          type: boolean
          nullable: true
        email_merchant_when_cart_is_converted:
          description: 'Indicates whether or not a merchant should receive a notification email when a cart is converted into an order. If it is null, it means there is no override for the specified channel.'
          type: boolean
          nullable: true
        email_merchant_when_cart_is_abandoned:
          description: 'Indicates whether or not a merchant should receive a notification email when a cart is abandoned. If it is null, it means there is no override for the specified channel.'
          type: boolean
          nullable: true
        merchant_email_address:
          description: 'The email address for receiving merchant notifications. If it is null, it means there is no override for the specified channel.'
          type: string
          format: email
          nullable: true
        merchant_abandoned_cart_email_frequency_type:
          description: 'Indicates whether to send an email for every abandoned cart or to send a digest email after X number of abandoned carts. If it is null, it means there is no override for the specified channel.'
          type: string
          enum:
            - digest
            - individual
          nullable: true
        merchant_abandoned_cart_digest_email_frequency:
          description: 'The number of abandoned carts to accumulate before a digest email is sent to a merchant. If it is null, it means there is no override for the specified channel.'
          type: integer
          minimum: 2
          maximum: 1000
          nullable: true
    ChannelAbandonedCartSettingsRequest:
      allOf:
        - $ref: '#/components/schemas/ChannelAbandonedCartSettings'
        - description: The request object for updating the abandoned cart settings overrides of a store for a channel
      x-tags:
        - Models
    ChannelAbandonedCartSettingsResponse:
      description: The response object of abandoned cart settings overrides for a channel
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ChannelAbandonedCartSettings'
        meta:
          $ref: '#/components/schemas/metaEmpty_Full'
      x-tags:
        - Models
    GlobalAbandonedCartSettingsRequest:
      allOf:
        - $ref: '#/components/schemas/AbandonedCartSettings'
        - description: The request object for updating the abandoned cart settings of a store at the global level
          required:
            - enabled
            - email_customer_until_cart_is_recovered
            - marketing_emails_require_customer_consent
            - email_merchant_when_cart_is_converted
            - email_merchant_when_cart_is_abandoned
            - merchant_email_address
            - merchant_abandoned_cart_email_frequency_type
            - merchant_abandoned_cart_digest_email_frequency
      x-tags:
        - Models
    GlobalAbandonedCartSettingsResponse:
      description: The response object of abandoned cart settings at the global level
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AbandonedCartSettings'
        meta:
          $ref: '#/components/schemas/metaEmpty_Full'
      x-tags:
        - Models
    ErrorResponse:
      description: The response object containing details of an error
      type: object
      properties:
        status:
          type: integer
        title:
          type: string
        type:
          type: string
        instance:
          type: string
        errors:
          type: object
      x-tags:
        - Models


openapi: '3.0.1'
info:
  version: Storefront
  title: Storefront Carts
  description: |-
    Manage cart operations and data using frontend JavaScript on BigCommerce Stencil-powered storefronts.
    
    For info about API accounts, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts).
        
    For info about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#same-origin-cors-authentication).
servers:
  - url: 'https://{store_domain}/api/storefront'
    variables:
      store_domain:
        default: your_store.example.com
        description: 'The [URL authority](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_URL#authority) of the storefront.'
tags:
  - name: Cart
  - name: Cart Items
  - name: Cart Currency
paths:
  /carts:
    get:
      tags:
        - Cart
      summary: Get a Cart
      description: |-
        Returns a *Cart*.
        
        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  

      operationId: getACart
      parameters:
        - $ref: '#/components/parameters/include'
      responses:
        '200':
          $ref: '#/components/responses/getCarts'
    post:
      tags:
        - Cart
      summary: Create a Cart
      description: |-
        Creates a *Cart*.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  

      operationId: createACart
      parameters:
        - $ref: '#/components/parameters/include'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestCart'
            examples:
              With Text Modifier:
                value:
                  lineItems:
                    - quantity: 2
                      productId: 230
                      optionSelections:
                        - optionId: 10
                          optionValue: Some Text Value
                  locale: en
        required: true
      responses:
        '200':
          $ref: '#/components/responses/postCarts'
      x-codegen-request-body-name: cartData
  '/carts/{cartId}':
    delete:
      tags:
        - Cart
      summary: Delete a Cart
      description: |-
        Deletes a *Cart*. Once a *Cart* has been deleted it can not be recovered.

        
        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  

      operationId: deleteACart
      parameters:
        - name: cartId
          in: path
          description: This cart's unique ID.
          required: true
          schema:
            type: string
            format: UUID
      responses:
        '204':
          description: No Content
  '/carts/{cartId}/items':
    post:
      tags:
        - Cart Items
      summary: Add Cart Line Items
      description: |-
        Adds a line items to the *Cart*.


        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  

      operationId: addCartLineItem
      parameters:
        - name: cartId
          in: path
          description: This cart's unique ID.
          required: true
          schema:
            type: string
            format: UUID
        - name: include
          in: query
          description: |-
            To return product options add one of the following include:

            `lineItems.physicalItems.options`: The Cart returns an abbreviated result. Use this to return physical items product options. Can also be used in a /POST to have the extended Cart object return.

            `lineItems.digitalItems.options`:  The Cart returns an abbreviated result. Use this to return digital items product options.  Can also be used in a /POST to have the extended Cart object return.

            `lineItems.digitalItems.options,lineItems.physicalItems.options`:  The Cart returns an abbreviated result. Use this to return digital and physical options. Can also be used in a /POST to have the extended Cart object return.
          schema:
            type: string
            default: 'lineItems.digitalItems.options,lineItems.physicalItems.options'
            enum:
              - lineItems.physicalItems.options
              - lineItems.digitalItems.options
              - 'lineItems.digitalItems.options,lineItems.physicalItems.options'
      responses:
        '200':
          $ref: '#/components/responses/postCartsItems'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LineItemsRequest'
            examples:
              With Option Selections:
                value:
                  lineItems:
                    - quantity: 2
                      productId: 230
                      variantId: 124
                      optionSelections:
                        - optionId: 10
                          optionValue: 117
                        - optionId: 11
                          optionValue: 125
        description: ''
  '/carts/{cartId}/items/{itemId}':
    put:
      tags:
        - Cart Items
      summary: Update Cart Line Item
      description: |-
        Updates a *Cart* line item. Updates an existing, single line item quantity and the price of custom items in a cart.

        If a modified product or variant needs to be changed or updated, you can remove and re-add the product to the cart with the correct variants using the [Delete Cart Line Item](/docs/rest-storefront/carts/cart-items#delete-cart-line-item) and the [Add Cart Line Items](/docs/rest-storefront/carts/cart-items#add-cart-line-items) endpoints. You can also use carts mutations that are part of the [GraphQL Storefront API](/api-docs/storefront/graphql/carts-and-checkout).


        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  

      operationId: updateCartLineItem
      parameters:
        - name: cartId
          in: path
          description: This cart's unique ID.
          required: true
          schema:
            type: string
            format: UUID
        - name: itemId
          in: path
          description: This item's ID.
          required: true
          schema:
            type: string
            format: number
        - name: include
          in: query
          description: |-
            To return product options add one of the following include:

            `lineItems.physicalItems.options`: The Cart returns an abbreviated result. Use this to return physical items product options. Can also be used in a /POST to have the extended Cart object return.

            `lineItems.digitalItems.options`:  The Cart returns an abbreviated result. Use this to return digital items product options.  Can also be used in a /POST to have the extended Cart object return.

            `lineItems.digitalItems.options,lineItems.physicalItems.options`:  The Cart returns an abbreviated result. Use this to return digital and physical options. Can also be used in a /POST to have the extended Cart object return.
          schema:
            type: string
            default: 'lineItems.digitalItems.options,lineItems.physicalItems.options'
            enum:
              - lineItems.physicalItems.options
              - lineItems.digitalItems.options
              - 'lineItems.digitalItems.options,lineItems.physicalItems.options'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestLineItemPut'
            examples:
              Variant Item:
                value:
                  lineItem:
                    productId: 229
                    variantId: 191
                    quantity: 10
                  locale: en
              Custom Item:
                value:
                  lineItem:
                    productId: 118
                    variantId: 140
                    quantity: 10
                    optionSelections:
                      - optionId: 125
                        optionValue: 127
                  locale: en
        required: true
      responses:
        '200':
          $ref: '#/components/responses/putCartsItems'
      x-codegen-request-body-name: lineItem
    delete:
      tags:
        - Cart Items
      summary: Delete Cart Line Item
      description: |-
        Deletes a *Cart* line item.

        Removing the last `line_item` in the *Cart* deletes the *Cart*.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
      operationId: deleteCartLineItem
      parameters:
        - name: cartId
          in: path
          description: This cart's unique ID.
          required: true
          schema:
            type: string
            format: UUID
        - name: itemId
          in: path
          description: The ID of the item to delete.
          required: true
          schema:
            type: string
            format: number
        - name: include
          in: query
          description: |-
            To return product options add one of the following include:

            `lineItems.physicalItems.options`: The Cart returns an abbreviated result. Use this to return physical items product options. Can also be used in a /POST to have the extended Cart object return.

            `lineItems.digitalItems.options`:  The Cart returns an abbreviated result. Use this to return digital items product options.  Can also be used in a /POST to have the extended Cart object return.

            `lineItems.digitalItems.options,lineItems.physicalItems.options`:  The Cart returns an abbreviated result. Use this to return digital and physical options. Can also be used in a /POST to have the extended Cart object return.
          schema:
            type: string
            default: 'lineItems.digitalItems.options,lineItems.physicalItems.options'
            enum:
              - lineItems.physicalItems.options
              - lineItems.digitalItems.options
              - 'lineItems.digitalItems.options,lineItems.physicalItems.options'
      responses:
        '200':
          $ref: '#/components/responses/deleteCartsItems'
  '/carts/{cartId}/currency':
    post:
      tags:
        - Cart Currency
      summary: Update Cart Currency
      description: |-
        Update currency of the *Cart*. 
        Promotions and gift certificates that don't apply to the new currency will be removed from your cart.
        You cannot update the cart currency if the draft order cart or the cart contains a manual discount.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
      operationId: addCartCurrency
      parameters:
        - name: cartId
          in: path
          description: This cart's unique ID.
          required: true
          schema:
            type: string
            format: UUID
      responses:
        '200':
          $ref: '#/components/responses/getCarts'
        '400':
          description: Bad request. Authentication Required.
        '404':
          description: Currency not found
        '422':
          description: Missing or invalid data
      requestBody:
        content:
          application/json:
            schema:
              title: Cart Currency Request Data
              required:
                - currencyCode
              type: object
              properties:
                currencyCode:
                  type: string
                  description: currency code
              x-internal: false
        description: ''
components:
  schemas:
    responseCartCoupons:
      title: Response Cart Coupons
      type: array
      items:
        required:
          - code
        type: object
        properties:
          code:
            type: string
            description: The coupon code.
          couponType:
            type: integer
            description: |-
              |Type `int`|Type Name|
              |-|-|
              |`0`|`per_item_discount`|
              |`1`|`percentage_discount`|
              |`2`|`per_total_discount`|
              |`3`|`shipping_discount`|
              |`4`|`free_shipping`|
              |`5`|`promotion`|
          discountedAmount:
            type: number
            description: The discounted amount applied within a given context.
            format: float
          id:
            type: string
            description: The coupon ID.
      x-internal: false
    responseCartDiscounts:
      title: responseCartDiscounts
      type: array
      items:
        type: object
        properties:
          discountedAmount:
            type: number
            description: The discounted amount applied within a given context.
            format: float
          id:
            type: string
            description: ID of the applied discount.
      x-internal: false
    responseCart:
      description: Cart object used in REST Storefront API cart responses.
      title: Cart Read
      type: object
      properties:
        id:
          type: string
          description: 'Cart ID, provided after creating a cart with a POST.'
          format: UUID
        customerId:
          type: integer
          description: ID of the customer to which the cart belongs.
        email:
          type: string
          description: The cart's email. This is the same email that is used in the billing address
        currency:
          $ref: '#/components/schemas/responseCartCurrency'
        isTaxIncluded:
          type: boolean
          description: Whether this item is taxable.
        baseAmount:
          type: number
          description: 'Cost of cart’s contents, before applying discounts.'
        discountAmount:
          type: number
          description: Order based discounted amount only - Coupon discounts and product based discounts are excluded.
          format: float
        cartAmount:
          type: number
          description: 'Sum of line-items amounts, minus cart-level discounts and coupons. This amount includes taxes (where applicable).'
        coupons:
          $ref: '#/components/schemas/responseCartCoupons'
        discounts:
          $ref: '#/components/schemas/responseCartDiscounts'
        lineItems:
          $ref: '#/components/schemas/responseCartLineItems'
        createdTime:
          type: string
          description: Time when the cart was created.
          format: ISO-8601
        updatedTime:
          type: string
          description: Time when the cart was last updated.
          format: ISO-8601
        locale:
          type: string
          description: Locale of the cart.
      x-internal: false
    requestCart:
      title: Create Cart Request Object
      description: Cart object used in create cart requests.
      oneOf:
        - properties:
            lineItems:
              type: array
              items:
                $ref: '#/components/schemas/requestCartPostLineItem'
            locale:
              type: string
          required:
            - lineItems
        - properties:
            giftCertificates:
              type: array
              items:
                $ref: '#/components/schemas/requestLineItemGiftCertificate'
            locale:
              type: string
          required:
            - giftCertificates
        - properties:
            lineItems:
              type: array
              items:
                $ref: '#/components/schemas/requestCartPostLineItem'
            giftCertificates:
              $ref: '#/components/schemas/requestLineItemGiftCertificate'
            locale:
              type: string
          required:
            - lineItems
            - giftCertificates
      type: object
      x-internal: false
    responseCartLineItemsPhysicalItemGiftWrapping:
      title: Gift Wrapping
      type: object
      properties:
        amount:
          type: number
          description: Gift-wrapping price per product.
          format: float
        message:
          type: string
        name:
          type: string
          description: Name of the gift-wrapping option.
      nullable: true
      x-internal: false
    requestLineItemGiftCertificate:
      title: Line Item Gift Certificate Request Data
      required:
        - amount
        - name
        - quantity
        - recipient
        - sender
        - theme
      type: object
      properties:
        amount:
          maximum: 1000
          minimum: 1
          type: number
          description: Gift-certificate amount.
        message:
          type: string
          description: 'Message shown to recipient, as provided by sender.'
        name:
          type: string
          description: Name assigned to this gift-certificate line item.
        quantity:
          minimum: 1
          type: integer
          description: Quantity of this item.
        recipient:
          $ref: '#/components/schemas/requestLineItemGiftCertificateRecipient'
        sender:
          $ref: '#/components/schemas/requestLineItemGiftCertificateSender'
        theme:
          type: string
          description: 'Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.'
      x-internal: false
    LineItemsRequest:
      title: requestLineItems
      oneOf:
        - properties:
            lineItems:
              type: array
              items:
                $ref: '#/components/schemas/requestCartPostLineItem'
          required:
            - lineItems
        - properties:
            giftCertificates:
              type: array
              items:
                $ref: '#/components/schemas/requestLineItemGiftCertificate'
          required:
            - giftCertificates
        - properties:
            lineItems:
              type: array
              items:
                $ref: '#/components/schemas/requestCartPostLineItem'
            giftCertificates:
              $ref: '#/components/schemas/requestLineItemGiftCertificate'
          required:
            - lineItems
            - giftCertificates
      type: object
      description: Cart object used in add items requests.
      x-internal: false
    requestLineItemPut:
      title: requestLineItemPut
      oneOf:
        - properties:
            lineItem:
              $ref: '#/components/schemas/requestCartPostLineItem'
          required:
            - lineItem
          title: Line item
        - properties:
            giftCertificates:
              $ref: '#/components/schemas/requestLineItemGiftCertificate'
          required:
            - giftCertificates
          title: Gift certificate item
        - properties:
            lineItem:
              $ref: '#/components/schemas/requestCartPostLineItem'
            giftCertificates:
              $ref: '#/components/schemas/requestLineItemGiftCertificate'
          required:
            - lineItem
            - giftCertificates
          title: line & gift certificate items
      description: ''
      type: object
      x-internal: false
    responseCartCurrency:
      title: Currency
      type: object
      properties:
        code:
          type: string
          description: 'ISO-4217 currency code. (See: http://en.wikipedia.org/wiki/ISO_4217.)'
          format: ISO-4217
      description: This will always be the same between cart and checkout.
      x-go-gen-location: models
      x-internal: false
    responseCartLineItems:
      title: Response Line Items Object
      type: object
      properties:
        customItems:
          type: array
          items:
            $ref: '#/components/schemas/responseCartLineItemsCustomItems'
        digitalItems:
          type: array
          description: Array of `ItemDigital` objects.
          items:
            $ref: '#/components/schemas/responseCartLineItemsDigitalItems'
        giftCertificates:
          type: array
          description: Array of `ItemGiftCertificate` objects.
          items:
            $ref: '#/components/schemas/responseCartLineItemsGiftCertificates'
        physicalItems:
          type: array
          description: Array of `ItemPhysical` objects.
          items:
            $ref: '#/components/schemas/responseCartLineItemsItemsPhysicalItemsItems'
      x-internal: false
    responseCartLineItemsCustomItems:
      title: Item Custom
      type: object
      properties:
        extendedListPrice:
          type: integer
          readOnly: true
        id:
          type: string
          description: Id of the custom item
          readOnly: true
          example: f1f3a531-fbcf-439b-bac1-40d5ae5c2bff
        listPrice:
          type: integer
          description: Price of the item. With or without tax depending on your stores set up.
          readOnly: true
          example: 10
        name:
          type: string
          description: Name of the custom item.
          readOnly: true
          example: Custom Item Name
        quantity:
          type: integer
          readOnly: true
          example: 1
        sku:
          type: string
          description: SKU of the custom item.
          readOnly: true
          example: SM-456
      description: |-
        **Read Only**

        This will return in the Cart Response if the Cart was created using the [REST Management API](/docs/rest-management/carts). A custom item can only be added to a cart using the REST Management API.
      x-internal: false
    responseCartLineItemsDigitalItems:
      title: Item Digital
      allOf:
        - $ref: '#/components/schemas/responseCartLineItemsDigitalItemsAllOf0'
      x-internal: false
    responseCartLineItemsDigitalItemsAllOf0:
      title: Base Item
      required:
        - quantity
      type: object
      properties:
        options:
          type: array
          description: The list of selected options for this product.
          items:
            $ref: '#/components/schemas/responseCartLineItemsDigitalItemsAllOf0OptionsItems'
        brand:
          type: string
          description: The products brand
        couponAmount:
          type: number
          description: The total value of all coupons applied to this item.
        discountAmount:
          type: number
          description: The total value of all discounts applied to this item (excluding coupon).
          format: float
        discounts:
          type: array
          description: 'List of discounts applied to this item, as an array of AppliedDiscount objects.'
          items:
            $ref: '#/components/schemas/responseCartLineItemsDigitalItemsAllOf0DiscountsItems'
        extendedListPrice:
          type: number
          description: Item's list price multiplied by the quantity.
        extendedSalePrice:
          type: number
          description: Item's sale price multiplied by the quantity.
        id:
          type: string
          description: The line-item ID.
          example: '4'
        imageUrl:
          type: string
          description: 'URL of an image of this item, accessible on the internet.'
          format: uri
        isTaxable:
          type: boolean
          description: Whether the item is taxable.
        listPrice:
          type: number
          description: 'The net item price before discounts and coupons. BigCommerce derives an item’s list price from the product default price or, if applicable, the sale price configured in the admin panel.'
        originalPrice:
          type: number
          description: An item’s original price is the same as the product default price in the admin panel.
        name:
          type: string
          description: The item's product name.
        parentId:
          type: string
          description: 'The product is part of a bundle such as a product pick list, then the parentId or the main product id will populate.'
          example: '6'
        productId:
          type: number
          description: ID of the product.
        quantity:
          type: number
          description: Quantity of this item.
        salePrice:
          type: number
          description: Item's price after all discounts are applied. (The final price before tax calculation.)
        sku:
          type: string
          description: SKU of the variant.
        url:
          type: string
          description: The product URL.
          format: uri
        variantId:
          type: number
          description: ID of the variant.
          example: 7
      x-internal: false
    responseCartLineItemsDigitalItemsAllOf0DiscountsItems:
      title: Applied Discount
      type: object
      properties:
        discountedAmount:
          type: number
          description: The discounted amount applied within a given context.
          format: float
        id:
          type: number
          description: ID of the applied discount.
      x-internal: false
    responseCartLineItemsDigitalItemsAllOf0OptionsItems:
      title: Product Option
      type: object
      properties:
        name:
          type: string
          description: 'The product option name. For example, Color or Size'
        nameId:
          type: number
          description: 'The product option identifier. It is the same as the `optionId` used in the request. '
          example: 125
        value:
          type: string
          description: 'The product option value. For example, Red or Medium'
        valueId:
          type: number
          description: The product option value identifier. It is the same as the `optionValue` used in the request.
          example: 127
      x-internal: false
    responseCartLineItemsGiftCertificates:
      title: Item Gift Certificate
      required:
        - amount
        - recipient
        - sender
        - theme
      type: object
      properties:
        amount:
          type: number
          description: 'Value must be between 1.00 and 1,000.00 in the storeʼs default currency.'
        id:
          type: string
          description: ID of this gift certificate.
        isTaxable:
          type: boolean
          description: Whether or not the gift certificate is taxable.
        message:
          type: string
          description: Message that will be sent to the gift certificate's recipient. Limited to 200 characters.
        name:
          type: string
          description: GiftCertificate-provided name that will appear in the control panel.
        recipient:
          $ref: '#/components/schemas/responseCartLineItemsGiftCertificatesRecipient'
        sender:
          $ref: '#/components/schemas/responseCartLineItemsGiftCertificatesSender'
        theme:
          type: string
          description: 'Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.'
      x-internal: false
    responseCartLineItemsGiftCertificatesRecipient:
      title: Contact Entity
      type: object
      properties:
        email:
          type: string
          description: Contact's email address.
          format: email
        name:
          type: string
          description: Contact's name.
      x-internal: false
    responseCartLineItemsGiftCertificatesSender:
      title: Contact Entity
      type: object
      properties:
        email:
          type: string
          description: Contact's email address.
          format: email
        name:
          type: string
          description: Contact's name.
      x-internal: false
    responseCartLineItemsItemsPhysicalItemsItems:
      title: Item Physical
      allOf:
        - $ref: '#/components/schemas/responseCartBaseItem'
        - $ref: '#/components/schemas/responseCartLineItemsItemsPhysicalItemsItemsAllOf1'
      x-internal: false
    responseCartBaseItem:
      title: Base Item
      type: object
      properties:
        options:
          type: array
          description: The list of selected options for this product.
          items:
            $ref: '#/components/schemas/responseCartLineItemsItemsPhysicalItemsItemsAllOf0OptionsItems'
        brand:
          type: string
          description: The products brand
        couponAmount:
          type: number
          description: The total value of all coupons applied to this item.
        discountAmount:
          type: number
          description: The total value of all discounts applied to this item (excluding coupon).
          format: float
        discounts:
          $ref: '#/components/schemas/responseCartDiscounts'
        extendedListPrice:
          type: number
          description: Item's list price multiplied by the quantity.
        extendedSalePrice:
          type: number
          description: Item's sale price multiplied by the quantity.
        id:
          type: string
          description: The line-item ID.
          example: '4'
        imageUrl:
          type: string
          description: 'URL of an image of this item, accessible on the internet.'
          format: uri
        isTaxable:
          type: boolean
          description: Whether the item is taxable.
        listPrice:
          type: number
          description: 'The net item price before discounts and coupons. BigCommerce derives an item’s list price from the product default price or, if applicable, the sale price configured in the admin panel.'
        originalPrice:
          type: number
          description: An item’s original price is the same as the product default price in the admin panel.
        name:
          type: string
          description: The item's product name.
        parentId:
          type: number
          description: 'The product is part of a bundle such as a product pick list, then the parentId or the main product id will populate.'
          example: 6
        productId:
          type: number
          description: ID of the product.
        quantity:
          type: number
          description: Quantity of this item.
        salePrice:
          type: number
          description: Item's price after all discounts are applied. (The final price before tax calculation.)
        sku:
          type: string
          description: SKU of the variant.
        url:
          type: string
          description: The product URL.
          format: uri
        variantId:
          type: number
          description: ID of the variant.
          example: 7
      required:
        - quantity
      x-internal: false
    responseCartLineItemsItemsPhysicalItemsItemsAllOf0OptionsItems:
      title: Product Option
      type: object
      properties:
        name:
          type: string
          description: 'The product option name. For example, Color or Size'
        nameId:
          type: number
          description: The product option identifier. It is the same as the `optionId` used in the request.
          example: 125
        value:
          type: string
          description: 'The product option value. For example, Red or Medium'
        valueId:
          type: number
          description: The product option value identifier. It is the same as the `optionValue` used in the request.
          example: 127
      x-internal: false
    responseCartLineItemsItemsPhysicalItemsItemsAllOf1:
      type: object
      properties:
        giftWrapping:
          $ref: '#/components/schemas/responseCartLineItemsPhysicalItemGiftWrapping'
        isShippingRequired:
          type: boolean
          description: Whether this item requires shipping to a physical address.
      x-internal: false
    requestCartPostLineItem:
      title: Line Item Request Data
      anyOf:
        - properties:
            productId:
              type: number
              description: ID of the product.
            quantity:
              type: number
              description: Quantity of this item.
          required:
            - productId
            - quantity
          title: Simple product
        - properties:
            productId:
              type: number
              description: ID of the product.
            quantity:
              type: number
              description: Quantity of this item.
            variantId:
              type: number
              description: ID of the variant.
          required:
            - productId
            - quantity
            - variantId
          title: Product with a variant    
      x-examples:
        example-1:
          productId: 0
          quantity: 0
      x-internal: false
      type: object
    requestLineItemGiftCertificateRecipient:
      title: Contact Entity
      type: object
      properties:
        email:
          type: string
          description: Contact's email address.
          format: email
        name:
          type: string
          description: Contact's name.
      x-internal: false
    requestLineItemGiftCertificateSender:
      title: Contact Entity
      type: object
      properties:
        email:
          type: string
          description: Contact's email address.
          format: email
        name:
          type: string
          description: Contact's name.
      x-internal: false
  responses:
    postCarts:
      description: Post Carts Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseCart'
          examples:
            Example:
              value:
                id: string
                customerId: 0
                email: string
                currency:
                  code: string
                isTaxIncluded: true
                baseAmount: 0
                discountAmount: 0
                cartAmount: 0
                coupons:
                  - code: string
                    couponType: 0
                    discountedAmount: 0
                    id: string
                discounts:
                  - discountedAmount: 0
                    id: string
                lineItems:
                  customItems:
                    - extendedListPrice: 0
                      id: f1f3a531-fbcf-439b-bac1-40d5ae5c2bff
                      listPrice: 10
                      name: Custom Item Name
                      quantity: 1
                      sku: SM-456
                  digitalItems:
                    - options:
                        - name: string
                          nameId: 0
                          value: string
                          valueId: 0
                      brand: string
                      couponAmount: 0
                      discountAmount: 0
                      discounts:
                        - discountedAmount: 0
                          id: 0
                      extendedListPrice: 0
                      extendedSalePrice: 0
                      id: '4'
                      imageUrl: 'http://example.com'
                      isTaxable: true
                      listPrice: 0
                      originalPrice: 0
                      name: string
                      parentId: '6'
                      productId: 0
                      quantity: 0
                      salePrice: 0
                      sku: string
                      url: 'http://example.com'
                      variantId: 7
                  giftCertificates:
                    - amount: 0
                      id: string
                      isTaxable: true
                      message: string
                      name: string
                      recipient:
                        email: user@example.com
                        name: string
                      sender:
                        email: user@example.com
                        name: string
                      theme: string
                  physicalItems:
                    - options:
                        - name: string
                          nameId: 0
                          value: string
                          valueId: 0
                      brand: string
                      couponAmount: 0
                      discountAmount: 0
                      discounts:
                        - discountedAmount: 0
                          id: string
                      extendedListPrice: 0
                      extendedSalePrice: 0
                      id: '4'
                      imageUrl: 'http://example.com'
                      isTaxable: true
                      listPrice: 0
                      originalPrice: 0
                      name: string
                      parentId: 6
                      productId: 0
                      quantity: 0
                      salePrice: 0
                      sku: string
                      url: 'http://example.com'
                      variantId: 7
                      giftWrapping:
                        amount: 0
                        message: string
                        name: string
                      isShippingRequired: true
                createdTime: string
                updatedTime: string
                locale: string
    postCartsItems:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseCart'
          examples:
            example-1:
              value:
                id: string
                customerId: 0
                email: string
                currency:
                  code: string
                isTaxIncluded: true
                baseAmount: 0
                discountAmount: 0
                cartAmount: 0
                coupons:
                  - code: string
                    couponType: 0
                    discountedAmount: 0
                    id: string
                discounts:
                  - discountedAmount: 0
                    id: string
                lineItems:
                  customItems:
                    - extendedListPrice: 0
                      id: f1f3a531-fbcf-439b-bac1-40d5ae5c2bff
                      listPrice: 10
                      name: Custom Item Name
                      quantity: 1
                      sku: SM-456
                  digitalItems:
                    - options:
                        - name: string
                          nameId: 0
                          value: string
                          valueId: 0
                      brand: string
                      couponAmount: 0
                      discountAmount: 0
                      discounts:
                        - discountedAmount: 0
                          id: 0
                      extendedListPrice: 0
                      extendedSalePrice: 0
                      id: '4'
                      imageUrl: 'http://example.com'
                      isTaxable: true
                      listPrice: 0
                      originalPrice: 0
                      name: string
                      parentId: '6'
                      productId: 0
                      quantity: 0
                      salePrice: 0
                      sku: string
                      url: 'http://example.com'
                      variantId: 7
                  giftCertificates:
                    - amount: 0
                      id: string
                      isTaxable: true
                      message: string
                      name: string
                      recipient:
                        email: user@example.com
                        name: string
                      sender:
                        email: user@example.com
                        name: string
                      theme: string
                  physicalItems:
                    - options:
                        - name: string
                          nameId: 0
                          value: string
                          valueId: 0
                      brand: string
                      couponAmount: 0
                      discountAmount: 0
                      discounts:
                        - discountedAmount: 0
                          id: string
                      extendedListPrice: 0
                      extendedSalePrice: 0
                      id: '4'
                      imageUrl: 'http://example.com'
                      isTaxable: true
                      listPrice: 0
                      originalPrice: 0
                      name: string
                      parentId: 6
                      productId: 0
                      quantity: 0
                      salePrice: 0
                      sku: string
                      url: 'http://example.com'
                      variantId: 7
                      giftWrapping:
                        amount: 0
                        message: string
                        name: string
                      isShippingRequired: true
                createdTime: string
                updatedTime: string
                locale: string
    putCartsItems:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseCart'
          examples:
            Example:
              value:
                id: string
                customerId: 0
                email: string
                currency:
                  code: string
                isTaxIncluded: true
                baseAmount: 0
                discountAmount: 0
                cartAmount: 0
                coupons:
                  - code: string
                    couponType: 0
                    discountedAmount: 0
                    id: string
                discounts:
                  - discountedAmount: 0
                    id: string
                lineItems:
                  customItems:
                    - extendedListPrice: 0
                      id: f1f3a531-fbcf-439b-bac1-40d5ae5c2bff
                      listPrice: 10
                      name: Custom Item Name
                      quantity: 1
                      sku: SM-456
                  digitalItems:
                    - options:
                        - name: string
                          nameId: 0
                          value: string
                          valueId: 0
                      brand: string
                      couponAmount: 0
                      discountAmount: 0
                      discounts:
                        - discountedAmount: 0
                          id: 0
                      extendedListPrice: 0
                      extendedSalePrice: 0
                      id: '4'
                      imageUrl: 'http://example.com'
                      isTaxable: true
                      originalPrice: 0
                      listPrice: 0
                      name: string
                      parentId: '6'
                      productId: 0
                      quantity: 0
                      salePrice: 0
                      sku: string
                      url: 'http://example.com'
                      variantId: 7
                  giftCertificates:
                    - amount: 0
                      id: string
                      isTaxable: true
                      message: string
                      name: string
                      recipient:
                        email: user@example.com
                        name: string
                      sender:
                        email: user@example.com
                        name: string
                      theme: string
                  physicalItems:
                    - options:
                        - name: string
                          nameId: 0
                          value: string
                          valueId: 0
                      brand: string
                      couponAmount: 0
                      discountAmount: 0
                      discounts:
                        - discountedAmount: 0
                          id: string
                      extendedListPrice: 0
                      extendedSalePrice: 0
                      id: '4'
                      imageUrl: 'http://example.com'
                      isTaxable: true
                      originalPrice: 0
                      listPrice: 0
                      name: string
                      parentId: 6
                      productId: 0
                      quantity: 0
                      salePrice: 0
                      sku: string
                      url: 'http://example.com'
                      variantId: 7
                      giftWrapping:
                        amount: 0
                        message: string
                        name: string
                      isShippingRequired: true
                createdTime: string
                updatedTime: string
                locale: string
    getCarts:
      description: ''
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/responseCart'
          examples:
            Example:
              value:
                - id: 770ded29-da45-4ee0-abc6-883e83c0e5ed
                  customerId: 0
                  email: ''
                  currency:
                    name: US Dollars
                    code: USD
                    symbol: $
                    decimalPlaces: 2
                  isTaxIncluded: false
                  baseAmount: 246
                  discountAmount: 0
                  cartAmount: 221.4
                  coupons: []
                  discounts:
                    - id: a83dea21-d757-47a2-a06a-73cf6a983746
                      discountedAmount: 24.6
                  lineItems:
                    physicalItems:
                      - id: a83dea21-d757-47a2-a06a-73cf6a983746
                        parentId: 6
                        variantId: 193
                        productId: 230
                        sku: sku123-VA
                        name: options test
                        url: 'https://store.example.com/options-test/'
                        quantity: 2
                        brand: BigCommerce
                        isTaxable: true
                        imageUrl: 'https://cdn11.bigcommerce.com/r-3b68d717e18793df0b51c71e16bc24664ad18b7c/themes/ClassicNext/images/ProductDefault.gif'
                        discounts:
                          - id: string
                            discountedAmount: 24.6
                        discountAmount: 24.6
                        couponAmount: 0
                        originalPrice: 130
                        listPrice: 123
                        salePrice: 110.7
                        extendedListPrice: 246
                        extendedSalePrice: 221.4
                        isShippingRequired: true
                        type: physical
                        isMutable: true
                        giftWrapping: null
                    digitalItems: []
                    giftCertificates: []
                    customItems: []
                  createdTime: '2021-03-04T14:17:50+00:00'
                  updatedTime: '2021-03-04T14:17:50+00:00'
                  locale: en
    deleteCartsItems:
      description: 'NOTE: Discounted line items are re-evaluated on cart actions and may be automatically added back to your cart with a new line item ID to satisfy promotional requirements.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseCart'
          examples:
            Example:
              value:
                id: string
                customerId: 0
                email: string
                currency:
                  code: string
                isTaxIncluded: true
                baseAmount: 0
                discountAmount: 0
                cartAmount: 0
                coupons:
                  - code: string
                    couponType: 0
                    discountedAmount: 0
                    id: string
                discounts:
                  - discountedAmount: 0
                    id: string
                lineItems:
                  customItems:
                    - extendedListPrice: 0
                      id: f1f3a531-fbcf-439b-bac1-40d5ae5c2bff
                      listPrice: 10
                      name: Custom Item Name
                      quantity: 1
                      sku: SM-456
                  digitalItems:
                    - options:
                        - name: string
                          nameId: 0
                          value: string
                          valueId: 0
                      brand: string
                      couponAmount: 0
                      discountAmount: 0
                      discounts:
                        - discountedAmount: 0
                          id: 0
                      extendedListPrice: 0
                      extendedSalePrice: 0
                      id: '4'
                      imageUrl: 'http://example.com'
                      isTaxable: true
                      originalPrice: 0
                      listPrice: 0
                      name: string
                      parentId: '6'
                      productId: 0
                      quantity: 0
                      salePrice: 0
                      sku: string
                      url: 'http://example.com'
                      variantId: 7
                  giftCertificates:
                    - amount: 0
                      id: string
                      isTaxable: true
                      message: string
                      name: string
                      recipient:
                        email: user@example.com
                        name: string
                      sender:
                        email: user@example.com
                        name: string
                      theme: string
                  physicalItems:
                    - options:
                        - name: string
                          nameId: 0
                          value: string
                          valueId: 0
                      brand: string
                      couponAmount: 0
                      discountAmount: 0
                      discounts:
                        - discountedAmount: 0
                          id: string
                      extendedListPrice: 0
                      extendedSalePrice: 0
                      id: '4'
                      imageUrl: 'http://example.com'
                      isTaxable: true
                      originalPrice: 0
                      listPrice: 0
                      name: string
                      parentId: 6
                      productId: 0
                      quantity: 0
                      salePrice: 0
                      sku: string
                      url: 'http://example.com'
                      variantId: 7
                      giftWrapping: null
                      isShippingRequired: true
                createdTime: string
                updatedTime: string
                locale: string
    deleteCarts:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseCart'
          examples:
            example-1:
              value:
                id: string
                customerId: 0
                email: string
                currency:
                  code: string
                isTaxIncluded: true
                baseAmount: 0
                discountAmount: 0
                cartAmount: 0
                coupons:
                  - code: string
                    couponType: 0
                    discountedAmount: 0
                    id: string
                discounts:
                  - discountedAmount: 0
                    id: string
                lineItems:
                  customItems:
                    - extendedListPrice: 0
                      id: f1f3a531-fbcf-439b-bac1-40d5ae5c2bff
                      listPrice: 10
                      name: Custom Item Name
                      quantity: 1
                      sku: SM-456
                  digitalItems:
                    - options:
                        - name: string
                          nameId: 0
                          value: string
                          valueId: 0
                      brand: string
                      couponAmount: 0
                      discountAmount: 0
                      discounts:
                        - discountedAmount: 0
                          id: 0
                      extendedListPrice: 0
                      extendedSalePrice: 0
                      id: '4'
                      imageUrl: 'http://example.com'
                      isTaxable: true
                      originalPrice: 0
                      listPrice: 0
                      name: string
                      parentId: '6'
                      productId: 0
                      quantity: 0
                      salePrice: 0
                      sku: string
                      url: 'http://example.com'
                      variantId: 7
                  giftCertificates:
                    - amount: 0
                      id: string
                      isTaxable: true
                      message: string
                      name: string
                      recipient:
                        email: user@example.com
                        name: string
                      sender:
                        email: user@example.com
                        name: string
                      theme: string
                  physicalItems:
                    - options:
                        - name: string
                          nameId: 0
                          value: string
                          valueId: 0
                      brand: string
                      couponAmount: 0
                      discountAmount: 0
                      discounts:
                        - discountedAmount: 0
                          id: string
                      extendedListPrice: 0
                      extendedSalePrice: 0
                      id: '4'
                      imageUrl: 'http://example.com'
                      isTaxable: true
                      originalPrice: 0
                      listPrice: 0
                      name: string
                      parentId: 6
                      productId: 0
                      quantity: 0
                      salePrice: 0
                      sku: string
                      url: 'http://example.com'
                      variantId: 7
                      giftWrapping: null
                      isShippingRequired: true
                createdTime: string
                updatedTime: string
                locale: string
  parameters:
    include:
      name: include
      in: query
      description: Include product options in specified line item types.
      schema:
        type: string
        enum:
          - lineItems.physicalItems.options
          - lineItems.digitalItems.options
          - 'lineItems.digitalItems.options,lineItems.physicalItems.options'
  examples: {}


openapi: '3.0.3'
info:
  title: Carts
  version: ''
  description: |-
    Create a cart using BigCommerce cart logic.

    Manage settings related to carts.
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Carts (Single)
  - name: Items
  - name: Redirects
  - name: Settings
  - name: Metafields
paths:
  '/carts':
    parameters:
      - $ref: '#/components/parameters/Accept'
    post:
      description: |-
        Creates a **Cart**. 

        **Required Fields**

        |Field|Details|
        |-|-|
        |`line_item`|Specifies a line item.| 
        |`custom_items`|Specifies a custom item. Only required if adding a custom item to the cart.|
        |`gift_certificates`|Specifies a gift certificate. Only required if adding a gift certificate to the cart.|

        **Usage Notes**

        * A **cart** `id` (UUID) is returned in the response.
        * A **cart** `id` is the same as a **checkout** `id`.
        * A cart can be created by adding an existing **catalog item** or a **custom item**.
        * Carts are valid for **30 days** from the **last modification** (this includes creating the cart or editing the cart).
        * If a product has modifiers, use the `option_selections` array to describe the **modifier** selection(s).
        * The format and data type of a cart’s `option_value` are defined by the `value_data` object of a product’s [variant option value](/docs/rest-catalog/product-variant-options/values), [modifier value](/docs/rest-catalog/product-modifiers/values), or a combination of both.
        * Redirect URLs can only be generated from carts that were created using the **REST Management API**. 
        * To get cart `redirect_urls` in the response, append the following query parameter to the request URL: `include=redirect_urls`. Redirect URLs point to either a shared checkout domain or a channel-specific domain, depending on the storefront configuration.
        * To restore a cart that was created by a shopper or through a Storefront API, first recreate the cart using the **REST Management API**.
        * To get cart `promotions` in the response, append the following query parameter to the request URL: `include=promotions.banners`.
      parameters:
        - name: include
          in: query
          description: |-
            * `redirect_urls`: Create a direct link to a cart. This can be used for the /POST request for carts.
            * `line_items.physical_items.options`: The cart returns an abbreviated result. Use this to return physical items product options. To return the extended cart object, use in a /POST request.
            * `line_items.digital_items.options`: The cart returns an abbreviated result. Use this to return digital items product options. To return the extended cart object, use in a /POST request.
            * `promotions.banners`: Returns a list of eligible banners.
          schema:
            type: string
            enum:
              - redirect_urls
              - line_items.physical_items.options
              - line_items.digital_items.options
              - promotions.banners
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartCreatePostData'
            examples:
              Simple Product:
                summary: Creating a cart by adding a simple product without option selections.
                value:
                  customer_id: 0
                  line_items:
                    - quantity: 2
                      product_id: 126
                      list_price: 5
                      name: calendar
                  channel_id: 1
                  currency:
                    code: USD
                  locale: en-US
              Cart with a variant:
                summary: Creating a cart with a product that can be specified purely by a variant, without any other required options.
                value:
                  customer_id: 0
                  line_items:
                    - quantity: 2
                      product_id: 118
                      list_price: 25
                      variant_id: 140
                      name: قميص
                      option_selections:
                        - option_id: 125
                          option_value: 127
                          name: بحجم
                          value: صغير
                  channel_id: 1
                  currency:
                    code: JOD
                  locale: ar-JO
              Cart with date option:
                summary: Creating a cart using a date option.
                value:
                  line_items:
                    - quantity: 1
                      product_id: 128
                      variant_id: 144
                      option_selections:
                        - option_id: 147
                          option_value: '{“día”:”01”, “mes”:”02”, “año”:”2020”}'
                          name: calendario
                          value: 2023
                  currency:
                    code: MXN
                  locale: es-MX
              Cart with variant, a checkbox, and a pick list modifier:
                summary: Creating a cart with a variant, a checkbox, and an added picklist modifier.
                value:
                  customer_id: 0
                  line_items:
                    - quantity: 1
                      variant_id: 141
                      product_id: 118
                      list_price: 30
                      name: shirt
                      options:
                        - name: Size
                          nameId: 125
                          value: Large
                          valueId: 127
                        - name: Add a $5 Donation
                          nameId: 126
                          value: 'No'
                          valueId: 129
                  channel_id: 1
                  currency:
                    code: AUD
                  locale: en-AU
              Custom item:
                summary: Creating a cart using a custom item.
                value:
                  customer_id: 0
                  line_items: []
                  custom_items:
                    - sku: custom-item-sku
                      name: table
                      quantity: 1
                      list_price: 30
                      gift_wrapping:
                        wrap_together: true
                        wrap_details:
                          - id: 0
                            message: Happy Birthday
                  gift_certificates:
                    - name: Tobi Day
                      theme: Birthday
                      amount: 1
                      quantity: 1
                      sender:
                        name: Brandi Tyler
                        email: Brandi.Tyler@mail.com
                      recipient:
                        name: Tobi Day
                        email: Tobi.Day@mail.com
                      message: Happy Birthday
                  channel_id: 1
                  currency:
                    code: usd
                  locale: en-US
        description: |-
        required: true
        x-examples:
          Simple Product: |-
            {
              "line_items": [
                {
                  "quantity": 5,
                  "product_id": 191
                }
              ]
            }
          Create a Cart with a Variant: |-
            {
                "line_items":[
                    {
                        "quantity": 2,
                        "product_id": 107,
                        "variant_id": 185
                    }
                ]
            }
          Create a Cart using Date Option: |-
            {
              "line_items": [
                {
                  "quantity": 5,
                  "product_id": 191,
                  "variant_id": 185,
                  "option_selections": [
                    {
                      "option_id": 440,
                      "option_value": 1743570000
                    }
                  ]
                }
              ]
            } 
          With a Variant of Checkbox and Picklist: |-
            {
              "line_items": [
                {
                  "quantity": 1,
                  "product_id": 77,
                  "option_selections": [
                    {
                      "option_id": 120,
                      "option_value": 69
                    },
                    {
                      "option_id": 121,
                      "option_value": 10
                    },

                    {
                      "option_id": 124,
                      "option_value": 106
                    },
                    {
                      "option_id": 122,
                      "option_value": "Hello"
                    },
                    {
                      "option_id": 123, 
                      "option_value": 104
                    }
                  ]
                }
              ]
            } 
          Custom Item:
            custom_items:
              - sku: abc-123
                name: Custom Product
                quantity: 1
                list_price: 10
          Options Selections:
            line_items:
              - quantity: 5
                product_id: 118
                variant_id: 115
                option_selections:
                  - option_id: 121
                    option_value: 10
                    name: Size
                    nameId: 125
                    value: Small
                    valueId: 125
      tags:
        - Carts (Single)
      responses:
        '201':
          $ref: '#/components/responses/CartResponse'
      summary: Create a Cart
      operationId: createACart
  '/carts/{cartId}/items':
    parameters:
      - $ref: '#/components/parameters/cartId'
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ContentType'
    post:
      description: |-
        Adds line item to the *Cart*.

        **Usage Notes**

        To add a custom item use `custom_items`. 

        Overriding a product’s `list_price` will make that item ineligible for V3 product level promotions.

        If a product has modifiers, omit the `variant_id` and instead use the `option_selections` array to describe both the **variant** and the **modifier** selections.
      parameters:
        - name: include
          in: query
          description: |-
            * `redirect_urls`: Create a direct link to a cart. This can be used for the /POST request for carts.
            * `line_items.physical_items.options`: The cart returns an abbreviated result. Use this to return physical items product options. To return the extended cart object, use in a /POST request.
            * `line_items.digital_items.options`: The cart returns an abbreviated result. Use this to return digital items product options. To return the extended cart object, use in a /POST request.
            * `promotions.banners`: Returns a list of eligible banners.
          schema:
            type: string
            enum:
              - redirect_urls
              - line_items.physical_items.options
              - line_items.digital_items.options
              - promotions.banners
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart_Line_Item_Update_Post'
            examples:
              Example 1:
                value:
                  line_items:
                    - quantity: 2
                      product_id: 77
                      list_price: 12.5
                      option_selections:
                        - option_id: 8
                          option_value: 'Yes'
                  gift_certificates:
                    - name: Happy Birthday
                      theme: Birthday
                      amount: 50
                      quantity: 1
                      sender:
                        name: Jane Does
                        email: janedoe@example.com
                      recipient:
                        name: Jane Does
                        email: janedoe@example.com
                      message: Happy Birthday Jane!
              'Example 2: Custom Item':
                value:
                  custom_items:
                    - sku: abc-123
                      name: Custom Product
                      quantity: 1
                      list_price: 10
        required: true
      tags:
        - Items
      responses:
        '201':
          $ref: '#/components/responses/CartResponse'
      summary: Add Cart Line Items
      operationId: addCartLineItem
  '/carts/{cartId}/redirect_urls':
    parameters:
      - $ref: '#/components/parameters/cartId'
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ContentType'
    post:
      description: |-
        Creates a **Cart** redirect URL for redirecting a shopper to an already created cart using the `cartId`.

        **Usage Notes**

        * Redirect URLs can also be created with **Create a Cart** requests by appending `include=redirect_urls`.
        * A **Carts** redirect URL may only be used once.
        * Redirect URLs point to either a shared checkout domain or a channel-specific domain, depending on the storefront configuration.
        * Once a redirect URL has been visited, it will be invalidated and cannot be used again. 
        * If your application requires URLs to be visited more than once, consider generating a fresh one each time you need to restore a cart, and redirecting to the URL from your own application.
        * Redirect URLs can be generated only from carts that were created using the **REST Management API**. 
        * To restore a cart that was created on the storefront, either by a shopper or a Storefront API, first recreate the cart using the **REST Management API**.
      tags:
        - Redirects
      responses:
        '201':
          $ref: '#/components/responses/CartRedirectResponse'
      summary: Create Cart Redirect URL
      operationId: createCartRedirectURL
  '/carts/{cartId}/items/{itemId}':
    parameters: 
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/cartId'
      - name: itemId
        in: path
        required: true
        schema:
          type: string
          format: number
    put:
      description: |-
        Updates an existing, single line item in the *Cart*. 

        **Notes**

        Currently, only updating `list_price` and `quantity` are supported. Updating a product’s `list_price` will make that item ineligible for V3 product-level promotions. 

        If the product has modifiers, omit the `variant_id` and instead use the `option_selections` array to describe both the **variant** and the **modifier** selections.

        If a variant needs to be changed or updated, the product will need to be removed and re-added to the cart with the correct variants using the **Add Cart Line Items** endpoint.

        `custom_items` cannot be updated via the API at this time. To update your cart, add a new updated custom item and delete the outdated one. If your cart contains only one line item, perform the add operation before the delete operation.

        Deleting all line items from the cart will invalidate the cart. 
      parameters:
        - name: include
          in: query
          description: |-
            * `redirect_urls`: Create a direct link to a cart. This can be used for the /POST request for carts.
            * `line_items.physical_items.options`: The cart returns an abbreviated result. Use this to return physical items product options. To return the extended cart object, use in a /POST request.
            * `line_items.digital_items.options`: The cart returns an abbreviated result. Use this to return digital items product options. To return the extended cart object, use in a /POST request.
            * `promotions.banners`: Returns a list of eligible banners.
          schema:
            type: string
            enum:
              - redirect_urls
              - line_items.physical_items.options
              - line_items.digital_items.options
              - promotions.banners
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart_Line_Item_Update_Put'
        required: true
      tags:
        - Items
      responses:
        '200':
          $ref: '#/components/responses/CartResponse'
      summary: Update Cart Line Item
      operationId: updateCartLineItem
    delete:
      description: |-
        Deletes a *Cart* line item. 

        **Notes**

        Removing the last `line_item` in the *Cart* deletes the *Cart*.
      parameters:
        - name: include
          in: query
          description: |-
            * `redirect_urls`: Create a direct link to a cart. This can be used for the /POST request for carts.
            * `line_items.physical_items.options`: The cart returns an abbreviated result. Use this to return physical items product options. To return the extended cart object, use in a /POST request.
            * `line_items.digital_items.options`: The cart returns an abbreviated result. Use this to return digital items product options. To return the extended cart object, use in a /POST request.
            * `promotions.banners`: Returns a list of eligible banners.
          schema:
            type: string
            enum:
              - redirect_urls
              - line_items.physical_items.options
              - line_items.digital_items.options
              - promotions.banners
      tags:
        - Items
      responses:
        '200':
          description: 'NOTE: Discounted line items are re-evaluated on cart actions and may be automatically added back to your cart with a new line item ID to satisfy promotional requirements.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart_Full'
              examples:
                response:
                  value:
                    data:
                      id: bc218c65-7a32-4ab7-8082-68730c074d02
                      customer_id: 11
                      email: ''
                      currency:
                        code: USD
                      tax_included: false
                      base_amount: 189.75
                      discount_amount: 0
                      cart_amount: 212.81
                      coupons: []
                      line_items:
                        physical_items:
                          - id: 6e193ce6-f327-4dcc-b75e-72cf6738525e
                            parent_id: {}
                            variant_id: 362
                            product_id: 191
                            sku: ''
                            name: Openhouse No. 3
                            url: 'http://id30h7ohwf.mybigcommerce.com/all/openhouse-no-3/'
                            quantity: 5
                            taxable: true
                            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/191/images/475/openhousevol3_1024x1024__59692__16355.1534344544.330.500.jpg?c=2'
                            discounts: []
                            coupons: []
                            discount_amount: 0
                            coupon_amount: 0
                            original_price: 27.95
                            list_price: 27.95
                            sale_price: 27.95
                            extended_list_price: 139.75
                            extended_sale_price: 139.75
                            is_require_shipping: true
                            options:
                              - name: Add a $5 Donation
                                nameId: 82
                                value: 'No'
                                valueId: 186
                        digital_items: []
                        custom_items:
                          - extended_list_price: 5.99
                            id: 78239b69-1952-4c35-9d58-ea30158b4e39
                            list_price: 5.99
                            name: Rope Toy
                            quantity: 1
                            sku: ROPE-TOY
                        gift_certificates:
                          - id: 6e38bbc2-8873-472c-a452-8bd4aaea5d3a
                            name: Happy Birthday
                            theme: Birthday
                            amount: 50
                            quantity: 1
                            taxable: false
                            sender:
                              name: Jane Does
                              email: janedoe@example.com
                            recipient:
                              name: Jane Does
                              email: janedoe@example.com
                            message: Happy Birthday Jane!
                      created_time: '2018-09-17T14:27:39.000Z'
                      updated_time: '2018-09-17T14:53:40.000Z'
                      meta: {}
        '204':
          description: 'If the action’s result is an empty cart, the cart is automatically deleted.'
      summary: Delete Cart Line Item
      operationId: deleteCartLineItem
  '/carts/{cartId}':
    parameters: 
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/cartId'
    get:
      description: Returns a storeʼs *Cart*.
      parameters:
        - name: include
          in: query
          description: |-
            * `redirect_urls`: Create a direct link to a cart. This can be used for the /POST request for carts.
            * `line_items.physical_items.options`: The cart returns an abbreviated result. Use this to return physical items product options. To return the extended cart object, use in a /POST request.
            * `line_items.digital_items.options`: The cart returns an abbreviated result. Use this to return digital items product options. To return the extended cart object, use in a /POST request.
            * `promotions.banners`: Returns a list of eligible banners.
          schema:
            type: string
            enum:
              - redirect_urls
              - line_items.physical_items.options
              - line_items.digital_items.options
              - promotions.banners
      tags:
        - Carts (Single)
      responses:
        '200':
          $ref: '#/components/responses/CartResponse'
        '404':
          description: Cart not found.
      summary: Get a Cart
      operationId: getACart
    put:
      description: |-
        Updates a *Cartʼs* `customer_id`.

        **Notes**

        Changing the *Cart* `customer_id` will remove any promotions or shipping calculations on the *Cart*. These are tied to the customer depending on cart conditions and any customer groups. 
      parameters:
        - name: include
          in: query
          description: |-
            * `redirect_urls`: Create a direct link to a cart. This can be used for the /POST request for carts.
            * `line_items.physical_items.options`: The cart returns an abbreviated result. Use this to return physical items product options. To return the extended cart object, use in a /POST request.
            * `line_items.digital_items.options`: The cart returns an abbreviated result. Use this to return digital items product options. To return the extended cart object, use in a /POST request.
            * `promotions.banners`: Returns a list of eligible banners.
          schema:
            type: string
            enum:
              - redirect_urls
              - line_items.physical_items.options
              - line_items.digital_items.options
              - promotions.banners
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartUpdatePutRequestData'
            example:
              customer_id: 5
        required: true
      tags:
        - Carts (Single)
      responses:
        '201':
          $ref: '#/components/responses/CartResponse'
      summary: Update Customer ID
      operationId: updateACart
    delete:
      description: Deletes a *Cart*. Once a *Cart* has been deleted it can’t be recovered.
      tags:
        - Carts (Single)
      responses:
        '204':
          description: ''
      summary: Delete a Cart
      operationId: deleteACart
  '/carts/settings':
    parameters: 
      - $ref: '#/components/parameters/Accept'
    get:
      summary: Get Global Cart Settings
      description: Returns the global cart settings of a store.
      operationId: getGlobalCartSettings
      tags:
        - Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalCartSettingsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update Global Cart Settings
      description: Update the global cart settings of a store.
      parameters:
        - $ref: '#/components/parameters/ContentType'
      tags:
        - Settings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalCartSettingsRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalCartSettingsResponse'
        '400':
          description: Bad Request. Input is invalid.
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  status:
                    type: number
                  title:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  detail:
                    type: string
                    minLength: 1
              example:
                status: 400
                title: Input is invalid
                type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
                detail: Syntax error
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: updateGlobalCartSettings
  '/carts/settings/channels/{channel_id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - name: channel_id
        description: The channel ID of the settings overrides.
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: Get Channel Cart Settings
      description: Returns the per-channel overrides for the cart settings of a store.
      tags:
        - Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCartSettingsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: getChannelCartSettings
    put:
      summary: Update Channel Cart Settings
      description: Update the per-channel overrides for the cart settings of a store.
      tags:
        - Settings
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelCartSettingsRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCartSettingsResponse'
        '400':
          description: Bad Request. Input is invalid.
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  status:
                    type: number
                  title:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  detail:
                    type: string
                    minLength: 1
              example:
                status: 400
                title: Input is invalid
                type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
                detail: Syntax error
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: updateChannelCartSettings
  '/carts/{cart_id}/metafields':
    parameters:
      - $ref: '#/components/parameters/cart_id'
      - $ref: '#/components/parameters/Accept'
    get:
      summary: Get All Metafields
      tags:
        - Metafields
      description: Get all cart metafields.
      operationId: getAllCartMetafields
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/MetafieldKeyParam'
        - $ref: '#/components/parameters/MetafieldNamespaceParam'
        - $ref: '#/components/parameters/DirectionParam'
      responses:
        '200':
          description: |
            An array of metafields and metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetafieldResponse'
        '409':
          description: |
            The `Metafield` conflicts with another `Metafield`. This can be the result of duplicate unique key combinations of the appʼs client id, namespace, key, resource_type, and resource_id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: |
            The `Metafield` is not valid. This is the result of missing required fields or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Create a Cart Metafield
      tags:
        - Metafields
      description: |
        Create a cart `Metafield`. 

        If you create an order from a Cart, you can continue referencing the Cart Metafields even if you delete the original Cart. Use the `cart_id` field on the Order to construct the Cart Metafield endpoint. 
      operationId: CreateCartMetafieldsByCartId
      parameters: 
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetafieldPost'
            examples: {}
        description: ''
        required: true
      responses:
        '200':
          description: |
            A `Metafield` object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaFieldCollectionResponse'
              examples: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              examples:
                example-1:
                  value:
                    status: 404
                    title: There was no order found with ID 1010
                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
  '/carts/{cart_id}/metafields/{metafield_id}':
    get:
      summary: Get a Cart Metafield
      tags:
        - Metafields
      description: Gets a cart metafield.
      operationId: getACartMetafield
      responses:
        '200':
          description: |
            A `Metafield` object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetafieldResponse'
        '409':
          description: |
            The `Metafield` conflicts with another `Metafield`. This can be the result of duplicate unique key combinations of the appʼs client id, namespace, key, resource_type, and resource_id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: |
            The `Metafield` is not valid. This is the result of missing required fields or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/MetafieldKeyParam'
        - $ref: '#/components/parameters/MetafieldNamespaceParam'
        - $ref: '#/components/parameters/DirectionParam'
    put:
      summary: Update a Cart Metafield
      tags:
        - Metafields
      description: |
        Update a `Metafield`, by `cart_id`.
      operationId: UpdateCartMetafieldsByCartId
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetafieldPost'
            examples: {}
        description: |
          A `Metafield` object.
        required: true
      responses:
        '200':
          description: |
            A metafield and metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaFieldCollectionResponse'
              examples: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              examples:
                example-1:
                  value:
                    status: 404
                    title: There was no order found with ID 1010
                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
    delete:
      summary: Delete a Metafield
      tags:
        - Metafields
      description: |
        Deletes a `Metafield`.
      operationId: deleteCartMetafieldById
      responses:
        '204':
          description: |
            An empty response.        
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/cart_id'
      - schema:
          type: integer
        name: metafield_id
        in: path
        required: true
        description: The unique ID of the subject `Metafield`.
components:
  schemas:
    CartUpdateRequest:
      type: object
      properties:
        line_item:
          type: object
          title: Line Item Request Data
          properties:
            quantity:
              type: number
            product_id:
              type: number
            variant_id:
              type: number
              description: The variant ID. Required if the product has variants.
            list_price:
              type: number
            option_selections:
              type: array
              items:
                type: object
                properties:
                  option_id:
                    type: number
                  option_value:
                    type: string
                title: Product Option Selection
          required:
            - quantity
            - product_id
            - variant_id
        gift_certificate:
          type: object
          required:
            - sender
            - recipient
            - amount
            - theme
            - name
            - quantity
          properties:
            name:
              type: string
              description: Given name for the gift certificate line item.
            theme:
              type: string
              description: The theme of the gift certificate.
              enum:
                - Birthday
                - Boy
                - Celebration
                - Christmas
                - General
                - Girl
            amount:
              type: number
              minimum: 1
              maximum: 1000
            quantity:
              type: integer
              minimum: 1
            sender:
              title: Contact Entity
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
            recipient:
              title: Contact Entity
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
            message:
              type: string
              maximum: 200
              description: 'Message shown to recipient, as provided by sender.'
          title: Line Item Gift Certificate Request Data
      title: Cart Update Request
      x-internal: false
    CartCreatePostData:
      type: object
      title: Cart Create Post Data
      x-internal: false
      properties:
        customer_id:
          type: integer
        line_items:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/cart_PostVariant'
              - $ref: '#/components/schemas/cart_PostModifier'
        custom_items:
          $ref: '#/components/schemas/cart_PostCustomItem'
        gift_certificates:
          type: array
          items:
            type: object
            title: Line Item Gift Certificate Request Data
            properties:
              name:
                type: string
                description: Given name for the gift certificate line item.
              theme:
                type: string
                description: The theme of the gift certificate.
                enum:
                  - Birthday
                  - Boy
                  - Celebration
                  - Christmas
                  - General
                  - Girl
              amount:
                type: number
                minimum: 1
                maximum: 1000
              quantity:
                type: integer
                minimum: 1
              sender:
                title: Contact Entity
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
              recipient:
                title: Contact Entity
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
              message:
                type: string
                maximum: 200
                description: 'Message shown to recipient, as provided by sender.'
            required:
              - name
              - theme
              - amount
              - quantity
              - sender
              - recipient
        channel_id:
          type: integer
          description: 'The Channel ID. If no channel is specified, defaults to 1.'
        currency:
          type: object
          properties:
            code:
              type: string
              format: ISO-4217
              description: 'The [transactional currency](/docs/rest-management/currencies#definitions) code for the cart, formatted as an [ISO-4217](https://www.iso.org/iso-4217-currency-codes.html) string. This code is required when multi-currency is enabled. Passing a non-transactional display currency will result in a `400` error.'
              example: usd
        locale:
          type: string
          description: 'The locale of the cart. Accepts strings of format `xx` or `xx-YY`. Uses the [ISO-639 standard](https://www.iso.org/iso-639-language-codes.html) format.'
          format: ISO-639
          example: en-US
      description: ''
    CartRequestData:
      type: object
      title: Cart Request Data
      properties:
        line_items:
          type: array
          items:
            type: object
            title: Line Item Request Data
            properties:
              quantity:
                type: number
              product_id:
                type: number
              variant_id:
                type: number
                description: The Variant ID. Required if the product has variants.
              list_price:
                type: number
              option_selections:
                type: array
                items:
                  type: object
                  title: Product Option Selection
                  properties:
                    option_id:
                      type: number
                    option_value:
                      type: string
            required:
              - quantity
              - product_id
              - variant_id
        gift_certificates:
          type: array
          items:
            type: object
            title: Line Item Gift Certificate Request Data
            properties:
              name:
                type: string
                description: Given name for gift certificate line item.
              theme:
                type: string
                description: The theme of the gift certificate.
                enum:
                  - Birthday
                  - Boy
                  - Celebration
                  - Christmas
                  - General
                  - Girl
              amount:
                type: number
                minimum: 1
                maximum: 1000
              quantity:
                type: integer
                minimum: 1
              sender:
                title: Contact Entity
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
              recipient:
                title: Contact Entity
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
              message:
                type: string
                maximum: 200
                description: 'Message shown to recipient, as provided by sender.'
            required:
              - name
              - theme
              - amount
              - quantity
              - sender
              - recipient
        channel_id:
          type: integer
          description: 'The Channel ID. If no channel is specified, this defaults to 1.'
      x-internal: false
    CartUpdatePutRequestData:
      type: object
      properties:
        customer_id:
          type: integer
      title: Cart Update Put Request Data
      x-internal: false
    LineItemRequestData:
      type: object
      title: Line Item Request Data
      properties:
        quantity:
          type: number
        product_id:
          type: number
        variant_id:
          type: number
          description: Variant ID. Required if the product has variants.
        list_price:
          type: number
        option_selections:
          type: array
          items:
            type: object
            properties:
              option_id:
                type: number
              option_value:
                type: string
            title: Product Option Selection
      required:
        - quantity
        - product_id
        - variant_id
      x-internal: false
    ProductOptionSelection:
      type: object
      properties:
        option_id:
          type: number
        option_value:
          type: string
      title: Product Option Selection
      x-internal: false
    LineItemGiftCertificateRequestData:
      type: object
      required:
        - sender
        - recipient
        - amount
        - theme
        - name
        - quantity
      properties:
        name:
          type: string
          description: Given name for gift certificate line item.
        theme:
          type: string
          description: The theme of the gift certificate.
          enum:
            - Birthday
            - Boy
            - Celebration
            - Christmas
            - General
            - Girl
        amount:
          type: number
          minimum: 1
          maximum: 1000
        quantity:
          type: integer
          minimum: 1
        sender:
          title: Contact Entity
          type: object
          properties:
            name:
              type: string
            email:
              type: string
        recipient:
          title: Contact Entity
          type: object
          properties:
            name:
              type: string
            email:
              type: string
        message:
          type: string
          maximum: 200
          description: 'Message shown to recipient, as provided by sender.'
      title: Line Item Gift Certificate Request Data
      x-internal: false
    Cart_Full:
      description: 'A cart contains a collection of items, prices, discounts, etc. It does not contain customer-related data.'
      type: object
      title: Cart_Full
      x-internal: false
      properties:
        id:
          description: 'Cart ID, provided after creating a cart with a POST request.'
          type: string
          format: UUID
        parent_id:
          type: string
          description: Bundled items will have the ID of their parent item.
        customer_id:
          description: ID of the customer to which the cart belongs.
          type: integer
        email:
          description: The cart’s email. This is the same email that is used in the billing address.
          type: string
        currency:
          type: object
          description: The currency. This is the same for both the cart and its subsequent checkout.
          title: Currency
          properties:
            code:
              type: string
              format: ISO-4217
              description: 'The [transactional currency](/docs/rest-management/currencies#definitions) code for the cart, formatted as an [ISO-4217](https://www.iso.org/iso-4217-currency-codes.html) string.'
              example: usd
        tax_included:
          type: boolean
        base_amount:
          type: number
          description: 'Sum of cart line-item amounts before cart-level discounts, coupons, or taxes.'
        discount_amount:
          type: number
          description: Order-based discounted amount only - Excludes coupon discounts and product-based discounts.
        cart_amount:
          type: number
          description: Sum of cart line-item amounts minus cart-level discounts and coupons. This amount includes taxes (where applicable).
        coupons:
          type: array
          items:
            $ref: '#/components/schemas/AppliedCoupon'
        discounts:
          type: array
          items:
            type: object
            title: Applied Discount
            description: |-
              Example as part of a cart response:

              ```
                "discounts": [
                  {
                    "id": 2,
                    "discounted_amount": 2
                  },
                  {
                    "id": "coupon",
                    "discounted_amount": 0.42
                  }
                ]
              ```
            properties:
              id:
                type: string
                description: ID of the applied discount.
                example: coupon
              discounted_amount:
                type: number
                description: The discounted amount.
        line_items:
          $ref: '#/components/schemas/LineItemsGet'
        created_time:
          type: string
          format: ISO-8601
          description: Time when the cart was created.
        updated_time:
          type: string
          format: ISO-8601
          description: Time when the cart was last updated.
        channel_id:
          type: integer
          description: 'The channel ID. If no channel is specified, defaults to 1.'
        locale:
          type: string
          description: 'Locale of the cart. Accepts strings of format `xx` or `xx-YY`. Uses the [ISO-639 standard](https://www.iso.org/iso-639-language-codes.html) format.'
          format: ISO-639
        promotions:
          type: object
          description: This is available only when "include=promotions.banners" is presented in the URL.
          properties:
            banners:
              title: Banner
              type: object
              properties:
                id:
                  description: ID of the promotion.
                  type: string
                type:
                  description: Type of the banner.
                  type: string
                page:
                  description: An array of the locations where the banner will display.
                  type: array
                  items:
                    type: string
                text:
                  description: Text of the banner.
                  type: string
    Currency:
      type: object
      description: The currency. This is the same for both the cart and its subsequent checkout.
      properties:
        code:
          type: string
          format: ISO-4217
          description: 'ISO-4217 currency code. (See: http://en.wikipedia.org/wiki/ISO_4217.)'
      title: Currency
      x-internal: false
    LineItems:
      type: object
      title: line_items
      x-internal: false
      properties:
        physical_items:
          type: array
          items:
            $ref: '#/components/schemas/ItemPhysical'
        digital_items:
          type: array
          items:
            $ref: '#/components/schemas/ItemDigital'
        gift_certificates:
          type: array
          items:
            $ref: '#/components/schemas/ItemGiftCertificate'
        custom_items:
          type: array
          items:
            $ref: '#/components/schemas/ItemCustom'
      required:
        - physical_items
        - digital_items
      description: Request body for `PUT` or `POST` requests.
    ItemGiftCertificate:
      type: object
      required:
        - sender
        - recipient
        - amount
        - theme
      properties:
        id:
          type: string
        name:
          type: string
          description: Name provided for the gift certificate that will appear in the control panel.
        theme:
          type: string
          description: The theme of the gift certificate.
          enum:
            - Birthday
            - Boy
            - Celebration
            - Christmas
            - General
            - Girl
        amount:
          type: number
          description: 'Value must be between 1.00 and 1,000.00 in the store’s default currency.'
        is_taxable:
          type: boolean
        sender:
          title: Contact Entity
          type: object
          properties:
            name:
              type: string
            email:
              type: string
        recipient:
          title: Contact Entity
          type: object
          properties:
            name:
              type: string
            email:
              type: string
        message:
          type: string
          description: Limited to 200 characters.
      title: Item Gift Certificate
      x-internal: false
    ItemGiftCertificateGet:
      type: object
      title: Item Gift Certificate
      x-internal: false
      properties:
        id:
          type: string
        name:
          type: string
          description: Name provided for the gift certificate that will appear in the control panel.
        theme:
          type: string
          description: 'The theme of the gift certificate. The following options are available:`Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.'
        amount:
          type: number
          description: 'Value must be between 1.00 and 1,000.00 in the store’s default currency.'
        is_taxable:
          type: boolean
        sender:
          title: Contact Entity
          type: object
          properties:
            name:
              type: string
            email:
              type: string
        recipient:
          title: Contact Entity
          type: object
          properties:
            name:
              type: string
            email:
              type: string
        message:
          type: string
          description: The message included in the gift certificate is limited to 200 characters.
    ContactEntity:
      title: Contact Entity
      type: object
      properties:
        name:
          type: string
        email:
          type: string
      x-internal: false
    ItemDigital:
      allOf:
        - title: Base Item
          properties:
            id:
              type: string
              description: The line-item ID.
              example: 6e193ce6-f327-4dcc-b75e-72cf6738525e
            variant_id:
              type: number
              description: The ID of the variant. Required in the /PUT or /POST request if the product has variants.
              example: 358
            product_id:
              type: number
              description: The ID of the product. Required in a /POST request.
              example: 12
            sku:
              type: string
              example: SMGREEN
              description: SKU of the variant.
            name:
              type: string
              description: The item’s product name.
              example: T-Shirt
            url:
              description: The product URL.
              type: string
              format: uri
              example: 'http://your-store-url.mybigcommerce.com/your-product/'
            quantity:
              type: number
              example: 5
              description: Quantity of this item in the cart.
            is_taxable:
              type: boolean
              example: false
              description: Boolean value that specifies whether the item is taxable.
            image_url:
              type: string
              format: uri
              example: 'https://pathtoproductimage/ProductDefault.png'
              description: Image of the product or variant.
            discounts:
              type: array
              items:
                type: object
                title: Applied Discount
                description: |-
                  Example as part of a cart response:

                  ```
                    "discounts": [
                      {
                        "id": 2,
                        "discounted_amount": 2
                      },
                      {
                        "id": "coupon",
                        "discounted_amount": 0.42
                      }
                    ]
                  ```
                properties:
                  id:
                    oneOf:
                      - type: string
                      - type: number
                  discounted_amount:
                    type: number
                    description: The discounted amount.
            coupons:
              type: array
              items:
                type: object
                title: Applied Coupon
                properties:
                  coupons:
                    type: object
                    description: Required in a /POST request.
                    properties:
                      coupon_code:
                        type: object
                        description: The coupon code.
                        properties:
                          id:
                            type: integer
                            example: 6
                            description: ID of the coupon.
                          code:
                            type: string
                            example: KV56053388J
                            description: The coupon code. Required in a /POST request.
                          name:
                            type: string
                            example: Percentage off
                            description: Name given to the coupon in the control panel.
                          discountType:
                            type: integer
                            description: |-
                              The discount type.

                              - type 0: per_item_discount
                              - type 1: percentage_discount
                              - type 2: per_total_discount
                              - type 3: shipping_discount
                              - type 4: free_shipping
                            enum:
                              - 0
                              - 1
                              - 2
                              - 3
                              - 4
                          discountAmount:
                            type: integer
                            description: 'The amount of the discount based on the coupon. For example, 3 percent off will show a 3.'
                            example: 3
                          expiresDate:
                            type: integer
                            example: 0
                            description: Returns 0 if no expiration date has been set.
                          totalDiscount:
                            type: number
                            example: 4.19
                            description: The total amount of all discounts applied to the cart.
                    required:
                      - coupon_code
            discount_amount:
              type: number
              description: The total value of all discounts applied to this item. This includes coupons and cart-level discounts.
              example: 4
            coupon_amount:
              type: number
              description: The total value of all coupons applied to this item.
            original_price:
              type: number
              description: An item’s original price is the same as the product default price in the admin panel.
            list_price:
              type: number
              description: 'The net item price before discounts and coupons. BigCommerce derives an item’s list price from the product default price or, if applicable, the sale price configured in the admin panel.'
            sale_price:
              type: number
              description: Item’s price after all discounts are applied. (The final price before tax calculation.)
            extended_list_price:
              type: number
              description: List price of the item multiplied by the quantity.
            extended_sale_price:
              type: number
              description: Sale price of the item multiplied by the quantity.
            options:
              description: The list of selected options for this product.
              type: array
              items:
                type: object
                title: Product Option
                properties:
                  name:
                    type: string
                    description: 'The product option name; for example, Color or Size.'
                  nameId:
                    type: number
                    description: The product option identifier.
                  value:
                    type: string
                    description: 'The product option value; for example, Red or Medium.'
                  valueId:
                    type: number
                    description: The product option value identifier in number format.
                    example: 128
          required:
            - variant_id
            - product_id
            - quantity
        - properties:
            download_file_urls:
              description: URLs to download all product files.
              type: array
              items:
                type: string
                format: url
            download_page_url:
              description: The URL for the combined downloads page.
              type: string
              format: url
            download_size:
              description: 'Specifies the combined download size of all files in human-readable style; for example, `30MB`.'
              type: string
      type: object
      title: ''
    ItemDigitalGet:
      allOf:
        - title: Base Item
          properties:
            id:
              type: string
              description: The line-item ID.
              example: 6e193ce6-f327-4dcc-b75e-72cf6738525e
            variant_id:
              type: number
              description: The ID of the variant. Required in the /PUT or /POST request if the product has variants.
              example: 358
            product_id:
              type: number
              description: The ID of the product. Required in a /POST request.
              example: 12
            sku:
              type: string
              example: SMGREEN
              description: SKU of the variant.
            name:
              type: string
              description: The item’s product name.
              example: T-Shirt
            url:
              description: The product URL.
              type: string
              format: uri
              example: 'http://your-store-url.mybigcommerce.com/your-product/'
            quantity:
              type: number
              example: 5
              description: Quantity of this item in the cart.
            is_taxable:
              type: boolean
              example: false
              description: Boolean value that specifies whether the item is taxable.
            image_url:
              type: string
              format: uri
              example: 'https://pathtoproductimage/ProductDefault.png'
              description: Image of the product or variant.
            discounts:
              type: array
              items:
                type: object
                title: Applied Discount
                description: |-
                  Example as part of a cart response:

                  ```
                    "discounts": [
                      {
                        "id": 2,
                        "discounted_amount": 2
                      },
                      {
                        "id": "coupon",
                        "discounted_amount": 0.42
                      }
                    ]
                  ```
                properties:
                  id:
                    oneOf:
                      - type: string
                      - type: number
                  discounted_amount:
                    type: number
                    description: The discounted amount.
            coupons:
              oneOf:
                - type: number
                - type: array
                  items:
                    type: object
                    title: Applied Coupon
                    properties:
                      id:
                        type: integer
                        example: 6
                        description: ID of the coupon.
                      code:
                        type: string
                        example: KV56053388J
                        description: The coupon code. Required in a /POST request.
                      name:
                        type: string
                        example: Percentage off
                        description: Name given to the coupon in the control panel.
                      discountType:
                        type: integer
                        description: |
                          The discount type.
                          - type 0: per_item_discount
                          - type 1: percentage_discount
                          - type 2: per_total_discount
                          - type 3: shipping_discount
                          - type 4: free_shipping
                        example: 3
                        enum:
                          - 0
                          - 1
                          - 2
                          - 3
                          - 4
                      discountAmount:
                        type: integer
                        description: 'The amount of the discount based on the coupon. For example, 3 percent off will show a 3.'
                        example: 3
                      expiresDate:
                        type: integer
                        example: 0
                        description: Returns 0 if no expiration date has been set.
                      totalDiscount:
                        type: number
                        example: 4.19
                        description: The total amount of all discounts applied to the cart.
                    required:
                      - code
            discount_amount:
              type: number
              description: The total value of all discounts applied to this item. This includes coupons and cart-level discounts.
              example: 4
            coupon_amount:
              type: number
              description: The total value of all coupons applied to this item.
            original_price:
              type: number
              description: An item’s original price is the same as the product default price in the admin panel.
            list_price:
              type: number
              description: 'The net item price before discounts and coupons. BigCommerce derives an item’s list price from the product default price or, if applicable, the sale price configured in the admin panel.'
            sale_price:
              type: number
              description: Item’s price after all discounts are applied. (The final price before tax calculation.)
            extended_list_price:
              type: number
              description: List price of the item multiplied by the quantity.
            extended_sale_price:
              type: number
              description: Sale price of the item multiplied by the quantity.
            options:
              description: The list of selected options for this product.
              type: array
              items:
                type: object
                title: Product Option
                properties:
                  name:
                    type: string
                    description: 'The product option name; for example, Color or Size.'
                  nameId:
                    type: number
                    description: The product option identifier.
                  value:
                    type: string
                    description: 'The product option value; for example, Red or Medium.'
                  valueId:
                    type: number
                    description: The product option value identifier in number format.
                    example: 128
        - properties:
            download_file_urls:
              description: URLs to download all product files.
              type: array
              items:
                type: string
                format: url
            download_page_url:
              description: The URL for the combined downloads page.
              type: string
              format: url
            download_size:
              description: 'Specifies the combined download size of all files in human-readable style; for example, `30MB`.'
              type: string
      type: object
      title: ''
      description: ''
    ItemPhysical:
      allOf:
        - type: object
          title: Base Item
          properties:
            id:
              type: string
              description: The line-item ID.
              example: 6e193ce6-f327-4dcc-b75e-72cf6738525e
            variant_id:
              type: number
              description: The ID of the variant. Required in the /PUT or /POST request if the product has variants.
              example: 358
            product_id:
              type: number
              description: The ID of the product. Required in a /POST request.
              example: 12
            sku:
              type: string
              example: SMGREEN
              description: SKU of the variant.
            name:
              type: string
              description: The item’s product name.
              example: T-Shirt
            url:
              description: The product URL.
              type: string
              format: uri
              example: 'http://your-store-url.mybigcommerce.com/your-product/'
            quantity:
              type: number
              example: 5
              description: Quantity of this item in the cart.
            is_taxable:
              type: boolean
              example: false
              description: Boolean value that specifies whether the item is taxable.
            image_url:
              type: string
              format: uri
              example: 'https://pathtoproductimage/ProductDefault.png'
              description: Image of the product or variant.
            discounts:
              type: array
              items:
                type: object
                title: Applied Discount
                description: |-
                  Example as part of a cart response:

                  ```
                    "discounts": [
                      {
                        "id": 2,
                        "discounted_amount": 2
                      },
                      {
                        "id": "coupon",
                        "discounted_amount": 0.42
                      }
                    ]
                  ```
                properties:
                  id:
                    oneOf:
                      - type: string
                      - type: number
                  discounted_amount:
                    type: number
                    description: The discounted amount.
            coupons:
              type: array
              items:
                type: object
                title: Applied Coupon
                properties:
                  coupons:
                    type: object
                    description: Required in a /POST request.
                    properties:
                      coupon_code:
                        type: object
                        description: The coupon code.
                        properties:
                          id:
                            type: integer
                            example: 6
                            description: The ID of the coupon.
                          code:
                            type: string
                            example: KV56053388J
                            description: The coupon code. Required in a /POST request.
                          name:
                            type: string
                            example: Percentage off
                            description: Name given to the coupon in the control panel.
                          discountType:
                            type: integer
                            description: |-
                              The discount type.

                              - type 0: per_item_discount
                              - type 1: percentage_discount
                              - type 2: per_total_discount
                              - type 3: shipping_discount
                              - type 4: free_shipping
                            enum:
                              - 0
                              - 1
                              - 2
                              - 3
                              - 4
                          discountAmount:
                            type: integer
                            description: 'The amount of the discount based on the coupon. For example, 3 percent off will show a 3.'
                            example: 3
                          expiresDate:
                            type: integer
                            example: 0
                            description: Returns 0 if no expiration date is set.
                          totalDiscount:
                            type: number
                            example: 4.19
                            description: The total amount of all discounts applied to the cart.
                    required:
                      - coupon_code
            discount_amount:
              type: number
              description: The total value of all discounts applied to this item. This includes coupons and cart-level discounts.
              example: 4
            coupon_amount:
              type: number
              description: The total value of all coupons applied to this item.
            original_price:
              type: number
              description: An item’s original price is the same as the product default price in the admin panel.
            list_price:
              type: number
              description: 'The net item price before discounts and coupons are applied. BigCommerce derives an item’s list price from the product default price or, if applicable, the sale price configured in the admin panel.'
            sale_price:
              type: number
              description: Price of the item after all discounts are applied. (The final price before tax calculation.)
            extended_list_price:
              type: number
              description: List price of the item multiplied by the quantity.
            extended_sale_price:
              type: number
              description: Sale price of the item multiplied by the quantity.
            options:
              description: The list of selected options for this product.
              type: array
              items:
                type: object
                title: Product Option
                properties:
                  name:
                    type: string
                    description: 'The product option name; for example, Color or Size.'
                  nameId:
                    type: number
                    description: The product option identifier.
                  value:
                    type: string
                    description: 'The product option value; for example, Red or Medium.'
                  valueId:
                    type: number
                    description: The product option value identifier in number format.
                    example: 128
          required:
            - variant_id
            - product_id
            - quantity
        - {}
      description: ''
    BaseItem:
      type: object
      title: Base Item
      properties:
        id:
          type: string
          description: The line-item ID.
          example: 6e193ce6-f327-4dcc-b75e-72cf6738525e
        variant_id:
          type: number
          description: The ID of the variant. Required in the /PUT or /POST request if the product has variants.
          example: 358
        product_id:
          type: number
          description: The ID of the product. Required in a /POST request.
          example: 12
        sku:
          type: string
          example: SMGREEN
          description: SKU of the variant.
        name:
          type: string
          description: The item’s product name.
          example: T-Shirt
        url:
          description: The product URL.
          type: string
          format: uri
          example: 'http://your-store-url.mybigcommerce.com/your-product/'
        quantity:
          type: number
          example: 5
          description: Quantity of this item in the cart.
        is_taxable:
          type: boolean
          example: false
          description: Boolean value that specifies whether the item is taxable.
        image_url:
          type: string
          format: uri
          example: 'https://pathtoproductimage/ProductDefault.png'
          description: Image of the product or variant.
        discounts:
          type: array
          items:
            type: object
            title: Applied Discount
            description: |-
              Example as part of a cart response:

              ```
                "discounts": [
                  {
                    "id": 2,
                    "discounted_amount": 2
                  },
                  {
                    "id": "coupon",
                    "discounted_amount": 0.42
                  }
                ]
              ```
            properties:
              id:
                description: ID of the applied discount.
                example: coupon
                oneOf:
                  - type: string
                  - type: number
              discounted_amount:
                type: number
                description: The discounted amount.
        coupons:
          type: array
          items:
            type: object
            title: Applied Coupon
            properties:
              coupons:
                type: object
                description: Required in a /POST request.
                properties:
                  coupon_code:
                    type: object
                    description: The coupon code.
                    properties:
                      id:
                        type: integer
                        example: 6
                        description: The ID of the coupon.
                      code:
                        type: string
                        example: KV56053388J
                        description: The coupon code. Required in a /POST request.
                      name:
                        type: string
                        example: Percentage off
                        description: Name given to the coupon in the control panel.
                      discountType:
                        type: integer
                        description: |-
                          The discount type.

                          - type 0: per_item_discount
                          - type 1: percentage_discount
                          - type 2: per_total_discount
                          - type 3: shipping_discount
                          - type 4: free_shipping
                          enum:
                          - 0
                          - 1
                          - 2
                          - 3
                          - 4
                      discountAmount:
                        type: integer
                        description: 'The amount of the discount based on the coupon. For example, 3 percent off will show a 3.'
                        example: 3
                      expiresDate:
                        type: integer
                        example: 0
                        description: Returns 0 if no expiration date has been set.
                      totalDiscount:
                        type: number
                        example: 4.19
                        description: The total amount of all discounts applied to the cart.
                required:
                  - coupon_code
        discount_amount:
          type: number
          description: The total value of all discounts applied to this item. This includes coupons and cart level discounts.
          example: 4
        coupon_amount:
          type: number
          description: The total value of all coupons applied to this item.
        original_price:
          type: number
          description: An item’s original price is the same as the product default price in the admin panel.
        list_price:
          type: number
          description: 'The net item price before discounts and coupons are applied. BigCommerce derives an item’s list price from the product default price or, if applicable, the sale price configured in the admin panel.'
        sale_price:
          type: number
          description: Item’s price after all discounts are applied. (The final price before tax calculation.)
        extended_list_price:
          type: number
          description: List price of the item multiplied by the quantity.
        extended_sale_price:
          type: number
          description: Sale price of the item multiplied by the quantity.
        options:
          description: The list of selected options for this product.
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: 'The product option name; for example, Color or Size.'
              nameId:
                type: number
                description: The product option identifier.
              value:
                type: string
                description: 'The product option value; for example, Red or Medium.'
              valueId:
                type: number
                description: The product option value identifier in number format.
                example: 128
            title: Product Option
      required:
        - variant_id
        - product_id
        - quantity
      x-internal: false
    ProductOption:
      type: object
      title: Product Option
      x-internal: false
      properties:
        name:
          type: string
          description: 'The product option name; for example, Color or Size.'
        nameId:
          type: number
          description: The product option identifier.
        value:
          type: string
          description: 'The product option value; for example, Red or Medium.'
        valueId:
          type: number
          description: The product option value identifier in number format.
          example: 128
    AppliedCoupon:
      title: Applied Coupon
      type: object
      description: |-
        |Type `int`|Type Name|
        |-|-|
        |`0`|`per_item_discount`|
        |`1`|`percentage_discount`|
        |`2`|`per_total_discount`|
        |`3`|`shipping_discount`|
        |`4`|`free_shipping`|
        |`5`|`promotion`|
      x-internal: false
      properties:
        code:
          description: The coupon code.
          type: string
        id:
          description: The coupon ID. (read-only)
          type: string
          readOnly: true
        coupon_type:
          description: |-
            Key name to identify the type of coupon.

            type 0: per_item_discount
            type 1: percentage_discount
            type 2: per_total_discount
            type 3: shipping_discount
            type 4: free_shipping
            type 5: promotion
          type: string
          enum:
            - '0'
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
          readOnly: true
        discounted_amount:
          description: The discounted amount applied within a given context.
          type: number
          format: double
          readOnly: true
      required:
        - code
    AppliedDiscount:
      type: object
      title: Applied Discount
      properties:
        id:
          description: ID of the applied discount.
          example: coupon
          oneOf:
            - type: string
            - type: number
        discounted_amount:
          type: number
          description: The discounted amount.
      x-internal: false
    GiftWrapping:
      properties:
        name:
          type: string
        message:
          type: string
        amount:
          type: number
          format: float
      title: Gift Wrapping
      x-internal: false
    ItemCustom:
      type: object
      title: Item Custom
      description: |-
        Add a custom item to the shopperʼs cart.

        * Custom items are not added to the catalog.
        * The price should be set to match the store settings for taxes.
      x-internal: false
      properties:
        id:
          type: string
          description: ID of the custom item.
        sku:
          type: string
          description: SKU of the custom item.
        name:
          type: string
          description: Name of the item.
        quantity:
          type: string
        list_price:
          type: string
          description: 'Specifies the price of the item. This value can include or exclude tax, depending on the store setup.'
    ItemCustomGet:
      type: object
      title: Item Custom
      description: |-
        Add a custom item to the shopperʼs cart.

        * Custom items are not added to the catalog.
        * The price should be set to match the store settings for taxes.
      x-internal: false
      properties:
        id:
          type: string
          description: ID of the custom item.
        sku:
          type: string
          description: SKU of the custom item.
        name:
          type: string
          description: Name of the item.
        quantity:
          type: string
        list_price:
          type: string
          description: 'Specifies the price of the item. This value can include or exclude tax, depending on the store setup.'
    cart_PostVariant:
      type: object
      title: Item with variant
      x-internal: false
      properties:
        quantity:
          type: number
        product_id:
          type: number
        list_price:
          type: number
          description: Optional price override.
        variant_id:
          type: number
          description: Variant ID. Exists only in Catalog V3.
        name:
          type: string
          description: 'Optionally, provide a value to override the product name.'
        gift_wrapping:
          type: object
          properties:
            wrap_together:
              type: boolean
              description: Boolean value that specifies whether items whether items should be wrapped together or wrapped individually.
              example: true
            wrap_details:
              type: array
              description: Details for the gift wrapping option selected. This can be specified for each line item.
              items:
                type: object
                properties:
                  id:
                    type: number
                    description: Identifier of the gift wrapping option selected.
                    example: 0
                  message:
                    type: string
                    description: Custom gift message.
                    example: Happy Birthday
          required:
            - quantity
            - product_id
      description: Product with a variant.
      x-examples:
        example-1:
          quantity: 0
          product_id: 0
          list_price: 0
          variant_id: 0
          name: string
          gift_wrapping:
            wrap_together: true
            wrap_details:
              - id: 0
                message: Happy Birthday
    cart_PostModifier:
      type: object
      title: Item with modifier
      properties:
        quantity:
          type: number
        product_id:
          type: number
        list_price:
          type: number
          description: Optional price override.
        name:
          type: string
          description: 'Optionally, provide a value to override the product name.'
        option_selections:
          type: array
          description: Needed for Catalog V2.
          items:
            type: object
            properties:
              option_id:
                type: number
              option_value:
                type: integer
              name:
                type: string
                description: Override for the selected option or modifier name.
              value:
                type: string
                description: Override for the selected option value.
              nameId:
                type: integer
              valueId:
                type: integer
      required:
        - quantity
        - product_id
      description: Product with a modifier.
      x-internal: false
      x-examples:
        example-1:
          - quantity: 0
            product_id: 0
            list_price: 0
            name: string
            option_selections:
              - option_id: 0
                option_value: 0
                name: string
                value: string
                name_id: 0
                value_id: 0
    Cart_Line_Item_Update_Put:
      type: object
      title: Cart_Line_Item_Update_Put
      x-internal: false
      properties:
        line_item:
          oneOf:
            - $ref: '#/components/schemas/cart_PostVariant'
            - $ref: '#/components/schemas/cart_PostModifier'
        gift_certificates:
          type: array
          items:
            type: object
            title: Line Item Gift Certificate Request Data
            properties:
              name:
                type: string
                description: Given name for a gift certificate line item.
              theme:
                type: string
                description: The theme of the gift certificate.
                enum:
                  - Birthday
                  - Boy
                  - Celebration
                  - Christmas
                  - General
                  - Girl
              amount:
                type: number
                minimum: 1
                maximum: 1000
              quantity:
                type: integer
                minimum: 1
              sender:
                title: Contact Entity
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
              recipient:
                title: Contact Entity
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
              message:
                type: string
                maxLength: 200
                description: 'Message shown to recipient, as provided by sender.'
            required:
              - name
              - theme
              - amount
              - quantity
              - sender
              - recipient
        custom_items:
          $ref: '#/components/schemas/cart_PostCustomItem'
    Cart_Line_Item_Update_Post:
      type: object
      title: Cart_Line_Item_Update_Post
      x-internal: false
      properties:
        line_items:
          oneOf:
            - items:
                $ref: '#/components/schemas/cart_PostVariant'
            - items:
                $ref: '#/components/schemas/cart_PostModifier'
          type: array
        gift_certificates:
          type: array
          items:
            type: object
            title: Line Item Gift Certificate Request Data
            properties:
              name:
                type: string
                description: Given name for gift certificate line item.
              theme:
                type: string
                description: The theme of the gift certificate.
                enum:
                  - Birthday
                  - Boy
                  - Celebration
                  - Christmas
                  - General
                  - Girl
              amount:
                type: number
                minimum: 1
                maximum: 1000
              quantity:
                type: integer
                minimum: 1
              sender:
                title: Contact Entity
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
              recipient:
                title: Contact Entity
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
              message:
                type: string
                maximum: 200
                description: 'Message shown to recipient, as provided by sender.'
            required:
              - name
              - theme
              - amount
              - quantity
              - sender
              - recipient
        custom_items:
          $ref: '#/components/schemas/cart_PostCustomItem'
    cart_PostCustomItem:
      type: array
      title: Custom item
      x-internal: false
      items:
        type: object
        properties:
          sku:
            type: string
          name:
            type: string
            minLength: 1
            maxLength: 250  
          quantity:
            type: number
          list_price:
            type: number
      x-examples:
        example-1:
          - sku: string
            name: string
            quantity: 0
            list_price: 0
    CartSettings:
      description: Represents all settings related to the shopping cart functionality of a store.
      type: object
      properties:
        allow_purchasing:
          type: boolean
      x-tags:
        - Models
    ChannelCartSettings:
      description: Represents all settings overrides related to the shopping cart functionality of a store for a channel.
      type: object
      properties:
        allow_purchasing:
          type: boolean
          nullable: true
      x-tags:
        - Models
    ChannelCartSettingsRequest:
      allOf:
        - $ref: '#/components/schemas/ChannelCartSettings'
        - description: The request object for updating the cart settings overrides of a store for a channel.
      x-tags:
        - Models
    ChannelCartSettingsResponse:
      description: The response object of cart settings overrides for a channel.
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ChannelCartSettings'
        meta:
          $ref: '#/components/schemas/metaCollection_open'
      x-tags:
        - Models
    GlobalCartSettingsRequest:
      allOf:
        - $ref: '#/components/schemas/CartSettings'
        - description: The request object for updating the cart settings of a store at the global level.
          required:
            - allow_purchasing
      x-tags:
        - Models
    GlobalCartSettingsResponse:
      description: The response object of cart settings at the global level.
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CartSettings'
        meta:
          $ref: '#/components/schemas/metaCollection_open'
      x-tags:
        - Models
    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
        title:
          type: string
        type:
          type: string
        instance:
          type: string
        errors:
          type: object
      x-tags:
        - Models
    LineItemsGet:
      title: LineItemsGet
      type: object
      properties:
        physical_items:
          type: array
          items:
            $ref: '#/components/schemas/ItemPhysicalGet'
        digital_items:
          type: array
          items:
            $ref: '#/components/schemas/ItemDigitalGet'
        gift_certificates:
          type: array
          items:
            $ref: '#/components/schemas/ItemGiftCertificateGet'
        custom_items:
          type: array
          items:
            $ref: '#/components/schemas/ItemCustomGet'
      description: '`GET`'
    ItemPhysicalGet:
      allOf:
        - type: object
          title: Base Item
          properties:
            id:
              type: string
              description: The line-item ID.
              example: 6e193ce6-f327-4dcc-b75e-72cf6738525e
            variant_id:
              type: number
              description: The ID of the variant. Required in the /PUT or /POST request if the product has variants.
              example: 358
            product_id:
              type: number
              description: The ID of the product. Required in a /POST request.
              example: 12
            sku:
              type: string
              example: SMGREEN
              description: SKU of the variant.
            name:
              type: string
              description: The item’s product name.
              example: T-Shirt
            weight:
              type: number
              description: The weight is displayed here if the item has a custom dimension.
              example: 1.2
            dimensions:
              type: object
              properties:
                height:
                  type: number
                  description: The height is displayed here if the item has a custom dimension.
                  example: 2.0
                width:
                  type: number
                  description: The width is displayed here if the item has a custom dimension.
                  example: 2.1
                depth:
                  type: number
                  description: The depth is displayed here if the item has a custom dimension.
                  example: 2.2
            url:
              description: The product URL.
              type: string
              format: uri
              example: 'http://your-store-url.mybigcommerce.com/your-product/'
            quantity:
              type: number
              example: 5
              description: Quantity of this item in the cart.
            is_taxable:
              type: boolean
              example: false
              description: Boolean value that specifies whether the item is taxable.
            image_url:
              type: string
              format: uri
              example: 'https://pathtoproductimage/ProductDefault.png'
              description: Image of the product or variant.
            discounts:
              type: array
              items:
                type: object
                title: Applied Discount
                description: |-
                  Example as part of a cart response:

                  ```
                    "discounts": [
                      {
                        "id": 2,
                        "discounted_amount": 2
                      },
                      {
                        "id": "coupon",
                        "discounted_amount": 0.42
                      }
                    ]
                  ```
                properties:
                  id:
                    oneOf:
                      - type: string
                      - type: number
                  discounted_amount:
                    type: number
                    description: The discounted amount.
            coupons:
              oneOf:
                - type: number
                - type: array
                  items:
                    type: object
                    title: Applied Coupon
                    properties:
                      id:
                        type: integer
                        example: 6
                        description: ID of the coupon.
                      code:
                        type: string
                        example: KV56053388J
                        description: The coupon code. Required in a /POST request.
                      name:
                        type: string
                        example: Percentage off
                        description: Name given to the coupon in the control panel.
                      discountType:
                        type: integer
                        description: |-
                          The discount type.
                          - type 0: per_item_discount
                          - type 1: percentage_discount
                          - type 2: per_total_discount
                          - type 3: shipping_discount
                          - type 4: free_shipping
                        example: 3
                        enum:
                          - 0
                          - 1
                          - 2
                          - 3
                          - 4
                      discountAmount:
                        type: integer
                        description: 'The amount of the discount based on the coupon. For example, 3 percent off will show a 3.'
                        example: 3
                      expiresDate:
                        type: integer
                        example: 0
                        description: Returns 0 if no expiration date has been set.
                      totalDiscount:
                        type: number
                        example: 4.19
                        description: The total amount of all discounts applied to the cart.
                    required:
                      - code
            discount_amount:
              type: number
              description: The total value of all discounts applied to this item. This includes coupons and cart-level discounts.
              example: 4
            coupon_amount:
              type: number
              description: The total value of all coupons applied to this item.
            original_price:
              type: number
              description: An item’s original price is the same as the product default price in the admin panel.
            list_price:
              type: number
              description: 'The net item price before discounts and coupons are applied. BigCommerce derives an item’s list price from the product default price or, if applicable, the sale price configured in the admin panel.'
            sale_price:
              type: number
              description: Price of the item after all discounts are applied. (The final price before tax calculation.)
            extended_list_price:
              type: number
              description: List price of the item multiplied by the quantity.
            extended_sale_price:
              type: number
              description: Sale price of the item multiplied by the quantity.
            options:
              description: The list of selected options for this product.
              type: array
              items:
                type: object
                title: Product Option
                properties:
                  name:
                    type: string
                    description: 'The product option name; for example, Color or Size.'
                  nameId:
                    type: number
                    description: The product option identifier.
                  value:
                    type: string
                    description: 'The product option value; for example, Red or Medium.'
                  valueId:
                    type: number
                    description: The product option value identifier in number format.
                    example: 128
          required:
            - variant_id
            - product_id
            - quantity
        - {}
      title: ''
      description: ''
    NotFound:
      description: Error payload for the BigCommerce API.
      type: object
      properties:
        status:
          description: |
            404 HTTP status code.
          type: integer
        title:
          description: The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
      title: Not Found
      x-internal: false
    MetafieldResponse:
      description: |
        Response payload for the BigCommerce API.
      x-internal: false
      allOf:
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Metafield'
        - $ref: '#/components/schemas/CollectionMeta'
    Metafield:
      description: |
        Allows app partners to write custom data to various resources in the API.
      allOf:
        - $ref: '#/components/schemas/MetafieldBase'
        - type: object
          properties:
            id:
              type: integer
              description: The unique identifier for the metafield.
            date_created:
              type: string
              format: date-time
              description: Date and time of the metafieldʼs creation.
              example: '2022-06-16T18:39:00+00:00'
            date_modified:
              type: string
              format: date-time
              description: Date and time when the metafield was last updated.
              example: '2022-06-16T18:39:00+00:00'
      x-internal: false
    MetafieldBase:
      type: object
      description: |
        Common Metafield properties.
      x-internal: false
      properties:
        permission_set:
          type: string
          description: |
            Determines the visibility and writeability of the field by other API consumers.
            | Value | Description |
            | :--- | :--- |
            | `app_only` | Private to the app that owns the field. |
            | `read` | Visible to other API consumers. |
            | `write` | Open for reading and writing by other API consumers. |
            | `read_and_sf_access` | Visible to other API consumers, including on storefront. |
            | `write_and_sf_access` | Open for reading and writing by other API consumers, including on storefront. |
          enum:
            - app_only
            - read
            - write
            - read_and_sf_access
            - write_and_sf_access
        namespace:
          type: string
          description: |
            Namespace for the metafield, for organizational purposes.
          example: Sales Department
          minLength: 1
          maxLength: 64
        key:
          type: string
          description: |
            The name of the field, for example: `location_id`, `color`.
          minLength: 1
          maxLength: 64
          example: Staff Name
        value:
          type: string
          description: |
            The value of the field, for example: `1`, `blue`.
          minLength: 1
          maxLength: 65535
          example: Ronaldo
        description:
          type: string
          description: |
            Description for the metafields.
          example: order
          minLength: 0
          maxLength: 255
        resource_type:
          type: string
          description: |
            The type of resource with which the metafield is associated.
          enum:
            - brand
            - product
            - variant
            - category
            - cart
          example: cart
        resource_id:
          type: string
          description: |
            The unique identifier for the resource with which the metafield is associated.
          example: '0'
          readOnly: true
      required:
        - permission_set
    MetafieldPost:
      description: |
        The model for a POST to create metafield.
      allOf:
        - $ref: '#/components/schemas/MetafieldBase_Post'
      x-internal: false
    MetafieldBase_Post:
      type: object
      description: |
        Common Metafield properties.
      x-internal: false
      properties:
        permission_set:
          type: string
          description: |
            Determines the visibility and writeability of the field by other API consumers.
            | Value | Description |
            | :--- | :--- |
            | `app_only` | Private to the app that owns the field. |
            | `read` | Visible to other API consumers. |
            | `write` | Open for reading and writing by other API consumers. |
            | `read_and_sf_access` | Visible to other API consumers, including on storefront. |
            | `write_and_sf_access` | Open for reading and writing by other API consumers, including on storefront. |
          enum:
            - app_only
            - read
            - write
            - read_and_sf_access
            - write_and_sf_access
        namespace:
          type: string
          description: |
            Namespace for the metafield, for organizational purposes.
          example: Sales Department
          minLength: 1
          maxLength: 64
        key:
          type: string
          description: |
            The name of the field, for example: `location_id`, `color`.
          minLength: 1
          maxLength: 64
          example: Staff Name
        value:
          type: string
          description: |
            The value of the field, for example: `1`, `blue`.
          minLength: 1
          maxLength: 65535
          example: Ronaldo
        description:
          type: string
          description: |
            Description for the metafields.
          minLength: 0
          maxLength: 255
          example: Name of Staff Member
      required:
        - permission_set
        - namespace
        - key
        - value
    MetaFieldCollectionResponse:
      type: object
      description: |
        Response payload for the BigCommerce API.
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Metafield'
        meta:
          $ref: '#/components/schemas/CollectionMeta'
      x-internal: false
    CollectionMeta:
      type: object
      description: 'Data about the response, including pagination and collection totals.'
      properties:
        pagination:
          type: object
          description: 'Data about the response, including pagination and collection totals.'
          title: Pagination
          properties:
            total:
              type: integer
              description: |
                Total number of items in the result set.
              example: 36
            count:
              type: integer
              description: |
                Total number of items in the collection response.
              example: 36
            per_page:
              type: integer
              description: |
                The amount of items returned in the collection per page, controlled by the limit parameter.
              example: 50
            current_page:
              type: integer
              description: |
                The page you are currently on within the collection.
              example: 1
            total_pages:
              type: integer
              description: |
                The total number of pages in the collection.
              example: 1
            links:
              type: object
              description: |
                Pagination links for the previous and next parts of the whole collection.
              properties:
                previous:
                  type: string
                  description: |
                    Link to the previous page returned in the response.
                current:
                  type: string
                  description: |
                    Link to the current page returned in the response.
                  example: '?page=1&limit=50'
                next:
                  type: string
                  description: |
                    Link to the next page returned in the response.
      additionalProperties: true
      title: Collection Meta
      x-internal: false
    metaCollection_open:
      title: Response meta
      type: object
      properties: {}
      additionalProperties: true
      description: Response metadata.
  responses:
    CartResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Cart_Full'
          examples: {}
    CartRedirectResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  cart_url:
                    type: string
                    format: url
                    example: 'https://store.mybigcommerce.com/cart.php?action=load&id=0aa00afa-a000-00a0-00aae-aa0000f000a0&token=00aaaaa0aa0000000000a000a000f0aa0000afa00aa00afa0a000000000aa0a0'
                  checkout_url:
                    type: string
                    example: 'https://store.mybigcommerce.com/cart.php?action=loadInCheckout&id=1ea11efe-b111-11d1-11ee-cd1110f111b1&token=00aaaaa0aa0000000000a000a000f0aa0000afa00aa00afa0a000000000aa0a0'
                    format: Url
                  embedded_checkout_url:
                    type: string
                    example: 'https://store.mybigcommerce.com/cart.php?embedded=1&action=loadInCheckout&id=0aa00afa-a000-00a0-00aae-aa0000f000a0&token=00aaaaa0aa0000000000a000a000f0aa0000afa00aa00afa0a000000000aa0a0'
                    format: url
              meta:
                $ref: '#/components/schemas/metaCollection_open'
          examples:
            example-1:
              value:
                data:
                  cart_url: 'https://store.mybigcommerce.com/cart.php?action=load&id=0aa00afa-a000-00a0-00aae-aa0000f000a0&token=00aaaaa0aa0000000000a000a000f0aa0000afa00aa00afa0a000000000aa0a0'
                  checkout_url: 'https://store.mybigcommerce.com/cart.php?action=loadInCheckout&id=1ea11efe-b111-11d1-11ee-cd1110f111b1&token=00aaaaa0aa0000000000a000a000f0aa0000afa00aa00afa0a000000000aa0a0'
                  embedded_checkout_url: 'https://store.mybigcommerce.com/cart.php?embedded=1&action=loadInCheckout&id=0aa00afa-a000-00a0-00aae-aa0000f000a0&token=00aaaaa0aa0000000000a000a000f0aa0000afa00aa00afa0a000000000aa0a0'
                meta: 
                  $ref: '#/components/schemas/metaCollection_open'
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      schema:
        type: string
        default: application/json
    cartId:
      name: cartId
      in: path
      description: The identifier of a specific cart.
      required: true
      schema:
        type: string
        format: UUID
    cart_id:
      name: cart_id
      in: path
      description: The ID of the `Cart` to which the transactions belong.
      required: true
      schema:
        type: string
        format: UUID
    line_items:
      name: include
      in: query
      description: |-
        * `redirect_urls`: Create a direct link to a cart. This can be used for the /POST request for carts.
        * `line_items.physical_items.options`: The cart returns an abbreviated result. Use this to return physical items product options. To return the extended cart object, use in a /POST request.
        * `line_items.digital_items.options`: The cart returns an abbreviated result. Use this to return digital items product options. To return the extended cart object, use in a /POST request.
        * `promotions.banners`: Returns a list of eligible banners.
      schema:
        type: string
        enum:
          - redirect_urls
          - line_items.physical_items.options
          - line_items.digital_items.options
    PageParam:
      name: page
      description: |
        Specifies the page number in a limited (paginated) list of products.
      required: false
      in: query
      schema:
        type: integer
    MetafieldIdParam:
      name: metafield_id
      in: path
      description: |
        The ID of the `Metafield`.
      required: true
      schema:
        type: integer
    MetafieldKeyParam:
      name: key
      in: query
      description: Filter based on a metafieldʼs key.
      required: false
      schema:
        type: string
    MetafieldNamespaceParam:
      name: namespace
      in: query
      description: Filter based on a metafieldʼs key.
      required: false
      schema:
        type: string
    LimitParam:
      name: limit
      description: |
        Controls the number of items per page in a limited (paginated) list of products.
      required: false
      in: query
      schema:
        type: integer
    DirectionParam:
      name: direction
      description: |
        Sort direction. Acceptable values are: `asc`, `desc`.
      required: false
      in: query
      schema:
        type: string
        enum:
          - asc
          - desc
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |Carts|modify|`store_cart`|
        |Carts |read-only|`store_cart_read_only`|

        ### Authentication header

        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading

        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header

openapi: '3.0.3'
info:
  title: Catalog - Brands
  description: |-
    > The Catalog API manages products, categories, brands, bulk pricing rules, and more. To learn more about catalog resources, see the [Catalog Overview](/api-docs/store-management/catalog/products-overview).

    Our Catalog Brands endpoints let you [create individual brands](/docs/rest-catalog/brands#create-a-brand) and [modify the brands](/docs/rest-catalog/brands#update-a-brand) associated with a store's products, along with [deleting brands](/docs/rest-catalog/brands#delete-a-brand). 
    
    Brand images have their own dedicated [create a brand image](/docs/rest-catalog/brands/images#create-a-brand-image) and [delete a brand image](/docs/rest-catalog/brands/images#delete-a-brand-image) endpoints. 
    
    In addition, brands have metafields that you can use to store information structured in key-value pairs; learn more about [creating brand metafields](/docs/rest-catalog/brands/metafields#create-a-brand-metafield), [updating brand metafields](/docs/rest-catalog/brands/metafields#update-a-brand-metafield), and [deleting brand metafields](/docs/rest-catalog/brands/metafields#delete-a-brand-metafield). 

    > To learn more about authenticating Catalog endpoints, locate the **Authentication** section at the top of each endpoint, then click **Show Details**. 

    ## Resources

    ### Webhooks
    * [Category](/api-docs/store-management/webhooks/events#category)

    ### Additional Catalog endpoints
    * [Categories](/docs/rest-catalog/categories)
    * [Category Trees](/docs/rest-catalog/category-trees)
    * [Products](/docs/rest-catalog/products)
    * [Product Modifiers](/docs/rest-catalog/product-modifiers)
    * [Product Variants](/docs/rest-catalog/product-variants)
    * [Product Variant Options](/docs/rest-catalog/product-variant-options)

  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  version: ''
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Brands
  - name: Images
  - name: Metafields
paths:
  '/catalog/brands':
    get:
      tags:
        - Brands
      summary: Get All Brands
      description: Returns a list of *Brands*. Optional filter parameters can be passed in.
      operationId: getBrands
      parameters:
        - name: id
          in: query
          description: |
            Filter items by ID.
          schema:
            type: integer
        - name: 'id:in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:not_in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:min'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:max'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:greater'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:less'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: name
          in: query
          description: |
            Filter items by name.
          schema:
            type: string
        - name: name:like
          in: query
          description: |-
            Filter items by part of a name. For example, `name:like=new` returns brands with names that include `new`.
          schema:
            type: string
        - name: page_title
          in: query
          description: |
            Filter items by page_title.
          schema:
            type: string
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
        - name: sort
          in: query
          description: 'Field name to sort by.'
          schema:
            type: string
            enum:
              - name
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Brand Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/brand_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
              example:
                data:
                  - id: 35
                    name: Sagaform
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: ''
                    image_url: ''
                    search_keywords: ''
                    custom_url:
                      url: /brands/Sagaform.html
                      is_customized: false
                  - id: 36
                    name: OFS
                    page_title: OFS
                    meta_keywords:
                      - modern
                      - ' clean'
                      - ' contemporary'
                    meta_description: OFS is a modern brand.
                    image_url: ''
                    search_keywords: 'kitchen, laundry, cart, storage'
                    custom_url:
                      url: /brands/OFS.html
                      is_customized: false
                  - id: 37
                    name: Common Good
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: ''
                    image_url: 'https://cdn8.bigcommerce.com/s-jrah6gmn/product_images/k/screen%20shot%202018-05-07%20at%2012.24.24%20pm_1525785365__65102.png'
                    search_keywords: ''
                    custom_url:
                      url: /brands/Common-Good.html
                      is_customized: false
                  - id: 38
                    name: BigCommerce
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: ''
                    image_url: ''
                    search_keywords: ''
                    custom_url:
                      url: /bigcommerce/
                      is_customized: false
                  - id: 39
                    name: Test Brand One
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: ''
                    image_url: 'https://cdn8.bigcommerce.com/s-jrah6gmn/product_images/q/apihqggzm__53766.jpg'
                    search_keywords: ''
                    custom_url:
                      url: /test-brand-one/
                      is_customized: false
                  - id: 40
                    name: Fog Linen Work
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: description
                    image_url: ''
                    search_keywords: ''
                    custom_url:
                      url: /fog-linen-work/
                      is_customized: false
                  - id: 41
                    name: Barr-Co.
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: description
                    image_url: ''
                    search_keywords: ''
                    custom_url:
                      url: /barr-co/
                      is_customized: false
                  - id: 42
                    name: Thames & Hudson
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: description
                    image_url: ''
                    search_keywords: ''
                    custom_url:
                      url: /thames-hudson/
                      is_customized: false
                  - id: 43
                    name: Able Brewing
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: description
                    image_url: ''
                    search_keywords: ''
                    custom_url:
                      url: /able-brewing/
                      is_customized: false
                  - id: 44
                    name: Chemex
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: description
                    image_url: ''
                    search_keywords: ''
                    custom_url:
                      url: /chemex/
                      is_customized: false
                  - id: 45
                    name: Kinfolk
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: description
                    image_url: ''
                    search_keywords: ''
                    custom_url:
                      url: /kinfolk/
                      is_customized: false
                  - id: 46
                    name: Iris Hantverk
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: description
                    image_url: ''
                    search_keywords: ''
                    custom_url:
                      url: /iris-hantverk/
                      is_customized: false
                  - id: 47
                    name: Gather Journal
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: description
                    image_url: ''
                    search_keywords: ''
                    custom_url:
                      url: /gather-journal/
                      is_customized: false
                  - id: 48
                    name: Openhouse Magazine
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: description
                    image_url: ''
                    search_keywords: ''
                    custom_url:
                      url: /openhouse-magazine/
                      is_customized: false
                  - id: 49
                    name: Smith Journal
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: description
                    image_url: ''
                    search_keywords: ''
                    custom_url:
                      url: /smith-journal/
                      is_customized: false
                meta:
                  pagination:
                    total: 15
                    count: 15
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
    post:
      tags:
        - Brands
      summary: Create a Brand
      description: |-
        Creates a *Brand*.

        **Required Fields**
        - name

        **Read-Only Fields**
        - id

        **Limits**
        - 30,000 brands per store limit
      operationId: createBrand
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Brand
              type: object
              description: Common brand properties.
              properties:
                name:
                  maxLength: 255
                  minLength: 1
                  type: string
                  description: |-
                    The name of the brand. Must be unique.
                    Required in POST.
                  example: Common Good
                  x-required:
                    - post
                    - put
                page_title:
                  maxLength: 255
                  minLength: 0
                  type: string
                  description: |
                    The title shown in the browser while viewing the brand.
                  example: Common Good
                meta_keywords:
                  type: array
                  description: |
                    Comma-separated list of meta keywords to include in the HTML.
                  items:
                    type: string
                    example: 'modern, clean, contemporary'
                meta_description:
                  maxLength: 65535
                  minLength: 0
                  type: string
                  description: |
                    A meta description to include.
                  example: Common Good is a modern brand.
                search_keywords:
                  maxLength: 65535
                  minLength: 0
                  type: string
                  description: |
                    A comma-separated list of keywords that can be used to locate this brand.
                  example: 'kitchen, laundry, cart, storage'
                image_url:
                  type: string
                  description: |
                    Image URL used for this category on the storefront. Images can be uploaded via form file post to `/brands/{brandId}/image`, or by providing a publicly accessible URL in this field.
                  example: 'https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png'
                  x-url: true
                custom_url:
                  title: Custom Url Brand
                  type: object
                  description: The custom URL for the brand on the storefront.
                  properties:
                    url:
                      type: string
                      description: |
                        Brand URL on the storefront.
                      example: /shoes
                      x-url: true
                    is_customized:
                      type: boolean
                      description: |
                        Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).
                      example: true
              required:
                - name
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Brand Response
                type: object
                properties:
                  data:
                    title: Brand
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Unique ID of the *Brand*. Read-Only.
                        readOnly: true
                      name:
                        maxLength: 255
                        minLength: 1
                        type: string
                        description: |-
                          The name of the brand. Must be unique.
                          Required in POST.
                        example: Common Good
                        x-required:
                          - post
                          - put
                      page_title:
                        maxLength: 255
                        minLength: 0
                        type: string
                        description: |
                          The title shown in the browser while viewing the brand.
                        example: Common Good
                      meta_keywords:
                        type: array
                        description: |
                          Comma-separated list of meta keywords to include in the HTML.
                        items:
                          type: string
                          example: 'modern, clean, contemporary'
                      meta_description:
                        maxLength: 65535
                        minLength: 0
                        type: string
                        description: |
                          A meta description to include.
                        example: Common Good is a modern brand.
                      search_keywords:
                        maxLength: 65535
                        minLength: 0
                        type: string
                        description: |
                          A comma-separated list of keywords that can be used to locate this brand.
                        example: 'kitchen, laundry, cart, storage'
                      image_url:
                        type: string
                        description: |
                          Image URL used for this category on the storefront. Images can be uploaded via form file post to `/brands/{brandId}/image`, or by providing a publicly accessible URL in this field.
                        example: 'https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png'
                        x-url: true
                      custom_url:
                        title: Custom Url Brand
                        type: object
                        properties:
                          url:
                            type: string
                            description: |
                              Brand URL on the storefront.
                            example: /shoes
                            x-url: true
                          is_customized:
                            type: boolean
                            description: |
                              Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).
                            example: true
                        description: The custom URL for the brand on the storefront.
                    description: Common Brand properties.
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |-
                  Brand Response returns for:
                  * Create Brand
                  * Get Brand by Id
                  * Update Brand by Id
              example:
                data:
                  id: 50
                  name: Common Good
                  meta_keywords:
                    - 'modern, clean, contemporary'
                  meta_description: Common Good is a modern brand
                  image_url: ''
                  search_keywords: 'kitchen, laundry, cart, storage'
                  custom_url:
                    url: /brands/Common-Good.html
                    is_customized: false
                meta: {}
        '207':
          $ref: '#/components/responses/General207Status'
        '409':
          description: Brand was in conflict with another brand. This is the result of duplicate unique fields such as name.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: 'Brand was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.'
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: Brand
    delete:
      tags:
        - Brands
      summary: Delete Brands
      description: 'By default, it deletes all *Brand* objects. A filter should be added to avoid deleting all *Brand* objects in a store.'
      operationId: deleteBrands
      parameters:
        - name: name
          in: query
          description: |
            Filter items by name.
          schema:
            type: string
        - name: page_title
          in: query
          description: |
            Filter items by page_title.
          schema:
            type: string
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
  '/catalog/brands/{brand_id}':
    get:
      tags:
        - Brands
      summary: Get a Brand
      description: Returns a single *Brand*. Optional filter parameters can be passed in.
      operationId: getBrandById
      parameters:
        - name: brand_id
          in: path
          description: |
            The ID of the `Brand` to which the resource belongs.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Brand Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/brand_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |-
                  Brand Response returns for:
                  * Create Brand
                  * Get Brand by Id
                  * Update Brand by Id
              example:
                data:
                  id: 50
                  name: Common Good
                  meta_keywords:
                    - 'modern, clean, contemporary'
                  meta_description: Common Good is a modern brand
                  image_url: ''
                  search_keywords: 'kitchen, laundry, cart, storage'
                  custom_url:
                    url: /brands/Common-Good.html
                    is_customized: false
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Brands
      summary: Update a Brand
      description: |-
        Updates a *Brand*.

        **Required Fields**
        - None

        **Read-Only Fields**
        - id

        To update a *Brand Image*, send a request with an `image_url`.
      operationId: updateBrand
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: brand_id
          in: path
          description: |
            The ID of the `Brand` to which the resource belongs.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              title: Brand
              required:
                - name
              type: object
              properties:
                id:
                  type: integer
                  description: Unique ID of the *Brand*. Read-Only.
                  readOnly: true
                name:
                  maxLength: 255
                  minLength: 1
                  type: string
                  description: |-
                    The name of the brand. Must be unique.
                    Required in POST.
                  example: Common Good
                  x-required:
                    - post
                    - put
                page_title:
                  maxLength: 255
                  minLength: 0
                  type: string
                  description: |
                    The title shown in the browser while viewing the brand.
                  example: Common Good
                meta_keywords:
                  type: array
                  description: |
                    Comma-separated list of meta keywords to include in the HTML.
                  example:
                    - 'modern, clean, contemporary'
                  items:
                    type: string
                meta_description:
                  maxLength: 65535
                  minLength: 0
                  type: string
                  description: |
                    A meta description to include.
                  example: Common Good is a modern brand.
                search_keywords:
                  maxLength: 65535
                  minLength: 0
                  type: string
                  description: |
                    A comma-separated list of keywords that can be used to locate this brand.
                  example: 'kitchen, laundry, cart, storage'
                image_url:
                  type: string
                  description: |
                    Image URL used for this category on the storefront. Images can be uploaded via form file post to `/brands/{brandId}/image`, or by providing a publicly accessible URL in this field.
                  example: 'https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png'
                  x-url: true
                custom_url:
                  title: Custom Url Brand
                  type: object
                  properties:
                    url:
                      type: string
                      description: |
                        Brand URL on the storefront.
                      example: /shoes
                      x-url: true
                    is_customized:
                      type: boolean
                      description: |
                        Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).
                      example: true
                  description: The custom URL for the brand on the storefront.
              description: Common Brand properties.
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Brand Response
                type: object
                properties:
                  data:
                    title: Brand
                    required:
                      - name
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Unique ID of the *Brand*. Read-Only.
                        readOnly: true
                      name:
                        maxLength: 255
                        minLength: 1
                        type: string
                        description: |-
                          The name of the brand. Must be unique.
                          Required in POST.
                        example: Common Good
                        x-required:
                          - post
                          - put
                      page_title:
                        maxLength: 255
                        minLength: 0
                        type: string
                        description: |
                          The title shown in the browser while viewing the brand.
                        example: Common Good
                      meta_keywords:
                        type: array
                        description: |
                          Comma-separated list of meta keywords to include in the HTML.
                        example:
                          - 'modern, clean, contemporary'
                        items:
                          type: string
                      meta_description:
                        maxLength: 65535
                        minLength: 0
                        type: string
                        description: |
                          A meta description to include.
                        example: Common Good is a modern brand.
                      search_keywords:
                        maxLength: 65535
                        minLength: 0
                        type: string
                        description: |
                          A comma-separated list of keywords that can be used to locate this brand.
                        example: 'kitchen, laundry, cart, storage'
                      image_url:
                        type: string
                        description: |
                          Image URL used for this category on the storefront. Images can be uploaded via form file post to `/brands/{brandId}/image`, or by providing a publicly accessible URL in this field.
                        example: 'https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png'
                        x-url: true
                      custom_url:
                        title: Custom Url Brand
                        type: object
                        properties:
                          url:
                            type: string
                            description: |
                              Brand URL on the storefront.
                            example: /shoes
                            x-url: true
                          is_customized:
                            type: boolean
                            description: |
                              Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).
                            example: true
                        description: The custom URL for the brand on the storefront.
                    description: Common Brand properties.
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |-
                  Brand Response returns for:
                  * Create Brand
                  * Get Brand by Id
                  * Update Brand by Id
              example:
                data:
                  id: 50
                  name: Common Good
                  meta_keywords:
                    - 'modern, clean, contemporary'
                  meta_description: Common Good is a modern brand
                  image_url: ''
                  search_keywords: 'kitchen, laundry, cart, storage'
                  custom_url:
                    url: /brands/Common-Good.html
                    is_customized: false
                meta: {}
        '207':
          $ref: '#/components/responses/General207Status'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '409':
          description: |
            The `Brand` was in conflict with another product. This is the result of duplicate unique values, such as `name`.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `Brand` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: brand
    delete:
      tags:
        - Brands
      summary: Delete a Brand
      description: Deletes a *Brand*.
      operationId: deleteBrandById
      parameters:
        - name: brand_id
          in: path
          description: |
            The ID of the `Brand` to which the resource belongs.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/BrandIdParam'
  '/catalog/brands/{brand_id}/metafields':
    get:
      tags:
        - Metafields
      summary: Get All Brand Metafields
      description: 'Returns a list of *Brand Metafields*. Optional filter parameters can be passed in. '
      operationId: getBrandMetafieldsByBrandId
      parameters:
        - name: brand_id
          in: path
          description: |
            The ID of the `Brand` to which the resource belongs.
          required: true
          schema:
            type: integer

        - name: id
          in: query
          description: |
            Filter items by ID.
          schema:
            type: integer
        - name: 'id:in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:not_in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:min'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:max'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:greater'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:less'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: key
          in: query
          description: |
            Filter based on a metafield's key.
          schema:
            type: string
        - name: namespace
          in: query
          description: Filter based on a metafield's namespace.
          schema:
            type: string
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Meta Field Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
              example:
                data:
                  - id: 6
                    key: Location
                    value: 4HG
                    namespace: Warehouse Locations
                    permission_set: app_only
                    resource_type: brand
                    resource_id: 111
                    description: Location in the warehouse
                    date_created: '1973-01-20T21:34:57.903Z'
                    date_modified: '1990-12-30T00:29:23.515Z'
                  - id: 7
                    key: Brand location
                    value: 4HG
                    namespace: Warehouse Locations
                    permission_set: read
                    resource_type: brand
                    resource_id: 111
                    description: Location in the warehouse
                    date_created: '1973-01-20T21:34:57.903Z'
                    date_modified: '1990-12-30T00:29:23.515Z'
                meta:
                  pagination:
                    total: 2
                    count: 2
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    post:
      tags:
        - Metafields
      summary: Create a Brand Metafield
      description: |-
        Creates a *Brand Metafield*.

        **Required Fields**
        - permission_set
        - namespace
        - key
        - value

        **Read-Only Fields**
        - id

        **Note:** The maxiumum number of metafields allowed on each order, product, category, variant, or brand is 250 per client ID. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in the Help Center.
      operationId: createBrandMetafield
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: brand_id
          in: path
          description: |
            The ID of the `Brand` to which the resource belongs.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Base'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Metafield Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    title: Meta
                    type: object
                    properties: {}
                    description: Empty meta object; may be used later.
              examples:
                example-1:
                  value:
                    data:
                      id: 4
                      key: location_id
                      value: 'Shelf 3, Bin 5'
                      namespace: App Namespace
                      permission_set: app_only
                      resource_type: brand
                      resource_id: 137
                      description: Where products are located
                      date_created: '2021-08-06T19:15:35+00:00'
                      date_modified: '2021-08-06T19:15:35+00:00'
                    meta: {}
                example-2:
                  value:
                    data:
                      id: 6
                      key: Location
                      value: 4HG
                      namespace: Warehouse Locations
                      permission_set: app_only
                      resource_type: category
                      resource_id: 111
                      description: Location in the warehouse.
                      date_created: '2018-05-07T20:14:17+00:00'
                      date_modified: '2018-05-07T20:14:17+00:00'
                    meta: {}
                example-3:
                  value:
                    data:
                      id: 4
                      key: location_id
                      value: 'Shelf 3, Bin 5'
                      namespace: App Namespace
                      permission_set: app_only
                      resource_type: brand
                      resource_id: 137
                      description: Where products are located.
                      date_created: '2021-08-06T19:15:35+00:00'
                      date_modified: '2021-08-06T19:15:35+00:00'
                    meta: {}
        '409':
          description: |
            The `Metafield` was in conflict with another `Metafield`. This can be the result of duplicate unique key combination of the app's client id, namespace, key, resource_type, and resource_id.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `Metafield` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: Metafield
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/BrandIdParam'
  '/catalog/brands/{brand_id}/metafields/{metafield_id}':
    get:
      tags:
        - Metafields
      summary: Get a Brand Metafields
      description: Returns a *Brand Metafield*. Optional filter parameters can be passed in.
      operationId: getBrandMetafieldByBrandId
      parameters:
        - name: metafield_id
          in: path
          description: |
            The ID of the `Metafield`.
          required: true
          schema:
            type: integer
        - name: brand_id
          in: path
          description: |
            The ID of the `Brand` to which the resource belongs.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Metafield Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 4
                  key: location_id
                  value: 'Shelf 3, Bin 5'
                  namespace: App Namespace
                  permission_set: app_only
                  resource_type: product
                  resource_id: 137
                  description: Where products are located
                  date_created: '2021-08-06T19:15:35+00:00'
                  date_modified: '2021-08-06T19:15:35+00:00'
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Metafields
      summary: Update a Brand Metafield
      description: "Updates a *Brand Metafield*.\n\n**Required Fields**  \n* none\n\n**Read-Only Fields**\n* id\n* These fields can only be modified by the app (API credentials) that created the metafield:\n\t* namespace\n\t* key\n\t* permission_set\n\n**Usage Notes**\n* Attempting to modify `namespace`, `key`, and `permission_set` fields using a client ID different from the one used to create those metafields will result in a 403 error message.\n* The maxiumum number of metafields allowed on each order, product, category, variant, or brand is 250 per client ID. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in the Help Center."
      operationId: updateBrandMetafield
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: metafield_id
          in: path
          description: |
            The ID of the `Metafield`.
          required: true
          schema:
            type: integer
        - name: brand_id
          in: path
          description: |
            The ID of the `Brand` to which the resource belongs.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Base'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Metafield Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 4
                  key: location_id
                  value: 'Shelf 3, Bin 5'
                  namespace: App Namespace
                  permission_set: app_only
                  resource_type: product
                  resource_id: 137
                  description: Where products are located
                  date_created: '2021-08-06T19:15:35+00:00'
                  date_modified: '2021-08-06T19:15:35+00:00'
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
      x-codegen-request-body-name: Metafield
    delete:
      tags:
        - Metafields
      summary: Delete a Brand Metafield
      description: Deletes a *Brand Metafield*.
      operationId: deleteBrandMetafieldById
      parameters:
        - name: metafield_id
          in: path
          description: |
            The ID of the `Metafield`.
          required: true
          schema:
            type: integer
        - name: brand_id
          in: path
          description: |
            The ID of the `Brand` to which the resource belongs.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/BrandIdParam'
      - $ref: '#/components/parameters/MetafieldIdParam'
  '/catalog/brands/{brand_id}/image':
    post:
      tags:
        - Images
      summary: Create a Brand Image
      description: |-
        Creates a *Brand Image*.

        **Required Fields**
        - image_file: Form posts are the only accepted upload option.

        **Read-Only Fields**
        - id

        Only one image at a time can be created. To update a *Brand Image*, use the [Update a brand](/docs/rest-catalog/brands#update-a-brand) endpoint and an `image_url`.
      operationId: createBrandImage
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: brand_id
          in: path
          description: |
            The ID of the `Brand` to which the resource belongs.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image_file:
                  type: string
                  format: binary
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      image_url:
                        type: string
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/product_images/k/group_1545334669__76009.png'
                meta: {}
        '400':
          description: Bad Request. The requested resource could not be downloaded and may be invalid. Possible reasons include malformed request syntax or the file host blocking requests.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '404':
          description: The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '422':
          description: 'Image was not valid. This is the result of a missing `image_file` field, or of an incorrect file type. See the response for more details.'
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
    delete:
      tags:
        - Images
      summary: Delete a Brand Image
      description: Deletes a *Brand Image*.
      operationId: deleteBrandImage
      parameters:
        - name: brand_id
          in: path
          description: |
            The ID of the `Brand` to which the resource belongs.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/BrandIdParam'
components:
  schemas:
    brand_Full:
      title: brand_Full
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          description: Unique ID of the *Brand*. Read-Only.
          readOnly: true
        name:
          maxLength: 255
          minLength: 1
          type: string
          description: |-
            The name of the brand. Must be unique.
            Required in POST.
          example: Common Good
          x-required:
            - post
            - put
        page_title:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            The title shown in the browser while viewing the brand.
          example: Common Good
        meta_keywords:
          type: array
          description: |
            Comma-separated list of meta keywords to include in the HTML.
          items:
            type: string
            example: 'modern, clean, contemporary'
        meta_description:
          maxLength: 65535
          minLength: 0
          type: string
          description: |
            A meta description to include.
          example: Common Good is a modern brand.
        search_keywords:
          maxLength: 65535
          minLength: 0
          type: string
          description: |
            A comma-separated list of keywords that can be used to locate this brand.
          example: 'kitchen, laundry, cart, storage'
        image_url:
          type: string
          description: |
            Image URL used for this category on the storefront. Images can be uploaded via form file post to `/brands/{brandId}/image`, or by providing a publicly accessible URL in this field.
          example: 'https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png'
          x-url: true
        custom_url:
          $ref: '#/components/schemas/customUrl_Full'
      description: Common Brand properties.
      x-internal: false
    metafield_Base:
      title: metafield_Base
      type: object
      description: 'Metafield for products, categories, variants, and brands; the max number of metafields allowed on each is 50. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in the Help Center.'
      x-internal: false
      properties:
        key:
          maxLength: 64
          minLength: 1
          type: string
          description: |
            The name of the field, for example: `location_id`, `color`. Required for POST.
          example: Location
          x-required:
            - post
        value:
          maxLength: 65535
          minLength: 1
          type: string
          description: |
            The value of the field, for example: `1`, `blue`. Required for POST.
          example: 4HG
          x-required:
            - post
        namespace:
          maxLength: 64
          minLength: 1
          type: string
          description: |
            Namespace for the metafield, for organizational purposes. This is set by the developer. Required for POST.
          example: Warehouse Locations
          x-required:
            - post
        permission_set:
          type: string
          description: |-
            Determines the visibility and writeability of the field by other API consumers.

            |Value|Description
            |-|-|
            |`app_only`|Private to the app that owns the field|
            |`read`|Visible to other API consumers|
            |`write`|Open for reading and writing by other API consumers|
            |`read_and_sf_access`|Visible to other API consumers, including on storefront|
            |`write_and_sf_access`|Open for reading and writing by other API consumers, including on storefront|
          enum:
            - app_only
            - read
            - write
            - read_and_sf_access
            - write_and_sf_access
        description:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            Description for the metafields.
          example: Location in the warehouse
      required:
        - permission_set
        - namespace
        - key
        - value
    customUrl_Full:
      title: customUrl_Full
      type: object
      properties:
        url:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            Product URL on the storefront.
          x-required:
            - post
            - put
          x-url: true
        is_customized:
          type: boolean
          description: |
            Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).
          x-required:
            - post
            - put
      description: The custom URL for the product on the storefront.
      x-internal: false
    metaCollection_Full:
      title: metaCollection_Full
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/pagination_Full'
      description: 'Data about the response, including pagination and collection totals.'
      x-internal: false
    pagination_Full:
      title: pagination_Full
      type: object
      properties:
        total:
          type: integer
          description: |
            Total number of items in the result set.
          example: 36
        count:
          type: integer
          description: |
            Total number of items in the collection response.
          example: 36
        per_page:
          type: integer
          description: |
            The amount of items returned in the collection per page, controlled by the limit parameter.
          example: 50
        current_page:
          type: integer
          description: |
            The page you are currently on within the collection.
          example: 1
        total_pages:
          type: integer
          description: |
            The total number of pages in the collection.
          example: 1
        links:
          type: object
          properties:
            previous:
              type: string
              description: |
                Link to the previous page returned in the response.
            current:
              type: string
              description: |
                Link to the current page returned in the response.
              example: '?page=1&limit=50'
            next:
              type: string
              description: |
                Link to the next page returned in the response.
          description: |
            Pagination links for the previous and next parts of the whole collection.
      description: 'Data about the response, including pagination and collection totals.'
      x-internal: false
    metaEmpty_Full:
      type: object
      title: Response meta
      properties: {}
      additionalProperties: true
      description: Response metadata.
    error_Base:
      title: error_Base
      type: object
      properties:
        status:
          type: integer
          description: |
            The HTTP status code.
        title:
          type: string
          description: |
            The error title describing the particular error.
        type:
          type: string
        instance:
          type: string
      description: |
        Error payload for the BigCommerce API.
      x-internal: false
    metafield_Full:
      title: metafield_Full
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: Unique ID of the *Metafield*. Read-Only.
              readOnly: true
              example: 6
        - $ref: '#/components/schemas/metafield_Base'
        - type: object
          properties:
            resource_type:
              type: string
              description: |
                The type of resource with which the metafield is associated.
              example: product
              enum:
                - category
                - brand
                - product
                - variant
              x-required:
                - post
            resource_id:
              maximum: 10000000000
              minimum: 0
              type: integer
              description: |
                The ID of the resource with which the metafield is associated.
              example: 111
              x-required:
                - post
            date_created:
              type: string
              description: |
                Date and time of the metafield's creation. Read-Only.
              readOnly: true
              format: date-time
              example: '2018-05-07T20:14:17+00:00'
            date_modified:
              type: string
              description: |
                Date and time when the metafield was last updated. Read-Only.
              readOnly: true
              format: date-time
              example: '2018-05-07T20:14:17+00:00'
      x-internal: false
  responses:
    General207Status:
      description: 'Multi-status. Multiple operations have taken place and the status for each operation can be viewed in the body of the response. Typically indicates that a partial failure has occured, such as when a `POST` or `PUT` request is successful, but saving the URL or inventory data has failed.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Base'
  parameters:
    BrandIdParam:
      name: brand_id
      in: path
      description: |
        The ID of the `Brand` to which the resource belongs.
      required: true
      schema:
        type: integer
    MetafieldIdParam:
      name: metafield_id
      in: path
      description: |
        The ID of the `Metafield`.
      required: true
      schema:
        type: integer
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Products | modify | `store_v2_products` |
        |  Products | read-only | `store_v2_products_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header

openapi: '3.0.3'
info:
  title: Catalog - Categories
  description: |-
    > The Catalog API manages products, categories, brands, bulk pricing rules, and more. To learn more about catalog resources, see the [Catalog Overview](/api-docs/store-management/catalog/products-overview).

    Our Catalog Categories endpoints let you [create individual categories](/docs/rest-catalog/categories#create-a-category) and [modify categories](/docs/rest-catalog/categories#update-a-category) that organize a store's products, as well as [delete categories](/docs/rest-catalog/categories#delete-a-category). 
    
    Category images have their own dedicated [create a category image](/docs/rest-catalog/categories/images#create-a-category-image) and [delete a category image](/docs/rest-catalog/categories/images#delete-a-category-image) endpoints. 
    
    In addition, categories have metafields that you can use to store information structured in key-value pairs; learn more about [creating category metafields](/docs/rest-catalog/categories/metafields#create-a-category-metafield), [updating category metafields](/docs/rest-catalog/categories/metafields#update-a-category-metafield), and [deleting category metafields](/docs/rest-catalog/categories/metafields#delete-a-category-metafield). 

    This API family also contains endpoints to [update product sort order](/docs/rest-catalog/categories/sort-order#update-product-sort-order) within a category. 

    These endpoints are primarily useful in applications for single storefront stores. To work with categories for an [MSF-enabled store](/api-docs/multi-storefront/overview), see [Category Trees](/docs/rest-catalog/category-trees).

    > To learn more about authenticating Catalog endpoints, locate the **Authentication** section at the top of each endpoint, then click **Show Details**. 

    ## Resources

    ### Webhooks
    Learn more about [Category webhook events](/api-docs/store-management/webhooks/events#category).

    ### Additional Catalog endpoints
    * [Brands](/docs/rest-catalog/brands)
    * [Category Trees](/docs/rest-catalog/category-trees)
    * [Products](/docs/rest-catalog/products)
    * [Product Modifiers](/docs/rest-catalog/product-modifiers)
    * [Product Variants](/docs/rest-catalog/product-variants)
    * [Product Variant Options](/docs/rest-catalog/product-variant-options)

  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  version: ''
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Categories
  - name: Metafields
  - name: Images
  - name: Sort Order
paths:
  '/catalog/categories':
    get:
      tags:
        - Categories
      summary: Get All Categories
      description: Returns a list of *Categories*. Optional filter parameters can be passed in.
      operationId: getCategories
      parameters:
        - name: id
          in: query
          description: |
            Filter items by id.
          schema:
            type: integer
        - name: 'id:in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:not_in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:min'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:max'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:greater'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:less'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: name
          in: query
          description: |
            Filter items by name.
          schema:
            type: string
        - name: 'name:like'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: parent_id
          in: query
          description: 'Filter items by parent_id. If the category is a child or sub category it can be filtered with the parent_id. '
          schema:
            type: integer
        - name: 'parent_id:in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'parent_id:min'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'parent_id:max'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'parent_id:greater'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'parent_id:less'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: page_title
          in: query
          description: |
            Filter items by page_title.
          schema:
            type: string
        - name: 'page_title:like'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: keyword
          in: query
          description: 'Filter items by keywords. eg. new, towel, bath'
          schema:
            type: string
        - name: is_visible
          in: query
          description: 'Filter items by if visible on the storefront. '
          schema:
            type: boolean
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Category Base
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
              example:
                data:
                  - id: 19
                    parent_id: 0
                    name: Garden
                    description: <p>This is the garden description</p>
                    views: 0
                    sort_order: 2
                    page_title: page title
                    meta_keywords:
                      - meta keyword
                    meta_description: meta description
                    layout_file: category.html
                    image_url: ''
                    is_visible: true
                    search_keywords: search keywords
                    default_product_sort: use_store_settings
                    custom_url:
                      url: /garden/
                      is_customized: false
                  - id: 20
                    parent_id: 0
                    name: Publications
                    description: ''
                    views: 0
                    sort_order: 4
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: ''
                    layout_file: category_with_facets.html
                    image_url: ''
                    is_visible: true
                    search_keywords: ''
                    default_product_sort: use_store_settings
                    custom_url:
                      url: /publications/
                      is_customized: false
                  - id: 21
                    parent_id: 0
                    name: Kitchen
                    description: ''
                    views: 0
                    sort_order: 3
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: ''
                    layout_file: category_with_facets.html
                    image_url: ''
                    is_visible: true
                    search_keywords: ''
                    default_product_sort: use_store_settings
                    custom_url:
                      url: /kitchen/
                      is_customized: false
                  - id: 22
                    parent_id: 0
                    name: Utility
                    description: ''
                    views: 0
                    sort_order: 5
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: ''
                    layout_file: category_with_facets.html
                    image_url: ''
                    is_visible: true
                    search_keywords: ''
                    default_product_sort: use_store_settings
                    custom_url:
                      url: /utility/
                      is_customized: false
                  - id: 23
                    parent_id: 0
                    name: Shop All
                    description: ''
                    views: 0
                    sort_order: 0
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: ''
                    layout_file: category_with_facets.html
                    image_url: ''
                    is_visible: true
                    search_keywords: ''
                    default_product_sort: use_store_settings
                    custom_url:
                      url: /shop-all/
                      is_customized: false
                  - id: 39
                    parent_id: 19
                    name: Bath
                    description: ''
                    views: 0
                    sort_order: 0
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: ''
                    layout_file: category.html
                    image_url: ''
                    is_visible: true
                    search_keywords: ''
                    default_product_sort: use_store_settings
                    custom_url:
                      url: /garden/bath/
                      is_customized: false
                meta:
                  pagination:
                    total: 6
                    count: 6
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
    post:
      tags:
        - Categories
      summary: Create a Category
      description: "Creates a *Category*.\n\nUse this endpoint when an API only works with categories of a default BigCommerce storefront (`channel_id=1`). \n\nUse the [Create Categories](/docs/rest-catalog/category-trees/categories#create-categories) endpoint when an API works with categories across different category trees that belong to different storefront channels.\n\n**Required Fields**:\n- `parent_id`: \n\t- To create a child category, set the `parent_id` to the parent category.\n\t- To create a top level category, set the `parent_id` to `0`.\n- `name`\n\n**Read-Only Fields**:\n- `id`\n\n**Limits**:\n- 16,000 categories per store limit.\n- 1,000 categories per product limit.\n- 50 characters category name length.\n- 8 levels of category depth limit.\n- 65,642 characters category description length limit."
      operationId: createCategory
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Category
              type: object
              description: Common Category object properties.
              properties:
                parent_id:
                  type: integer
                  description: |-
                    The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.
                    Required in a POST if creating a child category.
                  example: 2
                  x-required:
                    - post
                name:
                  maxLength: 50
                  minLength: 1
                  type: string
                  description: |-
                    The name displayed for the category. Name is unique with respect to the category's siblings.
                    Required in a POST.
                  example: Bath
                  x-required:
                    - post
                description:
                  type: string
                  description: |
                    The product description, which can include HTML formatting.
                  example: <p>We offer a wide variety of products perfect for relaxing</p>
                views:
                  type: integer
                  description: |
                    Number of views the category has on the storefront.
                  example: 1050
                sort_order:
                  maximum: 2147483647
                  minimum: -2147483648
                  type: integer
                  description: |
                    Priority this category will be given when included in the menu and category pages. The lower the number, the closer to the top of the results the category will be.
                  example: 3
                page_title:
                  maxLength: 255
                  minLength: 0
                  type: string
                  description: |
                    Custom title for the category page. If not defined, the category name will be used as the meta title.
                  example: Bath
                search_keywords:
                  maxLength: 255
                  minLength: 0
                  type: string
                  description: |
                    A comma-separated list of keywords that can be used to locate the category when searching the store.
                meta_keywords:
                  type: array
                  description: |
                    Custom meta keywords for the category page. If not defined, the store's default keywords will be used. Must post as an array like: ["awesome","sauce"].
                  items:
                    type: string
                meta_description:
                  maxLength: 65535
                  minLength: 0
                  type: string
                  description: |
                    Custom meta description for the category page. If not defined, the store's default meta description will be used.
                layout_file:
                  maxLength: 500
                  minLength: 0
                  type: string
                  description: |
                    A valid layout file. (Please refer to [this article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/) on creating category files.) This field is writable only for stores with a Blueprint theme applied. For stores with a Stencil theme applied, see [Custom Template Associations](/docs/rest-content/custom-template-associations).
                  example: category.html
                is_visible:
                  type: boolean
                  description: |
                    Flag to determine whether the category should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.
                default_product_sort:
                  type: string
                  description: |
                    Determines how the products are sorted on category page load.
                  enum:
                    - use_store_settings
                    - featured
                    - newest
                    - best_selling
                    - alpha_asc
                    - alpha_desc
                    - avg_customer_review
                    - price_asc
                    - price_desc
                image_url:
                  type: string
                  description: |
                    Image URL used for this category on the storefront. Images can be uploaded via form file post to `/categories/{categoryId}/image`, or by providing a publicly accessible URL in this field. An image extension like .jpg or .png is required.
                  example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
                  x-url: true
                custom_url:
                  title: Custom Url Category
                  type: object
                  description: The custom URL for the category on the storefront.
                  properties:
                    url:
                      maxLength: 255
                      minLength: 0
                      type: string
                      description: |
                        Category URL on the storefront.
                      example: /shoes
                      x-required:
                        - post
                        - put
                      x-url: true
                    is_customized:
                      type: boolean
                      description: |
                        Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).
                      x-required:
                        - post
                        - put
              required:
                - parent_id
                - name
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Category Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/category_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
        '207':
          description: 'Multiple operations have taken place and the status for each operation can be viewed in the body of the response. Typically indicates that a partial failure has occured, such as when a `POST` or `PUT` request is successful, but saving the URL has failed.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_Base'
        '409':
          description: |
            The `Category` was in conflict with another category. This is the result of duplicate unique values, such as `name` or `custom_url`.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `Category` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: category
    delete:
      tags:
        - Categories
      summary: Delete Categories
      description: |-
        Deletes *Category* objects. At least one filter parameter is required to perform the `DELETE` operation.

        **Usage Notes**

        - Sending a `DELETE`request without specifying a filter parameter will result in a `422` error. 
        - Sending a `DELETE` request for a category that contains products will result in a `422` error. Move products to a new category by sending a `PUT` request to the `/catalog/products/{product_id}` endpoint before deleting a category.
      operationId: deleteCategories
      parameters:
        - name: id
          in: query
          description: Filter items by id.
          schema:
            type: integer
        - name: 'id:in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:not_in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:min'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:max'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:greater'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:less'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: name
          in: query
          description: |
            Filter items by name.
          schema:
            type: string
        - name: parent_id
          in: query
          description: 'Filter items by parent_id. If the category is a child or sub category it can be filtered with the parent_id. '
          schema:
            type: integer
        - name: page_title
          in: query
          description: |
            Filter items by page_title.
          schema:
            type: string
        - name: keyword
          in: query
          description: 'Filter items by keywords. eg. new, towel, bath'
          schema:
            type: string
        - name: is_visible
          in: query
          description: 'Filter items by if visible on the storefront. '
          schema:
            type: boolean
        - name: 'name:like'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: 'parent_id:in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'parent_id:min'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'parent_id:max'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'parent_id:greater'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'parent_id:less'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'page_title:like'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
  '/catalog/categories/{category_id}':
    get:
      tags:
        - Categories
      summary: Get a Category
      description: Returns a single *Category*. Optional parameters can be passed in.
      operationId: getCategoryById
      parameters:
        - name: category_id
          in: path
          description: |
            The ID of the `Category` to which the resource belongs.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Category Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/category_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Categories
      summary: Update a Category
      description: |-
        Updates a *Category*.

        **Required Fields**
        * none

        **Read-Only Fields**
        - id
      operationId: updateCategory
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: category_id
          in: path
          description: |
            The ID of the `Category` to which the resource belongs.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              title: Category
              type: object
              description: Common Category object properties.
              properties:
                id:
                  type: integer
                  description: |-
                    Unique ID of the *Category*. Increments sequentially.
                    Read-Only.
                  readOnly: true
                parent_id:
                  type: integer
                  description: |-
                    The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.
                    Required in a POST if creating a child category.
                  example: 2
                  x-required:
                    - post
                name:
                  maxLength: 50
                  minLength: 1
                  type: string
                  description: |-
                    The name displayed for the category. Name is unique with respect to the category's siblings.
                    Required in a POST.
                  example: Bath
                  x-required:
                    - post
                description:
                  type: string
                  description: |
                    The product description, which can include HTML formatting.
                  example: <p>We offer a wide variety of products perfect for relaxing</p>
                views:
                  type: integer
                  description: |
                    Number of views the category has on the storefront.
                  example: 1050
                sort_order:
                  maximum: 2147483647
                  minimum: -2147483648
                  type: integer
                  description: |
                    Priority this category will be given when included in the menu and category pages. The lower the number, the closer to the top of the results the category will be.
                  example: 3
                page_title:
                  maxLength: 255
                  minLength: 0
                  type: string
                  description: |
                    Custom title for the category page. If not defined, the category name will be used as the meta title.
                  example: Bath
                search_keywords:
                  maxLength: 255
                  minLength: 0
                  type: string
                  description: |
                    A comma-separated list of keywords that can be used to locate the category when searching the store.
                meta_keywords:
                  type: array
                  description: |
                    Custom meta keywords for the category page. If not defined, the store's default keywords will be used. Must post as an array like: ["awesome","sauce"].
                  items:
                    type: string
                meta_description:
                  maxLength: 65535
                  minLength: 0
                  type: string
                  description: |
                    Custom meta description for the category page. If not defined, the store's default meta description will be used.
                layout_file:
                  maxLength: 500
                  minLength: 0
                  type: string
                  description: |
                    A valid layout file. (Please refer to [this article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/) on creating category files.) This field is writable only for stores with a Blueprint theme applied. For stores with a Stencil theme applied, see [Custom Template Associations](/docs/rest-content/custom-template-associations).
                  example: category.html
                is_visible:
                  type: boolean
                  description: |
                    Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.
                default_product_sort:
                  type: string
                  description: |
                    Determines how the products are sorted on category page load.
                  enum:
                    - use_store_settings
                    - featured
                    - newest
                    - best_selling
                    - alpha_asc
                    - alpha_desc
                    - avg_customer_review
                    - price_asc
                    - price_desc
                image_url:
                  type: string
                  description: |
                    Image URL used for this category on the storefront. Images can be uploaded via form file post to `/categories/{categoryId}/image`, or by providing a publicly accessible URL in this field. An image extension like .jpg or .png is required.
                  example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
                  x-url: true
                custom_url:
                  title: Custom Url Category
                  type: object
                  description: The custom URL for the category on the storefront.
                  properties:
                    url:
                      maxLength: 255
                      minLength: 0
                      type: string
                      description: |
                        Category URL on the storefront.
                      example: /shoes
                      x-required:
                        - post
                        - put
                      x-url: true
                    is_customized:
                      type: boolean
                      description: |
                        Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).
                      x-required:
                        - post
                        - put
              required:
                - parent_id
                - name
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Category Response
                type: object
                properties:
                  data:
                    title: Category
                    type: object
                    description: Common Category object properties.
                    properties:
                      id:
                        type: integer
                        description: |-
                          Unique ID of the *Category*. Increments sequentially.
                          Read-Only.
                        readOnly: true
                      parent_id:
                        type: integer
                        description: |-
                          The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.
                          Required in a POST if creating a child category.
                        example: 2
                        x-required:
                          - post
                      name:
                        maxLength: 50
                        minLength: 1
                        type: string
                        description: |-
                          The name displayed for the category. Name is unique with respect to the category's siblings.
                          Required in a POST.
                        example: Bath
                        x-required:
                          - post
                      description:
                        type: string
                        description: |
                          The product description, which can include HTML formatting.
                        example: <p>We offer a wide variety of products perfect for relaxing</p>
                      views:
                        type: integer
                        description: |
                          Number of views the category has on the storefront.
                        example: 1050
                      sort_order:
                        maximum: 2147483647
                        minimum: -2147483648
                        type: integer
                        description: |
                          Priority this category will be given when included in the menu and category pages. The lower the number, the closer to the top of the results the category will be.
                        example: 3
                      page_title:
                        maxLength: 255
                        minLength: 0
                        type: string
                        description: |
                          Custom title for the category page. If not defined, the category name will be used as the meta title.
                        example: Bath
                      search_keywords:
                        maxLength: 255
                        minLength: 0
                        type: string
                        description: |
                          A comma-separated list of keywords that can be used to locate the category when searching the store.
                      meta_keywords:
                        type: array
                        description: |
                          Custom meta keywords for the category page. If not defined, the store's default keywords will be used. Must post as an array like: ["awesome","sauce"].
                        items:
                          type: string
                      meta_description:
                        maxLength: 65535
                        minLength: 0
                        type: string
                        description: |
                          Custom meta description for the category page. If not defined, the store's default meta description will be used.
                      layout_file:
                        maxLength: 500
                        minLength: 0
                        type: string
                        description: |
                          A valid layout file. (Please refer to [this article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/) on creating category files.) This field is writable only for stores with a Blueprint theme applied. For stores with a Stencil theme applied, see [Custom Template Associations](/docs/rest-content/custom-template-associations).
                        example: category.html
                      is_visible:
                        type: boolean
                        description: |
                          Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.
                      default_product_sort:
                        type: string
                        description: |
                          Determines how the products are sorted on category page load.
                        enum:
                          - use_store_settings
                          - featured
                          - newest
                          - best_selling
                          - alpha_asc
                          - alpha_desc
                          - avg_customer_review
                          - price_asc
                          - price_desc
                      image_url:
                        type: string
                        description: |
                          Image URL used for this category on the storefront. Images can be uploaded via form file post to `/categories/{categoryId}/image`, or by providing a publicly accessible URL in this field. An image extension like .jpg or .png is required.
                        example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
                        x-url: true
                      custom_url:
                        title: Custom Url Category
                        type: object
                        description: The custom URL for the category on the storefront.
                        properties:
                          url:
                            maxLength: 255
                            minLength: 0
                            type: string
                            description: |
                              Category URL on the storefront.
                            example: /shoes
                            x-required:
                              - post
                              - put
                            x-url: true
                          is_customized:
                            type: boolean
                            description: |
                              Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).
                            x-required:
                              - post
                              - put
                    required:
                      - parent_id
                      - name
                  meta:
                    title: Meta
                    type: object
                    description: Empty meta object; may be used later.
        '207':
          $ref: '#/components/responses/General207Status'
        '404':
          description: The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '409':
          description: 'The `Category` was in conflict with another category. This is the result of duplicate unique values, such as `name` or `custom_url`.'
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: 'The `Category` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.'
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: category
    delete:
      tags:
        - Categories
      summary: Delete a Category
      description: Deletes a *Category*.
      operationId: deleteCategoryById
      parameters:
        - name: category_id
          in: path
          description: |
            The ID of the `Category` to which the resource belongs.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/CategoryIdParam'
  '/catalog/categories/{category_id}/metafields':
    get:
      tags:
        - Metafields
      summary: Get All Category Metafields
      description: Returns a list of *Metafields* on a *Category*. Optional filter parameters can be passed in.
      operationId: getCategoryMetafieldsByCategoryId
      parameters:
        - name: category_id
          in: path
          description: |
            The ID of the `Category` to which the resource belongs.
          required: true
          schema:
            type: integer

        - name: id
          in: query
          description: |
            Filter items by id.
          schema:
            type: integer
        - name: 'id:in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:not_in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:min'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:max'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:greater'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:less'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: key
          in: query
          description: |
            Filter based on a metafield's key.
          schema:
            type: string
        - name: namespace
          in: query
          description: Filter based on a metafield's namespace.
          schema:
            type: string
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Meta Field Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
              example:
                data:
                  - id: 6
                    key: Location
                    value: 4HG
                    namespace: Warehouse Locations
                    permission_set: app_only
                    resource_type: category
                    resource_id: 111
                    description: Location in the warehouse
                    date_created: '1973-01-20T21:34:57.903Z'
                    date_modified: '1990-12-30T00:29:23.515Z'
                  - id: 7
                    key: Location
                    value: 4HG
                    namespace: Warehouse Locations
                    permission_set: read
                    resource_type: category
                    resource_id: 111
                    description: Location in the warehouse
                    date_created: '1973-01-20T21:34:57.903Z'
                    date_modified: '1990-12-30T00:29:23.515Z'
                meta:
                  pagination:
                    total: 2
                    count: 2
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    post:
      tags:
        - Metafields
      summary: Create a Category Metafield
      description: |-
        Creates a *Category Metafield*.

        **Required Fields:**
        - permission_set
        - namespace
        - key
        - value

        **Read-Only Fields**
        - id

        **Note:** The maxiumum number of metafields allowed on each order, product, category, variant, or brand is 250 per client ID. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in the Help Center.
      operationId: createCategoryMetafield
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: category_id
          in: path
          description: |
            The ID of the `Category` to which the resource belongs.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Base'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Metafield Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 4
                  key: location_id
                  value: 'Shelf 3, Bin 5'
                  namespace: App Namespace
                  permission_set: app_only
                  resource_type: category
                  resource_id: 137
                  description: Where products are located
                  date_created: '2021-08-06T19:15:35+00:00'
                  date_modified: '2021-08-06T19:15:35+00:00'
                meta: {}
        '409':
          description: |
            The `Metafield` was in conflict with another `Metafield`. This can be the result of duplicate, unique key combinations of the app's client id, namespace, key, resource_type, and resource_id.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `Metafield` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: Metafield
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/CategoryIdParam'
  '/catalog/categories/{category_id}/metafields/{metafield_id}':
    get:
      tags:
        - Metafields
      summary: Get a Category Metafield
      description: Returns a single *Category Metafield*. Optional parameters can be passed in.
      operationId: getCategoryMetafieldByCategoryId
      parameters:
        - name: metafield_id
          in: path
          description: |
            The ID of the `Metafield`.
          required: true
          schema:
            type: integer
        - name: category_id
          in: path
          description: |
            The ID of the `Category` to which the resource belongs.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Metafield Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 4
                  key: location_id
                  value: 'Shelf 3, Bin 5'
                  namespace: App Namespace
                  permission_set: app_only
                  resource_type: category
                  resource_id: 137
                  description: Where products are located
                  date_created: '2021-08-06T19:15:35+00:00'
                  date_modified: '2021-08-06T19:15:35+00:00'
                meta: {}
        '404':
          description: The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Metafields
      summary: Update a Category Metafield
      description: "Updates a *Category Metafield*.\n\n**Required Fields**\n* none\n\n**Read-Only Fields**\n* id\n* These fields can only be modified by the app (API credentials) that created the metafield:\n\t* namespace\n\t* key\n\t* permission_set\n\n**Usage Notes**\n* Attempting to modify `namespace`, `key`, and `permission_set` fields using a client ID different from the one used to create those metafields will result in a 403 error message. "
      operationId: updateCategoryMetafield
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: metafield_id
          in: path
          description: |
            The ID of the `Metafield`.
          required: true
          schema:
            type: integer
        - name: category_id
          in: path
          description: |
            The ID of the `Category` to which the resource belongs.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Base'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Metafield Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 4
                  key: location_id
                  value: 'Shelf 3, Bin 5'
                  namespace: App Namespace
                  permission_set: app_only
                  resource_type: category
                  resource_id: 137
                  description: Where products are located
                  date_created: '2021-08-06T19:15:35+00:00'
                  date_modified: '2021-08-06T19:15:35+00:00'
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
      x-codegen-request-body-name: Metafield
    delete:
      tags:
        - Metafields
      summary: Delete a Category Metafield
      description: Deletes a *Category Metafield*.
      operationId: deleteCategoryMetafieldById
      parameters:
        - name: metafield_id
          in: path
          description: |
            The ID of the `Metafield`.
          required: true
          schema:
            type: integer
        - name: category_id
          in: path
          description: |
            The ID of the `Category` to which the resource belongs.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/CategoryIdParam'
      - $ref: '#/components/parameters/MetafieldIdParam'
  '/catalog/categories/{category_id}/image':
    post:
      tags:
        - Images
      summary: Create a Category Image
      description: |-
        Create a *Category Image*.

         **Required Fields**
        - image_file: Form posts are the only accepted upload option.

        Only one image at a time can be created.
        Limit image size to 1MB.
        To update a *Category Image*, use the [Update categories](/docs/rest-catalog/category-trees/categories#update-categories) endpoint and an `image_url`.
      operationId: createCategoryImage
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: category_id
          in: path
          description: |
            The ID of the `Category` to which the resource belongs.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image_file:
                  type: string
                  format: binary
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      image_url:
                        type: string
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/product_images/k/group_1545334669__76009.png'
                meta: {}
        '400':
          description: Bad Request. The requested resource could not be downloaded and may be invalid. Possible reasons include malformed request syntax or the file host blocking requests.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '422':
          description: |
            Image was not valid. This is the result of a missing `image_file` field or an incorrect file type. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
    delete:
      tags:
        - Images
      summary: Delete a Category Image
      description: Deletes a *Cateogory Image*.
      operationId: deleteCategoryImage
      parameters:
        - name: category_id
          in: path
          description: |
            The ID of the `Category` to which the resource belongs.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/CategoryIdParam'
  '/catalog/categories/{category_id}/products/sort-order':
    get:
      tags:
        - Sort Order
      summary: Get Product Sort Order
      description: |-
        Returns a list of products and their sort order for a specific category.

        **Usage Notes**
        * Data pairs are displayed in ascending order based on products' `sort_order` values.
        * `null` values are allowed for products without specified `sort_order` values.
        * Products with `sort_order` value of `null` will be displayed after products with valid numerical values.
        * The priorities for determining product sort order on a storefront are the following:
          - Priority 1: Manually specified sort order on Category Level (API).
          - Priority 2: Manually specified sort order on Product (Global) Level (UI/API).
          - Priority 3: Default sorting by Product ID (newly added products go first) (UI/API).
      operationId: getsortorders
      parameters:
        - name: category_id
          in: path
          description: The ID of the `Category` to which the resource belongs.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '404':
          description: The requested category was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_Base'
    put:
      tags:
        - Sort Order
      summary: Update Product Sort Order
      description: Updates sort order of products within a specific category.
      operationId: updatesortorder
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: category_id
          in: path
          description: The ID of the `Category` to which the resource belongs.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/productSortOrder'
        required: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/productSortOrder'
        '404':
          description: The requested category was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_Base'
        '422':
          description: |-
            Unprocessable entity.

            Please verify if all requested products are assigned to the category.

            Please verify if all required fields are present in the request body and are filled with values correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_Base'
      x-codegen-request-body-name: body
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/CategoryIdParam'
components:
  schemas:
    category_Full:
      title: category_Full
      type: object
      description: Common Category object properties.
      x-internal: false
      properties:
        id:
          type: integer
          description: |-
            Unique ID of the *Category*. Increments sequentially.
            Read-Only.
          readOnly: true
        parent_id:
          type: integer
          description: |-
            The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.
            Required in a POST if creating a child category.
          example: 2
          x-required:
            - post
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: |-
            The name displayed for the category. Name is unique with respect to the category's siblings.
            Required in a POST.
          example: Bath
          x-required:
            - post
        description:
          type: string
          description: |
            The product description, which can include HTML formatting.
          example: <p>We offer a wide variety of products perfect for relaxing</p>
        views:
          type: integer
          description: |
            Number of views the category has on the storefront.
          example: 1050
        sort_order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: |
            Priority this category will be given when included in the menu and category pages. The lower the number, the closer to the top of the results the category will be.
          example: 3
        page_title:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            Custom title for the category page. If not defined, the category name will be used as the meta title.
          example: Bath
        search_keywords:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            A comma-separated list of keywords that can be used to locate the category when searching the store.
        meta_keywords:
          type: array
          description: |
            Custom meta keywords for the category page. If not defined, the store's default keywords will be used. Must post as an array like: ["awesome","sauce"].
          items:
            type: string
        meta_description:
          maxLength: 65535
          minLength: 0
          type: string
          description: |
            Custom meta description for the category page. If not defined, the store's default meta description will be used.
        layout_file:
          maxLength: 500
          minLength: 0
          type: string
          description: |
            A valid layout file. (Please refer to [this article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/) on creating category files.) This field is writable only for stores with a Blueprint theme applied. For stores with a Stencil theme applied, see [Custom Template Associations](/docs/rest-content/custom-template-associations).
          example: category.html
        is_visible:
          type: boolean
          description: |
            Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.
        default_product_sort:
          type: string
          description: |
            Determines how the products are sorted on category page load.
          enum:
            - use_store_settings
            - featured
            - newest
            - best_selling
            - alpha_asc
            - alpha_desc
            - avg_customer_review
            - price_asc
            - price_desc
        image_url:
          type: string
          description: |
            Image URL used for this category on the storefront. Images can be uploaded via form file post to `/categories/{categoryId}/image`, or by providing a publicly accessible URL in this field. An image extension like .jpg or .png is required.
          example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
          x-url: true
        custom_url:
          $ref: '#/components/schemas/customUrl_Full'
      required:
        - parent_id
        - name
    metafield_Base:
      title: metafield_Base
      type: object
      description: 'Metafield for products, categories, variants, and brands; the max number of metafields allowed on each is 50. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in the Help Center.'
      x-internal: false
      properties:
        key:
          maxLength: 64
          minLength: 1
          type: string
          description: |
            The name of the field, for example: `location_id`, `color`. Required for POST.
          example: Location
          x-required:
            - post
        value:
          maxLength: 65535
          minLength: 1
          type: string
          description: |
            The value of the field, for example: `1`, `blue`. Required for POST.
          example: 4HG
          x-required:
            - post
        namespace:
          maxLength: 64
          minLength: 1
          type: string
          description: |
            Namespace for the metafield, for organizational purposes. This is set by the developer. Required for POST.
          example: Warehouse Locations
          x-required:
            - post
        permission_set:
          type: string
          description: |-
            Determines the visibility and writeability of the field by other API consumers.

            |Value|Description
            |-|-|
            |`app_only`|Private to the app that owns the field|
            |`read`|Visible to other API consumers|
            |`write`|Open for reading and writing by other API consumers|
            |`read_and_sf_access`|Visible to other API consumers, including on storefront|
            |`write_and_sf_access`|Open for reading and writing by other API consumers, including on storefront|
          enum:
            - app_only
            - read
            - write
            - read_and_sf_access
            - write_and_sf_access
        description:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            Description for the metafields.
          example: Location in the warehouse
      required:
        - permission_set
        - namespace
        - key
        - value
    customUrl_Full:
      title: customUrl_Full
      type: object
      properties:
        url:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            Product URL on the storefront.
          x-required:
            - post
            - put
          x-url: true
        is_customized:
          type: boolean
          description: |
            Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).
          x-required:
            - post
            - put
      description: The custom URL for the product on the storefront.
      x-internal: false
    metaCollection_Full:
      title: metaCollection_Full
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/pagination_Full'
      description: 'Data about the response, including pagination and collection totals.'
      x-internal: false
    pagination_Full:
      title: pagination_Full
      type: object
      properties:
        total:
          type: integer
          description: |
            Total number of items in the result set.
          example: 36
        count:
          type: integer
          description: |
            Total number of items in the collection response.
          example: 36
        per_page:
          type: integer
          description: |
            The amount of items returned in the collection per page, controlled by the limit parameter.
          example: 50
        current_page:
          type: integer
          description: |
            The page you are currently on within the collection.
          example: 1
        total_pages:
          type: integer
          description: |
            The total number of pages in the collection.
          example: 1
        links:
          type: object
          properties:
            previous:
              type: string
              description: |
                Link to the previous page returned in the response.
            current:
              type: string
              description: |
                Link to the current page returned in the response.
              example: '?page=1&limit=50'
            next:
              type: string
              description: |
                Link to the next page returned in the response.
          description: |
            Pagination links for the previous and next parts of the whole collection.
      description: 'Data about the response, including pagination and collection totals.'
      x-internal: false
    metaEmpty_Full:
      type: object
      title: Response meta
      properties: {}
      additionalProperties: true
      description: Response metadata.
    error_Base:
      title: error_Base
      type: object
      properties:
        status:
          type: integer
          description: |
            The HTTP status code.
        title:
          type: string
          description: |
            The error title describing the particular error.
        type:
          type: string
        instance:
          type: string
      description: |
        Error payload for the BigCommerce API.
      x-internal: false
    metafield_Full:
      title: metafield_Full
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: Unique ID of the *Metafield*. Read-Only.
              readOnly: true
              example: 6
        - $ref: '#/components/schemas/metafield_Base'
        - type: object
          properties:
            resource_type:
              type: string
              description: |
                The type of resource with which the metafield is associated.
              example: product
              enum:
                - category
                - brand
                - product
                - variant
              x-required:
                - post
            resource_id:
              maximum: 10000000000
              minimum: 0
              type: integer
              description: |
                The ID of the resource with which the metafield is associated.
              example: 111
              x-required:
                - post
            date_created:
              type: string
              description: |
                Date and time of the metafield's creation. Read-Only.
              readOnly: true
              format: date-time
              example: '2018-05-07T20:14:17+00:00'
            date_modified:
              type: string
              description: |
                Date and time when the metafield was last updated. Read-Only.
              readOnly: true
              format: date-time
              example: '2018-05-07T20:14:17+00:00'
      x-internal: false
    productSortOrder:
      title: productSortOrder
      required:
        - product_id
        - sort_order
      type: object
      properties:
        product_id:
          minimum: 1
          type: integer
          description: The ID of the associated product.
          example: 99
        sort_order:
          minimum: 0
          type: integer
          example: 4
      description: The relative priority of the product among other products inside the category.
      x-internal: false
    Category:
      x-tags:
        - Models
      title: Category
      allOf:
        - $ref: '#/components/schemas/id'
        - $ref: '#/components/schemas/parent_id'
        - $ref: '#/components/schemas/name'
        - $ref: '#/components/schemas/description'
        - $ref: '#/components/schemas/views'
        - $ref: '#/components/schemas/sort_order'
        - $ref: '#/components/schemas/page_title'
        - $ref: '#/components/schemas/meta_keywords'
        - $ref: '#/components/schemas/meta_description'
        - $ref: '#/components/schemas/layout_file'
        - $ref: '#/components/schemas/image_url'
        - $ref: '#/components/schemas/is_visible'
        - $ref: '#/components/schemas/search_keywords'
        - $ref: '#/components/schemas/default_product_sort'
        - type: object
          properties:
            custom_url:
              $ref: '#/components/schemas/Url'
      x-examples: {}
    Url:
      type: object
      properties:
        url:
          type: string
        is_customized:
          type: boolean
      x-tags:
        - Models
    default_product_sort:
      title: default_product_sort
      type: object
      properties:
        default_product_sort:
          type: string
          description: |
            Determines how the products are sorted on category page load.
          enum:
            - use_store_settings
            - featured
            - newest
            - best_selling
            - alpha_asc
            - alpha_desc
            - avg_customer_review
            - price_asc
            - price_desc
    name:
      title: name
      type: object
      properties:
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: |-
            The name displayed for the category. Name is unique with respect to the category's siblings.
            Required in a POST.
          example: Bath
    description:
      title: description
      type: object
      properties:
        description:
          type: string
          description: |
            The product description, which can include HTML formatting.
          example: <p>We offer a wide variety of products perfect for relaxing</p>
    views:
      title: views
      type: object
      properties:
        views:
          type: integer
          description: |
            Number of views the category has on the storefront.
          example: 1050
    sort_order:
      title: sort_order
      type: object
      properties:
        sort_order:
          type: integer
          description: |
            Priority this category will be given when included in the menu and category pages. The lower the number, the closer to the top of the results the category will be.
          example: 3
    page_title:
      title: page_title
      type: object
      properties:
        page_title:
          type: string
          description: |
            Custom title for the category page. If not defined, the category name will be used as the meta title.
          example: Bath
    search_keywords:
      title: search_keywords
      type: object
      properties:
        search_keywords:
          type: string
          description: |
            A comma-separated list of keywords that can be used to locate the category when searching the store.
    meta_keywords:
      title: meta_keywords
      type: object
      properties:
        meta_keywords:
          type: array
          description: |
            Custom meta keywords for the category page. If not defined, the store's default keywords will be used. Must post as an array like: ["awesome","sauce"].
          items:
            type: string
    layout_file:
      title: layout_file
      type: object
      properties:
        layout_file:
          maxLength: 500
          minLength: 0
          type: string
          description: |
            A valid layout file. (Please refer to [this article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/) on creating category files.) This field is writable only for stores with a Blueprint theme applied.
          example: category.html
    is_visible:
      title: is_visible
      type: object
      properties:
        is_visible:
          type: boolean
          description: |
            Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.
    image_url:
      title: image_url
      type: object
      properties:
        image_url:
          type: string
          description: |
            Image URL used for this category on the storefront. Images can be uploaded via form file post to `/categories/{categoryId}/image`, or by providing a publicly accessible URL in this field. An image extension like .jpg or .png is required.
          example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
          x-url: true
    meta_description:
      title: meta_description
      type: object
      properties:
        meta_description:
          maxLength: 65535
          minLength: 0
          type: string
          description: |
            Custom meta description for the category page. If not defined, the store's default meta description will be used.
    id:
      title: id
      type: object
      properties:
        id:
          type: integer
          description: |-
            Unique ID of the *Category*. Increments sequentially.
            Read-Only.
          readOnly: true
    parent_id:
      title: parent_id
      type: object
      properties:
        parent_id:
          type: integer
          description: |-
            The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.
            Required in a POST if creating a child category.
          example: 2
  responses:
    General207Status:
      description: 'Multi-status. Multiple operations have taken place and the status for each operation can be viewed in the body of the response. Typically indicates that a partial failure has occured, such as when a `POST` or `PUT` request is successful, but saving the URL or inventory data has failed.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Base'
  parameters:
    CategoryIdParam:
      name: category_id
      in: path
      description: |
        The ID of the `Category` to which the resource belongs.
      required: true
      schema:
        type: integer
    MetafieldIdParam:
      name: metafield_id
      in: path
      description: |
        The ID of the `Metafield`.
      required: true
      schema:
        type: integer
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Products | modify | `store_v2_products` |
        |  Products | read-only | `store_v2_products_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header

openapi: '3.0.3'
info:
  title: Catalog - Category Trees
  description: |-
    > The Catalog API manages products, categories, brands, bulk pricing rules, and more. To learn more about catalog resources, see the [Catalog Overview](/api-docs/store-management/catalog/products-overview).

    Our Catalog Category Trees endpoints are the more modern and performant counterparts to the [Categories endpoints](/docs/rest-catalog/categories). Although the Category Trees endpoints and objects are designed to center an MSF-compatible, [multi-tenant category tree architecture](#categories), the endpoints work just as well in a single storefront context.

    The Category Trees endpoints let you [get the Categories for a specific tree](/docs/rest-catalog/category-trees/categories#get-a-category-tree), and [bulk create](/docs/rest-catalog/category-trees/categories#create-categories), [bulk update](/docs/rest-catalog/category-trees/categories#update-categories), and [bulk delete](/docs/rest-catalog/category-trees/categories#delete-categories) Categories. You can also [bulk update the properties of Category Trees](/docs/rest-catalog/category-trees#upsert-category-trees), which includes changing the channels to which a Tree is assigned.

    The terms "category tree" and "catalog tree" are used interchangeably throughout the documentation.

    > To learn more about authenticating Catalog endpoints, locate the **Authentication** section at the top of each endpoint, then click **Show Details**.

    ## Resources

    ### Webhooks
    Learn more about [Category Tree webhook events](/api-docs/channels/guide/webhooks#category-trees).

    ### Additional Catalog endpoints
    * [Brands](/docs/rest-catalog/brands)
    * [Categories](/docs/rest-catalog/categories)
    * [Products](/docs/rest-catalog/products)
    * [Product Modifiers](/docs/rest-catalog/product-modifiers)
    * [Product Variants](/docs/rest-catalog/product-variants)
    * [Product Variant Options](/docs/rest-catalog/product-variant-options)

  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  version: ''
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Category Trees
  - name: Categories
paths:
  '/catalog/trees/categories':
    get:
      summary: Get All Categories
      description: |-
        Returns a list of categories. 

        To get a specific category in a tree, provide a category ID.
      tags:
        - Categories
      parameters:
        - name: 'category_uuid:in'
          in: query
          schema:
            type: string
        - name: 'category_uuid:not_in'
          in: query
          schema:
            type: string
        - name: 'category_id:in'
          in: query
          schema:
            type: string
        - name: 'category_id:not_in'
          in: query
          schema:
            type: string
        - name: 'tree_id:in'
          in: query
          schema:
            type: string
        - name: 'tree_id:not_in'
          in: query
          schema:
            type: string
        - name: 'parent_id:in'
          in: query
          schema:
            type: string
        - name: 'parent_id:not_in'
          in: query
          schema:
            type: string
        - name: name
          in: query
          schema:
            type: string
        - name: 'name:like'
          in: query
          schema:
            type: string
        - name: page_title
          in: query
          schema:
            type: string
        - name: 'page_title:like'
          in: query
          schema:
            type: string
        - name: keyword
          in: query
          schema:
            type: string
        - name: is_visible
          in: query
          schema:
            type: boolean
        - name: page
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
        - name: include_fields
          in: query
          schema:
            type: string
        - name: exclude_fields
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of categories.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
                  meta:
                    $ref: '#/components/schemas/MetaPagination'
              examples:
                example-1:
                  value:
                    data:
                      - id: 0
                        parent_id: 2
                        name: Bath
                        description: <p>We offer a wide variety of products perfect for relaxing</p>
                        views: 1050
                        sort_order: 3
                        page_title: Bath
                        meta_keywords:
                          - string
                        meta_description: string
                        layout_file: category.html
                        image_url: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
                        is_visible: true
                        search_keywords: string
                        default_product_sort: use_store_settings
                        url:
                          path: string
                          is_customized: true
                    meta:
                      pagination:
                        total: 246
                        count: 5
                        per_page: 5
                        current_page: 1
                        total_pages: 50
                        links:
                          previous: '?limit=5&page=1'
                          current: '?limit=5&page=2'
                          next: '?limit=5&page=3'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
      operationId: getAllCategories
    post:
      summary: Create Categories
      description: |-
        Creates new categories. 

        Creating a category requires:
         - `name`
         - `url` 
         - `tree_id` or `parent_id` 
      parameters:
        - $ref: '#/components/parameters/ContentType'
      tags:
        - Categories
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategories'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '207':
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialSuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
        '422':
          description: 'The Category was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
      operationId: createCategories
    put:
      summary: Update Categories
      description: |-
        Updates existing categories. 

         To update a specific category in a tree, provide a category id.
      parameters:
        - $ref: '#/components/parameters/ContentType'
      tags:
        - Categories
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCategories'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessNoContentResponse'
        '207':
          description: Partial success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialSuccessNoContentResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
        '422':
          description: 'The Category was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
      operationId: updateCategories
    delete:
      summary: Delete Categories
      description: |-
        Deletes categories. 

        To delete a specific category in a tree, provide a category ID.
      tags:
        - Categories
      parameters:
        - name: 'category_uuid:in'
          in: query
          schema:
            type: string
        - name: 'category_id:in'
          in: query
          schema:
            type: string
        - name: 'tree_id:in'
          in: query
          schema:
            type: string
        - name: 'parent_id:in'
          in: query
          schema:
            type: string
      responses:
        '204':
          description: Categories are deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessNoContentResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
      operationId: deleteTreeCategories
    parameters:
      - $ref: '#/components/parameters/Accept'
  '/catalog/trees':
    get:
      summary: Get All Category Trees
      description: Returns a list of *Category Trees*.
      operationId: GetCategoryTrees
      parameters:
        - name: 'id:in'
          in: query
          schema:
            type: string
        - name: 'channel_id:in'
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of category trees.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tree'
                  meta:
                    $ref: '#/components/schemas/MetaPaginationObject'
              example:
                data:
                  - id: 0
                    name: string
                    channels:
                      - 0
                meta:
                  pagination:
                    total: 246
                    count: 5
                    per_page: 5
                    current_page: 1
                    total_pages: 50
                    links:
                      next: '?limit=5&page=2'
                      current: '?limit=5&page=1'
      tags:
        - Category Trees
    put:
      summary: Upsert Category Trees
      description: |
        Upserts *Category Trees*. 

        This single endpoint updates and creates category trees. If a tree object contains an ID, it is processed as an update operation using that ID. If you do not provide an ID, a new tree is created. The category tree `name` field is required to create trees, but is not required on the update.
        
        **Usage Notes**
        * `channel_id` is required to create a *Category Tree*. You can assign one `channel_id` to one category tree.
      parameters:
        - $ref: '#/components/parameters/ContentType'
      operationId: UpsertCategoryTrees
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Tree_req'
            example:
              - id: 0
                name: string
                channel_ids:
                  - 0
      responses:
        '200':
          description: Created a category tree.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tree'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  - id: 0
                    name: string
                    channels:
                    - 0
                meta: {}
        '422':
          description: The Channel was not valid. See the response for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/beta4ErrorResponse'
              example:
                status: 0
                title: string
                type: string
                instance: string
                errors:
                  additionalProp1: string
                  additionalProp2: string
                  additionalProp3: string
      tags:
        - Category Trees
    delete:
      summary: Delete Category Trees
      description: Deletes *Category Trees*. A filter must be supplied with the endpoint.
      operationId: DeleteCategoryTrees
      parameters:
        - name: 'id:in'
          in: query
          schema:
            type: string
      responses:
        '204':
          description: Deleted
      tags:
        - Category Trees
    parameters:
      - $ref: '#/components/parameters/Accept'
  '/catalog/trees/{tree_id}/categories':
    get:
      summary: Get a Category Tree
      description: Returns a *Category Tree*.
      operationId: GetCategoryTreeByTreeId
      parameters:
        - name: depth
          description: Max depth for a tree of categories.
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Categories tree
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CategoryNode'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  - id: 0
                    parent_id: 0
                    depth: 0
                    path:
                      - 0
                    name: string
                    is_visible: true
                    children:
                      - string
                meta:
                  type: object
                  properties: {}
                  description: Empty meta object; reserved for use later.
        '404':
          description: The tree was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/beta4ErrorResponse'
              example:
                status: 0
                title: string
                type: string
                instance: string
                errors:
                  additionalProp1: string
                  additionalProp2: string
                  additionalProp3: string
      tags:
        - Categories
    parameters:
      - $ref: '#/components/parameters/Accept'
      - schema:
          type: string
        name: tree_id
        in: path
        required: true
components:
  schemas:
    metaEmpty_Full:
      type: object
      title: Response meta
      properties: {}
      additionalProperties: true
      description: Response metadata.
    DetailedErrors:
      title: DetailedErrors
      description: Each key-value pair describes a failure or partial success case.
      type: object
      properties: {}
      additionalProperties: true
      x-internal: false
    CreateCategories:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TreeIdCreateData'
          - $ref: '#/components/schemas/ParentIdCreateData'
          - $ref: '#/components/schemas/CategoryDataPOST'
      x-tags:
        - Models
      title: Create Categories
    UpdateCategories:
      x-tags:
        - Models
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TreeIdUpdateData'
          - $ref: '#/components/schemas/CategoryIdUpdateData'
          - $ref: '#/components/schemas/CategoryUuidData'
          - $ref: '#/components/schemas/ParentIdUpdateData'
          - $ref: '#/components/schemas/CategoryDataPUT'
    Category:
      x-tags:
        - Models
      title: Category
      allOf:
        - $ref: '#/components/schemas/id'
        - $ref: '#/components/schemas/parent_id'
        - $ref: '#/components/schemas/name'
        - $ref: '#/components/schemas/description'
        - $ref: '#/components/schemas/views'
        - $ref: '#/components/schemas/sort_order'
        - $ref: '#/components/schemas/page_title'
        - $ref: '#/components/schemas/meta_keywords'
        - $ref: '#/components/schemas/meta_description'
        - $ref: '#/components/schemas/layout_file'
        - $ref: '#/components/schemas/image_url'
        - $ref: '#/components/schemas/is_visible'
        - $ref: '#/components/schemas/search_keywords'
        - $ref: '#/components/schemas/default_product_sort'
        - type: object
          properties:
            custom_url:
              $ref: '#/components/schemas/Url'
      x-examples: {}
    CategoryUuidData:
      type: object
      x-tags:
        - Models
      properties:
        category_uuid:
          type: string
          format: uuid
      title: category_uuid
    CategoryIdUpdateData:
      type: object
      properties:
        category_id:
          type: integer
      required:
        - category_id
      x-tags:
        - Models
    ParentIdCreateData:
      type: object
      properties:
        parent_id:
          type: integer
      required:
        - parent_id
      x-tags:
        - Models
    TreeIdCreateData:
      type: object
      properties:
        tree_id:
          type: integer
      required:
        - tree_id
      x-tags:
        - Models
    ParentIdUpdateData:
      type: object
      properties:
        parent_id:
          type: integer
      x-tags:
        - Models
    TreeIdUpdateData:
      type: object
      x-tags:
        - Models
      properties:
        tree_id:
          type: integer
      required:
        - tree_id
    CategoryData:
      allOf:
        - type: object
          properties:
            name:
              type: string
            description:
              type: string
            views:
              type: integer
            sort_order:
              type: integer
            page_title:
              type: string
            search_keywords:
              type: string
            meta_keywords:
              type: array
              items:
                type: string
            meta_description:
              type: string
            layout_file:
              type: string
            is_visible:
              type: boolean
            image_url:
              type: string
            custom_url:
              $ref: '#/components/schemas/Url'
    CategoryDataPUT:
      allOf:
        - $ref: '#/components/schemas/CategoryData'
        - $ref: '#/components/schemas/default_product_sort'
    CategoryDataPOST:
      allOf:
        - $ref: '#/components/schemas/CategoryData'
        - $ref: '#/components/schemas/default_product_sort'
      required:
        - name
        - url
    Url:
      type: object
      properties:
        url:
          type: string
        is_customized:
          type: boolean
      x-tags:
        - Models
    MetaPagination:
      type: object
      properties:
        pagination:
          type: object
          properties:
            total:
              type: integer
              example: 246
              minimum: 0
            count:
              type: integer
              example: 5
              minimum: 0
            per_page:
              type: integer
              example: 5
              minimum: 0
            current_page:
              type: integer
              example: 1
              minimum: 1
            total_pages:
              type: integer
              example: 50
              minimum: 0
            links:
              type: object
              properties:
                previous:
                  type: string
                  example: '?limit=5&page=1'
                current:
                  type: string
                  example: '?limit=5&page=2'
                next:
                  type: string
                  example: '?limit=5&page=3'
      x-tags:
        - Models
    ErrorRequest:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorBasic'
      x-tags:
        - Models
    ErrorBasic:
      type: object
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
      x-tags:
        - Models
    ErrorAdditional:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/DetailedErrors'
      x-tags:
        - Models
    MetaError:
      allOf:
        - $ref: '#/components/schemas/ErrorBasic'
        - $ref: '#/components/schemas/ErrorAdditional'
      x-tags:
        - Models
    MetaData:
      type: object
      properties:
        total:
          type: integer
        success:
          type: integer
        failed:
          type: integer
      x-tags:
        - Models
    SuccessNoContentResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/MetaData'
      x-tags:
        - Models
    PartialSuccessNoContentResponse:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/MetaError'
        meta:
          $ref: '#/components/schemas/MetaData'
      x-tags:
        - Models
    PartialSuccessResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        meta:
          $ref: '#/components/schemas/MetaData'
      x-tags:
        - Models
    SuccessResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        errors:
          $ref: '#/components/schemas/MetaError'
        meta:
          $ref: '#/components/schemas/MetaData'
      x-tags:
        - Models
    ErrorResponse:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/MetaError'
        meta:
          $ref: '#/components/schemas/MetaData'
      x-tags:
        - Models
    Tree:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          minLength: 1
          maxLength: 255
        channels:
          type: array
          items:
            type: integer
      x-tags:
        - Models
    Tree_req:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          minLength: 1
          maxLength: 255
        channel_ids:
          type: array
          items:
            type: integer
      x-tags:
        - Models
    CategoryNode:
      type: object
      properties:
        id:
          type: integer
        parent_id:
          type: integer
        depth:
          type: integer
        path:
          type: array
          items:
            type: integer
        name:
          type: string
        is_visible:
          type: boolean
        children:
          type: array
          items:
            $ref: '#/components/schemas/CategoryNode'
      x-tags:
        - Models
    MetaPaginationObject:
      type: object
      properties:
        pagination:
          type: object
          properties:
            total:
              type: integer
              example: 246
              minimum: 0
            count:
              type: integer
              example: 5
              minimum: 0
            per_page:
              type: integer
              example: 5
              minimum: 0
            current_page:
              type: integer
              example: 1
              minimum: 1
            total_pages:
              type: integer
              example: 50
              minimum: 0
            links:
              type: object
              properties:
                next:
                  type: string
                  example: '?limit=5&page=2'
                current:
                  type: string
                  example: '?limit=5&page=1'
      x-tags:
        - Models
    beta4DetailedErrors:
      type: object
      properties: {}
      additionalProperties: true
      x-tags:
        - Models
    BaseError:
      type: object
      description: |
        Error payload for the BigCommerce API.
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
      x-tags:
        - Models
    beta4ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            errors:
              $ref: '#/components/schemas/beta4DetailedErrors'
      x-tags:
        - Models
    default_product_sort:
      title: default_product_sort
      type: object
      properties:
        default_product_sort:
          type: string
          description: |
            Determines how the products are sorted on category page load.
          enum:
            - use_store_settings
            - featured
            - newest
            - best_selling
            - alpha_asc
            - alpha_desc
            - avg_customer_review
            - price_asc
            - price_desc
    name:
      title: name
      type: object
      properties:
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: |-
            The name displayed for the category. Name is unique with respect to the category's siblings.
            Required in a POST.
          example: Bath
    description:
      title: description
      type: object
      properties:
        description:
          type: string
          description: |
            The product description, which can include HTML formatting.
          example: <p>We offer a wide variety of products perfect for relaxing</p>
    views:
      title: views
      type: object
      properties:
        views:
          type: integer
          description: |
            Number of views the category has on the storefront.
          example: 1050
    sort_order:
      title: sort_order
      type: object
      properties:
        sort_order:
          type: integer
          description: |
            Priority this category will be given when included in the menu and category pages. The lower the number, the closer to the top of the results the category will be.
          example: 3
    page_title:
      title: page_title
      type: object
      properties:
        page_title:
          type: string
          description: |
            Custom title for the category page. If not defined, the category name will be used as the meta title.
          example: Bath
    search_keywords:
      title: search_keywords
      type: object
      properties:
        search_keywords:
          type: string
          description: |
            A comma-separated list of keywords that can be used to locate the category when searching the store.
    meta_keywords:
      title: meta_keywords
      type: object
      properties:
        meta_keywords:
          type: array
          description: |
            Custom meta keywords for the category page. If not defined, the store's default keywords will be used. Must post as an array like: ["awesome","sauce"].
          items:
            type: string
    layout_file:
      title: layout_file
      type: object
      properties:
        layout_file:
          maxLength: 500
          minLength: 0
          type: string
          description: |
            A valid layout file. (Please refer to [this article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/) on creating category files.) This field is writable only for stores with a Blueprint theme applied.
          example: category.html
    is_visible:
      title: is_visible
      type: object
      properties:
        is_visible:
          type: boolean
          description: |
            Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.
    image_url:
      title: image_url
      type: object
      properties:
        image_url:
          type: string
          description: |
            Image URL used for this category on the storefront. Images can be uploaded via form file post to `/categories/{categoryId}/image`, or by providing a publicly accessible URL in this field.
          example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
          x-url: true
    meta_description:
      title: meta_description
      type: object
      properties:
        meta_description:
          maxLength: 65535
          minLength: 0
          type: string
          description: |
            Custom meta description for the category page. If not defined, the store's default meta description will be used.
    id:
      title: id
      type: object
      properties:
        id:
          type: integer
          description: |-
            Unique ID of the *Category*. Increments sequentially.
            Read-Only.
          readOnly: true
    parent_id:
      title: parent_id
      type: object
      properties:
        parent_id:
          type: integer
          description: |-
            The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.
            Required in a POST if creating a child category.
          example: 2
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Products | modify | `store_v2_products` |
        |  Products | read-only | `store_v2_products_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header

openapi: '3.0.3'
info:
  title: Catalog - Product Modifiers
  description: |-
    > The Catalog API manages products, categories, brands, bulk pricing rules, and more. To learn more about catalog resources, see the [Catalog Overview](/api-docs/store-management/catalog/products-overview).

    Product Modifiers represent choices that the shopper can make to change how the merchant customizes or adds on to the product. Examples include shipping insurance, monograms, custom inseam length, and a color selection for an unfinished product.

    Modifier values do not change which item is picked in a warehouse, but they change what happens to that item between the warehouse shelf and the shopper taking possession of their order.

    Critically, Modifier values do not change which Product Variant is fulfilled. You cannot track inventory for combinations of Modifier values.

    You can add an adjuster to a Modifier value to override the underlying Product Variant's properties, such as price, weight, and shipping rules.  Not all Modifier types are compatible with adjusters.

    > To learn more about authenticating Catalog endpoints, locate the **Authentication** section at the top of each endpoint, then click **Show Details**.
    
    ## Resources

    ### Webhooks
    Learn more about [Product webhook events](/api-docs/store-management/webhooks/webhook-events#products).

    ### Additional Catalog endpoints
    * [Brands](/docs/rest-catalog/brands)
    * [Categories](/docs/rest-catalog/categories)
    * [Category Trees](/docs/rest-catalog/category-trees)
    * [Products](/docs/rest-catalog/products)
    * [Product Variants](/docs/rest-catalog/product-variants)
    * [Product Variant Options](/docs/rest-catalog/product-variant-options)

  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  version: ''
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Product Modifiers
  - name: Values
  - name: Images
paths:
  '/catalog/products/{product_id}/modifiers':
    get:
      tags:
        - Product Modifiers
      summary: Get All Product Modifiers
      description: Returns a list of all *Product Modifiers*. Optional parameters can be passed in.
      operationId: getModifiers
      parameters:
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Modifier Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/productModifier_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                description: Modifier Collection Response return for /GET All Modifiers.
              example:
                data:
                  - id: 206
                    product_id: 158
                    name: Insurance
                    display_name: Insurace
                    type: checkbox
                    required: true
                    config:
                      checkbox_label: $5 for insurance
                      checked_by_default: false
                    option_values:
                      - id: 183
                        option_id: 206
                        label: 'Yes'
                        sort_order: 0
                        value_data:
                          checked_value: true
                        is_default: false
                        adjusters:
                          price: {}
                          weight: {}
                          image_url: ''
                          purchasing_disabled:
                            status: false
                            message: ''
                      - id: 184
                        option_id: 206
                        label: 'No'
                        sort_order: 1
                        value_data:
                          checked_value: false
                        is_default: true
                        adjusters:
                          price: {}
                          weight: {}
                          image_url: ''
                          purchasing_disabled:
                            status: false
                            message: ''
                meta:
                  pagination:
                    total: 1
                    count: 1
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
    post:
      tags:
        - Product Modifiers
      summary: Create a Product Modifier
      description: |-
        Creates a *Product Modifier*.

        **Required Fields**
        * `required`
        * `display_name`
        * `type`

        **Read-Only Fields**
        * `id`

        **Notes**
        It takes two separate requests to create a new checkbox modifier with option values. Perform a request to create a modifier, then perform a second request to update option values.
      operationId: createModifier
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Modifier Post
              description: The model for a POST to create a modifier on a product.
              allOf:
                - title: Modifier Base
                  required:
                    - required
                    - type
                  type: object
                  properties:
                    type:
                      type: string
                      description: |
                        BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.
                      enum:
                        - date
                        - checkbox
                        - file
                        - text
                        - multi_line_text
                        - numbers_only_text
                        - radio_buttons
                        - rectangles
                        - dropdown
                        - product_list
                        - product_list_with_images
                        - swatch
                      x-required:
                        - post
                    required:
                      type: boolean
                      description: |
                        Whether or not this modifer is required or not at checkout. Required in a /POST.
                      x-required:
                        - post
                    sort_order:
                      type: integer
                      description: The order the modifiers display on the product detail page.
                    config:
                      title: Option Config
                      type: object
                      properties:
                        default_value:
                          type: string
                          description: |
                            (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
                        checked_by_default:
                          type: boolean
                          description: |
                            (checkbox) Flag for setting the checkbox to be checked by default.
                        checkbox_label:
                          type: string
                          description: |
                            (checkbox) Label displayed for the checkbox option.
                        date_limited:
                          type: boolean
                          description: |
                            (date) Flag to limit the dates allowed to be entered on a date option.
                        date_limit_mode:
                          type: string
                          description: |
                            (date) The type of limit that is allowed to be entered on a date option.
                          example: range
                          enum:
                            - earliest
                            - range
                            - latest
                        date_earliest_value:
                          type: string
                          description: |
                            (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                          format: date-time
                          example: '2018-08-31T00:00:00+00:00'
                        date_latest_value:
                          type: string
                          description: |
                            (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                          format: date-time
                          example: '2019-01-01T00:00:00+00:00'
                        file_types_mode:
                          type: string
                          description: |
                            (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
                          example: specific
                          enum:
                            - specific
                            - all
                        file_types_supported:
                          type: array
                          description: |
                            (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
                              `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
                              `other` - Allows file types defined in the `file_types_other` array.
                          example:
                            - images
                            - documents
                            - other
                          items:
                            type: string
                        file_types_other:
                          type: array
                          description: |
                            (file) A list of other file types allowed with the file upload option.
                          example:
                            - pdf
                            - txt
                          items:
                            type: string
                        file_max_size:
                          type: integer
                          description: |
                            (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
                          example: 5
                        text_characters_limited:
                          type: boolean
                          description: |
                            (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
                        text_min_length:
                          type: integer
                          description: |
                            (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
                          example: 1
                        text_max_length:
                          type: integer
                          description: |
                            (text, multi_line_text) The maximum length allowed for a text or multi line text option.
                          example: 55
                        text_lines_limited:
                          type: boolean
                          description: |
                            (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
                          example: true
                        text_max_lines:
                          type: integer
                          description: |
                            (multi_line_text) The maximum number of lines allowed on a multi-line text input.
                          example: 4
                        number_limited:
                          type: boolean
                          description: |
                            (numbers_only_text) Flag to limit the value of a number option.
                          example: true
                        number_limit_mode:
                          type: string
                          description: |
                            (numbers_only_text) The type of limit on values entered for a number option.
                          example: lowest
                          enum:
                            - lowest
                            - highest
                            - range
                        number_lowest_value:
                          type: number
                          description: |
                            (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
                          example: 100
                        number_highest_value:
                          type: number
                          description: |
                            (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
                        number_integers_only:
                          type: boolean
                          description: |
                            (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
                          example: false
                        product_list_adjusts_inventory:
                          type: boolean
                          description: |
                            (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
                        product_list_adjusts_pricing:
                          type: boolean
                          description: |
                            (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
                        product_list_shipping_calc:
                          type: string
                          description: |
                            (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
                          example: weight
                          enum:
                            - none
                            - weight
                            - package
                      description: The values for option config can vary based on the Modifier created.
                    option_values:
                      type: array
                      items:
                        title: Modifier Value
                        type: object
                        description: 'Part of Modifier Value Response '
                        allOf:
                          - title: Modifier Value Base
                            type: object
                            allOf:
                              - title: Option Value Base
                                required:
                                  - label
                                  - sort_order
                                type: object
                                properties:
                                  is_default:
                                    type: boolean
                                    description: |
                                      The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                                    example: false
                                  label:
                                    type: string
                                    description: |
                                      The text display identifying the value on the storefront. Required in a /POST.
                                    example: Green
                                    x-required:
                                      - post
                                  sort_order:
                                    maximum: 2147483647
                                    minimum: -2147483648
                                    type: integer
                                    description: |
                                      The order in which the value will be displayed on the product page. Required in a /POST.
                                    example: 0
                                    x-required:
                                      - post
                                  value_data:
                                    type: object
                                    properties: {}
                                    description: |
                                      Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                                description: Common Option Value properties.
                              - type: object
                                properties:
                                  adjusters:
                                    type: object
                                    properties:
                                      price:
                                        title: Adjuster
                                        type: object
                                        properties:
                                          adjuster:
                                            type: string
                                            description: |
                                              The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                            enum:
                                              - relative
                                              - percentage
                                            x-nullable: true
                                          adjuster_value:
                                            type: number
                                            description: |
                                              The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                            example: 5
                                        description: Adjuster for Complex Rules.
                                      weight:
                                        title: Adjuster
                                        type: object
                                        properties:
                                          adjuster:
                                            type: string
                                            description: |
                                              The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                            enum:
                                              - relative
                                              - percentage
                                            x-nullable: true
                                          adjuster_value:
                                            type: number
                                            description: |
                                              The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                            example: 5
                                        description: Adjuster for Complex Rules.
                                      image_url:
                                        type: string
                                        description: |
                                          The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file.
                                        example: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                                      purchasing_disabled:
                                        type: object
                                        properties:
                                          status:
                                            type: boolean
                                            description: |
                                              Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
                                          message:
                                            type: string
                                            description: |
                                              The message displayed on the storefront when the purchasing disabled status is `true`.
                          - type: object
                            properties:
                              id:
                                type: integer
                                description: |
                                  The unique numeric ID of the value; increments sequentially.
                  description: Common Modifier properties.
                - required:
                    - display_name
                  type: object
                  properties:
                    display_name:
                      type: string
                      description: |
                        The name of the option shown on the storefront.
                      example: Donation
                      x-required:
                        - post
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Modifier Response
                type: object
                properties:
                  data:
                    title: Modifer
                    type: object
                    description: Product Modifier
                    allOf:
                      - title: Modifier Base
                        required:
                          - required
                          - type
                        type: object
                        properties:
                          type:
                            type: string
                            description: |
                              BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.
                            enum:
                              - date
                              - checkbox
                              - file
                              - text
                              - multi_line_text
                              - numbers_only_text
                              - radio_buttons
                              - rectangles
                              - dropdown
                              - product_list
                              - product_list_with_images
                              - swatch
                            x-required:
                              - post
                          required:
                            type: boolean
                            description: |
                              Whether or not this modifer is required or not at checkout. Required in a /POST.
                            x-required:
                              - post
                          sort_order:
                            type: integer
                            description: The order the modifiers display on the product detail page.
                          config:
                            title: Option Config
                            type: object
                            properties:
                              default_value:
                                type: string
                                description: |
                                  (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
                              checked_by_default:
                                type: boolean
                                description: |
                                  (checkbox) Flag for setting the checkbox to be checked by default.
                              checkbox_label:
                                type: string
                                description: |
                                  (checkbox) Label displayed for the checkbox option.
                              date_limited:
                                type: boolean
                                description: |
                                  (date) Flag to limit the dates allowed to be entered on a date option.
                              date_limit_mode:
                                type: string
                                description: |
                                  (date) The type of limit that is allowed to be entered on a date option.
                                example: range
                                enum:
                                  - earliest
                                  - range
                                  - latest
                              date_earliest_value:
                                type: string
                                description: |
                                  (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                                format: date
                              date_latest_value:
                                type: string
                                description: |
                                  (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                                format: date
                              file_types_mode:
                                type: string
                                description: |
                                  (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
                                example: specific
                                enum:
                                  - specific
                                  - all
                              file_types_supported:
                                type: array
                                description: |
                                  (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
                                    `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
                                    `other` - Allows file types defined in the `file_types_other` array.
                                items:
                                  type: string
                                  example: 'images, documents, other'
                              file_types_other:
                                type: array
                                description: |
                                  (file) A list of other file types allowed with the file upload option.
                                items:
                                  type: string
                                  example: pdf
                              file_max_size:
                                type: integer
                                description: |
                                  (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
                                example: 5
                              text_characters_limited:
                                type: boolean
                                description: |
                                  (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
                              text_min_length:
                                type: integer
                                description: |
                                  (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
                                example: 1
                              text_max_length:
                                type: integer
                                description: |
                                  (text, multi_line_text) The maximum length allowed for a text or multi line text option.
                                example: 55
                              text_lines_limited:
                                type: boolean
                                description: |
                                  (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
                                example: true
                              text_max_lines:
                                type: integer
                                description: |
                                  (multi_line_text) The maximum number of lines allowed on a multi-line text input.
                                example: 4
                              number_limited:
                                type: boolean
                                description: |
                                  (numbers_only_text) Flag to limit the value of a number option.
                                example: true
                              number_limit_mode:
                                type: string
                                description: |
                                  (numbers_only_text) The type of limit on values entered for a number option.
                                example: lowest
                                enum:
                                  - lowest
                                  - highest
                                  - range
                              number_lowest_value:
                                type: number
                                description: |
                                  (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
                                example: 100
                              number_highest_value:
                                type: number
                                description: |
                                  (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
                              number_integers_only:
                                type: boolean
                                description: |
                                  (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
                                example: false
                              product_list_adjusts_inventory:
                                type: boolean
                                description: |
                                  (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
                              product_list_adjusts_pricing:
                                type: boolean
                                description: |
                                  (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
                              product_list_shipping_calc:
                                type: string
                                description: |
                                  (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
                                example: weight
                                enum:
                                  - none
                                  - weight
                                  - package
                            description: The values for option config can vary based on the Modifier created.
                          option_values:
                            type: array
                            items:
                              title: Modifier Value
                              type: object
                              description: 'Part of Modifier Value Response '
                              allOf:
                                - title: Modifier Value Base
                                  type: object
                                  allOf:
                                    - title: Option Value Base
                                      required:
                                        - label
                                        - sort_order
                                      type: object
                                      properties:
                                        is_default:
                                          type: boolean
                                          description: |
                                            The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                                          example: false
                                        label:
                                          type: string
                                          description: |
                                            The text display identifying the value on the storefront. Required in a /POST.
                                          example: Green
                                          x-required:
                                            - post
                                        sort_order:
                                          maximum: 2147483647
                                          minimum: -2147483648
                                          type: integer
                                          description: |
                                            The order in which the value will be displayed on the product page. Required in a /POST.
                                          example: 0
                                          x-required:
                                            - post
                                        value_data:
                                          type: object
                                          properties: {}
                                          description: |
                                            Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                                      description: Common Option Value properties.
                                    - type: object
                                      properties:
                                        adjusters:
                                          type: object
                                          properties:
                                            price:
                                              title: Adjuster
                                              type: object
                                              properties:
                                                adjuster:
                                                  type: string
                                                  description: |
                                                    The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                                  enum:
                                                    - relative
                                                    - percentage
                                                  x-nullable: true
                                                adjuster_value:
                                                  type: number
                                                  description: |
                                                    The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                                  example: 5
                                              description: Adjuster for Complex Rules.
                                            weight:
                                              title: Adjuster
                                              type: object
                                              properties:
                                                adjuster:
                                                  type: string
                                                  description: |
                                                    The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                                  enum:
                                                    - relative
                                                    - percentage
                                                  x-nullable: true
                                                adjuster_value:
                                                  type: number
                                                  description: |
                                                    The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                                  example: 5
                                              description: Adjuster for Complex Rules.
                                            image_url:
                                              type: string
                                              description: |
                                                The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file.
                                              example: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                                            purchasing_disabled:
                                              type: object
                                              properties:
                                                status:
                                                  type: boolean
                                                  description: |
                                                    Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
                                                message:
                                                  type: string
                                                  description: |
                                                    The message displayed on the storefront when the purchasing disabled status is `true`.
                                - type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: |
                                        The unique numeric ID of the value; increments sequentially.
                        description: Common Modifier properties.
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the modifier; increments sequentially.
                            example: 12
                          product_id:
                            type: integer
                            description: |
                              The unique numeric ID of the product to which the option belongs.
                            example: 77
                          name:
                            type: string
                            description: |
                              The unique option name. Auto-generated from the display name, a timestamp, and the product ID.
                            example: Add-a-$5-Donation1535039590-191
                          display_name:
                            type: string
                            description: |
                              The name of the option shown on the storefront.
                            example: Donation
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
        '409':
          description: |
            The `Modifier` was in conflict with another option. This is the result of duplicate unique fields, such as `name`.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `Modifier` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: Modifier
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
  '/catalog/products/{product_id}/modifiers/{modifier_id}':
    get:
      tags:
        - Product Modifiers
      summary: Get a Modifier
      description: Returns a single *Product Modifier*. Optional parameters can be passed in.
      operationId: getModifierById
      parameters:
        - name: modifier_id
          in: path
          description: |
            The ID of the `Modifier`.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Modifier Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/productModifier_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Product Modifiers
      summary: Update a Modifier
      description: Updates a *Product Modifier*.
      operationId: updateModifier
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: modifier_id
          in: path
          description: |
            The ID of the `Modifier`.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              title: Modifier Put
              description: The model for a PUT to update a modifier on a product.
              allOf:
                - title: Modifier Base
                  required:
                    - required
                    - type
                  type: object
                  properties:
                    type:
                      type: string
                      description: |
                        BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.
                      enum:
                        - date
                        - checkbox
                        - file
                        - text
                        - multi_line_text
                        - numbers_only_text
                        - radio_buttons
                        - rectangles
                        - dropdown
                        - product_list
                        - product_list_with_images
                        - swatch
                      x-required:
                        - post
                    required:
                      type: boolean
                      description: |
                        Whether or not this modifier is required or not at checkout. Required in a /POST.
                      x-required:
                        - post
                    sort_order:
                      type: integer
                      description: The order the modifiers display on the product detail page.
                    config:
                      title: Option Config
                      type: object
                      properties:
                        default_value:
                          type: string
                          description: |
                            (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
                        checked_by_default:
                          type: boolean
                          description: |
                            (checkbox) Flag for setting the checkbox to be checked by default.
                        checkbox_label:
                          type: string
                          description: |
                            (checkbox) Label displayed for the checkbox option.
                        date_limited:
                          type: boolean
                          description: |
                            (date) Flag to limit the dates allowed to be entered on a date option.
                        date_limit_mode:
                          type: string
                          description: |
                            (date) The type of limit that is allowed to be entered on a date option.
                          example: range
                          enum:
                            - earliest
                            - range
                            - latest
                        date_earliest_value:
                          type: string
                          description: |
                            (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                          format: date
                        date_latest_value:
                          type: string
                          description: |
                            (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                          format: date
                        file_types_mode:
                          type: string
                          description: |
                            (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
                          example: specific
                          enum:
                            - specific
                            - all
                        file_types_supported:
                          type: array
                          description: |
                            (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
                              `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
                              `other` - Allows file types defined in the `file_types_other` array.
                          items:
                            type: string
                            example: 'images, documents, other'
                        file_types_other:
                          type: array
                          description: |
                            (file) A list of other file types allowed with the file upload option.
                          items:
                            type: string
                            example: pdf
                        file_max_size:
                          type: integer
                          description: |
                            (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
                          example: 5
                        text_characters_limited:
                          type: boolean
                          description: |
                            (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
                        text_min_length:
                          type: integer
                          description: |
                            (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
                          example: 1
                        text_max_length:
                          type: integer
                          description: |
                            (text, multi_line_text) The maximum length allowed for a text or multi line text option.
                          example: 55
                        text_lines_limited:
                          type: boolean
                          description: |
                            (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
                          example: true
                        text_max_lines:
                          type: integer
                          description: |
                            (multi_line_text) The maximum number of lines allowed on a multi-line text input.
                          example: 4
                        number_limited:
                          type: boolean
                          description: |
                            (numbers_only_text) Flag to limit the value of a number option.
                          example: true
                        number_limit_mode:
                          type: string
                          description: |
                            (numbers_only_text) The type of limit on values entered for a number option.
                          example: lowest
                          enum:
                            - lowest
                            - highest
                            - range
                        number_lowest_value:
                          type: number
                          description: |
                            (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
                          example: 100
                        number_highest_value:
                          type: number
                          description: |
                            (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
                        number_integers_only:
                          type: boolean
                          description: |
                            (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
                          example: false
                        product_list_adjusts_inventory:
                          type: boolean
                          description: |
                            (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
                        product_list_adjusts_pricing:
                          type: boolean
                          description: |
                            (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
                        product_list_shipping_calc:
                          type: string
                          description: |
                            (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
                          example: weight
                          enum:
                            - none
                            - weight
                            - package
                      description: The values for option config can vary based on the Modifier created.
                    option_values:
                      type: array
                      items:
                        title: Modifier Value
                        type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the value; increments sequentially.
                        description: 'Part of Modifier Value Response '
                    display_name:
                      type: string
                      description: |
                        The name of the option shown on the storefront.
                      example: Donation
                  description: Common Modifier properties.
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Modifier Response
                type: object
                properties:
                  data:
                    title: Modifer
                    type: object
                    description: Product Modifier
                    allOf:
                      - title: Modifier Base
                        required:
                          - required
                          - type
                        type: object
                        properties:
                          type:
                            type: string
                            description: |
                              BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.
                            enum:
                              - date
                              - checkbox
                              - file
                              - text
                              - multi_line_text
                              - numbers_only_text
                              - radio_buttons
                              - rectangles
                              - dropdown
                              - product_list
                              - product_list_with_images
                              - swatch
                            x-required:
                              - post
                          required:
                            type: boolean
                            description: |
                              Whether or not this modifer is required or not at checkout. Required in a /POST.
                            x-required:
                              - post
                          sort_order:
                            type: integer
                            description: The order the modifiers display on the product detail page.
                          config:
                            title: Option Config
                            type: object
                            properties:
                              default_value:
                                type: string
                                description: |
                                  (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
                              checked_by_default:
                                type: boolean
                                description: |
                                  (checkbox) Flag for setting the checkbox to be checked by default.
                              checkbox_label:
                                type: string
                                description: |
                                  (checkbox) Label displayed for the checkbox option.
                              date_limited:
                                type: boolean
                                description: |
                                  (date) Flag to limit the dates allowed to be entered on a date option.
                              date_limit_mode:
                                type: string
                                description: |
                                  (date) The type of limit that is allowed to be entered on a date option.
                                example: range
                                enum:
                                  - earliest
                                  - range
                                  - latest
                              date_earliest_value:
                                type: string
                                description: |
                                  (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                                format: date
                              date_latest_value:
                                type: string
                                description: |
                                  (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                                format: date
                              file_types_mode:
                                type: string
                                description: |
                                  (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
                                example: specific
                                enum:
                                  - specific
                                  - all
                              file_types_supported:
                                type: array
                                description: |
                                  (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
                                    `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
                                    `other` - Allows file types defined in the `file_types_other` array.
                                items:
                                  type: string
                                  example: 'images, documents, other'
                              file_types_other:
                                type: array
                                description: |
                                  (file) A list of other file types allowed with the file upload option.
                                items:
                                  type: string
                                  example: pdf
                              file_max_size:
                                type: integer
                                description: |
                                  (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
                                example: 5
                              text_characters_limited:
                                type: boolean
                                description: |
                                  (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
                              text_min_length:
                                type: integer
                                description: |
                                  (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
                                example: 1
                              text_max_length:
                                type: integer
                                description: |
                                  (text, multi_line_text) The maximum length allowed for a text or multi line text option.
                                example: 55
                              text_lines_limited:
                                type: boolean
                                description: |
                                  (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
                                example: true
                              text_max_lines:
                                type: integer
                                description: |
                                  (multi_line_text) The maximum number of lines allowed on a multi-line text input.
                                example: 4
                              number_limited:
                                type: boolean
                                description: |
                                  (numbers_only_text) Flag to limit the value of a number option.
                                example: true
                              number_limit_mode:
                                type: string
                                description: |
                                  (numbers_only_text) The type of limit on values entered for a number option.
                                example: lowest
                                enum:
                                  - lowest
                                  - highest
                                  - range
                              number_lowest_value:
                                type: number
                                description: |
                                  (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
                                example: 100
                              number_highest_value:
                                type: number
                                description: |
                                  (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
                              number_integers_only:
                                type: boolean
                                description: |
                                  (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
                                example: false
                              product_list_adjusts_inventory:
                                type: boolean
                                description: |
                                  (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
                              product_list_adjusts_pricing:
                                type: boolean
                                description: |
                                  (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
                              product_list_shipping_calc:
                                type: string
                                description: |
                                  (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
                                example: weight
                                enum:
                                  - none
                                  - weight
                                  - package
                            description: The values for option config can vary based on the Modifier created.
                          option_values:
                            type: array
                            items:
                              title: Modifier Value
                              type: object
                              description: 'Part of Modifier Value Response '
                              allOf:
                                - title: Modifier Value Base
                                  type: object
                                  allOf:
                                    - title: Option Value Base
                                      required:
                                        - label
                                        - sort_order
                                      type: object
                                      properties:
                                        is_default:
                                          type: boolean
                                          description: |
                                            The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                                          example: false
                                        label:
                                          type: string
                                          description: |
                                            The text display identifying the value on the storefront. Required in a /POST.
                                          example: Green
                                          x-required:
                                            - post
                                        sort_order:
                                          maximum: 2147483647
                                          minimum: -2147483648
                                          type: integer
                                          description: |
                                            The order in which the value will be displayed on the product page. Required in a /POST.
                                          example: 0
                                          x-required:
                                            - post
                                        value_data:
                                          type: object
                                          properties: {}
                                          description: |
                                            Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                                      description: Common Option Value properties.
                                    - type: object
                                      properties:
                                        adjusters:
                                          type: object
                                          properties:
                                            price:
                                              title: Adjuster
                                              type: object
                                              properties:
                                                adjuster:
                                                  type: string
                                                  description: |
                                                    The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                                  enum:
                                                    - relative
                                                    - percentage
                                                  x-nullable: true
                                                adjuster_value:
                                                  type: number
                                                  description: |
                                                    The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                                  example: 5
                                              description: Adjuster for Complex Rules.
                                            weight:
                                              title: Adjuster
                                              type: object
                                              properties:
                                                adjuster:
                                                  type: string
                                                  description: |
                                                    The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                                  enum:
                                                    - relative
                                                    - percentage
                                                  x-nullable: true
                                                adjuster_value:
                                                  type: number
                                                  description: |
                                                    The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                                  example: 5
                                              description: Adjuster for Complex Rules.
                                            image_url:
                                              type: string
                                              description: |
                                                The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file.
                                              example: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                                            purchasing_disabled:
                                              type: object
                                              properties:
                                                status:
                                                  type: boolean
                                                  description: |
                                                    Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
                                                message:
                                                  type: string
                                                  description: |
                                                    The message displayed on the storefront when the purchasing disabled status is `true`.
                                - type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: |
                                        The unique numeric ID of the value; increments sequentially.
                        description: Common Modifier properties.
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the modifier; increments sequentially.
                            example: 12
                          product_id:
                            type: integer
                            description: |
                              The unique numeric ID of the product to which the option belongs.
                            example: 77
                          name:
                            type: string
                            description: |
                              The unique option name. Auto-generated from the display name, a timestamp, and the product ID.
                            example: Add-a-$5-Donation1535039590-191
                          display_name:
                            type: string
                            description: |
                              The name of the option shown on the storefront.
                            example: Donation
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
        '409':
          description: |
            The `Modifier` was in conflict with another modifier or option. This is the result of duplicate unique fields, such as `name`.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `Modifier` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: Modifier
    delete:
      tags:
        - Product Modifiers
      summary: Delete a Modifier
      description: Deletes a *Product Modifier*.
      operationId: deleteModifierById
      parameters:
        - name: modifier_id
          in: path
          description: |
            The ID of the `Modifier`.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/ModifierIdParam'
  '/catalog/products/{product_id}/modifiers/{modifier_id}/values':
    get:
      tags:
        - Values
      summary: Get All Modifier Values
      description: Returns a list of all product *Modifier Values*. Optional parameters can be passed in.
      operationId: getModifierValues
      parameters:
        - name: modifier_id
          in: path
          description: |
            The ID of the `Modifier`.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Modifier Value Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/productModifierOptionValue_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                description: Returns for GET All Modifier Values on a Product
              example:
                data:
                  - id: 190
                    option_id: 222
                    label: 'Yes'
                    sort_order: 0
                    value_data:
                      checked_value: true
                    is_default: false
                    adjusters:
                      price:
                        adjuster: relative
                        adjuster_value: 5
                      weight: {}
                      image_url: ''
                      purchasing_disabled:
                        status: false
                        message: ''
                  - id: 191
                    option_id: 222
                    label: 'No'
                    sort_order: 1
                    value_data:
                      checked_value: false
                    is_default: true
                    adjusters:
                      price: {}
                      weight: {}
                      image_url: ''
                      purchasing_disabled:
                        status: false
                        message: ''
                meta:
                  pagination:
                    total: 2
                    count: 2
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
    post:
      tags:
        - Values
      summary: Create Modifier Value
      description: |-
        Creates a *Modifier Value*.

        **Required Fields**
        * label
        * sort_order

        **Read-Only Fields**
        * id
      operationId: createModifierValue
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: modifier_id
          in: path
          description: |
            The ID of the `Modifier`.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              title: Modifier Value Post
              description: The model for a POST to create a modifier value on a product.
              allOf:
                - title: Modifier Value Base
                  allOf:
                    - title: Option Value Base
                      required:
                        - label
                        - sort_order
                      type: object
                      properties:
                        is_default:
                          type: boolean
                          description: |
                            The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                          example: false
                        label:
                          type: string
                          description: |
                            The text display identifying the value on the storefront. Required in a /POST.
                          example: Green
                          x-required:
                            - post
                        sort_order:
                          maximum: 2147483647
                          minimum: -2147483648
                          type: integer
                          description: |
                            The order in which the value will be displayed on the product page. Required in a /POST.
                          example: 0
                          x-required:
                            - post
                        value_data:
                          type: object
                          properties: {}
                          description: |
                            Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                      description: Common Option Value properties.
                    - type: object
                      properties:
                        adjusters:
                          type: object
                          properties:
                            price:
                              title: Adjuster
                              type: object
                              properties:
                                adjuster:
                                  type: string
                                  description: |
                                    The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                  nullable: true
                                  enum:
                                    - relative
                                    - percentage
                                adjuster_value:
                                  type: number
                                  description: |
                                    The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                  example: 5
                              description: Adjuster for Complex Rules.
                            weight:
                              title: Adjuster
                              type: object
                              properties:
                                adjuster:
                                  type: string
                                  description: |
                                    The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                  nullable: true
                                  enum:
                                    - relative
                                    - percentage
                                adjuster_value:
                                  type: number
                                  description: |
                                    The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                  example: 5
                              description: Adjuster for Complex Rules.
                            image_url:
                              type: string
                              description: |
                                The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file.
                              example: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                            purchasing_disabled:
                              type: object
                              properties:
                                status:
                                  type: boolean
                                  description: |
                                    Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
                                message:
                                  type: string
                                  description: |
                                    The message displayed on the storefront when the purchasing disabled status is `true`.
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Modifier Value Response
                type: object
                properties:
                  data:
                    title: Modifier Value
                    type: object
                    description: 'Part of Modifier Value Response '
                    allOf:
                      - title: Modifier Value Base
                        type: object
                        allOf:
                          - title: Option Value Base
                            required:
                              - label
                              - sort_order
                            type: object
                            properties:
                              is_default:
                                type: boolean
                                description: |
                                  The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                                example: false
                              label:
                                type: string
                                description: |
                                  The text display identifying the value on the storefront. Required in a /POST.
                                example: Green
                                x-required:
                                  - post
                              sort_order:
                                maximum: 2147483647
                                minimum: -2147483648
                                type: integer
                                description: |
                                  The order in which the value will be displayed on the product page. Required in a /POST.
                                example: 0
                                x-required:
                                  - post
                              value_data:
                                type: object
                                properties: {}
                                description: |
                                  Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                            description: Common Option Value properties.
                          - type: object
                            properties:
                              adjusters:
                                type: object
                                properties:
                                  price:
                                    title: Adjuster
                                    type: object
                                    properties:
                                      adjuster:
                                        type: string
                                        description: |
                                          The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                        enum:
                                          - relative
                                          - percentage
                                        x-nullable: true
                                      adjuster_value:
                                        type: number
                                        description: |
                                          The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                        example: 5
                                    description: Adjuster for Complex Rules.
                                  weight:
                                    title: Adjuster
                                    type: object
                                    properties:
                                      adjuster:
                                        type: string
                                        description: |
                                          The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                        enum:
                                          - relative
                                          - percentage
                                        x-nullable: true
                                      adjuster_value:
                                        type: number
                                        description: |
                                          The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                        example: 5
                                    description: Adjuster for Complex Rules.
                                  image_url:
                                    type: string
                                    description: |
                                      The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file.
                                    example: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                                  purchasing_disabled:
                                    type: object
                                    properties:
                                      status:
                                        type: boolean
                                        description: |
                                          Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
                                      message:
                                        type: string
                                        description: |
                                          The message displayed on the storefront when the purchasing disabled status is `true`.
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the value; increments sequentially.
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 190
                  option_id: 222
                  label: 'Yes'
                  sort_order: 0
                  value_data: {}
                  is_default: false
                  adjusters:
                    price:
                      adjuster: relative
                      adjuster_value: 5
                    weight: {}
                    image_url: ''
                    purchasing_disabled:
                      status: false
                      message: ''
                meta: {}
        '422':
          description: |
            The `ModifierValue` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: ModifierValue
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/ModifierIdParam'
  '/catalog/products/{product_id}/modifiers/{modifier_id}/values/{value_id}':
    get:
      tags:
        - Values
      summary: Get a Modifier Value
      description: Returns a single *Modifier Value*. Optional parameters can be passed in.
      operationId: getModifierValueById
      parameters:
        - name: modifier_id
          in: path
          description: |
            The ID of the `Modifier`.
          required: true
          schema:
            type: integer
        - name: value_id
          in: path
          description: |
            The ID of the `Modifier/Option Value`.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Modifier Value Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/productModifierOptionValue_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 190
                  option_id: 222
                  label: 'Yes'
                  sort_order: 0
                  value_data: {}
                  is_default: false
                  adjusters:
                    price:
                      adjuster: relative
                      adjuster_value: 5
                    weight: {}
                    image_url: ''
                    purchasing_disabled:
                      status: false
                      message: ''
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
      security:
        - X-Auth-Token: []
    put:
      tags:
        - Values
      summary: Update a Modifier Value
      description: |-
        Updates a *Modifier Value*.

        **Required Fields**
        * none

        **Read-Only Fields**
        * id
      operationId: updateModifierValue
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: modifier_id
          in: path
          description: |
            The ID of the `Modifier`.
          required: true
          schema:
            type: integer
        - name: value_id
          in: path
          description: |
            The ID of the `Modifier/Option Value`.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              title: Modifier Value Put
              description: The model for a PUT to update a modifier value on a product.
              allOf:
                - title: Modifier Value Base
                  allOf:
                    - title: Option Value Base
                      required:
                        - label
                        - sort_order
                      type: object
                      properties:
                        is_default:
                          type: boolean
                          description: |
                            The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                          example: false
                        label:
                          type: string
                          description: |
                            The text display identifying the value on the storefront. Required in a /POST.
                          example: Green
                          x-required:
                            - post
                        sort_order:
                          maximum: 2147483647
                          minimum: -2147483648
                          type: integer
                          description: |
                            The order in which the value will be displayed on the product page. Required in a /POST.
                          example: 0
                          x-required:
                            - post
                        value_data:
                          type: object
                          properties: {}
                          description: |
                            Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                      description: Common Option Value properties.
                    - type: object
                      properties:
                        adjusters:
                          type: object
                          properties:
                            price:
                              title: Adjuster
                              type: object
                              properties:
                                adjuster:
                                  type: string
                                  description: |
                                    The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                  nullable: true
                                  enum:
                                    - relative
                                    - percentage
                                adjuster_value:
                                  type: number
                                  description: |
                                    The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                  example: 5
                              description: Adjuster for Complex Rules.
                            weight:
                              title: Adjuster
                              type: object
                              properties:
                                adjuster:
                                  type: string
                                  description: |
                                    The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                  nullable: true
                                  enum:
                                    - relative
                                    - percentage
                                adjuster_value:
                                  type: number
                                  description: |
                                    The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                  example: 5
                              description: Adjuster for Complex Rules.
                            image_url:
                              type: string
                              description: |
                                The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file.
                              example: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                            purchasing_disabled:
                              type: object
                              properties:
                                status:
                                  type: boolean
                                  description: |
                                    Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
                                message:
                                  type: string
                                  description: |
                                    The message displayed on the storefront when the purchasing disabled status is `true`.
                - type: object
                  properties:
                    id:
                      type: integer
                      description: |
                        The unique numeric ID of the value; increments sequentially.
                      x-required:
                        - put
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Modifier Value Response
                type: object
                properties:
                  data:
                    title: Modifier Value
                    type: object
                    description: 'Part of Modifier Value Response '
                    allOf:
                      - title: Modifier Value Base
                        type: object
                        allOf:
                          - title: Option Value Base
                            required:
                              - label
                              - sort_order
                            type: object
                            properties:
                              is_default:
                                type: boolean
                                description: |
                                  The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                                example: false
                              label:
                                type: string
                                description: |
                                  The text display identifying the value on the storefront. Required in a /POST.
                                example: Green
                                x-required:
                                  - post
                              sort_order:
                                maximum: 2147483647
                                minimum: -2147483648
                                type: integer
                                description: |
                                  The order in which the value will be displayed on the product page. Required in a /POST.
                                example: 0
                                x-required:
                                  - post
                              value_data:
                                type: object
                                properties: {}
                                description: |
                                  Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                            description: Common Option Value properties.
                          - type: object
                            properties:
                              adjusters:
                                type: object
                                properties:
                                  price:
                                    title: Adjuster
                                    type: object
                                    properties:
                                      adjuster:
                                        type: string
                                        description: |
                                          The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                        enum:
                                          - relative
                                          - percentage
                                        x-nullable: true
                                      adjuster_value:
                                        type: number
                                        description: |
                                          The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                        example: 5
                                    description: Adjuster for Complex Rules.
                                  weight:
                                    title: Adjuster
                                    type: object
                                    properties:
                                      adjuster:
                                        type: string
                                        description: |
                                          The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                        enum:
                                          - relative
                                          - percentage
                                        x-nullable: true
                                      adjuster_value:
                                        type: number
                                        description: |
                                          The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                        example: 5
                                    description: Adjuster for Complex Rules.
                                  image_url:
                                    type: string
                                    description: |
                                      The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file.
                                    example: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                                  purchasing_disabled:
                                    type: object
                                    properties:
                                      status:
                                        type: boolean
                                        description: |
                                          Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
                                      message:
                                        type: string
                                        description: |
                                          The message displayed on the storefront when the purchasing disabled status is `true`.
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the value; increments sequentially.
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 190
                  option_id: 222
                  label: 'Yes'
                  sort_order: 0
                  value_data: {}
                  is_default: false
                  adjusters:
                    price:
                      adjuster: relative
                      adjuster_value: 5
                    weight: {}
                    image_url: ''
                    purchasing_disabled:
                      status: false
                      message: ''
                meta: {}
        '422':
          description: |
            The `ModifierValue` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: ModifierValue
    delete:
      tags:
        - Values
      summary: Delete Modifier Value
      description: Deletes a *Modifier Value*.
      operationId: deleteModifierValueById
      parameters:
        - name: modifier_id
          in: path
          description: |
            The ID of the `Modifier`.
          required: true
          schema:
            type: integer
        - name: value_id
          in: path
          description: |
            The ID of the `Modifier/Option Value`.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/ModifierIdParam'
      - $ref: '#/components/parameters/ValueIdParam'
  '/catalog/products/{product_id}/modifiers/{modifier_id}/values/{value_id}/image':
    post:
      tags:
        - Images
      summary: Create Modifier Image
      description: |-
        Creates a *Modifier Image*.

        The image will show on the storefront when the value is selected.

         **Required Fields**
        - image_file: Form posts are the only accepted upload option.
      operationId: createModifierImage
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: modifier_id
          in: path
          description: |
            The ID of the `Modifier`.
          required: true
          schema:
            type: integer
        - name: value_id
          in: path
          description: |
            The ID of the `Modifier`.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image_file:
                  type: string
                  format: binary
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Image Response
                type: object
                properties:
                  data:
                    title: Resource Image
                    type: object
                    properties:
                      image_url:
                        type: string
                        description: |
                          A public URL for a GIF, JPEG, or PNG image. Limit of 8MB per file.
                    description: 'An object containing a publicly accessible image URL, or a form post that contains an image file.'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |-
                  Image Response returns for:
                  * Create Variant Image
                  * Create Modifier Image
                  * Create Category Image
                  * Create Brand Image
              example:
                data:
                  image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/product_images/attribute_rule_images/85_source_1536863430.png'
                meta: {}
        '400':
          description: Bad Request. The requested resource could not be downloaded and may be invalid. Possible reasons include malformed request syntax or the file host blocking requests.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '422':
          description: |
            Modifier image was not valid. This is the result of missing `image_file` fields, or of a non-URL value for the `image_file` field. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/ModifierIdParam'
      - $ref: '#/components/parameters/ValueIdParam'
components:
  schemas:
    productModifier_Base:
      title: productModifier_Base
      required:
        - required
        - type
      type: object
      properties:
        type:
          type: string
          description: |
            BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.
          enum:
            - date
            - checkbox
            - file
            - text
            - multi_line_text
            - numbers_only_text
            - radio_buttons
            - rectangles
            - dropdown
            - product_list
            - product_list_with_images
            - swatch
          x-required:
            - post
        required:
          type: boolean
          description: |
            Whether or not this modifer is required or not at checkout. Required in a /POST.
          x-required:
            - post
        sort_order:
          type: integer
          description: The order the modifiers display on the product detail page.
        config:
          $ref: '#/components/schemas/config_Full'
        display_name:
          type: string
          description: The name of the option shown on the storefront.
      description: Common Modifier properties.
      x-internal: false
    productModifier_Full:
      title: productModifier_Full
      description: Product Modifier
      allOf:
        - $ref: '#/components/schemas/productModifier_Base'
        - type: object
          properties:
            id:
              type: integer
              description: |
                The unique numeric ID of the modifier; increments sequentially.
              example: 12
            product_id:
              type: integer
              description: |
                The unique numeric ID of the product to which the option belongs.
              example: 77
            name:
              type: string
              description: |
                The unique option name. Auto-generated from the display name, a timestamp, and the product ID.
              example: Add-a-$5-Donation1535039590-191
            option_values:
              type: array
              items:
                $ref: '#/components/schemas/productModifierOptionValue_Full'
      x-internal: false
    productModifierOptionValue_Base:
      title: productModifierOptionValue_Base
      required:
        - label
        - sort_order
      type: object
      properties:
        is_default:
          type: boolean
          description: |
            The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
          example: false
        label:
          type: string
          description: |
            The text display identifying the value on the storefront. Required in a /POST.
          example: Green
          x-required:
            - post
        sort_order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: |
            The order in which the value will be displayed on the product page. Required in a /POST.
          example: 0
          x-required:
            - post
        value_data:
          type: object
          properties: {}
          description: |
            Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state. If no data is available, returns `null`.
          nullable: true
        adjusters:
          $ref: '#/components/schemas/adjusters_Full'
      description: Common Product Modifer `option_value` properties.
      x-internal: false
    productModifierOptionValue_Full:
      title: productModifierOptionValue_Full
      description: Product Modifer `option_value`.
      allOf:
        - $ref: '#/components/schemas/productModifierOptionValue_Base'
        - type: object
          properties:
            id:
              type: integer
              description: |
                The unique numeric ID of the value; increments sequentially.
            option_id:
              type: integer
      x-internal: false
    adjuster_Full:
      title: adjuster_Full
      type: object
      properties:
        adjuster:
          type: string
          description: |
            The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
          nullable: true
          enum:
            - relative
            - percentage
        adjuster_value:
          type: number
          description: |
            The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
          example: 5
      description: Adjuster for Complex Rules.
      x-internal: false
    metaCollection_Full:
      title: metaCollection_Full
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/pagination_Full'
      description: 'Data about the response, including pagination and collection totals.'
      x-internal: false
    pagination_Full:
      title: pagination_Full
      type: object
      properties:
        total:
          type: integer
          description: |
            Total number of items in the result set.
          example: 36
        count:
          type: integer
          description: |
            Total number of items in the collection response.
          example: 36
        per_page:
          type: integer
          description: |
            The amount of items returned in the collection per page, controlled by the limit parameter.
          example: 50
        current_page:
          type: integer
          description: |
            The page you are currently on within the collection.
          example: 1
        total_pages:
          type: integer
          description: |
            The total number of pages in the collection.
          example: 1
        links:
          type: object
          properties:
            previous:
              type: string
              description: |
                Link to the previous page returned in the response.
            current:
              type: string
              description: |
                Link to the current page returned in the response.
              example: '?page=1&limit=50'
            next:
              type: string
              description: |
                Link to the next page returned in the response.
          description: |
            Pagination links for the previous and next parts of the whole collection.
      description: 'Data about the response, including pagination and collection totals.'
      x-internal: false
    metaEmpty_Full:
      type: object
      title: Response meta
      properties: {}
      additionalProperties: true
      description: Response metadata.
    config_Full:
      title: config_Full
      type: object
      properties:
        default_value:
          type: string
          description: |
            (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
        checked_by_default:
          type: boolean
          description: |
            (checkbox) Flag for setting the checkbox to be checked by default.
        checkbox_label:
          type: string
          description: |
            (checkbox) Label displayed for the checkbox option.
        date_limited:
          type: boolean
          description: |
            (date) Flag to limit the dates allowed to be entered on a date option.
        date_limit_mode:
          type: string
          description: |
            (date) The type of limit that is allowed to be entered on a date option.
          example: range
          enum:
            - earliest
            - range
            - latest
        date_earliest_value:
          type: string
          description: |
            (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
          format: date
        date_latest_value:
          type: string
          description: |
            (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
          format: date
        file_types_mode:
          type: string
          description: |
            (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
          example: specific
          enum:
            - specific
            - all
        file_types_supported:
          type: array
          description: |
            (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
              `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
              `other` - Allows file types defined in the `file_types_other` array.        
          items:
            type: string
            example: 'images, documents, other'
        file_types_other:
          type: array
          description: |
            (file) A list of other file types allowed with the file upload option.
          items:
            type: string
            example: pdf
        file_max_size:
          type: integer
          description: |
            (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
          example: 5
        text_characters_limited:
          type: boolean
          description: |
            (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
        text_min_length:
          type: integer
          description: |
            (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
          example: 1
        text_max_length:
          type: integer
          description: |
            (text, multi_line_text) The maximum length allowed for a text or multi line text option.
          example: 55
        text_lines_limited:
          type: boolean
          description: |
            (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
          example: true
        text_max_lines:
          type: integer
          description: |
            (multi_line_text) The maximum number of lines allowed on a multi-line text input.
          example: 4
        number_limited:
          type: boolean
          description: |
            (numbers_only_text) Flag to limit the value of a number option.
          example: true
        number_limit_mode:
          type: string
          description: |
            (numbers_only_text) The type of limit on values entered for a number option.
          example: lowest
          enum:
            - lowest
            - highest
            - range
        number_lowest_value:
          type: number
          description: |
            (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
          example: 100
        number_highest_value:
          type: number
          description: |
            (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
        number_integers_only:
          type: boolean
          description: |
            (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
          example: false
        product_list_adjusts_inventory:
          type: boolean
          description: |
            (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
        product_list_adjusts_pricing:
          type: boolean
          description: |
            (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
        product_list_shipping_calc:
          type: string
          description: |
            (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
          example: weight
          enum:
            - none
            - weight
            - package
      description: The values for option config can vary based on the Modifier created.
      x-internal: false
    adjusters_Full:
      title: adjusters_Full
      type: object
      properties:
        price:
          $ref: '#/components/schemas/adjuster_Full'
        weight:
          $ref: '#/components/schemas/adjuster_Full'
        image_url:
          type: string
          description: |
            The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file.
          example: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
        purchasing_disabled:
          type: object
          properties:
            status:
              type: boolean
              description: |
                Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
            message:
              type: string
              description: |
                The message displayed on the storefront when the purchasing disabled status is `true`.
      x-internal: false
  parameters:
    ProductIdParam:
      name: product_id
      in: path
      description: |
        The ID of the `Product` to which the resource belongs.
      required: true
      schema:
        type: integer
    ModifierIdParam:
      name: modifier_id
      description: |
        The ID of the `Modifier`.
      required: true
      in: path
      schema:
        type: integer
    ValueIdParam:
      name: value_id
      description: |
        The ID of the `Modifier/Option Value`.
      required: true
      in: path
      schema:
        type: integer
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Products | modify | `store_v2_products` |
        |  Products | read-only | `store_v2_products_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header

openapi: '3.0.3'
info:
  title: Catalog - Product Variant Options
  description: |-
    > The Catalog API manages products, categories, brands, bulk pricing rules, and more. To learn more about catalog resources, see the [Catalog Overview](/api-docs/store-management/catalog/products-overview).

    Product Variant Options represent the different facets of a product. For example, size, color, fabric. Variant Option values are the actual sizes, colors, fabrics, that are available. [Product Variants]() consist of combinations of Variant Option values.

    The following table illustrates the relationship between Variant Options and Variant Option values using a line of signature sneakers as an example. 

    | Variant options | Variant option values | No. of variants |
    |:----------------|:----------------------|----------------:|
    | size (US Women's) | 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10, 10.5 | 10 |
    | upper material | canvas, marine plastic, leather | 3 |
    | upper color | brick, azul, gold | 3 |
    | sole color | charcoal, white, azul | 3 |
    |  |  | **270** |


    Our Catalog Product Variant Options endpoints let you work with both Variant Options and Variant Option Values. 

    > To learn more about authenticating Catalog endpoints, locate the **Authentication** section at the top of each endpoint, then click **Show Details**.

    ## Resources

    ### Webhooks
    Learn more about [Product webhook events](/api-docs/store-management/webhooks/webhook-events#products).

    ### Additional Catalog endpoints
    * [Brands](/docs/rest-catalog/brands)
    * [Categories](/docs/rest-catalog/categories)
    * [Category Trees](/docs/rest-catalog/category-trees)
    * [Products](/docs/rest-catalog/products)
    * [Product Modifiers](/docs/rest-catalog/product-modifiers)
    * [Product Variants](/docs/rest-catalog/product-variants)

  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  version: ''
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Product Variant Options
  - name: Values
paths:
  '/catalog/products/{product_id}/options':
    get:
      tags:
        - Product Variant Options
      summary: Get All Product Variant Options
      description: 'Returns a list of product *Variant Options*. Optional parameters can be passed in. '
      operationId: getOptions
      parameters:
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Option Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/productOption_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                description: Get all product options
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    post:
      tags:
        - Product Variant Options
      summary: Create a Product Variant Option
      description: |-
        Creates a *Variant Option*.

        **Required Fields**
        * display_name
        * type
        * option_values

        **Read-Only Fields**
        * id

        **Limits**
        * 255 characters option name length.

        **Notes**

        * Only one variant option at a time can be created; individual variant options will contain an array of multiple values.
        * There are several examples listed below that create options, but the SKUs are not updated and they are not a variant on the product. Variant SKUs must be created with a separate request.
        * Variant options will show on the storefront as an option that can be selected by the customer. A request like this could be used to add new choices to a variant that has already been created.
        * If more than one variant needs to be created, use the [Create a Product](/docs/rest-catalog/products#create-a-product) endpoint.
      operationId: createOption
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Option Post
              description: The model for a POST to create options on a product.
              allOf:
                - title: Option Base
                  description: Common Option properties.
                  properties:
                    product_id:
                      type: integer
                      description: |
                        The unique numerical ID of the product to which the option belongs.
                      example: 4
                      x-required:
                        - post
                        - put
                    display_name:
                      maxLength: 255
                      minLength: 1
                      type: string
                      description: |
                        The name of the option shown on the storefront.
                      example: Add-a-$5-Donation1535042499-187
                      x-required:
                        - post
                        - put
                    type:
                      type: string
                      description: |
                        The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.
                      enum:
                        - radio_buttons
                        - rectangles
                        - dropdown
                        - product_list
                        - product_list_with_images
                        - swatch
                      x-required:
                        - post
                        - put
                    config:
                      title: Option Config
                      type: object
                      description: The values for option config can vary based on the Modifier created.
                      properties:
                        default_value:
                          type: string
                          description: |
                            (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
                        checked_by_default:
                          type: boolean
                          description: |
                            (checkbox) Flag for setting the checkbox to be checked by default.
                        checkbox_label:
                          type: string
                          description: |
                            (checkbox) Label displayed for the checkbox option.
                        date_limited:
                          type: boolean
                          description: |
                            (date) Flag to limit the dates allowed to be entered on a date option.
                        date_limit_mode:
                          type: string
                          description: |
                            (date) The type of limit that is allowed to be entered on a date option.
                          example: range
                          enum:
                            - earliest
                            - range
                            - latest
                        date_earliest_value:
                          type: string
                          description: |
                            (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                          format: date-time
                          example: '2018-08-31T00:00:00+00:00'
                        date_latest_value:
                          type: string
                          description: |
                            (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                          format: date-time
                          example: '2019-01-01T00:00:00+00:00'
                        file_types_mode:
                          type: string
                          description: |
                            (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
                          example: specific
                          enum:
                            - specific
                            - all
                        file_types_supported:
                          type: array
                          description: |
                            (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
                              `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
                              `other` - Allows file types defined in the `file_types_other` array.
                          example:
                            - images
                            - documents
                            - other
                          items:
                            type: string
                        file_types_other:
                          type: array
                          description: |
                            (file) A list of other file types allowed with the file upload option.
                          example:
                            - pdf
                            - txt
                          items:
                            type: string
                        file_max_size:
                          type: integer
                          description: |
                            (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
                          example: 5
                        text_characters_limited:
                          type: boolean
                          description: |
                            (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
                        text_min_length:
                          type: integer
                          description: |
                            (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
                          example: 1
                        text_max_length:
                          type: integer
                          description: |
                            (text, multi_line_text) The maximum length allowed for a text or multi line text option.
                          example: 55
                        text_lines_limited:
                          type: boolean
                          description: |
                            (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
                          example: true
                        text_max_lines:
                          type: integer
                          description: |
                            (multi_line_text) The maximum number of lines allowed on a multi-line text input.
                          example: 4
                        number_limited:
                          type: boolean
                          description: |
                            (numbers_only_text) Flag to limit the value of a number option.
                          example: true
                        number_limit_mode:
                          type: string
                          description: |
                            (numbers_only_text) The type of limit on values entered for a number option.
                          example: lowest
                          enum:
                            - lowest
                            - highest
                            - range
                        number_lowest_value:
                          type: number
                          description: |
                            (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
                          example: 100
                        number_highest_value:
                          type: number
                          description: |
                            (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
                        number_integers_only:
                          type: boolean
                          description: |
                            (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
                          example: false
                        product_list_adjusts_inventory:
                          type: boolean
                          description: |
                            (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
                        product_list_adjusts_pricing:
                          type: boolean
                          description: |
                            (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
                        product_list_shipping_calc:
                          type: string
                          description: |
                            (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
                          example: weight
                          enum:
                            - none
                            - weight
                            - package
                    sort_order:
                      type: integer
                      description: 'Order in which the option is displayed on the storefront. '
                      example: 1
                    option_values:
                      minItems: 1
                      type: array
                      x-required:
                        - post
                        - put
                      items:
                        title: Option Value
                        allOf:
                          - title: Option Value Base
                            description: Common Option Value properties.
                            properties:
                              is_default:
                                type: boolean
                                description: |
                                  The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                                example: false
                              label:
                                type: string
                                description: |
                                  The text display identifying the value on the storefront. Required in a /POST.
                                example: Green
                                x-required:
                                  - post
                              sort_order:
                                maximum: 2147483647
                                minimum: -2147483648
                                type: integer
                                description: |
                                  The order in which the value will be displayed on the product page. Required in a /POST.
                                example: 0
                                x-required:
                                  - post
                              value_data:
                                type: object
                                properties: {}
                                description: |
                                  Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                            required:
                              - label
                              - sort_order
                          - properties:
                              id:
                                type: integer
                                description: |
                                  The unique numeric ID of the value; increments sequentially.
                        type: object
                    image_url:
                      type: string
                      description: Publicly available image url
              type: object
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Option Response
                type: object
                properties:
                  data:
                    title: Option
                    type: object
                    allOf:
                      - title: Option Base
                        description: Common Option properties.
                        type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numerical ID of the option, increments sequentially.
                            example: 55
                            x-nullable: true
                          product_id:
                            type: integer
                            description: |
                              The unique numerical ID of the product to which the option belongs.
                            example: 4
                            x-required:
                              - post
                              - put
                          display_name:
                            maxLength: 255
                            minLength: 1
                            type: string
                            description: |
                              The name of the option shown on the storefront.
                            example: Add-a-$5-Donation1535042499-187
                            x-required:
                              - post
                              - put
                          type:
                            type: string
                            description: |
                              The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.
                            enum:
                              - radio_buttons
                              - rectangles
                              - dropdown
                              - product_list
                              - product_list_with_images
                              - swatch
                            x-required:
                              - post
                              - put
                          config:
                            title: Option Config
                            type: object
                            description: The values for option config can vary based on the Modifier created.
                            properties:
                              default_value:
                                type: string
                                description: |
                                  (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
                              checked_by_default:
                                type: boolean
                                description: |
                                  (checkbox) Flag for setting the checkbox to be checked by default.
                              checkbox_label:
                                type: string
                                description: |
                                  (checkbox) Label displayed for the checkbox option.
                              date_limited:
                                type: boolean
                                description: |
                                  (date) Flag to limit the dates allowed to be entered on a date option.
                              date_limit_mode:
                                type: string
                                description: |
                                  (date) The type of limit that is allowed to be entered on a date option.
                                example: range
                                enum:
                                  - earliest
                                  - range
                                  - latest
                              date_earliest_value:
                                type: string
                                description: |
                                  (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                                format: date-time
                              date_latest_value:
                                type: string
                                description: |
                                  (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                                format: date-time
                              file_types_mode:
                                type: string
                                description: |
                                  (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
                                example: specific
                                enum:
                                  - specific
                                  - all
                              file_types_supported:
                                type: array
                                description: |
                                  (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
                                    `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
                                    `other` - Allows file types defined in the `file_types_other` array.
                                items:
                                  type: string
                                  example: 'images, documents, other'
                              file_types_other:
                                type: array
                                description: |
                                  (file) A list of other file types allowed with the file upload option.
                                items:
                                  type: string
                                  example: pdf
                              file_max_size:
                                type: integer
                                description: |
                                  (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
                                example: 5
                              text_characters_limited:
                                type: boolean
                                description: |
                                  (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
                              text_min_length:
                                type: integer
                                description: |
                                  (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
                                example: 1
                              text_max_length:
                                type: integer
                                description: |
                                  (text, multi_line_text) The maximum length allowed for a text or multi line text option.
                                example: 55
                              text_lines_limited:
                                type: boolean
                                description: |
                                  (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
                                example: true
                              text_max_lines:
                                type: integer
                                description: |
                                  (multi_line_text) The maximum number of lines allowed on a multi-line text input.
                                example: 4
                              number_limited:
                                type: boolean
                                description: |
                                  (numbers_only_text) Flag to limit the value of a number option.
                                example: true
                              number_limit_mode:
                                type: string
                                description: |
                                  (numbers_only_text) The type of limit on values entered for a number option.
                                example: lowest
                                enum:
                                  - lowest
                                  - highest
                                  - range
                              number_lowest_value:
                                type: number
                                description: |
                                  (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
                                example: 100
                              number_highest_value:
                                type: number
                                description: |
                                  (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
                              number_integers_only:
                                type: boolean
                                description: |
                                  (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
                                example: false
                              product_list_adjusts_inventory:
                                type: boolean
                                description: |
                                  (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
                              product_list_adjusts_pricing:
                                type: boolean
                                description: |
                                  (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
                              product_list_shipping_calc:
                                type: string
                                description: |
                                  (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
                                example: weight
                                enum:
                                  - none
                                  - weight
                                  - package
                          sort_order:
                            type: integer
                            description: 'Order in which the option is displayed on the storefront. '
                            example: 1
                          option_values:
                            minItems: 1
                            type: array
                            x-required:
                              - post
                              - put
                            items:
                              title: Option Value
                              allOf:
                                - title: Option Value Base
                                  description: Common Option Value properties.
                                  properties:
                                    is_default:
                                      type: boolean
                                      description: |
                                        The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                                      example: false
                                    label:
                                      type: string
                                      description: |
                                        The text display identifying the value on the storefront. Required in a /POST.
                                      example: Green
                                      x-required:
                                        - post
                                    sort_order:
                                      maximum: 2147483647
                                      minimum: -2147483648
                                      type: integer
                                      description: |
                                        The order in which the value will be displayed on the product page. Required in a /POST.
                                      example: 0
                                      x-required:
                                        - post
                                    value_data:
                                      type: object
                                      properties: {}
                                      description: |
                                        Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                                  required:
                                    - label
                                    - sort_order
                                - properties:
                                    id:
                                      type: integer
                                      description: |
                                        The unique numeric ID of the value; increments sequentially.
                              type: object
                          image_url:
                            type: string
                            description: Publicly available image url
                      - type: object
                        properties:
                          name:
                            type: string
                            description: |
                              The unique option name, auto-generated from the display name, a timestamp, and the product ID.
                            example: Add-a-$5-Donation1535042499-187
                  meta:
                    title: Meta
                    type: object
                    properties: {}
                    description: Empty meta object; may be used later.
              examples:
                example-1:
                  value:
                    data:
                      id: 55
                      product_id: 4
                      display_name: Add-a-$5-Donation1535042499-187
                      type: radio_buttons
                      config:
                        default_value: string
                        checked_by_default: true
                        checkbox_label: string
                        date_limited: true
                        date_limit_mode: earliest
                        date_earliest_value: '2022-08-24T00:00:00+00:00'
                        date_latest_value: '2022-08-27T00:00:00+00:00'
                        file_types_mode: specific
                        file_types_supported:
                          - 'images, documents, other'
                        file_types_other:
                          - pdf
                        file_max_size: 5
                        text_characters_limited: true
                        text_min_length: 1
                        text_max_length: 55
                        text_lines_limited: true
                        text_max_lines: 4
                        number_limited: true
                        number_limit_mode: lowest
                        number_lowest_value: 100
                        number_highest_value: 0
                        number_integers_only: false
                        product_list_adjusts_inventory: true
                        product_list_adjusts_pricing: true
                        product_list_shipping_calc: none
                      sort_order: 1
                      option_values:
                        - is_default: false
                          label: Green
                          sort_order: 0
                          value_data: {}
                          id: 0
                      image_url: string
                      name: Add-a-$5-Donation1535042499-187
                    meta: {}
                example-2:
                  value:
                    data:
                      id: 220
                      product_id: 192
                      name: Color (Colors only)
                      display_name: Color
                      type: swatch
                      sort_order: 0
                      option_values:
                        - id: 174
                          label: Beige
                          sort_order: 1
                          value_data:
                            colors:
                              - '#FAFAEB'
                          is_default: false
                        - id: 175
                          label: Grey
                          sort_order: 2
                          value_data:
                            colors:
                              - '#BDBDBD'
                          is_default: false
                        - id: 176
                          label: Black
                          sort_order: 3
                          value_data:
                            colors:
                              - '#000000'
                          is_default: false
                        - id: 189
                          label: Black-Walnut
                          sort_order: 4
                          value_data:
                            colors:
                              - '#e80ee8'
                          is_default: false
                      config: {}
                    meta: {}
        '409':
          description: |
            Option was in conflict with another option. This is the result of duplicate unique fields, such as `name`.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            Option was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: Option
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
  '/catalog/products/{product_id}/options/{option_id}':
    get:
      tags:
        - Product Variant Options
      summary: Get a Product Variant Option
      description: Returns a single *Variant Option*. Optional parameters can be passed in.
      operationId: getOptionById
      parameters:
        - name: option_id
          in: path
          description: |
            The ID of the `Option`.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Option Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/productOption_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Product Variant Options
      summary: Update a Product Variant Option
      description: |-
        Updates a *Variant Option*.

        **Read-Only Fields**
        * id
      operationId: updateOption
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: option_id
          in: path
          description: |
            The ID of the `Option`.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              title: Option Put
              description: The model for a PUT to update options on a product.
              allOf:
                - title: Option Base
                  type: object
                  properties:
                    id:
                      type: integer
                      description: |
                        The unique numerical ID of the option, increments sequentially.
                      nullable: true
                      example: 55
                    product_id:
                      type: integer
                      description: |
                        The unique numerical ID of the product to which the option belongs.
                      example: 4
                      x-required:
                        - post
                        - put
                    display_name:
                      maxLength: 255
                      minLength: 1
                      type: string
                      description: |
                        The name of the option shown on the storefront.
                      example: Add-a-$5-Donation1535042499-187
                      x-required:
                        - post
                        - put
                    type:
                      type: string
                      description: |
                        The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.
                      enum:
                        - radio_buttons
                        - rectangles
                        - dropdown
                        - product_list
                        - product_list_with_images
                        - swatch
                      x-required:
                        - post
                        - put
                    config:
                      title: Option Config
                      type: object
                      properties:
                        default_value:
                          type: string
                          description: |
                            (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
                        checked_by_default:
                          type: boolean
                          description: |
                            (checkbox) Flag for setting the checkbox to be checked by default.
                        checkbox_label:
                          type: string
                          description: |
                            (checkbox) Label displayed for the checkbox option.
                        date_limited:
                          type: boolean
                          description: |
                            (date) Flag to limit the dates allowed to be entered on a date option.
                        date_limit_mode:
                          type: string
                          description: |
                            (date) The type of limit that is allowed to be entered on a date option.
                          example: range
                          enum:
                            - earliest
                            - range
                            - latest
                        date_earliest_value:
                          type: string
                          description: |
                            (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                          format: date-time
                          example: '2018-08-31T00:00:00+00:00'
                        date_latest_value:
                          type: string
                          description: |
                            (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                          format: date-time
                          example: '2019-01-01T00:00:00+00:00'
                        file_types_mode:
                          type: string
                          description: |
                            (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
                          example: specific
                          enum:
                            - specific
                            - all
                        file_types_supported:
                          type: array
                          description: |
                            (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
                              `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
                              `other` - Allows file types defined in the `file_types_other` array.
                          example:
                            - images
                            - documents
                            - other
                          items:
                            type: string
                        file_types_other:
                          type: array
                          description: |
                            (file) A list of other file types allowed with the file upload option.
                          example:
                            - pdf
                            - txt
                          items:
                            type: string
                        file_max_size:
                          type: integer
                          description: |
                            (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
                          example: 5
                        text_characters_limited:
                          type: boolean
                          description: |
                            (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
                        text_min_length:
                          type: integer
                          description: |
                            (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
                          example: 1
                        text_max_length:
                          type: integer
                          description: |
                            (text, multi_line_text) The maximum length allowed for a text or multi line text option.
                          example: 55
                        text_lines_limited:
                          type: boolean
                          description: |
                            (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
                          example: true
                        text_max_lines:
                          type: integer
                          description: |
                            (multi_line_text) The maximum number of lines allowed on a multi-line text input.
                          example: 4
                        number_limited:
                          type: boolean
                          description: |
                            (numbers_only_text) Flag to limit the value of a number option.
                          example: true
                        number_limit_mode:
                          type: string
                          description: |
                            (numbers_only_text) The type of limit on values entered for a number option.
                          example: lowest
                          enum:
                            - lowest
                            - highest
                            - range
                        number_lowest_value:
                          type: number
                          description: |
                            (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
                          example: 100
                        number_highest_value:
                          type: number
                          description: |
                            (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
                        number_integers_only:
                          type: boolean
                          description: |
                            (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
                          example: false
                        product_list_adjusts_inventory:
                          type: boolean
                          description: |
                            (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
                        product_list_adjusts_pricing:
                          type: boolean
                          description: |
                            (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
                        product_list_shipping_calc:
                          type: string
                          description: |
                            (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
                          example: weight
                          enum:
                            - none
                            - weight
                            - package
                      description: The values for option config can vary based on the Modifier created.
                    sort_order:
                      type: integer
                      description: 'Order in which the option is displayed on the storefront. '
                      example: 1
                    option_values:
                      minItems: 1
                      type: array
                      items:
                        title: Option Value
                        type: object
                        allOf:
                          - title: Option Value Base
                            required:
                              - label
                              - sort_order
                            type: object
                            properties:
                              is_default:
                                type: boolean
                                description: |
                                  The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                                example: false
                              label:
                                type: string
                                description: |
                                  The text display identifying the value on the storefront. Required in a /POST.
                                example: Green
                                x-required:
                                  - post
                              sort_order:
                                maximum: 2147483647
                                minimum: -2147483648
                                type: integer
                                description: |
                                  The order in which the value will be displayed on the product page. Required in a /POST.
                                example: 0
                                x-required:
                                  - post
                              value_data:
                                type: object
                                properties: {}
                                description: |
                                  Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                            description: Common Option Value properties.
                          - type: object
                            properties:
                              id:
                                type: integer
                                description: |
                                  The unique numeric ID of the value; increments sequentially.
                      x-required:
                        - post
                        - put
                    image_url:
                      type: string
                      description: Publicly available image url
                  description: Common Option properties.
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Option Response
                type: object
                properties:
                  data:
                    title: Option
                    type: object
                    allOf:
                      - title: Option Base
                        type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numerical ID of the option, increments sequentially.
                            example: 55
                            x-nullable: true
                          product_id:
                            type: integer
                            description: |
                              The unique numerical ID of the product to which the option belongs.
                            example: 4
                            x-required:
                              - post
                              - put
                          display_name:
                            maxLength: 255
                            minLength: 1
                            type: string
                            description: |
                              The name of the option shown on the storefront.
                            example: Add-a-$5-Donation1535042499-187
                            x-required:
                              - post
                              - put
                          type:
                            type: string
                            description: |
                              The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.
                            enum:
                              - radio_buttons
                              - rectangles
                              - dropdown
                              - product_list
                              - product_list_with_images
                              - swatch
                            x-required:
                              - post
                              - put
                          config:
                            title: Option Config
                            type: object
                            properties:
                              default_value:
                                type: string
                                description: |
                                  (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
                              checked_by_default:
                                type: boolean
                                description: |
                                  (checkbox) Flag for setting the checkbox to be checked by default.
                              checkbox_label:
                                type: string
                                description: |
                                  (checkbox) Label displayed for the checkbox option.
                              date_limited:
                                type: boolean
                                description: |
                                  (date) Flag to limit the dates allowed to be entered on a date option.
                              date_limit_mode:
                                type: string
                                description: |
                                  (date) The type of limit that is allowed to be entered on a date option.
                                example: range
                                enum:
                                  - earliest
                                  - range
                                  - latest
                              date_earliest_value:
                                type: string
                                description: |
                                  (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                                format: date
                              date_latest_value:
                                type: string
                                description: |
                                  (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                                format: date
                              file_types_mode:
                                type: string
                                description: |
                                  (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
                                example: specific
                                enum:
                                  - specific
                                  - all
                              file_types_supported:
                                type: array
                                description: |
                                  (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
                                    `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
                                    `other` - Allows file types defined in the `file_types_other` array.                            
                                items:
                                  type: string
                                  example: 'images, documents, other'
                              file_types_other:
                                type: array
                                description: |
                                  (file) A list of other file types allowed with the file upload option.                            
                                items:
                                  type: string
                                  example: pdf
                              file_max_size:
                                type: integer
                                description: |
                                  (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
                                example: 5
                              text_characters_limited:
                                type: boolean
                                description: |
                                  (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
                              text_min_length:
                                type: integer
                                description: |
                                  (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
                                example: 1
                              text_max_length:
                                type: integer
                                description: |
                                  (text, multi_line_text) The maximum length allowed for a text or multi line text option.
                                example: 55
                              text_lines_limited:
                                type: boolean
                                description: |
                                  (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
                                example: true
                              text_max_lines:
                                type: integer
                                description: |
                                  (multi_line_text) The maximum number of lines allowed on a multi-line text input.
                                example: 4
                              number_limited:
                                type: boolean
                                description: |
                                  (numbers_only_text) Flag to limit the value of a number option.
                                example: true
                              number_limit_mode:
                                type: string
                                description: |
                                  (numbers_only_text) The type of limit on values entered for a number option.
                                example: lowest
                                enum:
                                  - lowest
                                  - highest
                                  - range
                              number_lowest_value:
                                type: number
                                description: |
                                  (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
                                example: 100
                              number_highest_value:
                                type: number
                                description: |
                                  (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
                              number_integers_only:
                                type: boolean
                                description: |
                                  (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
                                example: false
                              product_list_adjusts_inventory:
                                type: boolean
                                description: |
                                  (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
                              product_list_adjusts_pricing:
                                type: boolean
                                description: |
                                  (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
                              product_list_shipping_calc:
                                type: string
                                description: |
                                  (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
                                example: weight
                                enum:
                                  - none
                                  - weight
                                  - package
                            description: The values for option config can vary based on the Modifier created.
                          sort_order:
                            type: integer
                            description: 'Order in which the option is displayed on the storefront. '
                            example: 1
                          option_values:
                            minItems: 1
                            type: array
                            items:
                              title: Option Value
                              type: object
                              allOf:
                                - title: Option Value Base
                                  required:
                                    - label
                                    - sort_order
                                  type: object
                                  properties:
                                    is_default:
                                      type: boolean
                                      description: |
                                        The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                                      example: false
                                    label:
                                      type: string
                                      description: |
                                        The text display identifying the value on the storefront. Required in a /POST.
                                      example: Green
                                      x-required:
                                        - post
                                    sort_order:
                                      maximum: 2147483647
                                      minimum: -2147483648
                                      type: integer
                                      description: |
                                        The order in which the value will be displayed on the product page. Required in a /POST.
                                      example: 0
                                      x-required:
                                        - post
                                    value_data:
                                      type: object
                                      properties: {}
                                      description: |
                                        Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                                      x-nullable: true
                                  description: Common Option Value properties.
                                - type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: |
                                        The unique numeric ID of the value; increments sequentially.
                            x-required:
                              - post
                              - put
                          image_url:
                            type: string
                            description: Publicly available image url
                        description: Common Option properties.
                      - type: object
                        properties:
                          name:
                            type: string
                            description: |
                              The unique option name, auto-generated from the display name, a timestamp, and the product ID.
                            example: Add-a-$5-Donation1535042499-187
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 220
                  product_id: 192
                  name: Color (Colors only)
                  display_name: Color
                  type: swatch
                  sort_order: 0
                  option_values:
                    - id: 174
                      label: Beige
                      sort_order: 1
                      value_data:
                        colors:
                          - '#FAFAEB'
                      is_default: false
                    - id: 175
                      label: Grey
                      sort_order: 2
                      value_data:
                        colors:
                          - '#BDBDBD'
                      is_default: false
                    - id: 176
                      label: Black
                      sort_order: 3
                      value_data:
                        colors:
                          - '#000000'
                      is_default: false
                    - id: 189
                      label: Black-Walnut
                      sort_order: 4
                      value_data:
                        colors:
                          - '#e80ee8'
                      is_default: false
                  config: {}
                meta: {}
        '409':
          description: |
            The `Option` was in conflict with another option. This is the result of duplicate unique fields, such as `name`.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `Option` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: option
    delete:
      tags:
        - Product Variant Options
      summary: Delete a Product Variant Option
      description: Deletes a *Variant Option*.
      operationId: deleteOptionById
      parameters:
        - name: option_id
          in: path
          description: |
            The ID of the `Option`.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/OptionIdParam'
  '/catalog/products/{product_id}/options/{option_id}/values':
    get:
      tags:
        - Values
      summary: Get All Product Variant Option Values
      description: Returns a list of all *Variant Option Values*. Optional parameters can be passed in.
      operationId: getOptionValues
      parameters:
        - name: option_id
          in: path
          description: |
            The ID of the `Option`.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Option Value Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      title: Option Value
                      type: object
                      allOf:
                        - title: Option Value Base
                          required:
                            - label
                            - sort_order
                          type: object
                          properties:
                            is_default:
                              type: boolean
                              description: |
                                The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                              example: false
                            label:
                              type: string
                              description: |
                                The text display identifying the value on the storefront. Required in a /POST.
                              example: Green
                              x-required:
                                - post
                            sort_order:
                              maximum: 2147483647
                              minimum: -2147483648
                              type: integer
                              description: |
                                The order in which the value will be displayed on the product page. Required in a /POST.
                              example: 0
                              x-required:
                                - post
                            value_data:
                              type: object
                              properties: {}
                              description: |
                                Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                              x-nullable: true
                          description: Common Option Value properties.
                        - type: object
                          properties:
                            id:
                              type: integer
                              description: |
                                The unique numeric ID of the value; increments sequentially.
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                description: Get Option Values response.
              example:
                data:
                  - id: 174
                    label: Beige
                    sort_order: 1
                    value_data:
                      colors:
                        - '#FAFAEB'
                    is_default: false
                  - id: 175
                    label: Grey
                    sort_order: 2
                    value_data:
                      colors:
                        - '#BDBDBD'
                    is_default: false
                  - id: 176
                    label: Black
                    sort_order: 3
                    value_data:
                      colors:
                        - '#000000'
                    is_default: false
                  - id: 189
                    label: Black-Walnut
                    sort_order: 4
                    value_data:
                      colors:
                        - '#e80ee8'
                    is_default: false
                meta:
                  pagination:
                    total: 4
                    count: 4
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
    post:
      tags:
        - Values
      summary: Create a Product Variant Option Value
      description: |-
        Creates a *Variant Option Value*.

        **Required Fields**
        * label
        * sort_order

        **Read-Only Fields**
        * id

        **Limits**
        * 250 option values per option limit.
      operationId: createOptionValue
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: option_id
          in: path
          description: |
            The ID of the `Option`.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              title: Option Value Post
              description: The model for a POST to create option values on a product.
              allOf:
                - title: Option Value Base
                  required:
                    - label
                    - sort_order
                  type: object
                  properties:
                    is_default:
                      type: boolean
                      description: |
                        The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                      example: false
                    label:
                      type: string
                      description: |
                        The text display identifying the value on the storefront. Required in a /POST.
                      example: Green
                      x-required:
                        - post
                    sort_order:
                      maximum: 2147483647
                      minimum: -2147483648
                      type: integer
                      description: |
                        The order in which the value will be displayed on the product page. Required in a /POST.
                      example: 0
                      x-required:
                        - post
                    value_data:
                      type: object
                      properties: {}
                      description: |
                        Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                  description: Common Option Value properties.
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Option Value Response
                type: object
                properties:
                  data:
                    title: Option Value
                    type: object
                    allOf:
                      - title: Option Value Base
                        required:
                          - label
                          - sort_order
                        type: object
                        properties:
                          is_default:
                            type: boolean
                            description: |
                              The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                            example: false
                          label:
                            type: string
                            description: |
                              The text display identifying the value on the storefront. Required in a /POST.
                            example: Green
                            x-required:
                              - post
                          sort_order:
                            maximum: 2147483647
                            minimum: -2147483648
                            type: integer
                            description: |
                              The order in which the value will be displayed on the product page. Required in a /POST.
                            example: 0
                            x-required:
                              - post
                          value_data:
                            type: object
                            properties: {}
                            description: |
                              Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                            x-nullable: true
                        description: Common Option Value properties.
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the value; increments sequentially.
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 44
                  label: Pick a color
                  sort_order: 9
                  value_data:
                    colors:
                      - '#123c91, #FFFF00, #397a44'
                  is_default: false
        '422':
          description: |
            The `OptionValue` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: OptionValue
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/OptionIdParam'
  '/catalog/products/{product_id}/options/{option_id}/values/{value_id}':
    get:
      tags:
        - Values
      summary: Get a Product Variant Option Value
      description: Returns a single *Variant Option Value*. Optional parameters can be passed in.
      operationId: getOptionValueById
      parameters:
        - name: option_id
          in: path
          description: |
            The ID of the `Option`.
          required: true
          schema:
            type: integer
        - name: value_id
          in: path
          description: |
            The ID of the `Modifier/Option Value`.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Option Value Response
                type: object
                properties:
                  data:
                    title: Option Value
                    type: object
                    allOf:
                      - title: Option Value Base
                        required:
                          - label
                          - sort_order
                        type: object
                        properties:
                          is_default:
                            type: boolean
                            description: |
                              The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                            example: false
                          label:
                            type: string
                            description: |
                              The text display identifying the value on the storefront. Required in a /POST.
                            example: Green
                            x-required:
                              - post
                          sort_order:
                            maximum: 2147483647
                            minimum: -2147483648
                            type: integer
                            description: |
                              The order in which the value will be displayed on the product page. Required in a /POST.
                            example: 0
                            x-required:
                              - post
                          value_data:
                            type: object
                            properties: {}
                            description: |
                              Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                            x-nullable: true
                        description: Common Option Value properties.
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the value; increments sequentially.
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 44
                  label: Pick a color
                  sort_order: 9
                  value_data:
                    colors:
                      - '#123c91, #FFFF00, #397a44'
                  is_default: false
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Values
      summary: Update a Product Variant Option Value
      description: |-
        Updates a *Variant Option Value*.

        **Read-Only Fields**
        * id
      operationId: updateOptionValue
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: option_id
          in: path
          description: |
            The ID of the `Option`.
          required: true
          schema:
            type: integer
        - name: value_id
          in: path
          description: |
            The ID of the `Modifier/Option Value`.
          required: true
          schema:
            type: integer
      requestBody:
        description: |
          A BigCommerce `OptionValue` object.
        content:
          application/json:
            schema:
              title: Option Value Put
              description: The model for a PUT to update option values on a product.
              allOf:
                - title: Option Value Base
                  required:
                    - label
                    - sort_order
                  type: object
                  properties:
                    is_default:
                      type: boolean
                      description: |
                        The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                      example: false
                    label:
                      type: string
                      description: |
                        The text display identifying the value on the storefront. Required in a /POST.
                      example: Green
                      x-required:
                        - post
                    sort_order:
                      maximum: 2147483647
                      minimum: -2147483648
                      type: integer
                      description: |
                        The order in which the value will be displayed on the product page. Required in a /POST.
                      example: 0
                      x-required:
                        - post
                    value_data:
                      type: object
                      properties: {}
                      description: |
                        Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                  description: Common Option Value properties.
                - type: object
                  properties:
                    id:
                      type: integer
                      description: |
                        The unique numeric ID of the value; increments sequentially.
                      x-required:
                        - put
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Option Value Response
                type: object
                properties:
                  data:
                    title: Option Value
                    type: object
                    allOf:
                      - title: Option Value Base
                        required:
                          - label
                          - sort_order
                        type: object
                        properties:
                          is_default:
                            type: boolean
                            description: |
                              The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                            example: false
                          label:
                            type: string
                            description: |
                              The text display identifying the value on the storefront. Required in a /POST.
                            example: Green
                            x-required:
                              - post
                          sort_order:
                            maximum: 2147483647
                            minimum: -2147483648
                            type: integer
                            description: |
                              The order in which the value will be displayed on the product page. Required in a /POST.
                            example: 0
                            x-required:
                              - post
                          value_data:
                            type: object
                            properties: {}
                            description: |
                              Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                            x-nullable: true
                        description: Common Option Value properties.
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the value; increments sequentially.
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 44
                  label: Pick a color
                  sort_order: 9
                  value_data:
                    colors:
                      - '#123c91, #FFFF00, #397a44'
                  is_default: false
        '404':
          description: No option(s) were found with this query.
          content: {}
        '422':
          description: |
            The `OptionValue` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: OptionValue
    delete:
      tags:
        - Values
      summary: Delete a Product Variant Option Value
      description: Deletes a *Variant Option Value*.
      operationId: deleteOptionValueById
      parameters:
        - name: option_id
          in: path
          description: |
            The ID of the `Option`.
          required: true
          schema:
            type: integer
        - name: value_id
          in: path
          description: |
            The ID of the `Modifier/Option Value`.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/OptionIdParam'
      - $ref: '#/components/parameters/ValueIdParam'
components:
  schemas:
    productOption_Base:
      title: productOption_Base
      type: object
      properties:
        id:
          type: integer
          description: |
            The unique numerical ID of the option, increments sequentially.
          nullable: true
          example: 55
        product_id:
          type: integer
          description: |
            The unique numerical ID of the product to which the option belongs.
          example: 4
          x-required:
            - post
            - put
        display_name:
          maxLength: 255
          minLength: 1
          type: string
          description: |
            The name of the option shown on the storefront.
          example: Add-a-$5-Donation1535042499-187
          x-required:
            - post
            - put
        type:
          type: string
          description: |
            The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.
          enum:
            - radio_buttons
            - rectangles
            - dropdown
            - product_list
            - product_list_with_images
            - swatch
          x-required:
            - post
            - put
        config:
          $ref: '#/components/schemas/productOptionConfig_Full'
        sort_order:
          type: integer
          description: 'Order in which the option is displayed on the storefront. '
          example: 1
        option_values:
          type: array
          items:
            $ref: '#/components/schemas/productOptionOptionValue_Full'
      description: Common Option properties.
      x-internal: false
    productOption_Full:
      title: productOption_Full
      allOf:
        - $ref: '#/components/schemas/productOption_Base'
        - type: object
          properties:
            name:
              type: string
              description: |
                The unique option name, auto-generated from the display name, a timestamp, and the product ID.
              example: Add-a-$5-Donation1535042499-187
      x-internal: false
    productOptionOptionValue_Base:
      title: productOptionOptionValue_Base
      required:
        - label
        - sort_order
      type: object
      properties:
        is_default:
          type: boolean
          description: |
            The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
          example: false
        label:
          type: string
          description: |
            The text display identifying the value on the storefront. Required in a /POST.
          example: Green
          x-required:
            - post
        sort_order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: |
            The order in which the value will be displayed on the product page. Required in a /POST.
          example: 0
          x-required:
            - post
        value_data:
          type: object
          properties: {}
          description: |
            Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state. If no data is available, returns `null`.
          nullable: true
      description: Common Product Option `option_value` properties.
      x-internal: false
    productOptionOptionValue_Full:
      title: productOptionOptionValue_Full
      description: Product Option `option_value`.
      allOf:
        - $ref: '#/components/schemas/productOptionOptionValue_Base'
        - type: object
          properties:
            id:
              type: integer
              description: |
                The unique numeric ID of the value; increments sequentially.
      x-internal: false
    productOptionConfig_Full:
      title: productOptionConfig_Full
      type: object
      properties:
        default_value:
          type: string
          description: |
            (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
        checked_by_default:
          type: boolean
          description: |
            (checkbox) Flag for setting the checkbox to be checked by default.
        checkbox_label:
          type: string
          description: |
            (checkbox) Label displayed for the checkbox option.
        date_limited:
          type: boolean
          description: |
            (date) Flag to limit the dates allowed to be entered on a date option.
        date_limit_mode:
          type: string
          description: |
            (date) The type of limit that is allowed to be entered on a date option.
          example: range
          enum:
            - earliest
            - range
            - latest
        date_earliest_value:
          type: string
          description: |
            (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
          format: date
        date_latest_value:
          type: string
          description: |
            (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
          format: date
        file_types_mode:
          type: string
          description: |
            (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
          example: specific
          enum:
            - specific
            - all
        file_types_supported:
          type: array
          description: |
            (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
              `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
              `other` - Allows file types defined in the `file_types_other` array.
          items:
            type: string
            example: 'images, documents, other'
        file_types_other:
          type: array
          description: |
            (file) A list of other file types allowed with the file upload option.
          items:
            type: string
            example: pdf
        file_max_size:
          type: integer
          description: |
            (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
          example: 5
        text_characters_limited:
          type: boolean
          description: |
            (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
        text_min_length:
          type: integer
          description: |
            (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
          example: 1
        text_max_length:
          type: integer
          description: |
            (text, multi_line_text) The maximum length allowed for a text or multi line text option.
          example: 55
        text_lines_limited:
          type: boolean
          description: |
            (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
          example: true
        text_max_lines:
          type: integer
          description: |
            (multi_line_text) The maximum number of lines allowed on a multi-line text input.
          example: 4
        number_limited:
          type: boolean
          description: |
            (numbers_only_text) Flag to limit the value of a number option.
          example: true
        number_limit_mode:
          type: string
          description: |
            (numbers_only_text) The type of limit on values entered for a number option.
          example: lowest
          enum:
            - lowest
            - highest
            - range
        number_lowest_value:
          type: number
          description: |
            (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
          example: 100
        number_highest_value:
          type: number
          description: |
            (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
        number_integers_only:
          type: boolean
          description: |
            (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
          example: false
        product_list_adjusts_inventory:
          type: boolean
          description: |
            (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
        product_list_adjusts_pricing:
          type: boolean
          description: |
            (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
        product_list_shipping_calc:
          type: string
          description: |
            (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
          example: weight
          enum:
            - none
            - weight
            - package
      description: The values for option config can vary based on the Modifier created.
      x-internal: false
    metaCollection_Full:
      title: metaCollection_Full
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/pagination_Full'
      description: 'Data about the response, including pagination and collection totals.'
      x-internal: false
    pagination_Full:
      title: pagination_Full
      type: object
      properties:
        total:
          type: integer
          description: |
            Total number of items in the result set.
          example: 36
        count:
          type: integer
          description: |
            Total number of items in the collection response.
          example: 36
        per_page:
          type: integer
          description: |
            The amount of items returned in the collection per page, controlled by the limit parameter.
          example: 50
        current_page:
          type: integer
          description: |
            The page you are currently on within the collection.
          example: 1
        total_pages:
          type: integer
          description: |
            The total number of pages in the collection.
          example: 1
        links:
          type: object
          properties:
            previous:
              type: string
              description: |
                Link to the previous page returned in the response.
            current:
              type: string
              description: |
                Link to the current page returned in the response.
              example: '?page=1&limit=50'
            next:
              type: string
              description: |
                Link to the next page returned in the response.
          description: |
            Pagination links for the previous and next parts of the whole collection.
      description: 'Data about the response, including pagination and collection totals.'
      x-internal: false
    metaEmpty_Full:
      type: object
      title: Response meta
      properties: {}
      additionalProperties: true
      description: Response metadata.
  parameters:
    ProductIdParam:
      name: product_id
      in: path
      description: |
        The ID of the `Product` to which the resource belongs.
      required: true
      schema:
        type: integer
    ValueIdParam:
      name: value_id
      description: |
        The ID of the `Modifier/Option Value`.
      required: true
      in: path
      schema:
        type: integer
    OptionIdParam:
      name: option_id
      description: |
        The ID of the `Option`.
      required: true
      in: path
      schema:
        type: integer
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Products | modify | `store_v2_products` |
        |  Products | read-only | `store_v2_products_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header

openapi: '3.0.3'
info:
  title: Catalog - Product Variants
  description: |-
    > The Catalog API manages products, categories, brands, bulk pricing rules, and more. To learn more about catalog resources, see the [Catalog Overview](/api-docs/store-management/catalog/products-overview).

    A Product Variant is a version of a product that has its own SKU. For example, a catalog might model a particular style of high-top sneakers that come in both red and blue as one product - high-tops - with two variants - red and blue. From a storefront point of view, Product Variants are often what shoppers seek. They are also the object that maps to SKUs and tracks inventory. A Product with one only Variant is a _base variant_.

    Our Catalog Product Variants endpoints let you work in two ways. 
    
    On a per-product basis, you can [create and manage Product Variants](/docs/rest-catalog/product-variants), their [images](/docs/rest-catalog/product-variants/images), and their [metafields](/docs/rest-catalog/product-variants/metafields), which are arbitrary key-value attributes.

    By design, Product Variants consist of a combination of [Product Variant Option values](/docs/rest-catalog/product-variant-options/values).

    This API family also provides endpoints that can make [batch updates](/docs/rest-catalog/product-variants/variants-batch#update-variants-batch) to Product Variants from different products across the Catalog, as well as [getting all variants](/docs/rest-catalog/product-variants/variants-batch#get-all-variants).

    The terms "product variant" and "variant" are used interchangeably throughout the documentation.

    > To learn more about authenticating Catalog endpoints, locate the **Authentication** section at the top of each endpoint, then click **Show Details**.

    ## Resources

    ### Webhooks
    Learn more about [Product webhook events](/api-docs/store-management/webhooks/webhook-events#products).

    ### Additional Catalog endpoints
    * [Brands](/docs/rest-catalog/brands)
    * [Categories](/docs/rest-catalog/categories)
    * [Category Trees](/docs/rest-catalog/category-trees)
    * [Products](/docs/rest-catalog/products)
    * [Product Modifiers](/docs/rest-catalog/product-modifiers)
    * [Product Variant Options](/docs/rest-catalog/product-variant-options)

  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  version: ''
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Product Variants
  - name: Variants (Batch)
  - name: Metafields
  - name: Images
paths:
  '/catalog/products/{product_id}/variants':
    get:
      tags:
        - Product Variants
      summary: Get All Product Variants
      description: Returns a list of product *Variants*. Optional parameters can be passed in.
      operationId: getVariantsByProductId
      parameters:
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Variant Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/productVariant_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
              example:
                data:
                  - id: 382
                    product_id: 192
                    sku: SMIT
                    sku_id: 348
                    price: 10
                    calculated_price: 10
                    sale_price: 8
                    retail_price: 10
                    map_price: {}
                    weight: 4
                    calculated_weight: 2
                    width: 5
                    height: 5
                    depth: 5
                    is_free_shipping: false
                    fixed_cost_shipping_price: 10
                    purchasing_disabled: false
                    purchasing_disabled_message: ''
                    image_url: ''
                    cost_price: 0
                    upc: ''
                    mpn: ''
                    gtin: ''
                    inventory_level: 0
                    inventory_warning_level: 0
                    bin_picking_number: ''
                    option_values:
                      - id: 174
                        label: Beige
                        option_id: 220
                        option_display_name: Color
                  - id: 383
                    product_id: 192
                    sku: SMIT-1
                    sku_id: 349
                    price: 25
                    calculated_price: 25
                    sale_price: 20
                    retail_price: 25
                    map_price: {}
                    weight: 2
                    calculated_weight: 1
                    width: 5
                    height: 5
                    depth: 5
                    is_free_shipping: false
                    fixed_cost_shipping_price: 10
                    purchasing_disabled: false
                    purchasing_disabled_message: ''
                    image_url: ''
                    cost_price: 25
                    upc: ''
                    mpn: ''
                    gtin: ''
                    inventory_level: 0
                    inventory_warning_level: 0
                    bin_picking_number: ''
                    option_values:
                      - id: 175
                        label: Grey
                        option_id: 220
                        option_display_name: Color
                  - id: 384
                    product_id: 192
                    sku: SMIT-2
                    sku_id: 350
                    price: 25
                    calculated_price: 25
                    sale_price: 20
                    retail_price: 25
                    map_price: {}
                    weight: 2
                    calculated_weight: 1
                    width: 5
                    height: 5
                    depth: 5
                    is_free_shipping: false
                    fixed_cost_shipping_price: 10
                    purchasing_disabled: false
                    purchasing_disabled_message: ''
                    image_url: ''
                    cost_price: 25
                    upc: ''
                    mpn: ''
                    gtin: ''
                    inventory_level: 0
                    inventory_warning_level: 0
                    bin_picking_number: ''
                    option_values:
                      - id: 176
                        label: Black
                        option_id: 220
                        option_display_name: Color
                meta:
                  pagination:
                    total: 3
                    count: 3
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    post:
      tags:
        - Product Variants
      summary: Create a Product Variant
      description: |-
        Creates a *Product Variant*.

        **Required Fields**
        * sku
        * option_values

        **Read-Only Fields**
        * id

        **Limits**
        * 600 SKUs per product limit.
        * 255 characters SKU length limit.

        Variants need to be created one at a time using this endpoint. To use a variant array and create products and variants in the same call use the [Create Products](/docs/rest-catalog/products#create-a-product) during the initial product creation.
      operationId: createVariant
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productVariant_Post'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Variant Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/productVariant_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              examples:
                example-1:
                  value:
                    data:
                      cost_price: 0
                      price: 0
                      sale_price: 0
                      retail_price: 0
                      weight: 0
                      width: 0
                      height: 0
                      depth: 0
                      is_free_shipping: true
                      fixed_cost_shipping_price: 0
                      purchasing_disabled: true
                      purchasing_disabled_message: string
                      upc: string
                      inventory_level: 0
                      inventory_warning_level: 0
                      bin_picking_number: string
                      mpn: string
                      gtin: '012345678905'
                      id: 0
                      product_id: 0
                      sku: string
                      sku_id: 0
                      option_values:
                        - option_display_name: Color
                          label: Beige
                          id: 146
                          option_id: 151
                      calculated_price: 0
                      calculated_weight: 0
                    meta: {}
                example-2:
                  value:
                    data:
                      id: 384
                      product_id: 192
                      sku: SMIT-2
                      sku_id: 350
                      price: 25
                      calculated_price: 25
                      sale_price: 20
                      retail_price: 25
                      map_price: {}
                      weight: 2
                      calculated_weight: 1
                      width: 5
                      height: 5
                      depth: 5
                      is_free_shipping: false
                      fixed_cost_shipping_price: 10
                      purchasing_disabled: false
                      purchasing_disabled_message: ''
                      image_url: ''
                      cost_price: 25
                      upc: ''
                      mpn: ''
                      gtin: ''
                      inventory_level: 0
                      inventory_warning_level: 0
                      bin_picking_number: ''
                      option_values:
                        - id: 176
                          label: Black
                          option_id: 220
                          option_display_name: Color
                    meta: {}
        '207':
          description: |-
            Multi-status. The product information was updated successfully, but the inventory data failed to update. 
            
            Verify that the inventory-related updates are well-formed and correct; for example, that they donʼt result in negative stock levels. Then consider updating the inventory data again.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/productVariant_Full'
                  errors: 
                    $ref: '#/components/schemas/errorMultiStatus'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
      x-codegen-request-body-name: Variant
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
  '/catalog/products/{product_id}/variants/{variant_id}':
    get:
      tags:
        - Product Variants
      summary: Get a Product Variant
      description: Returns a single product *Variant*. Optional parameters can be passed in.
      operationId: getVariantById
      parameters:
        - name: variant_id
          in: path
          description: |
            ID of the variant on a product, or on an associated Price List Record.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Variant Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/productVariant_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 384
                  product_id: 192
                  sku: SMIT-2
                  sku_id: 350
                  price: 25
                  calculated_price: 25
                  sale_price: 20
                  retail_price: 25
                  map_price: {}
                  weight: 2
                  calculated_weight: 1
                  width: 5
                  height: 5
                  depth: 5
                  is_free_shipping: false
                  fixed_cost_shipping_price: 10
                  purchasing_disabled: false
                  purchasing_disabled_message: ''
                  image_url: ''
                  cost_price: 25
                  upc: ''
                  mpn: ''
                  gtin: ''
                  inventory_level: 0
                  inventory_warning_level: 0
                  bin_picking_number: ''
                  option_values:
                    - id: 176
                      label: Black
                      option_id: 220
                      option_display_name: Color
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Product Variants
      summary: Update a Product Variant
      description: Updates a product *Variant*.
      operationId: updateVariant
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: variant_id
          in: path
          description: |
            ID of the variant on a product, or on an associated Price List Record.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productVariant_Put'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Variant Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/productVariant_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  bin_picking_number: '0'
                  calculated_price: 85
                  calculated_weight: 1
                  cost_price: 0
                  depth: 22
                  fixed_cost_shipping_price: 0
                  gtin: ''
                  height: 14.6
                  id: 65
                  inventory_level: 0
                  inventory_warning_level: 0
                  is_free_shipping: false
                  map_price: 0
                  mpn: TR-SML02
                  option_values: []
                  price: 89
                  product_id: 81
                  purchasing_disabled: true
                  purchasing_disabled_message: This item is not available.
                  retail_price: 89
                  sale_price: 85
                  sku: OTS
                  sku_id: 10
                  upc: ''
                  weight: 1
                  width: 2
                meta: {}
        '207':
          description: |-
            Multi-status. The product information was updated successfully, but the inventory data failed to update. 
            
            Verify that the inventory-related updates are well-formed and correct; for example, that they donʼt result in negative stock levels. Then consider updating the inventory data again.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/productVariant_Full'
                  errors: 
                    $ref: '#/components/schemas/errorMultiStatus'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
      x-codegen-request-body-name: Variant
    delete:
      tags:
        - Product Variants
      summary: Delete a Product Variant
      description: Deletes a product *Variant*.
      operationId: deleteVariantById
      parameters:
        - name: variant_id
          in: path
          description: |
            ID of the variant on a product, or on an associated Price List Record.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/VariantIdParam'
  '/catalog/products/{product_id}/variants/{variant_id}/metafields':
    get:
      tags:
        - Metafields
      summary: Get All Product Variant Metafields
      description: Returns a list of product variant *Metafields*. Optional parameters can be passed in.
      operationId: getVariantMetafieldsByProductIdAndVariantId
      parameters:
        - name: variant_id
          in: path
          description: |
            ID of the variant on a product, or on an associated Price List Record.
          required: true
          schema:
            type: integer

        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: key
          in: query
          description: |
            Filter based on a metafield's key.
          schema:
            type: string
        - name: namespace
          in: query
          description: Filter based on a metafield's namespace.
          schema:
            type: string
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Meta Field Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/categoriesTree_Resp'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    post:
      tags:
        - Metafields
      summary: Create a Product Variant Metafield
      description: |-
        Creates a product variant *Metafield*.

        **Required Fields:**
        * permission_set
        * namespace
        * key
        * value

        **Read-Only Fields**
        * id

        **Note:** The maxiumum number of metafields allowed on each order, product, category, variant, or brand is 250 per client ID. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in the Help Center.
      operationId: createVariantMetafield
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: variant_id
          in: path
          description: |
            ID of the variant on a product, or on an associated Price List Record.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Base'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Metafield Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 4
                  key: location_id
                  value: 'Shelf 3, Bin 5'
                  namespace: App Namespace
                  permission_set: app_only
                  resource_type: variant
                  resource_id: 137
                  description: Where products are located
                  date_created: '2021-08-06T19:15:35+00:00'
                  date_modified: '2021-08-06T19:15:35+00:00'
                meta: {}
        '409':
          description: |
            The `Metafield` was in conflict with another `Metafield`. This can be the result of duplicate unique-key combinations of the app's client id, namespace, key, resource_type, and resource_id.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `Metafield` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: Metafield
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/VariantIdParam'
  '/catalog/products/{product_id}/variants/{variant_id}/metafields/{metafield_id}':
    get:
      tags:
        - Metafields
      summary: Get a Product Variant Metafields
      description: Returns a single product variant *Metafield*. Optional parameters can be passed in.
      operationId: getVariantMetafieldByProductIdAndVariantId
      parameters:
        - name: metafield_id
          in: path
          description: |
            The ID of the `Metafield`.
          required: true
          schema:
            type: integer
        - name: variant_id
          in: path
          description: |
            ID of the variant on a product, or on an associated Price List Record.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Metafield Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 8
                  key: location_id
                  value: 'Shelf 3, Bin 5'
                  namespace: Inventory Namespace
                  permission_set: read
                  resource_type: variant
                  resource_id: 158
                  description: Where products are located
                  date_created: '2018-09-13T16:42:37+00:00'
                  date_modified: '2018-09-13T16:42:37+00:00'
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Metafields
      summary: Update Product Variant Metafields
      description: "Updates a product variant *Metafield*.\n\n**Required Fields:**\n* none\n\n**Read-Only Fields**\n* id\n* These fields can only be modified by the app (API credentials) that created the metafield:\n\t* namespace\n\t* key\n\t* permission_set\n\n**Usage Notes**\n* Attempting to modify `namespace`, `key`, and `permission_set` fields using a client ID different from the one used to create those metafields will result in a 403 error message. "
      operationId: updateVariantMetafield
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: metafield_id
          in: path
          description: |
            The ID of the `Metafield`.
          required: true
          schema:
            type: integer
        - name: variant_id
          in: path
          description: |
            ID of the variant on a product, or on an associated Price List Record.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Base'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Metafield Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 8
                  key: location_id
                  value: 'Shelf 3, Bin 5'
                  namespace: Inventory Namespace
                  permission_set: read
                  resource_type: variant
                  resource_id: 158
                  description: Where products are located
                  date_created: '2018-09-13T16:42:37+00:00'
                  date_modified: '2018-09-13T16:42:37+00:00'
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
      x-codegen-request-body-name: Metafield
    delete:
      tags:
        - Metafields
      summary: Delete a Variant Metafield
      description: Deletes a product variant *Metafield*.
      operationId: deleteVariantMetafieldById
      parameters:
        - name: metafield_id
          in: path
          description: |
            The ID of the `Metafield`.
          required: true
          schema:
            type: integer
        - name: variant_id
          in: path
          description: |
            ID of the variant on a product, or on an associated Price List Record.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/VariantIdParam'
      - $ref: '#/components/parameters/MetafieldIdParam'
  '/catalog/products/{product_id}/variants/{variant_id}/image':
    post:
      tags:
        - Images
      summary: Create a Variant Image
      description: |-
        Creates a *Variant Image*.

        Only one image can be explicitly associated with a Variant. If the Variant already has an associated image, overwrites the existing Variant Image.

        The image displays on the storefront when the Variant is selected.

         **Required Fields**
        - image_file: Form posts. Files larger than 1 MB are not accepted
        - image_url: Any publicly available URL
      operationId: createVariantImage
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: variant_id
          in: path
          description: |
            ID of the variant on a product, or on an associated Price List Record.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                image_url:
                  type: string
                  description: |
                    A public URL for a GIF, JPEG, or PNG image. Limit of 8MB per file.
              description: 'An object containing a publicly accessible image URL, or a form post that contains an image file.'
          multipart/form-data:
            schema:
              type: object
              properties:
                image_url:
                  type: string
                  description: |
                    A public URL for a GIF, JPEG, or PNG image. Limit of 8MB per file.
              description: 'An object containing a publicly accessible image URL, or a form post that contains an image file.'
        required: false
      responses:
        '200':
          description: '`image_url` is returned for both `image_file` and `image_url`.'
          content:
            application/json:
              schema:
                title: Image Response
                type: object
                properties:
                  data:
                    title: Resource Image
                    type: object
                    properties:
                      image_url:
                        type: string
                        description: |
                          A public URL for a GIF, JPEG, or PNG image. Limit of 8MB per file.
                    description: 'An object containing a publicly accessible image URL, or a form post that contains an image file.'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |-
                  Image Response returns for:
                  * Create Variant Image
                  * Create Modifier Image
                  * Create Category Image
                  * Create Brand Image
              example:
                data:
                  image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/product_images/attribute_rule_images/85_source_1536863430.png'
                meta: {}
        '400':
          description: Bad Request. The requested resource could not be downloaded and may be invalid. Possible reasons include malformed request syntax or the file host blocking requests.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '422':
          description: |
            Image was not valid. This is the result of a missing `image_file` field or of an incorrect file type. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '500':
          description: Returns for an `image_file` larger than 1 MB.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: body
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/VariantIdParam'
  '/catalog/variants':
    get:
      tags:
        - Variants (Batch)
      summary: Get All Variants
      description: Returns a list of all variants in your catalog. Optional parameters can be passed in.
      operationId: getVariants
      parameters:
        - name: id
          in: query
          description: Filter items by ID.
          schema:
            type: integer
        - name: sku
          in: query
          description: Filter items by SKU.
          schema:
            type: string
        - name: upc
          in: query
          description: Filter items by UPC.
          schema:
            type: string
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: include_fields
          in: query
          description: Fields to include, in a comma-separated list. The ID and the specified fields will be returned.
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.
          schema:
            type: string
        - name: product_id
          in: query
          description: 'A comma-separated list of IDs of products whose variants were requested. For example:`?product_id=:id``?product_id:in=77,80,81`'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Variant Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      allOf:
                        - title: Variant Base
                          type: object
                          properties:
                            cost_price:
                              minimum: 0
                              type: number
                              description: The cost price of the variant. Not affected by Price List prices.
                              format: double
                              x-nullable: true
                            price:
                              minimum: 0
                              type: number
                              description: 'This variant’s base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product’s default price (set in the Product resource’s `price` field) will be used as the base price.'
                              format: double
                              x-nullable: true
                            sale_price:
                              minimum: 0
                              type: number
                              description: 'This variant’s sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s sale price (set in the Product resource’s `price` field) will be used as the sale price.'
                              format: double
                              x-nullable: true
                            retail_price:
                              minimum: 0
                              type: number
                              description: 'This variant’s retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s retail price (set in the Product resource’s `price` field) will be used as the retail price.'
                              format: double
                              x-nullable: true
                            weight:
                              minimum: 0
                              type: number
                              description: 'This variant’s base weight on the storefront. If this value is null, the product’s default weight (set in the Product resource’s weight field) will be used as the base weight.'
                              format: double
                              x-nullable: true
                            width:
                              minimum: 0
                              type: number
                              description: |
                                Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.
                              format: double
                              x-nullable: true
                            height:
                              minimum: 0
                              type: number
                              description: |
                                Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.
                              format: double
                              x-nullable: true
                            depth:
                              minimum: 0
                              type: number
                              description: |
                                Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.
                              format: double
                              x-nullable: true
                            is_free_shipping:
                              type: boolean
                              description: |
                                Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.
                            fixed_cost_shipping_price:
                              minimum: 0
                              type: number
                              description: |
                                A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.
                              format: double
                              x-nullable: true
                            purchasing_disabled:
                              type: boolean
                              description: 'If `true`, this variant will not be purchasable on the storefront.'
                            purchasing_disabled_message:
                              maxLength: 255
                              minLength: 0
                              type: string
                              description: 'If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.'
                            upc:
                              type: string
                              description: The UPC code used in feeds for shopping comparison sites and external channel integrations.
                              x-nullable: true
                            inventory_level:
                              type: integer
                              description: |- 
                                Inventory level for the variant, which is used when the product’s inventory_tracking is set to `variant`. The Catalog API returns the inventory for only the default location.

                                The inventory for a variant cannot exceed 2,147,483,647 in the catalog. The sum of the variant inventories, or the total inventory for a product, cannot exceed 2,147,483,647. 
                                
                                If you exceed the limit, the store sets the variant inventory to the limit if no other variant inventories are set. If other variant inventories are set, the store does not save the variant inventory rather than setting the variant inventory to the remaining limit.

                                The Catalog API handles limits in a different way than the Inventory API. For more information, see [Limit handling](/buy-online-pick-up-in-store/inventory#limit-handling-in-inventory-versus-catalog-api). 
                              x-nullable: true
                              maximum: 2147483647
                            inventory_warning_level:
                              type: integer
                              description: 'When the variant hits this inventory level, it is considered low stock.'
                              x-nullable: true
                              maximum: 2147483647
                            bin_picking_number:
                              maxLength: 255
                              minLength: 0
                              type: string
                              description: Identifies where in a warehouse the variant is located.
                              x-nullable: true
                          description: Common Variant properties.
                        - type: object
                          properties:
                            id:
                              type: integer
                            product_id:
                              type: integer
                            sku:
                              type: string
                            sku_id:
                              type: integer
                              description: Read-only reference to v2 API's SKU ID. Null if it is a base variant.
                              x-nullable: true
                            option_values:
                              type: array
                              description: Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant.
                              items:
                                title: Option Value Variant
                                type: object
                                allOf:
                                  - title: Option Value Product Base
                                    type: object
                                    properties:
                                      option_display_name:
                                        maxLength: 255
                                        minLength: 1
                                        type: string
                                        description: |
                                          The name of the option.
                                        example: Color
                                        x-required:
                                          - post
                                      label:
                                        maxLength: 255
                                        minLength: 1
                                        type: string
                                        description: |
                                          The label of the option value.
                                        example: Beige
                                        x-required:
                                          - post
                                    description: Common Option Value Product properties.
                                  - type: object
                                    properties:
                                      id:
                                        type: integer
                                      option_id:
                                        type: integer
                            calculated_price:
                              type: number
                              description: |
                                The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.
                              format: double
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
        '404':
          description: The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Variants (Batch)
      summary: Update Variants (Batch)
      description: |-
        Updates a batch of `variant` objects. Currently the limit is 50 variants however this is subject to change.

        **Required Fields**

        To update an existing variant:
        * id (variant id)

        To create a new variant:
        * product_id
        * sku
        * option_values
          - id (option_value ID - Example: 146)
          - option_id (Option ID - Example: 151)

      operationId: updateVariantsBatch
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Variants Collection Put
              type: array
              items:
                title: Variant Put
                type: object
                description: |
                  The model for a PUT to update variants on a product.
                allOf:
                  - title: Variant Base
                    type: object
                    properties:
                      cost_price:
                        minimum: 0
                        type: number
                        description: The cost price of the variant. Not affected by Price List prices.
                        format: double
                        x-nullable: true
                        example: 40
                      price:
                        minimum: 0
                        type: number
                        description: 'This variant’s base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product’s default price (set in the Product resource’s `price` field) will be used as the base price.'
                        format: double
                        x-nullable: true
                        example: 40
                      sale_price:
                        minimum: 0
                        type: number
                        description: 'This variant’s sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s sale price (set in the Product resource’s `price` field) will be used as the sale price.'
                        format: double
                        x-nullable: true
                        example: 40
                      retail_price:
                        minimum: 0
                        type: number
                        description: 'This variant’s retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s retail price (set in the Product resource’s `price` field) will be used as the retail price.'
                        format: double
                        x-nullable: true
                        example: 40
                      weight:
                        minimum: 0
                        type: number
                        description: 'This variant’s base weight on the storefront. If this value is null, the product’s default weight (set in the Product resource’s weight field) will be used as the base weight.'
                        format: double
                        x-nullable: true
                        example: 5
                      width:
                        minimum: 0
                        type: number
                        description: |
                          Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.
                        format: double
                        x-nullable: true
                        example: 5
                      height:
                        minimum: 0
                        type: number
                        description: |
                          Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.
                        format: double
                        x-nullable: true
                        example: 5
                      depth:
                        minimum: 0
                        type: number
                        description: |
                          Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.
                        format: double
                        x-nullable: true
                        example: 5
                      is_free_shipping:
                        type: boolean
                        description: |
                          Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.
                      fixed_cost_shipping_price:
                        minimum: 0
                        type: number
                        description: |
                          A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.
                        format: double
                        x-nullable: true
                      purchasing_disabled:
                        type: boolean
                        description: 'If `true`, this variant will not be purchasable on the storefront.'
                      purchasing_disabled_message:
                        maxLength: 255
                        minLength: 0
                        type: string
                        description: 'If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.'
                      upc:
                        type: string
                        description: The UPC code used in feeds for shopping comparison sites and external channel integrations.
                        x-nullable: true
                        example: "1234"
                      inventory_level:
                        type: integer
                        description: |- 
                          Inventory level for the variant, which is used when the product’s inventory_tracking is set to `variant`. The Catalog API returns the inventory for only the default location.

                          The inventory for a variant cannot exceed 2,147,483,647 in the catalog. The sum of the variant inventories, or the total inventory for a product, cannot exceed 2,147,483,647. 
                          
                          If you exceed the limit, the store sets the variant inventory to the limit if no other variant inventories are set. If other variant inventories are set, the store does not save the variant inventory rather than setting the variant inventory to the remaining limit.

                          The Catalog API handles limits in a different way than the Inventory API. For more information, see [Limit handling](/buy-online-pick-up-in-store/inventory#limit-handling-in-inventory-versus-catalog-api). 
                        x-nullable: true
                        maximum: 2147483647
                        example: 21474
                      inventory_warning_level:
                        type: integer
                        description: 'When the variant hits this inventory level, it is considered low stock.'
                        x-nullable: true
                        maximum: 2147483647
                        example: 5474
                      bin_picking_number:
                        maxLength: 255
                        minLength: 0
                        type: string
                        description: Identifies where in a warehouse the variant is located.
                        x-nullable: true
                    description: Common Variant properties.
                  - type: object
                    properties:
                      id:
                        type: integer
                        example: 154
                        x-required:
                          - put
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Variant Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      allOf:
                        - title: Variant Base
                          type: object
                          properties:
                            cost_price:
                              minimum: 0
                              type: number
                              description: The cost price of the variant. Not affected by Price List prices.
                              format: double
                              x-nullable: true
                            price:
                              minimum: 0
                              type: number
                              description: 'This variant’s base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product’s default price (set in the Product resource’s `price` field) will be used as the base price.'
                              format: double
                              x-nullable: true
                            sale_price:
                              minimum: 0
                              type: number
                              description: 'This variant’s sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s sale price (set in the Product resource’s `price` field) will be used as the sale price.'
                              format: double
                              x-nullable: true
                            retail_price:
                              minimum: 0
                              type: number
                              description: 'This variant’s retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s retail price (set in the Product resource’s `price` field) will be used as the retail price.'
                              format: double
                              x-nullable: true
                            weight:
                              minimum: 0
                              type: number
                              description: 'This variant’s base weight on the storefront. If this value is null, the product’s default weight (set in the Product resource’s weight field) will be used as the base weight.'
                              format: double
                              x-nullable: true
                            width:
                              minimum: 0
                              type: number
                              description: |
                                Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.
                              format: double
                              x-nullable: true
                            height:
                              minimum: 0
                              type: number
                              description: |
                                Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.
                              format: double
                              x-nullable: true
                            depth:
                              minimum: 0
                              type: number
                              description: |
                                Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.
                              format: double
                              x-nullable: true
                            is_free_shipping:
                              type: boolean
                              description: |
                                Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.
                            fixed_cost_shipping_price:
                              minimum: 0
                              type: number
                              description: |
                                A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.
                              format: double
                              x-nullable: true
                            purchasing_disabled:
                              type: boolean
                              description: 'If `true`, this variant will not be purchasable on the storefront.'
                            purchasing_disabled_message:
                              maxLength: 255
                              minLength: 0
                              type: string
                              description: 'If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.'
                            upc:
                              type: string
                              description: The UPC code used in feeds for shopping comparison sites and external channel integrations.
                              x-nullable: true
                            inventory_level:
                              type: integer
                              description: |- 
                                Inventory level for the variant, which is used when the product’s inventory_tracking is set to `variant`. The Catalog API returns the inventory for only the default location.

                                The inventory for a variant cannot exceed 2,147,483,647 in the catalog. The sum of the variant inventories, or the total inventory for a product, cannot exceed 2,147,483,647. 
                                
                                If you exceed the limit, the store sets the variant inventory to the limit if no other variant inventories are set. If other variant inventories are set, the store does not save the variant inventory rather than setting the variant inventory to the remaining limit.

                                The Catalog API handles limits in a different way than the Inventory API. For more information, see [Limit handling](/buy-online-pick-up-in-store/inventory#limit-handling-in-inventory-versus-catalog-api). 
                              x-nullable: true
                              maximum: 2147483647
                            inventory_warning_level:
                              type: integer
                              description: 'When the variant hits this inventory level, it is considered low stock.'
                              x-nullable: true
                              maximum: 2147483647
                            bin_picking_number:
                              maxLength: 255
                              minLength: 0
                              type: string
                              description: Identifies where in a warehouse the variant is located.
                              x-nullable: true
                          description: Common Variant properties.
                        - type: object
                          properties:
                            id:
                              type: integer
                            product_id:
                              type: integer
                            sku:
                              type: string
                            sku_id:
                              type: integer
                              description: Read-only reference to v2 API's SKU ID. Null if it is a base variant.
                              x-nullable: true
                            option_values:
                              type: array
                              description: Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant.
                              items:
                                title: Option Value Variant
                                type: object
                                allOf:
                                  - title: Option Value Product Base
                                    type: object
                                    properties:
                                      option_display_name:
                                        maxLength: 255
                                        minLength: 1
                                        type: string
                                        description: |
                                          The name of the option.
                                        example: Color
                                        x-required:
                                          - post
                                      label:
                                        maxLength: 255
                                        minLength: 1
                                        type: string
                                        description: |
                                          The label of the option value.
                                        example: Beige
                                        x-required:
                                          - post
                                    description: Common Option Value Product properties.
                                  - type: object
                                    properties:
                                      id:
                                        type: integer
                                      option_id:
                                        type: integer
                            calculated_price:
                              type: number
                              description: |
                                The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.
                              format: double
                  meta:
                    title: Collection Meta
                    type: object
                    properties:
                      pagination:
                        title: Pagination
                        type: object
                        properties:
                          total:
                            type: integer
                            description: |
                              Total number of items in the result set.
                            example: 36
                          count:
                            type: integer
                            description: |
                              Total number of items in the collection response.
                            example: 36
                          per_page:
                            type: integer
                            description: |
                              The amount of items returned in the collection per page, controlled by the limit parameter.
                            example: 50
                          current_page:
                            type: integer
                            description: |
                              The page you are currently on within the collection.
                            example: 1
                          total_pages:
                            type: integer
                            description: |
                              The total number of pages in the collection.
                            example: 1
                          links:
                            type: object
                            properties:
                              previous:
                                type: string
                                description: |
                                  Link to the previous page returned in the response.
                              current:
                                type: string
                                description: |
                                  Link to the current page returned in the response.
                                example: '?page=1&limit=50'
                              next:
                                type: string
                                description: |
                                  Link to the next page returned in the response.
                            description: |
                              Pagination links for the previous and next parts of the whole collection.
                        description: 'Data about the response, including pagination and collection totals.'
                    description: 'Data about the response, including pagination and collection totals.'
        '413':
          description: ''
          content:
            application/json:
              example:
                errors: {}
                status: 413
                title: The request payload is too large. The maximum items allowed in the array is 50
                type: /api-docs/getting-started/api-status-codes
        '422':
          description: |
            This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Variants Batch Error Response
                type: object
                properties:
                  batch_errors:
                    type: array
                    items:
                      title: Error Response
                      type: object
                      allOf:
                        - title: Base Error
                          type: object
                          properties:
                            status:
                              type: integer
                              description: |
                                The HTTP status code.
                            title:
                              type: string
                              description: |
                                The error title describing the particular error.
                            type:
                              type: string
                            instance:
                              type: string
                          description: |
                            Error payload for the BigCommerce API.
                        - type: object
                          properties:
                            errors:
                              title: Detailed Errors
                              type: object
                              properties: {}
                              additionalProperties: true
                description: |
                  Errors during batch usage for the BigCommerce API.
      x-codegen-request-body-name: body
    parameters:
      - $ref: '#/components/parameters/Accept'
components:
  schemas:
    categoriesTree_Resp:
      title: categoriesTree_Resp
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/categoriesTreeNode_Full'
        meta:
          $ref: '#/components/schemas/metaEmpty_Full'
      description: |
        Returns the categories tree, a nested lineage of the categories with parent->child relationship. The Category objects returned are simplified versions of the category objects returned in the rest of this API.
      x-internal: false
    categoriesTreeNode_Full:
      title: categoriesTreeNode_Full
      type: object
      properties:
        id:
          type: integer
          description: |
            The unique numeric ID of the category; increments sequentially.
          example: 26
        parent_id:
          type: integer
          description: |
            The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.
          example: 25
        name:
          type: string
          description: |
            The name displayed for the category. Name is unique with respect to the category's siblings.
          example: Bath
        is_visible:
          type: boolean
          description: |
            Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.
          example: true
        url:
          type: string
          description: |
            The custom URL for the category on the storefront.
          example: /towels/bath-towels/
      description: Used to reflect parent <> child category relationships. Used by Category Tree.
      x-internal: false
    productVariant_Base:
      title: productVariant_Base
      type: object
      properties:
        cost_price:
          minimum: 0
          type: number
          description: The cost price of the variant. Not affected by Price List prices.
          format: double
          nullable: true
        price:
          minimum: 0
          type: number
          description: 'This variant’s base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product’s default price (set in the Product resource’s `price` field) will be used as the base price.'
          format: double
          nullable: true
        sale_price:
          minimum: 0
          type: number
          description: 'This variant’s sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s sale price (set in the Product resource’s `price` field) will be used as the sale price.'
          format: double
          nullable: true
        retail_price:
          minimum: 0
          type: number
          description: 'This variant’s retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s retail price (set in the Product resource’s `price` field) will be used as the retail price.'
          format: double
          nullable: true
        weight:
          minimum: 0
          type: number
          description: 'This variant’s base weight on the storefront. If this value is null, the product’s default weight (set in the Product resource’s weight field) will be used as the base weight.'
          format: double
          nullable: true
        width:
          minimum: 0
          type: number
          description: |
            Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.
          format: double
          nullable: true
        height:
          minimum: 0
          type: number
          description: |
            Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.
          format: double
          nullable: true
        depth:
          minimum: 0
          type: number
          description: |
            Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.
          format: double
          nullable: true
        is_free_shipping:
          type: boolean
          description: |
            Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.
        fixed_cost_shipping_price:
          minimum: 0
          type: number
          description: |
            A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.
          format: double
          nullable: true
        purchasing_disabled:
          type: boolean
          description: 'If `true`, this variant will not be purchasable on the storefront.'
        purchasing_disabled_message:
          maxLength: 255
          minLength: 0
          type: string
          description: 'If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.'
        upc:
          type: string
          description: The UPC code used in feeds for shopping comparison sites and external channel integrations.
          nullable: true
        inventory_level:
          type: integer
          description: |- 
            Inventory level for the variant, which is used when the product’s inventory_tracking is set to `variant`. The Catalog API returns the inventory for only the default location.

            The inventory for a variant cannot exceed 2,147,483,647 in the catalog. The sum of the variant inventories, or the total inventory for a product, cannot exceed 2,147,483,647. 
            
            If you exceed the limit, the store sets the variant inventory to the limit if no other variant inventories are set. If other variant inventories are set, the store does not save the variant inventory rather than setting the variant inventory to the remaining limit.

            The Catalog API handles limits in a different way than the Inventory API. For more information, see [Limit handling](/buy-online-pick-up-in-store/inventory#limit-handling-in-inventory-versus-catalog-api). 
          nullable: true
          maximum: 2147483647
        inventory_warning_level:
          type: integer
          description: 'When the variant hits this inventory level, it is considered low stock.'
          nullable: true
          maximum: 2147483647
        bin_picking_number:
          maxLength: 255
          minLength: 0
          type: string
          description: Identifies where in a warehouse the variant is located.
          nullable: true
        mpn:
          type: string
          description: The Manufacturer Part Number (MPN) for the variant.
        gtin:
          type: string
          example: '012345678905'
      description: Common Variant properties.
      x-internal: false
      x-examples:
        example-1:
          cost_price: 0
          price: 0
          sale_price: 0
          retail_price: 0
          weight: 0
          width: 0
          height: 0
          depth: 0
          is_free_shipping: true
          fixed_cost_shipping_price: 0
          purchasing_disabled: true
          purchasing_disabled_message: string
          upc: string
          inventory_level: 0
          inventory_warning_level: 0
          bin_picking_number: string
          mpn: string
          gtin: '012345678905'
    productVariant_Full:
      title: productVariant_Full
      allOf:
        - $ref: '#/components/schemas/productVariant_Base'
        - type: object
          properties:
            id:
              type: integer
            product_id:
              type: integer
            sku:
              type: string
            sku_id:
              type: integer
              description: Read-only reference to v2 API's SKU ID. Null if it is a base variant.
              nullable: true
            option_values:
              type: array
              description: Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant.
              items:
                $ref: '#/components/schemas/productVariantOptionValue_Full'
            calculated_price:
              type: number
              description: |
                The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.
              format: double
            calculated_weight:
              type: number
      x-internal: false
      description: ''
      x-examples:
        example-1:
          cost_price: 0
          price: 0
          sale_price: 0
          retail_price: 0
          weight: 0
          width: 0
          height: 0
          depth: 0
          is_free_shipping: true
          fixed_cost_shipping_price: 0
          purchasing_disabled: true
          purchasing_disabled_message: string
          upc: string
          inventory_level: 0
          inventory_warning_level: 0
          bin_picking_number: string
          mpn: string
          gtin: '012345678905'
          id: 0
          product_id: 0
          sku: string
          sku_id: 0
          option_values:
            - option_display_name: Color
              label: Beige
              id: 146
              option_id: 151
          calculated_price: 0
          calculated_weight: 0
    productVariant_Post:
      title: productVariant_Post
      description: |
        The model for a POST to create variants on a product.
      allOf:
        - title: Variant Base
          type: object
          properties:
            cost_price:
              minimum: 0
              type: number
              description: The cost price of the variant. Not affected by Price List prices.
              format: double
              nullable: true
            price:
              minimum: 0
              type: number
              description: 'This variant’s base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product’s default price (set in the Product resource’s `price` field) will be used as the base price.'
              format: double
              nullable: true
            sale_price:
              minimum: 0
              type: number
              description: 'This variant’s sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s sale price (set in the Product resource’s `price` field) will be used as the sale price.'
              format: double
              nullable: true
            retail_price:
              minimum: 0
              type: number
              description: 'This variant’s retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s retail price (set in the Product resource’s `price` field) will be used as the retail price.'
              format: double
              nullable: true
            weight:
              minimum: 0
              type: number
              description: 'This variant’s base weight on the storefront. If this value is null, the product’s default weight (set in the Product resource’s weight field) will be used as the base weight.'
              format: double
              nullable: true
            width:
              minimum: 0
              type: number
              description: |
                Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.
              format: double
              nullable: true
            height:
              minimum: 0
              type: number
              description: |
                Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.
              format: double
              nullable: true
            depth:
              minimum: 0
              type: number
              description: |
                Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.
              format: double
              nullable: true
            is_free_shipping:
              type: boolean
              description: |
                Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.
            fixed_cost_shipping_price:
              minimum: 0
              type: number
              description: |
                A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.
              format: double
              nullable: true
            purchasing_disabled:
              type: boolean
              description: 'If `true`, this variant will not be purchasable on the storefront.'
            purchasing_disabled_message:
              maxLength: 255
              minLength: 0
              type: string
              description: 'If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.'
            upc:
              type: string
              description: The UPC code used in feeds for shopping comparison sites and external channel integrations.
              nullable: true
            inventory_level:
              type: integer
              description: |- 
                Inventory level for the variant, which is used when the product’s inventory_tracking is set to `variant`. The Catalog API returns the inventory for only the default location.

                The inventory for a variant cannot exceed 2,147,483,647 in the catalog. The sum of the variant inventories, or the total inventory for a product, cannot exceed 2,147,483,647. 
                
                If you exceed the limit, the store sets the variant inventory to the limit if no other variant inventories are set. If other variant inventories are set, the store does not save the variant inventory rather than setting the variant inventory to the remaining limit.

                The Catalog API handles limits in a different way than the Inventory API. For more information, see [Limit handling](/buy-online-pick-up-in-store/inventory#limit-handling-in-inventory-versus-catalog-api). 
              nullable: true
              maximum: 2147483647
            inventory_warning_level:
              type: integer
              description: 'When the variant hits this inventory level, it is considered low stock.'
              nullable: true
              maximum: 2147483647
            bin_picking_number:
              maxLength: 255
              minLength: 0
              type: string
              description: Identifies where in a warehouse the variant is located.
              nullable: true
            image_url:
              type: string
              description: Publicly available image url
            gtin:
              type: string
              description: Global Trade Item Number
              example: '012345678905'
            mpn:
              type: string
              description: Manufacturer Part Number
              example: HV-HM02
          description: Common Variant properties.
        - type: object
          properties:
            product_id:
              type: integer
              x-required:
                - post
            sku:
              maxLength: 255
              minLength: 1
              type: string
              x-required:
                - post
            option_values:
              type: array
              description: Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant.
              items:
                $ref: '#/components/schemas/productVariantOptionValue_Full'
              x-required:
                - post
      x-internal: false
    productVariantOptionValue_Full:
      title: productVariantOptionValue_Full
      allOf:
        - type: object
          properties:
            option_display_name:
              maxLength: 255
              minLength: 1
              type: string
              description: |
                The name of the option.
              example: Color
              x-required:
                - post
            label:
              maxLength: 255
              minLength: 1
              type: string
              description: |
                The label of the option value.
              example: Beige
              x-required:
                - post
        - $ref: '#/components/schemas/productVariantOptionValue_Base'
      x-internal: false
    productVariantOptionValue_Base:
      title: productVariantOptionValue_Base
      type: object
      properties:
        id:
          type: integer
          description: '`option_value` ID.'
          example: 146
        option_id:
          type: integer
          description: '`option` ID.'
          example: 151
      description: Common Product Variant Option properties.
      x-internal: false
    metafield_Base:
      title: metafield_Base
      type: object
      description: 'Metafield for products, categories, variants, and brands; the max number of metafields allowed on each is 50. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in the Help Center.'
      x-internal: false
      properties:
        key:
          maxLength: 64
          minLength: 1
          type: string
          description: |
            The name of the field, for example: `location_id`, `color`. Required for POST.
          example: Location
          x-required:
            - post
        value:
          maxLength: 65535
          minLength: 1
          type: string
          description: |
            The value of the field, for example: `1`, `blue`. Required for POST.
          example: 4HG
          x-required:
            - post
        namespace:
          maxLength: 64
          minLength: 1
          type: string
          description: |
            Namespace for the metafield, for organizational purposes. This is set by the developer. Required for POST.
          example: Warehouse Locations
          x-required:
            - post
        permission_set:
          type: string
          description: |-
            Determines the visibility and writeability of the field by other API consumers.

            |Value|Description
            |-|-|
            |`app_only`|Private to the app that owns the field|
            |`read`|Visible to other API consumers|
            |`write`|Open for reading and writing by other API consumers|
            |`read_and_sf_access`|Visible to other API consumers, including on storefront|
            |`write_and_sf_access`|Open for reading and writing by other API consumers, including on storefront|
          enum:
            - app_only
            - read
            - write
            - read_and_sf_access
            - write_and_sf_access
        description:
          maxLength: 255
          minLength: 1
          type: string
          description: |
            Description for the metafields.
          example: Location in the warehouse
      required:
        - permission_set
        - namespace
        - key
        - value
    metaCollection_Full:
      title: metaCollection_Full
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/pagination_Full'
      description: 'Data about the response, including pagination and collection totals.'
      x-internal: false
    pagination_Full:
      title: pagination_Full
      type: object
      properties:
        total:
          type: integer
          description: |
            Total number of items in the result set.
          example: 36
        count:
          type: integer
          description: |
            Total number of items in the collection response.
          example: 36
        per_page:
          type: integer
          description: |
            The amount of items returned in the collection per page, controlled by the limit parameter.
          example: 50
        current_page:
          type: integer
          description: |
            The page you are currently on within the collection.
          example: 1
        total_pages:
          type: integer
          description: |
            The total number of pages in the collection.
          example: 1
        links:
          type: object
          properties:
            previous:
              type: string
              description: |
                Link to the previous page returned in the response.
            current:
              type: string
              description: |
                Link to the current page returned in the response.
              example: '?page=1&limit=50'
            next:
              type: string
              description: |
                Link to the next page returned in the response.
          description: |
            Pagination links for the previous and next parts of the whole collection.
      description: 'Data about the response, including pagination and collection totals.'
      x-internal: false
    metaEmpty_Full:
      type: object
      title: Response meta
      properties: {}
      additionalProperties: true
      description: Response metadata.
    errorMultiStatus:
      title: errorMultiStatus
      type: object
      properties:
        status: 
          type: integer
          minLength: 3
          maxLength: 3
          description: 'The [HTTP status code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status) of the failure or partial success.'
        title: 
          type: string
          description: A summary of the failure or partial success.
        type: 
          type: string
          description: A BigCommerce-defined error signifier.
        errors: 
          $ref: '#/components/schemas/DetailedErrors'
    DetailedErrors:
      title: DetailedErrors
      description: Each key-value pair describes a failure or partial success case.
      type: object
      properties: {}
      additionalProperties: true
      x-internal: false
    metafield_Full:
      title: metafield_Full
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: Unique ID of the *Metafield*. Read-Only.
              readOnly: true
              example: 6
        - $ref: '#/components/schemas/metafield_Base'
        - type: object
          properties:
            resource_type:
              type: string
              description: |
                The type of resource with which the metafield is associated.
              example: product
              enum:
                - category
                - brand
                - product
                - variant
              x-required:
                - post
            resource_id:
              maximum: 10000000000
              minimum: 0
              type: integer
              description: |
                The ID of the resource with which the metafield is associated.
              example: 111
              x-required:
                - post
            date_created:
              type: string
              description: |
                Date and time of the metafield's creation. Read-Only.
              readOnly: true
              format: date-time
              example: '2018-05-07T20:14:17+00:00'
            date_modified:
              type: string
              description: |
                Date and time when the metafield was last updated. Read-Only.
              readOnly: true
              format: date-time
              example: '2018-05-07T20:14:17+00:00'
      x-internal: false
    productVariant_Put:
      title: productVariant_Put
      description: The model for a PUT to update variants on a product.
      allOf:
        - $ref: '#/components/schemas/productVariant_Base'
        - type: object
          properties:
            product_id:
              type: integer
              x-required:
                - post
            sku:
              maxLength: 255
              minLength: 1
              type: string
              x-required:
                - post
      x-internal: false
  parameters:
    ProductIdParam:
      name: product_id
      in: path
      description: |
        The ID of the `Product` to which the resource belongs.
      required: true
      schema:
        type: integer
    VariantIdParam:
      name: variant_id
      in: path
      description: |
        ID of the variant on a product, or on an associated Price List Record.
      required: true
      schema:
        type: integer
    MetafieldIdParam:
      name: metafield_id
      in: path
      description: |
        The ID of the `Metafield`.
      required: true
      schema:
        type: integer
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Products | modify | `store_v2_products` |
        |  Products | read-only | `store_v2_products_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header

openapi: '3.0.3'
info:
  title: Catalog - Products
  description: |-
    > The Catalog API manages products, categories, brands, bulk pricing rules, and more. To learn more about catalog resources, see the [Catalog Overview](/api-docs/store-management/catalog/products-overview).

    Our Catalog Products endpoints let you [create products](/docs/rest-catalog/products#create-a-product), perform [batch operations on existing products](/docs/rest-catalog/products#update-products-batch) and work with [reviews](/docs/rest-catalog/products/reviews), [images](/docs/rest-catalog/products/images), and [videos](/docs/rest-catalog/products/videos). Note that after a product is created initially, you can manage the nuances of its variations using the [Product Modifier](/docs/rest-catalog/product-modifiers), [Product Variant](/docs/rest-catalog/product-variants), and [Product Variant Options](/docs/rest-catalog/product-variant-options) endpoints. 

    Other core product endpoints focus on [bulk pricing](/docs/rest-catalog/products/bulk-pricing-rules), [complex rules](/docs/rest-catalog/products/complex-rules), [custom fields](/docs/rest-catalog/products/custom-fields), and [metafields](/docs/rest-catalog/products/metafields). Product Variant objects also contain [their own metafields](/docs/rest-catalog/product-variants/metafields). For [MSF-enabled](/api-docs/multi-storefront/overview) stores, the product object also contains product [channel assignments](/docs/rest-catalog/products/channel-assignments) and [category assignments](/docs/rest-catalog/products/category-assignments); read more about [products in the MSF context](/api-docs/multi-storefront/api-guide#products). 
    
    This API family also contains an endpoint to [Get a catalog summary](/docs/rest-catalog/products/summary).

    > To learn more about authenticating Catalog endpoints, locate the **Authentication** section at the top of each endpoint, then click **Show Details**. 

    ## Resources

    ### Webhooks
    * [Product webhook events](/api-docs/store-management/webhooks/webhook-events#products)
    * [Product assignment webhook events](/api-docs/channels/guide/webhooks#product-assignments) 

    ### Additional Catalog endpoints
    * [Brands](/docs/rest-catalog/brands)
    * [Categories](/docs/rest-catalog/categories)
    * [Category Trees](/docs/rest-catalog/category-trees)
    * [Product Modifiers](/docs/rest-catalog/product-modifiers)
    * [Product Variants](/docs/rest-catalog/product-variants)
    * [Product Variant Options](/docs/rest-catalog/product-variant-options)

  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  version: ''
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Products
  - name: Bulk Pricing Rules
  - name: Complex Rules
  - name: Custom Fields
  - name: Images
  - name: Metafields
  - name: Reviews
  - name: Videos
  - name: Channel Assignments
  - name: Category Assignments
  - name: Summary
paths:
  '/catalog/products':
    get:
      tags:
        - Products
      summary: Get All Products
      description: Returns a list of **Products**. Optional filter parameters can be passed in.
      operationId: getProducts
      parameters:
        - name: id
          in: query
          description: |
            Filter items by ID.
          schema:
            type: integer
        - name: 'id:in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:not_in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:min'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:max'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:greater'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:less'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: name
          in: query
          description: |
            Filter items by name.
          schema:
            type: string
        - name: upc
          in: query
          description: |
            Filter items by UPC.
          schema:
            type: string
        - name: price
          in: query
          description: |
            Filter items by price.
          schema:
            type: number
        - name: weight
          in: query
          description: |
            Filter items by weight.
          schema:
            type: number
        - name: condition
          in: query
          description: |
            Filter items by condition.
          schema:
            type: string
            enum:
              - new
              - used
              - refurbished
        - name: brand_id
          in: query
          description: |
            Filter items by brand_id.
          schema:
            type: integer
        - name: date_modified
          in: query
          description: 'Filter items by `date_modified`. '
          schema:
            type: string
            format: date-time
        - name: 'date_modified:max'
          in: query
          description: 'Filter items by `date_modified`. For example, `date_modified:max=2020-06-15`.'
          schema:
            type: string
        - name: 'date_modified:min'
          in: query
          description: 'Filter items by `date_modified`. For example, `date_modified:min=2018-06-15`.'
          schema:
            type: string
        - name: date_last_imported
          in: query
          description: Filter items by date_last_imported.
          schema:
            type: string
            format: date-time
        - name: 'date_last_imported:max'
          in: query
          description: 'Filter items by date_last_imported. For example, `date_last_imported:max=2020-06-15`.'
          schema:
            type: string
        - name: 'date_last_imported:min'
          in: query
          description: 'Filter items by date_last_imported. For example, `date_last_imported:min=2018-06-15`.'
          schema:
            type: string
        - name: is_visible
          in: query
          description: Filter items based on whether the product is currently visible on the storefront.
          schema:
            type: boolean
        - name: is_featured
          in: query
          description: 'Filter items by is_featured. `1` for true, `0` for false.'
          schema:
            type: integer
            enum:
              - 1
              - 0
        - name: is_free_shipping
          in: query
          description: 'Filter items by is_free_shipping. `1` for true, `0` for false.'
          schema:
            type: integer
        - name: inventory_level
          in: query
          description: |
            Filter items by inventory_level.
          schema:
            type: integer
        - name: 'inventory_level:in'
          in: query
          schema:
            type: integer
        - name: 'inventory_level:not_in'
          in: query
          schema:
            type: integer
        - name: 'inventory_level:min'
          in: query
          schema:
            type: integer
        - name: 'inventory_level:max'
          in: query
          schema:
            type: integer
        - name: 'inventory_level:greater'
          in: query
          schema:
            type: integer
        - name: 'inventory_level:less'
          in: query
          schema:
            type: integer
        - name: inventory_low
          in: query
          description: |
            Filter items by inventory_low. Values: 1, 0.
          schema:
            type: integer
        - name: out_of_stock
          in: query
          description: |
            Filter items by out_of_stock. To enable the filter, pass `out_of_stock`=`1`.
          schema:
            type: integer
        - name: total_sold
          in: query
          description: |
            Filter items by total_sold.
          schema:
            type: integer
        - name: type
          in: query
          description: Filter items by type.
          schema:
            type: string
            enum:
              - digital
              - physical
        - name: categories
          in: query
          description: |-
            Filter items by categories.
             If a product is in more than one category, using this query will not return the product. Instead use `categories:in=12`.
          schema:
            type: integer
        - name: keyword
          in: query
          description: Filter items by keywords found in the `name` or `sku` fields
          schema:
            type: string
        - name: keyword_context
          in: query
          description: Set context used by the search algorithm to return results targeted towards the specified group. Use `merchant` to help merchants search their own catalog. Use `shopper` to return shopper-facing search results.
          schema:
            type: string
            enum:
              - shopper
              - merchant
        - name: status
          in: query
          description: |
            Filter items by status.
          schema:
            type: integer
        - name: include
          in: query
          description: |-
            Sub-resources to include on a product, in a comma-separated list. If `options` or `modifiers` is used, results are limited to 10 per page.
            
            **Note:** The following sub-resources include:
              * variants
              * images
              * custom_fields
              * bulk_pricing_rules
              * primary_images
              * modifiers
              * options
              * videos
          schema:
            type: string
            enum:
              - variants
              - images
              - custom_fields
              - bulk_pricing_rules
              - primary_image
              - modifiers
              - options
              - videos
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
        - name: availability
          in: query
          description: |
            Filter items by availability. Values are: available, disabled, preorder.
          schema:
            type: string
            enum:
              - available
              - disabled
              - preorder
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: direction
          in: query
          description: |
            Sort direction. Acceptable values are: `asc`, `desc`.
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: sort
          in: query
          description: |
            Field name to sort by. Note: Since `id` increments when new products are added, you can use that field to sort by product create date.
          schema:
            type: string
            enum:
              - id
              - name
              - sku
              - price
              - date_modified
              - date_last_imported
              - inventory_level
              - is_visible
              - total_sold
        - name: 'categories:in'
          in: query
          description: 'Filter items by categories. Use for products in multiple categories. For example, `categories:in=12`.'
          schema:
            type: integer
        - name: sku
          in: query
          description: 'Filter items by main SKU. To filter by variant SKU, see [Get All Variants](/docs/rest-catalog/product-variants#get-all-product-variants). '
          schema:
            type: string
        - name: 'sku:in'
          in: query
          description: Filter items by SKU.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/product_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
    put:
      tags:
        - Products
      summary: Update Products (Batch)
      description: |-
        Updates products in batches. Batches are limited to 10 products.

        **Required Fields**
        * `id` - product `id` is required for batch updates to products.

        **Read-Only Fields**
        - `id`
        - `date_created`
        - `date_modified`
        - `calculated_price`
        - `base_variant_id`
      operationId: updateProducts
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product_Put_Collection'
            examples:
              example-1:
                value:
                  - id: 0
                    name: Smith Journal 13
                    type: physical
                    sku: SM-13
                    description: '<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>'
                    weight: 0
                    width: 0
                    depth: 0
                    height: 0
                    price: 0
                    cost_price: 0
                    retail_price: 0
                    sale_price: 0
                    map_price: 0
                    tax_class_id: 0
                    product_tax_code: string
                    categories:
                      - 0
                    brand_id: 0
                    inventory_level: 0
                    inventory_warning_level: 0
                    inventory_tracking: none
                    fixed_cost_shipping_price: 0
                    is_free_shipping: true
                    is_visible: true
                    is_featured: true
                    related_products:
                      - 0
                    warranty: string
                    bin_picking_number: string
                    layout_file: string
                    upc: string
                    search_keywords: string
                    availability: available
                    availability_description: string
                    gift_wrapping_options_type: any
                    gift_wrapping_options_list:
                      - 0
                    sort_order: -2147483648
                    condition: New
                    is_condition_shown: true
                    order_quantity_minimum: 0
                    order_quantity_maximum: 0
                    page_title: string
                    meta_keywords:
                      - string
                    meta_description: string
                    view_count: 0
                    preorder_release_date: '2019-08-24T14:15:22Z'
                    preorder_message: string
                    is_preorder_only: true
                    is_price_hidden: true
                    price_hidden_label: string
                    custom_url:
                      url: string
                      is_customized: true
                    open_graph_type: product
                    open_graph_title: string
                    open_graph_description: string
                    open_graph_use_meta_description: true
                    open_graph_use_product_name: true
                    open_graph_use_image: true
                    brand_name: Common Good
                    gtin: string
                    mpn: string
                    reviews_rating_sum: 3
                    reviews_count: 4
                    total_sold: 80
                    custom_fields:
                      - id: 6
                        name: ISBN
                        value: '1234567890123'
                    bulk_pricing_rules:
                      - id: 0
                        quantity_min: 10
                        quantity_max: 50
                        type: price
                        amount: 10
                    images:
                      - image_file: string
                        is_thumbnail: true
                        sort_order: -2147483648
                        description: string
                        image_url: string
                        id: 0
                        product_id: 0
                        url_zoom: string
                        url_standard: string
                        url_thumbnail: string
                        url_tiny: string
                        date_modified: '2019-08-24T14:15:22Z'
                    videos:
                      - title: Writing Great Documentation
                        description: A video about documentation.
                        sort_order: 1
                        type: youtube
                        video_id: z3fRu9pkuXE
                        id: 0
                        product_id: 0
                        length: string
        required: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/product_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
              examples:
                example-1:
                  value:
                    data:
                      - id: 1
                        name: Smith Journal 13
                        type: physical
                        sku: SM-13
                        description: '<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>'
                        weight: 0
                        width: 0
                        depth: 0
                        height: 0
                        price: 0
                        cost_price: 0
                        retail_price: 0
                        sale_price: 0
                        map_price: 0
                        tax_class_id: 0
                        product_tax_code: string
                        categories:
                          - 0
                        brand_id: 0
                        inventory_level: 0
                        inventory_warning_level: 0
                        inventory_tracking: none
                        fixed_cost_shipping_price: 0
                        is_free_shipping: true
                        is_visible: true
                        is_featured: true
                        related_products:
                          - 0
                        warranty: string
                        bin_picking_number: string
                        layout_file: string
                        upc: string
                        search_keywords: string
                        availability: available
                        availability_description: string
                        gift_wrapping_options_type: any
                        gift_wrapping_options_list:
                          - 0
                        sort_order: -2147483648
                        condition: New
                        is_condition_shown: true
                        order_quantity_minimum: 0
                        order_quantity_maximum: 0
                        page_title: string
                        meta_keywords:
                          - string
                        meta_description: string
                        view_count: 0
                        preorder_release_date: '2019-08-24T14:15:22Z'
                        preorder_message: string
                        is_preorder_only: true
                        is_price_hidden: true
                        price_hidden_label: string
                        custom_url:
                          url: string
                          is_customized: true
                        open_graph_type: product
                        open_graph_title: string
                        open_graph_description: string
                        open_graph_use_meta_description: true
                        open_graph_use_product_name: true
                        open_graph_use_image: true
                        brand_name: Common Good
                        gtin: string
                        mpn: string
                        reviews_rating_sum: 3
                        reviews_count: 4
                        total_sold: 80
                        custom_fields:
                          - id: 6
                            name: ISBN
                            value: '1234567890123'
                        bulk_pricing_rules:
                          - id: 0
                            quantity_min: 10
                            quantity_max: 50
                            type: price
                            amount: 10
                        images:
                          - image_file: string
                            is_thumbnail: true
                            sort_order: -2147483648
                            description: string
                            image_url: string
                            id: 0
                            product_id: 0
                            url_zoom: string
                            url_standard: string
                            url_thumbnail: string
                            url_tiny: string
                            date_modified: '2019-08-24T14:15:22Z'
                        videos:
                          - title: Writing Great Documentation
                            description: A video about documentation
                            sort_order: 1
                            type: youtube
                            video_id: z3fRu9pkuXE
                            id: 0
                            product_id: 0
                            length: string
                        date_created: '2018-08-15T14:49:05+00:00'
                        date_modified: '2018-08-24T14:41:00+00:00'
                        base_variant_id: 0
                        calculated_price: 0
                        options:
                          - id: 55
                            product_id: 4
                            display_name: Add-a-$5-Donation1535042499-187
                            type: radio_buttons
                            config:
                              default_value: string
                              checked_by_default: true
                              checkbox_label: string
                              date_limited: true
                              date_limit_mode: range
                              date_earliest_value: '2019-08-24'
                              date_latest_value: '2019-08-24'
                              file_types_mode: specific
                              file_types_supported:
                                - 'images, documents, other'
                              file_types_other:
                                - pdf
                              file_max_size: 5
                              text_characters_limited: true
                              text_min_length: 1
                              text_max_length: 55
                              text_lines_limited: true
                              text_max_lines: 4
                              number_limited: true
                              number_limit_mode: lowest
                              number_lowest_value: 100
                              number_highest_value: 0
                              number_integers_only: false
                              product_list_adjusts_inventory: true
                              product_list_adjusts_pricing: true
                              product_list_shipping_calc: weight
                            sort_order: 1
                            option_values:
                              - is_default: false
                                label: Green
                                sort_order: 0
                                value_data: {}
                                id: 0
                        modifiers:
                          - type: date
                            required: true
                            sort_order: 0
                            config:
                              default_value: string
                              checked_by_default: true
                              checkbox_label: string
                              date_limited: true
                              date_limit_mode: range
                              date_earliest_value: '2019-08-24'
                              date_latest_value: '2019-08-24'
                              file_types_mode: specific
                              file_types_supported:
                                - 'images, documents, other'
                              file_types_other:
                                - pdf
                              file_max_size: 5
                              text_characters_limited: true
                              text_min_length: 1
                              text_max_length: 55
                              text_lines_limited: true
                              text_max_lines: 4
                              number_limited: true
                              number_limit_mode: lowest
                              number_lowest_value: 100
                              number_highest_value: 0
                              number_integers_only: false
                              product_list_adjusts_inventory: true
                              product_list_adjusts_pricing: true
                              product_list_shipping_calc: weight
                            display_name: string
                            id: 12
                            product_id: 77
                            name: Add-a-$5-Donation1535039590-191
                            option_values:
                              - is_default: false
                                label: Green
                                sort_order: 0
                                value_data: {}
                                adjusters:
                                  price:
                                    adjuster: relative
                                    adjuster_value: 5
                                  weight:
                                    adjuster: relative
                                    adjuster_value: 5
                                  image_url: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                                  purchasing_disabled:
                                    status: true
                                    message: string
                                id: 0
                                option_id: 0
                        option_set_id: 0
                        option_set_display: string
                        variants:
                          - cost_price: 0
                            price: 0
                            sale_price: 0
                            retail_price: 0
                            weight: 0
                            width: 0
                            height: 0
                            depth: 0
                            is_free_shipping: true
                            fixed_cost_shipping_price: 0
                            purchasing_disabled: true
                            purchasing_disabled_message: string
                            upc: string
                            inventory_level: 0
                            inventory_warning_level: 0
                            bin_picking_number: string
                            mpn: string
                            gtin: '012345678905'
                            id: 0
                            product_id: 0
                            sku: string
                            sku_id: 0
                            option_values:
                              - option_display_name: Color
                                label: Beige
                                id: 146
                                option_id: 151
                            calculated_price: 0
                            calculated_weight: 0
                    meta:
                      pagination:
                        total: 36
                        count: 36
                        per_page: 50
                        current_page: 1
                        total_pages: 1
                        links:
                          previous: string
                          current: '?page=1&limit=50'
                          next: string
        '207':
          description: |-
            Multi-status. The product information was updated successfully, but the inventory data failed to update. 
            
            Verify that the inventory-related updates are well-formed and correct; for example, that they donʼt result in negative stock levels. Then consider updating the inventory data again.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/product_Full'
                  errors: 
                    $ref: '#/components/schemas/errorMultiStatus'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
        '404':
          description: The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '409':
          description: '`Product` was in conflict with another product. This is the result of duplicate unique values such as name or SKU; a missing or invalid `category_id`, `brand_id`, or `tax_class id`; or a conflicting `bulk_pricing_rule`.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse_409'
        '413':
          description: 413 Request Entity Too Large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_Base'
              example:
                errors: {}
                status: 413
                title: The request payload is too large. The maximum items allowed in the array is 50
                type: /api-docs/getting-started/api-status-codes
        '422':
          description: '`Product` was not valid. This is the result of missing required fields or invalid data. See the response for more details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse_422'
      x-codegen-request-body-name: products
    post:
      tags:
        - Products
      summary: Create a Product
      description: |-
        Creates a *Product*. Only one product can be created at a time.

        **Required Fields:**
        - `name`
        - `type`
        - `weight`
        - `price`

        **Read-Only Fields**
        - `id`
        - `date_created`
        - `date_modified`
        - `calculated_price`
        - `base_variant_id`

        **Limits**
        - 250 characters product name length.

        **Usage Notes**
        * This endpoint accepts a `video` array. To create a product video that accepts a `video` object, see [Create a Product Video](/docs/rest-catalog/products/videos#create-a-product-video) for information.
      
      operationId: createProduct
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product_Base'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/product_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
            example-1:
              example:
                name: Smith Journal 13
                type: physical
                sku: SM-13
                description: '<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>'
                weight: 0
                width: 0
                depth: 0
                height: 0
                price: 0
                cost_price: 0
                retail_price: 0
                sale_price: 0
                map_price: 0
                tax_class_id: 0
                product_tax_code: string
                categories:
                  - 0
                brand_id: 0
                inventory_level: 0
                inventory_warning_level: 0
                inventory_tracking: none
                fixed_cost_shipping_price: 0
                is_free_shipping: true
                is_visible: true
                is_featured: true
                related_products:
                  - 0
                warranty: string
                bin_picking_number: string
                layout_file: string
                upc: string
                search_keywords: string
                availability: available
                availability_description: string
                gift_wrapping_options_type: any
                gift_wrapping_options_list:
                  - 0
                sort_order: -2147483648
                condition: New
                is_condition_shown: true
                order_quantity_minimum: 0
                order_quantity_maximum: 0
                page_title: string
                meta_keywords:
                  - string
                meta_description: string
                view_count: 0
                preorder_release_date: '2019-08-24T14:15:22+00:00'
                preorder_message: string
                is_preorder_only: true
                is_price_hidden: true
                price_hidden_label: string
                custom_url:
                  url: string
                  is_customized: true
                open_graph_type: product
                open_graph_title: string
                open_graph_description: string
                open_graph_use_meta_description: true
                open_graph_use_product_name: true
                open_graph_use_image: true
                brand_name: Common Good
                gtin: string
                mpn: string
                reviews_rating_sum: 3.2
                reviews_count: 4
                total_sold: 80
                custom_fields:
                  - id: 6
                    name: ISBN
                    value: '1234567890123'
                bulk_pricing_rules:
                  - id: 0
                    quantity_min: 10
                    quantity_max: 50
                    type: price
                    amount: 10
                images:
                  - image_file: string
                    is_thumbnail: true
                    sort_order: -2147483648
                    description: string
                    image_url: string
                    id: 0
                    product_id: 0
                    url_zoom: string
                    url_standard: string
                    url_thumbnail: string
                    url_tiny: string
                    date_modified: '2019-08-24T14:15:22+00:00'
                videos:
                  - title: string
                    description: string
                    sort_order: -2147483648
                    type: youtube
                    video_id: string
                    id: 0
                    product_id: 0
                    length: string
                date_created: '2018-08-15T14:49:05+00:00'
                date_modified: '2018-08-24T14:41:00+00:00'
                id: 1
                base_variant_id: 0
                calculated_price: 0
                options:
                  - id: 55
                    product_id: 4
                    display_name: Add-a-$5-Donation1535042499-187
                    type: radio_buttons
                    config:
                      default_value: string
                      checked_by_default: true
                      checkbox_label: string
                      date_limited: true
                      date_limit_mode: range
                      date_earliest_value: '2019-08-24T00:00:00+00:00'
                      date_latest_value: '2019-08-24T00:00:00+00:00'
                      file_types_mode: specific
                      file_types_supported:
                        - 'images, documents, other'
                      file_types_other:
                        - pdf
                      file_max_size: 5
                      text_characters_limited: true
                      text_min_length: 1
                      text_max_length: 55
                      text_lines_limited: true
                      text_max_lines: 4
                      number_limited: true
                      number_limit_mode: lowest
                      number_lowest_value: 100
                      number_highest_value: 0
                      number_integers_only: false
                      product_list_adjusts_inventory: true
                      product_list_adjusts_pricing: true
                      product_list_shipping_calc: weight
                    sort_order: 1
                    option_values:
                      is_default: false
                      label: Green
                      sort_order: 0
                      value_data: {}
                      id: 0
                modifiers:
                  - type: date
                    required: true
                    sort_order: 0
                    config:
                      default_value: string
                      checked_by_default: true
                      checkbox_label: string
                      date_limited: true
                      date_limit_mode: range
                      date_earliest_value: '2019-08-24T00:00:00+00:00'
                      date_latest_value: '2019-08-24T00:00:00+00:00'
                      file_types_mode: specific
                      file_types_supported:
                        - 'images, documents, other'
                      file_types_other:
                        - pdf
                      file_max_size: 5
                      text_characters_limited: true
                      text_min_length: 1
                      text_max_length: 55
                      text_lines_limited: true
                      text_max_lines: 4
                      number_limited: true
                      number_limit_mode: lowest
                      number_lowest_value: 100
                      number_highest_value: 0
                      number_integers_only: false
                      product_list_adjusts_inventory: true
                      product_list_adjusts_pricing: true
                      product_list_shipping_calc: weight
                    display_name: string
                    id: 12
                    product_id: 77
                    name: Add-a-$5-Donation1535039590-191
                    option_values:
                      - is_default: false
                        label: Green
                        sort_order: 0
                        value_data: {}
                        adjusters:
                          price:
                            adjuster: relative
                            adjuster_value: 5
                          weight:
                            adjuster: relative
                            adjuster_value: 5
                          image_url: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                          purchasing_disabled:
                            status: true
                            message: string
                        id: 0
                        option_id: 0
                option_set_id: 0
                option_set_display: string
                variants:
                  - cost_price: 0
                    price: 0
                    sale_price: 0
                    retail_price: 0
                    weight: 0
                    width: 0
                    height: 0
                    depth: 0
                    is_free_shipping: true
                    fixed_cost_shipping_price: 0
                    purchasing_disabled: true
                    purchasing_disabled_message: string
                    upc: string
                    inventory_level: 0
                    inventory_warning_level: 0
                    bin_picking_number: string
                    mpn: string
                    gtin: '012345678905'
                    id: 0
                    product_id: 0
                    sku: string
                    sku_id: 0
                    option_values:
                      - option_display_name: Color
                        label: Beige
                        id: 146
                        option_id: 151
                    calculated_price: 0
                    calculated_weight: 0
                meta: {}
                '207':
        '207': 
          description: |-
            Multi-status. The product information was updated successfully, but the inventory data failed to update. 
            
            Verify that the inventory-related updates are well-formed and correct; for example, that they donʼt result in negative stock levels. Then consider updating the inventory data again.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/product_Full'
                  errors: 
                    $ref: '#/components/schemas/errorMultiStatus'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'

        '409':
          description: |
            `Product` was in conflict with another product. This is the result of duplicate unique values, such as name or SKU; a missing or invalid `category_id`, `brand_id`, or `tax_class id`; or a conflicting `bulk_pricing_rule`.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            `Product` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: product
    delete:
      tags:
        - Products
      summary: Delete Products
      description: |-
        To delete *Product* objects, you must include a filter. This prevents inadvertently deleting all *Product* objects in a store.

        > #### Note
        > The maximum number of products you can delete at one time is 250.

        **Example**:
        To delete products with the id's of 1,2 and 3, use `DELETE /v3/catalog/products?id:in=1,2,3`.
      operationId: deleteProducts
      parameters:
        - name: name
          in: query
          description: |
            Filter items by name.
          schema:
            type: string
        - name: sku
          in: query
          description: |
            Filter items by SKU.
          schema:
            type: string
        - name: price
          in: query
          description: |
            Filter items by price.
          schema:
            type: number
        - name: weight
          in: query
          description: |
            Filter items by weight.
          schema:
            type: number
        - name: condition
          in: query
          description: |
            Filter items by condition.
          schema:
            type: string
            enum:
              - new
              - used
              - refurbished
        - name: brand_id
          in: query
          description: |
            Filter items by brand_id.
          schema:
            type: integer
        - name: date_modified
          in: query
          description: 'Filter items by date_modified. For example `v3/catalog/products?date_modified:min=2018-06-15`'
          schema:
            type: string
            format: date-time
        - name: date_last_imported
          in: query
          description: 'Filter items by date_last_imported. For example `v3/catalog/products?date_last_imported:min=2018-06-15`'
          schema:
            type: string
            format: date-time
        - name: is_visible
          in: query
          description: 'Filter items by if visible on the storefront. '
          schema:
            type: boolean
        - name: is_featured
          in: query
          description: |
            Filter items by is_featured.
          schema:
            type: integer
        - name: 'id:in'
          in: query
          description:
            Filter by product ID(s).
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: inventory_level
          in: query
          description: |
            Filter items by inventory_level.
          schema:
            type: integer
        - name: total_sold
          in: query
          description: |
            Filter items by total_sold.
          schema:
            type: integer
        - name: type
          in: query
          description: 'Filter items by type: `physical` or `digital`.'
          schema:
            type: string
            enum:
              - digital
              - physical
        - name: categories
          in: query
          description: |-
            Filter items by categories.
             If a product is in more than one category, using this query will not return the product. Instead use `categories:in=12`.
          schema:
            type: integer
        - name: keyword
          in: query
          description: |
            Filter items by keywords found in the `name`, `description`, or `sku` fields, or in the brand name.
          schema:
            type: string
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
  '/catalog/products/{product_id}':
    get:
      tags:
        - Products
      summary: Get a Product
      description: Returns a single *Product*. Optional parameters can be passed in.
      operationId: getProductById
      parameters:
        - name: include
          in: query
          description: 'Sub-resources to include on a product, in a comma-separated list. If `options` or `modifiers` is used, results are limited to 10 per page.'
          schema:
            type: string
            enum:
              - variants
              - images
              - custom_fields
              - bulk_pricing_rules
              - primary_image
              - modifiers
              - options
              - videos
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/product_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 174
                  name: 1L Le Parfait Jar
                  type: physical
                  sku: ''
                  description: '<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>'
                  weight: 1
                  width: 0
                  depth: 0
                  height: 0
                  price: 7.95
                  cost_price: 0
                  retail_price: 10
                  sale_price: 0
                  map_price: 0
                  tax_class_id: 0
                  product_tax_code: ''
                  calculated_price: 7.95
                  categories:
                    - 23
                    - 21
                  brand_id: 36
                  option_set_id: 55
                  option_set_display: right
                  inventory_level: 0
                  inventory_warning_level: 0
                  inventory_tracking: none
                  reviews_rating_sum: 0
                  reviews_count: 0
                  total_sold: 7
                  fixed_cost_shipping_price: 0
                  is_free_shipping: false
                  is_visible: true
                  is_featured: false
                  related_products:
                    - -1
                  warranty: ''
                  bin_picking_number: ''
                  layout_file: product.html
                  upc: ''
                  mpn: ''
                  gtin: ''
                  search_keywords: 'jar, glass'
                  availability: available
                  availability_description: ''
                  gift_wrapping_options_type: any
                  gift_wrapping_options_list: []
                  sort_order: 0
                  condition: New
                  is_condition_shown: false
                  order_quantity_minimum: 0
                  order_quantity_maximum: 0
                  page_title: ''
                  meta_keywords: []
                  meta_description: ''
                  date_created: '2018-08-15T14:48:46+00:00'
                  date_modified: '2018-09-05T20:42:07+00:00'
                  view_count: 10
                  preorder_release_date: '2018-09-05T20:42:07+00:00'
                  preorder_message: ''
                  is_preorder_only: false
                  is_price_hidden: false
                  price_hidden_label: ''
                  custom_url:
                    url: /all/1l-le-parfait-jar/
                    is_customized: true
                  base_variant_id: 345
                  open_graph_type: product
                  open_graph_title: ''
                  open_graph_description: ''
                  open_graph_use_meta_description: true
                  open_graph_use_product_name: true
                  open_graph_use_image: true
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Products
      summary: Update a Product
      description: |
        Updates a *Product*.

        **Read-Only Fields**
        - id
        - date_created
        - date_modified
        - calculated_price
        - base_variant_id
      operationId: updateProduct
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: include_fields
          in: query
          description: 'Sub-resources to include on a product, in a comma-separated list. If `options` or `modifiers` is used, results are limited to 10 per page. The ID and the specified fields will be returned.'
          schema:
            type: string
            enum:
            - variants
            - images
            - custom_fields
            - bulk_pricing_rules
            - primary_image
            - modifiers
            - options
            - videos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product_Put'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/product_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
            example-1:
              example:
                name: Smith Journal 13
                type: physical
                sku: SM-13
                description: '<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>'
                weight: 0
                width: 0
                depth: 0
                height: 0
                price: 0
                cost_price: 0
                retail_price: 0
                sale_price: 0
                map_price: 0
                tax_class_id: 0
                product_tax_code: string
                categories:
                  - 0
                brand_id: 0
                inventory_level: 0
                inventory_warning_level: 0
                inventory_tracking: none
                fixed_cost_shipping_price: 0
                is_free_shipping: true
                is_visible: true
                is_featured: true
                related_products:
                  - 0
                warranty: string
                bin_picking_number: string
                layout_file: string
                upc: string
                search_keywords: string
                availability: available
                availability_description: string
                gift_wrapping_options_type: any
                gift_wrapping_options_list:
                  - 0
                sort_order: -2147483648
                condition: New
                is_condition_shown: true
                order_quantity_minimum: 0
                order_quantity_maximum: 0
                page_title: string
                meta_keywords:
                  - string
                meta_description: string
                view_count: 0
                preorder_release_date: '2019-08-24T14:15:22+00:00'
                preorder_message: string
                is_preorder_only: true
                is_price_hidden: true
                price_hidden_label: string
                custom_url:
                  url: string
                  is_customized: true
                open_graph_type: product
                open_graph_title: string
                open_graph_description: string
                open_graph_use_meta_description: true
                open_graph_use_product_name: true
                open_graph_use_image: true
                brand_name: Common Good
                gtin: string
                mpn: string
                reviews_rating_sum: 3.2
                reviews_count: 4
                total_sold: 80
                custom_fields:
                  - id: 6
                    name: ISBN
                    value: '1234567890123'
                bulk_pricing_rules:
                  - id: 0
                    quantity_min: 10
                    quantity_max: 50
                    type: price
                    amount: 10
                images:
                  - image_file: string
                    is_thumbnail: true
                    sort_order: -2147483648
                    description: string
                    image_url: string
                    id: 0
                    product_id: 0
                    url_zoom: string
                    url_standard: string
                    url_thumbnail: string
                    url_tiny: string
                    date_modified: '2019-08-24T14:15:22+00:00'
                videos:
                  - title: string
                    description: string
                    sort_order: -2147483648
                    type: youtube
                    video_id: string
                    id: 0
                    product_id: 0
                    length: string
                date_created: '2018-08-15T14:49:05+00:00'
                date_modified: '2018-08-24T14:41:00+00:00'
                id: 1
                base_variant_id: 0
                calculated_price: 0
                options:
                  - id: 55
                    product_id: 4
                    display_name: Add-a-$5-Donation1535042499-187
                    type: radio_buttons
                    config:
                      default_value: string
                      checked_by_default: true
                      checkbox_label: string
                      date_limited: true
                      date_limit_mode: range
                      date_earliest_value: '2019-08-24T00:00:00+00:00'
                      date_latest_value: '2019-08-24T00:00:00+00:00'
                      file_types_mode: specific
                      file_types_supported:
                        - 'images, documents, other'
                      file_types_other:
                        - pdf
                      file_max_size: 5
                      text_characters_limited: true
                      text_min_length: 1
                      text_max_length: 55
                      text_lines_limited: true
                      text_max_lines: 4
                      number_limited: true
                      number_limit_mode: lowest
                      number_lowest_value: 100
                      number_highest_value: 0
                      number_integers_only: false
                      product_list_adjusts_inventory: true
                      product_list_adjusts_pricing: true
                      product_list_shipping_calc: weight
                    sort_order: 1
                    option_values:
                      is_default: false
                      label: Green
                      sort_order: 0
                      value_data: {}
                      id: 0
                modifiers:
                  - type: date
                    required: true
                    sort_order: 0
                    config:
                      default_value: string
                      checked_by_default: true
                      checkbox_label: string
                      date_limited: true
                      date_limit_mode: range
                      date_earliest_value: '2019-08-24T00:00:00+00:00'
                      date_latest_value: '2019-08-24T00:00:00+00:00'
                      file_types_mode: specific
                      file_types_supported:
                        - 'images, documents, other'
                      file_types_other:
                        - pdf
                      file_max_size: 5
                      text_characters_limited: true
                      text_min_length: 1
                      text_max_length: 55
                      text_lines_limited: true
                      text_max_lines: 4
                      number_limited: true
                      number_limit_mode: lowest
                      number_lowest_value: 100
                      number_highest_value: 0
                      number_integers_only: false
                      product_list_adjusts_inventory: true
                      product_list_adjusts_pricing: true
                      product_list_shipping_calc: weight
                    display_name: string
                    id: 12
                    product_id: 77
                    name: Add-a-$5-Donation1535039590-191
                    option_values:
                      - is_default: false
                        label: Green
                        sort_order: 0
                        value_data: {}
                        adjusters:
                          price:
                            adjuster: relative
                            adjuster_value: 5
                          weight:
                            adjuster: relative
                            adjuster_value: 5
                          image_url: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                          purchasing_disabled:
                            status: true
                            message: string
                        id: 0
                        option_id: 0
                option_set_id: 0
                option_set_display: string
                variants:
                  - cost_price: 0
                    price: 0
                    sale_price: 0
                    retail_price: 0
                    weight: 0
                    width: 0
                    height: 0
                    depth: 0
                    is_free_shipping: true
                    fixed_cost_shipping_price: 0
                    purchasing_disabled: true
                    purchasing_disabled_message: string
                    upc: string
                    inventory_level: 0
                    inventory_warning_level: 0
                    bin_picking_number: string
                    mpn: string
                    gtin: 12345678905
                    id: 0
                    product_id: 0
                    sku: string
                    sku_id: 0
                    option_values:
                      - option_display_name: Color
                        label: Beige
                        id: 146
                        option_id: 151
                    calculated_price: 0
                    calculated_weight: 0
                meta: {}
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '207':
          description: |-
            Multi-status. The product information was updated successfully, but the inventory data failed to update. 
            
            Verify that the inventory-related updates are well-formed and correct; for example, that they donʼt result in negative stock levels. Then consider updating the inventory data again.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/product_Full'
                  errors: 
                    $ref: '#/components/schemas/errorMultiStatus'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '409':
          description: |
            `Product` was in conflict with another product. This is caused by: duplicate unique values, such as name or SKU; a missing category, brand, or tax_class with which the product is being associated; or a conflicting bulk pricing rule.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            `Product` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: product
    delete:
      tags:
        - Products
      summary: Delete a Product
      description: Deletes a *Product*.
      operationId: deleteProductById
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
  '/catalog/products/{product_id}/images':
    get:
      tags:
        - Images
      summary: Get All Product Images
      description: Returns a list of *Product Images*. Optional parameters can be passed in.
      operationId: getProductImages
      parameters:
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Image Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      title: Product Image
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/productImage_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                description: |
                  Response payload for the BigCommerce API.
              example:
                data:
                  - id: 382
                    product_id: 158
                    is_thumbnail: true
                    sort_order: 0
                    description: ''
                    image_file: a/521/foglinenbeigestripetowel1b_1024x1024__83011__60806.jpg
                    url_zoom: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.1280.1280.jpg?c=2'
                    url_standard: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.560.850.jpg?c=2'
                    url_thumbnail: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.330.500.jpg?c=2'
                    url_tiny: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.66.100.jpg?c=2'
                    date_modified: '2018-08-15T14:48:31+00:00'
                  - id: 383
                    product_id: 158
                    is_thumbnail: false
                    sort_order: 0
                    description: ''
                    image_file: k/050/foglinenbeigestripetowel2b_1024x1024__16082__46564.jpg
                    url_zoom: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.1280.1280.jpg?c=2'
                    url_standard: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.560.850.jpg?c=2'
                    url_thumbnail: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.330.500.jpg?c=2'
                    url_tiny: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.66.100.jpg?c=2'
                    date_modified: '2018-08-15T14:48:31+00:00'
                meta:
                  pagination:
                    total: 2
                    count: 2
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
        '204':
          description: |
            There are not any images on this product.
          content: {}
        '404':
          description: |
            The product ID does not exist.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    post:
      tags:
        - Images
      summary: Create a Product Image
      description: |-
        Creates a *Product Image*.

         **Required Fields**
        - `image_file`, or
        - `image_url`

        **Usage Notes**
        - `image_url` - `255` character limit
        - For file uploads, use the `multipart/form-data` media type
        - Only one image at a time can be created
        - Supported image file types are BMP, GIF, JPEG, PNG, WBMP, XBM, and WEBP.
      operationId: createProductImage
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Product Image Post
              description: The model for a POST to create an image on a product.
              allOf:
                - title: Product Image Base
                  type: object
                  properties:
                    product_id:
                      type: integer
                      description: |
                        The unique numeric identifier for the product with which the image is associated.
                    image_file:
                      type: string
                      description: |-
                        The local path to the original image file uploaded to BigCommerce.
                        A `multipart/form-data` media type.
                    url_zoom:
                      readOnly: true
                      type: string
                      description: |
                        The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.
                    url_standard:
                      readOnly: true
                      type: string
                      description: |
                        The standard URL for this image. By default, this is used for product-page images.
                    url_thumbnail:
                      readOnly: true
                      type: string
                      description: |
                        The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.
                    url_tiny:
                      readOnly: true
                      type: string
                      description: |
                        The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.
                    date_modified:
                      type: string
                      description: |
                        The date on which the product image was modified.
                      format: date-time
                    is_thumbnail:
                      type: boolean
                      description: |
                        Flag for identifying whether the image is used as the product's thumbnail.
                    sort_order:
                      maximum: 2147483647
                      minimum: -2147483648
                      type: integer
                      description: |
                        The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.
                    description:
                      type: string
                      description: |
                        The description for the image.
                  description: Common ProductImage properties.
                - type: object
                  properties:
                    image_url:
                      type: string
                      description: |
                        Must be a fully qualified URL path, including protocol. Limit of 8MB per file.
                    image_file:
                      type: string
                      description: |
                        Must be sent as a multipart/form-data field in the request body. Limit of 1MB per file.
          multipart/form-data:
            schema:
              title: Product Image Post
              description: The model for a POST to create an image on a product.
              allOf:
                - title: Product Image Base
                  type: object
                  properties:
                    id:
                      type: integer
                      description: |
                        The unique numeric ID of the image; increments sequentially.
                    product_id:
                      type: integer
                      description: |
                        The unique numeric identifier for the product with which the image is associated.
                    image_file:
                      type: string
                      description: |-
                        The local path to the original image file uploaded to BigCommerce.
                        A `multipart/form-data` media type.
                    url_zoom:
                      readOnly: true
                      type: string
                      description: |
                        The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.
                    url_standard:
                      readOnly: true
                      type: string
                      description: |
                        The standard URL for this image. By default, this is used for product-page images.
                    url_thumbnail:
                      readOnly: true
                      type: string
                      description: |
                        The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.
                    url_tiny:
                      readOnly: true
                      type: string
                      description: |
                        The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.
                    date_modified:
                      type: string
                      description: |
                        The date on which the product image was modified.
                      format: date-time
                    is_thumbnail:
                      type: boolean
                      description: |
                        Flag for identifying whether the image is used as the product's thumbnail.
                    sort_order:
                      maximum: 2147483647
                      minimum: -2147483648
                      type: integer
                      description: |
                        The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.
                    description:
                      type: string
                      description: |
                        The description for the image.
                  description: Common ProductImage properties.
                - type: object
                  properties:
                    image_url:
                      type: string
                      description: |
                        Must be a fully qualified URL path, including protocol. Limit of 8MB per file.
                    image_file:
                      type: string
                      description: |
                        Must be sent as a multipart/form-data field in the request body. Limit of 1MB per file.
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Product Image Response
                type: object
                properties:
                  data:
                    title: Product Image
                    type: object
                    allOf:
                      - title: Product Image Base
                        type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the image; increments sequentially.
                          product_id:
                            type: integer
                            description: |
                              The unique numeric identifier for the product with which the image is associated.
                          image_file:
                            type: string
                            description: |-
                              The local path to the original image file uploaded to BigCommerce.

                              A `multipart/form-data` media type.
                          url_zoom:
                            readOnly: true
                            type: string
                            description: |
                              The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.
                          url_standard:
                            readOnly: true
                            type: string
                            description: |
                              The standard URL for this image. By default, this is used for product-page images.
                          url_thumbnail:
                            readOnly: true
                            type: string
                            description: |
                              The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.
                          url_tiny:
                            readOnly: true
                            type: string
                            description: |
                              The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.
                          date_modified:
                            type: string
                            description: |
                              The date on which the product image was modified.
                            format: date-time
                          is_thumbnail:
                            type: boolean
                            description: |
                              Flag for identifying whether the image is used as the product's thumbnail.
                          sort_order:
                            maximum: 2147483647
                            minimum: -2147483648
                            type: integer
                            description: |
                              The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.
                          description:
                            type: string
                            description: |
                              The description for the image.
                        description: Common ProductImage properties.
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the image; increments sequentially.
                          product_id:
                            type: integer
                            description: |
                              The unique numeric identifier for the product with which the image is associated.
                          image_file:
                            type: string
                            description: |-
                              The local path to the original image file uploaded to BigCommerce. Use image_url when creating a product.
                              A `multipart/form-data` media type.
                          url_zoom:
                            readOnly: true
                            type: string
                            description: |
                              The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.
                          url_standard:
                            readOnly: true
                            type: string
                            description: |
                              The standard URL for this image. By default, this is used for product-page images.
                          url_thumbnail:
                            readOnly: true
                            type: string
                            description: |
                              The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.
                          url_tiny:
                            readOnly: true
                            type: string
                            description: |
                              The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.
                          date_modified:
                            type: string
                            description: |
                              The date on which the product image was modified.
                            format: date-time
                          image_url:
                            type: string
                            description: |-
                              Publically available URL.
                              Use the image_url when creating a product.
                            example: 'https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |
                  Response payload for the BigCommerce API.
              example:
                data:
                  id: 485
                  product_id: 158
                  is_thumbnail: false
                  sort_order: 1
                  description: ''
                  image_file: o/381/product-image__98178.png
                  url_zoom: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.1280.1280.png?c=2'
                  url_standard: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.560.850.png?c=2'
                  url_thumbnail: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.330.500.png?c=2'
                  url_tiny: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.66.100.png?c=2'
                  date_modified: '2018-09-13T15:57:07+00:00'
                meta: {}
        '400':
          description: Bad Request. The requested resource could not be downloaded and may be invalid. Possible reasons include malformed request syntax or the file host blocking requests.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '404':
          description: |
            The product ID does not exist.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '422':
          description: |-
            Unprocessable Entity. 

            May occur if the `Content-Type` header is set to `multipart/form-data` rather than `application/json` when creating a product image using `image_url`.
          content:
            application/json:
              schema:
                required:
                  - status
                  - title
                  - type
                type: object
                properties:
                  status:
                    type: number
                  title:
                    minLength: 1
                    type: string
                  type:
                    minLength: 1
                    type: string
                description: ''
              example:
                status: 422
                title: image_url must be present if uploading by url
                type: /api-docs/getting-started/api-status-codes
      x-codegen-request-body-name: productImage
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
  '/catalog/products/{product_id}/images/{image_id}':
    get:
      tags:
        - Images
      summary: Get a Product Image
      description: Returns a single *Product Image*. Optional parameters can be passed in.
      operationId: getProductImageById
      parameters:
        - name: image_id
          in: path
          description: |
            The ID of the `Image` that is being operated on.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Image Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/productImage_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |
                  Response payload for the BigCommerce API.
              example:
                data:
                  id: 485
                  product_id: 158
                  is_thumbnail: false
                  sort_order: 1
                  description: ''
                  image_file: o/381/product-image__98178.png
                  url_zoom: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.1280.1280.png?c=2'
                  url_standard: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.560.850.png?c=2'
                  url_thumbnail: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.330.500.png?c=2'
                  url_tiny: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.66.100.png?c=2'
                  date_modified: '2018-09-13T15:57:07+00:00'
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Images
      summary: Update a Product Image
      description: |-
        Updates a *Product Image*.

        **Usage Notes**
        - `image_url` - `255` character limit
        - For file uploads, send a POST request using the `multipart/form-data` media type
      operationId: updateProductImage
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: image_id
          in: path
          description: |
            The ID of the `Image` that is being operated on.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productImage_Put'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Image Response
                type: object
                properties:
                  data:
                    title: Product Image
                    type: object
                    allOf:
                      - title: Product Image Base
                        type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the image; increments sequentially.
                          product_id:
                            type: integer
                            description: |
                              The unique numeric identifier for the product with which the image is associated.
                          image_file:
                            type: string
                            description: |
                              The local path to the original image file uploaded to BigCommerce.
                          url_zoom:
                            readOnly: true
                            type: string
                            description: |
                              The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.
                          url_standard:
                            readOnly: true
                            type: string
                            description: |
                              The standard URL for this image. By default, this is used for product-page images.
                          url_thumbnail:
                            readOnly: true
                            type: string
                            description: |
                              The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.
                          url_tiny:
                            readOnly: true
                            type: string
                            description: |
                              The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.
                          date_modified:
                            type: string
                            description: |
                              The date on which the product image was modified.
                            format: date-time
                          is_thumbnail:
                            type: boolean
                            description: |
                              Flag for identifying whether the image is used as the product's thumbnail.
                          sort_order:
                            maximum: 2147483647
                            minimum: -2147483648
                            type: integer
                            description: |
                              The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.
                          description:
                            type: string
                            description: |
                              The description for the image.
                        description: Common ProductImage properties.
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the image; increments sequentially.
                          product_id:
                            type: integer
                            description: |
                              The unique numeric identifier for the product with which the image is associated.
                          image_file:
                            type: string
                            description: |
                              The local path to the original image file uploaded to BigCommerce. Use image_url when creating a product.
                          url_zoom:
                            readOnly: true
                            type: string
                            description: |
                              The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.
                          url_standard:
                            readOnly: true
                            type: string
                            description: |
                              The standard URL for this image. By default, this is used for product-page images.
                          url_thumbnail:
                            readOnly: true
                            type: string
                            description: |
                              The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.
                          url_tiny:
                            readOnly: true
                            type: string
                            description: |
                              The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.
                          date_modified:
                            type: string
                            description: |
                              The date on which the product image was modified.
                            format: date-time
                          image_url:
                            type: string
                            description: |-
                              Publically available URL.
                              Use the image_url when creating a product.
                            example: 'https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |
                  Response payload for the BigCommerce API.
              example:
                data:
                  id: 485
                  product_id: 158
                  is_thumbnail: false
                  sort_order: 1
                  description: ''
                  image_file: o/381/product-image__98178.png
                  url_zoom: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.1280.1280.png?c=2'
                  url_standard: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.560.850.png?c=2'
                  url_thumbnail: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.330.500.png?c=2'
                  url_tiny: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.66.100.png?c=2'
                  date_modified: '2018-09-13T15:57:07+00:00'
                meta: {}
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Bad Request. The requested resource could not be downloaded and may be invalid. Possible reasons include malformed request syntax or the file host blocking requests.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
      x-codegen-request-body-name: productImage
    delete:
      tags:
        - Images
      summary: Delete a Product Image
      description: Deletes a *Product Image*.
      operationId: deleteProductImage
      parameters:
        - name: image_id
          in: path
          description: |
            The ID of the `Image` that is being operated on.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/ImageIdParam'
  '/catalog/products/{product_id}/videos':
    get:
      tags:
        - Videos
      summary: Get All Product Videos
      description: Returns a list of *Product Videos*. Optional parameters can be passed in.
      operationId: getProductVideos
      parameters:
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Video Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/productVideo_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
              example:
                data:
                  - id: 6
                    type: youtube
                    video_id: PqBTp23RLhI
                    product_id: 192
                    sort_order: 1
                    title: Creating and Editing Banners | BigCommerce Tutorials
                    description: 'Learn how to create and edit marketing banners. Marketing banners are a great way to advertise sales, display coupon codes, and add design elements. Let’s take a look at how you can leverage banners to convert your store’s visitors into paying customers.'
                    length: '01:54'
                  - id: 7
                    type: youtube
                    video_id: EhYBjzqd-nI
                    product_id: 192
                    sort_order: 2
                    title: BigCommerce Company Values
                    description: |-
                      These are the core principles upon which BigCommerce was built, guiding what we do and how we do it. Each employee learns them, loves them and lives them. Our merchants benefit from them every time they use our product or get help from our support team.

                      Join the BigCommerce team and help us build software that changes lives!

                      https://www.bigcommerce.com/careers/
                    length: '03:30'
                  - id: 8
                    type: youtube
                    video_id: vAUdo4kRjrU
                    product_id: 192
                    sort_order: 3
                    title: TOP WORKPLACES 2016 - Austin American Statesman + BigCommerce
                    description: |-
                      We've been named one of Austin American-Statesman's Top WorkPlaces for the 5th year in a row! Here's what some employees have to say:

                      “I am given the freedom and trust to make a difference.”

                      “Everyone believes in the product and growing the company.”

                      “I'm appreciated for the work I do and there is room to grown within the company.”

                      Work With Us!
                      http://www.bigcommerce.com/careers.php
                    length: '01:37'
                meta:
                  pagination:
                    total: 3
                    count: 3
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
    post:
      tags:
        - Videos
      summary: Create a Product Video
      description: |-
        Creates a *Product Video*.

        **Required Fields**
        * video_id

        **Read-Only Fields**
        * id

        Publicly accessible URLs are valid parameters.
        Videos must be loaded through YouTube at this time.
      operationId: createProductVideo
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Product Video Post
              description: |
                The model for a POST to create a video on a product.
              allOf:
                - title: Product Video Base
                  description: Common Product Video properties.
                  properties:
                    title:
                      maxLength: 255
                      minLength: 0
                      type: string
                      example: Writing Great Documentation
                      description: |
                        The title for the video. If left blank, this will be filled in according to data on a host site.
                    description:
                      type: string
                      example: A video about documenation
                      description: |
                        The description for the video. If left blank, this will be filled in according to data on a host site.
                    sort_order:
                      maximum: 2147483647
                      minimum: -2147483648
                      example: 1
                      type: integer
                      description: |
                        The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.
                    type:
                      type: string
                      description: |
                        The video type (a short name of a host site).
                      enum:
                        - youtube
                - properties:
                    video_id:
                      type: string
                      maxLength: 25
                      minLength: 0
                      description: |
                        The ID of the video on a host site.
                      x-required:
                        - post
                      example: z3fRu9pkuXE
              type: object
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Video Response
                type: object
                properties:
                  data:
                    title: Product Video
                    type: object
                    description: |
                      A product video model.
                    allOf:
                      - title: Product Video Base
                        type: object
                        properties:
                          title:
                            maxLength: 255
                            minLength: 0
                            type: string
                            description: |
                              The title for the video. If left blank, this will be filled in according to data on a host site.
                          description:
                            type: string
                            description: |
                              The description for the video. If left blank, this will be filled in according to data on a host site.
                          sort_order:
                            maximum: 2147483647
                            minimum: -2147483648
                            type: integer
                            description: |
                              The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.
                          type:
                            type: string
                            description: |
                              The video type (a short name of a host site).
                            enum:
                              - youtube
                        description: Common Product Video properties.
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the product video; increments sequentially.
                          video_id:
                            type: string
                            description: |
                              The ID of the video on a host site.
                          product_id:
                            type: integer
                            description: |
                              The unique numeric identifier for the product with which the image is associated.
                          length:
                            type: string
                            description: |
                              Length of the video. This will be filled in according to data on a host site.
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |
                  Response payload for the BigCommerce API.
              example:
                title: Your Video
                description: Company Values
                sort_order: 1
                type: youtube
                video_id: 123345AA
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
      x-codegen-request-body-name: productVideo
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
  '/catalog/products/{product_id}/videos/{id}':
    get:
      tags:
        - Videos
      summary: Get a Product Video
      description: Returns a single *Product Video*. Optional parameters can be passed in.
      operationId: getProductVideoById
      parameters:
        - name: id
          in: path
          description: The BigCommerce ID of the `Video`
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Video Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/productVideo_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |
                  Response payload for the BigCommerce API.
              example:
                title: Your Video
                description: Company Values
                sort_order: 1
                type: youtube
                video_id: 123345AA
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Videos
      summary: Update a Product Video
      description: |-
        Updates a *Product Video.

        **Required Fields**
        * none

        **Read-Only Fields**
        * id
      operationId: updateProductVideo
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: id
          in: path
          description: The BigCommerce ID of the `Video`
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              title: Product Video Put
              description: |
                The model for a PUT to update a video on a product.
              allOf:
                - title: Product Video Base
                  type: object
                  properties:
                    title:
                      maxLength: 255
                      minLength: 0
                      type: string
                      description: |
                        The title for the video. If left blank, this will be filled in according to data on a host site.
                    description:
                      type: string
                      description: |
                        The description for the video. If left blank, this will be filled in according to data on a host site.
                    sort_order:
                      maximum: 2147483647
                      minimum: -2147483648
                      type: integer
                      description: |
                        The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.
                    type:
                      type: string
                      description: |
                        The video type (a short name of a host site).
                      enum:
                        - youtube
                  description: Common Product Video properties.
                - type: object
                  properties:
                    id:
                      type: integer
                      description: |
                        The unique numeric ID of the product video; increments sequentially.
                      x-required:
                        - put
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Video Response
                type: object
                properties:
                  data:
                    title: Product Video
                    type: object
                    description: |
                      A product video model.
                    allOf:
                      - title: Product Video Base
                        type: object
                        properties:
                          title:
                            maxLength: 255
                            minLength: 0
                            type: string
                            description: |
                              The title for the video. If left blank, this will be filled in according to data on a host site.
                          description:
                            type: string
                            description: |
                              The description for the video. If left blank, this will be filled in according to data on a host site.
                          sort_order:
                            maximum: 2147483647
                            minimum: -2147483648
                            type: integer
                            description: |
                              The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.
                          type:
                            type: string
                            description: |
                              The video type (a short name of a host site).
                            enum:
                              - youtube
                        description: Common Product Video properties.
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the product video; increments sequentially.
                          video_id:
                            type: string
                            description: |
                              The ID of the video on a host site.
                          product_id:
                            type: integer
                            description: |
                              The unique numeric identifier for the product with which the image is associated.
                          length:
                            type: string
                            description: |
                              Length of the video. This will be filled in according to data on a host site.
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |
                  Response payload for the BigCommerce API.
              example:
                title: Your Video
                description: Company Values
                sort_order: 1
                type: youtube
                video_id: 123345AA
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
      x-codegen-request-body-name: productVideo
    delete:
      tags:
        - Videos
      summary: Delete a Product Video
      description: Deletes a *Product Video*.
      operationId: deleteProductVideo
      parameters:
        - name: id
          in: path
          description: The BigCommerce ID of the `Video`
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/VideoIdParam'
  '/catalog/products/{product_id}/complex-rules':
    get:
      tags:
        - Complex Rules
      summary: Get Complex Rules
      description: Returns a list of all product *Complex Rules*. Optional parameters may be passed in.
      operationId: getComplexRules
      parameters:
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Complex Rule Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/complexRule_Base'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                description: Complex Rule Response
              example:
                data:
                  - id: 82
                    product_id: 195
                    sort_order: 0
                    enabled: true
                    stop: false
                    price_adjuster:
                      adjuster: relative
                      adjuster_value: 8
                    weight_adjuster: {}
                    purchasing_disabled: false
                    purchasing_disabled_message: ''
                    purchasing_hidden: false
                    image_url: ''
                    conditions:
                      - rule_id: 82
                        modifier_id: 221
                        modifier_value_id: 175
                        variant_id: 1
                        combination_id: 0
                  - id: 83
                    product_id: 195
                    sort_order: 1
                    enabled: true
                    stop: false
                    price_adjuster: {}
                    weight_adjuster:
                      adjuster: relative
                      adjuster_value: 3
                    purchasing_disabled: false
                    purchasing_disabled_message: ''
                    purchasing_hidden: false
                    image_url: ''
                    conditions:
                      - rule_id: 83
                        modifier_id: 221
                        modifier_value_id: 174
                        variant_id: 1
                        combination_id: 0
                meta:
                  pagination:
                    total: 2
                    count: 2
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
    post:
      tags:
        - Complex Rules
      summary: Create a Complex Rule
      description: |-
        Creates a product *Complex Rule*.

        **Required Fields**
        - modifier_id
        - modifier_value_id
        - variant_id

        **Read-Only Fields**
        - complex_rule_id
        - conditions_id
        - rule_id
        - combination_id
        - id
      operationId: createComplexRule
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Complex Rule
              type: object
              properties:
                product_id:
                  type: integer
                  description: |
                    The unique numeric ID of the product with which the rule is associated; increments sequentially.
                  nullable: true
                  example: 67
                  x-required:
                    - post
                    - put
                sort_order:
                  maximum: 2147483647
                  minimum: -2147483648
                  type: integer
                  description: |
                    The priority to give this rule when making adjustments to the product properties.
                  example: 0
                enabled:
                  type: boolean
                  description: |
                    Flag for determining whether the rule is to be used when adjusting a product's price, weight, image, or availabilty.
                  example: true
                stop:
                  type: boolean
                  description: |
                    Flag for determining whether other rules should not be applied after this rule has been applied.
                purchasing_disabled:
                  type: boolean
                  description: |
                    Flag for determining whether the rule should disable purchasing of a product when the conditions are applied.
                purchasing_disabled_message:
                  maxLength: 255
                  minLength: 0
                  type: string
                  description: |
                    Message displayed on the storefront when a rule disables the purchasing of a product.
                  example: This product is not available at this time.
                purchasing_hidden:
                  type: boolean
                  description: |
                    Flag for determining whether the rule should hide purchasing of a product when the conditions are applied.
                image_url:
                  type: string
                  description: |
                    The URL for an image displayed on the storefront when the conditions are applied. Limit of 8MB per file.
                  example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
                price_adjuster:
                  title: Adjuster
                  type: object
                  properties:
                    adjuster:
                      type: string
                      description: |
                        The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                      nullable: true
                      enum:
                        - relative
                        - percentage
                    adjuster_value:
                      type: number
                      description: |
                        The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                      example: 5
                  description: Adjuster for Complex Rules.
                weight_adjuster:
                  title: Adjuster
                  type: object
                  properties:
                    adjuster:
                      type: string
                      description: |
                        The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                      nullable: true
                      enum:
                        - relative
                        - percentage
                    adjuster_value:
                      type: number
                      description: |
                        The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                      example: 5
                  description: Adjuster for Complex Rules.
                conditions:
                  type: array
                  items:
                    title: Complex Rule Condition
                    required:
                      - modifier_id
                      - modifier_value_id
                      - variant_id
                    type: object
                    properties:
                      modifier_id:
                        type: integer
                        description: |-
                          The unique numeric ID of the modifier with which the rule condition is associated.
                          Required in /POST.
                        nullable: true
                        example: 55
                      modifier_value_id:
                        type: integer
                        description: |-
                          The unique numeric ID of the modifier value with which the rule condition is associated.
                          Required in /POST.
                        nullable: true
                        example: 256
                      variant_id:
                        type: integer
                        description: |-
                          The unique numeric ID of the variant with which the rule condition is associated.
                          Required in /POST.
                        nullable: true
                        example: 1
              description: Common ComplexRule properties.
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    title: Complex Rule
                    type: object
                    properties:
                      id:
                        type: integer
                        description: |-
                          The unique numeric ID of the rule; increments sequentially.
                          Read-Only
                        example: 5
                      product_id:
                        type: integer
                        description: |
                          The unique numeric ID of the product with which the rule is associated; increments sequentially.
                        nullable: true
                        example: 67
                        x-required:
                          - post
                          - put
                      sort_order:
                        maximum: 2147483647
                        minimum: -2147483648
                        type: integer
                        description: |
                          The priority to give this rule when making adjustments to the product properties.
                        example: 0
                      enabled:
                        type: boolean
                        description: |
                          Flag for determining whether the rule is to be used when adjusting a product's price, weight, image, or availabilty.
                        example: true
                      stop:
                        type: boolean
                        description: |
                          Flag for determining whether other rules should not be applied after this rule has been applied.
                      purchasing_disabled:
                        type: boolean
                        description: |
                          Flag for determining whether the rule should disable purchasing of a product when the conditions are applied.
                      purchasing_disabled_message:
                        maxLength: 255
                        minLength: 0
                        type: string
                        description: |
                          Message displayed on the storefront when a rule disables the purchasing of a product.
                        example: This product is not available at this time.
                      purchasing_hidden:
                        type: boolean
                        description: |
                          Flag for determining whether the rule should hide purchasing of a product when the conditions are applied.
                      image_url:
                        type: string
                        description: |
                          The URL for an image displayed on the storefront when the conditions are applied. Limit of 8MB per file.
                        example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
                      price_adjuster:
                        title: Adjuster
                        type: object
                        properties:
                          adjuster:
                            type: string
                            description: |
                              The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                            nullable: true
                            enum:
                              - relative
                              - percentage
                          adjuster_value:
                            type: number
                            description: |
                              The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                            example: 5
                        description: Adjuster for Complex Rules.
                      weight_adjuster:
                        title: Adjuster
                        type: object
                        properties:
                          adjuster:
                            type: string
                            description: |
                              The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                            nullable: true
                            enum:
                              - relative
                              - percentage
                          adjuster_value:
                            type: number
                            description: |
                              The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                            example: 5
                        description: Adjuster for Complex Rules.
                      conditions:
                        type: array
                        items:
                          title: Complex Rule Condition
                          required:
                            - modifier_id
                            - modifier_value_id
                            - variant_id
                          type: object
                          properties:
                            id:
                              type: integer
                              description: |
                                The unique numeric ID of the rule condition; increments sequentially. Read-Only
                              nullable: true
                              example: 3
                            rule_id:
                              type: integer
                              description: |-
                                The unique numeric ID of the rule with which the condition is associated.
                                Read-Only
                              nullable: true
                              example: 4
                            modifier_id:
                              type: integer
                              description: |-
                                The unique numeric ID of the modifier with which the rule condition is associated.
                                Required in /POST.
                              nullable: true
                              example: 55
                            modifier_value_id:
                              type: integer
                              description: |-
                                The unique numeric ID of the modifier value with which the rule condition is associated.
                                Required in /POST.
                              nullable: true
                              example: 256
                            variant_id:
                              type: integer
                              description: |-
                                The unique numeric ID of the variant with which the rule condition is associated.
                                Required in /POST.
                              nullable: true
                              example: 1
                            combination_id:
                              type: integer
                              description: |
                                (READ-ONLY:) The unique numeric ID of the SKU (v2 API), or Combination, with which the rule condition is associated. This is to maintain cross-compatibility between v2 and v3.
                          description: 'Complex rules may return with conditions that apply to one or more variants, or with a single modifier value (if the rules were created using the v2 API or the control panel). Complex rules created or updated in the v3 API must have conditions that either reference multiple `modifier_value_id`’s, or else reference a `modifier_value_id` and a `variant_id`.'
                    description: Common ComplexRule properties.
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
        '409':
          description: |
            The `ComplexRule` was in conflict with another `ComplexRule`. This is the result of duplicate conditions.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `ComplexRule` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: ComplexRule
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
  '/catalog/products/{product_id}/complex-rules/{complex_rule_id}':
    get:
      tags:
        - Complex Rules
      summary: Get a Complex Rule
      description: Returns a single *Complex Rule*. Optional parameters can be passed in.
      operationId: getComplexRuleById
      parameters:
        - name: complex_rule_id
          in: path
          description: |
            The ID of the `ComplexRule`.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    title: Complex Rule
                    type: object
                    properties:
                      id:
                        type: integer
                        description: |-
                          The unique numeric ID of the rule; increments sequentially.
                          Read-Only
                        example: 5
                      product_id:
                        type: integer
                        description: |
                          The unique numeric ID of the product with which the rule is associated; increments sequentially.
                        example: 67
                        x-required:
                          - post
                          - put
                      sort_order:
                        maximum: 2147483647
                        minimum: -2147483648
                        type: integer
                        description: |
                          The priority to give this rule when making adjustments to the product properties.
                        example: 0
                      enabled:
                        type: boolean
                        description: |
                          Flag for determining whether the rule is to be used when adjusting a product's price, weight, image, or availabilty.
                        example: true
                      stop:
                        type: boolean
                        description: |
                          Flag for determining whether other rules should not be applied after this rule has been applied.
                      purchasing_disabled:
                        type: boolean
                        description: |
                          Flag for determining whether the rule should disable purchasing of a product when the conditions are applied.
                      purchasing_disabled_message:
                        maxLength: 255
                        minLength: 0
                        type: string
                        description: |
                          Message displayed on the storefront when a rule disables the purchasing of a product.
                        example: This product is not available at this time.
                      purchasing_hidden:
                        type: boolean
                        description: |
                          Flag for determining whether the rule should hide purchasing of a product when the conditions are applied.
                      image_url:
                        type: string
                        description: |
                          The URL for an image displayed on the storefront when the conditions are applied. Limit of 8MB per file.
                        example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
                      price_adjuster:
                        title: Adjuster
                        type: object
                        properties:
                          adjuster:
                            type: string
                            description: |
                              The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                            enum:
                              - relative
                              - percentage
                          adjuster_value:
                            type: number
                            description: |
                              The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                            example: 5
                        description: Adjuster for Complex Rules.
                      weight_adjuster:
                        title: Adjuster
                        type: object
                        properties:
                          adjuster:
                            type: string
                            description: |
                              The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                            enum:
                              - relative
                              - percentage
                          adjuster_value:
                            type: number
                            description: |
                              The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                            example: 5
                        description: Adjuster for Complex Rules.
                      conditions:
                        type: array
                        items:
                          title: Complex Rule Condition
                          required:
                            - modifier_id
                            - modifier_value_id
                            - variant_id
                          type: object
                          properties:
                            id:
                              type: integer
                              description: |
                                The unique numeric ID of the rule condition; increments sequentially. Read-Only
                              example: 3
                            rule_id:
                              type: integer
                              description: |-
                                The unique numeric ID of the rule with which the condition is associated.
                                Read-Only
                              example: 4
                            modifier_id:
                              type: integer
                              description: |-
                                The unique numeric ID of the modifier with which the rule condition is associated.
                                Required in /POST.
                              example: 55
                            modifier_value_id:
                              type: integer
                              description: |-
                                The unique numeric ID of the modifier value with which the rule condition is associated.
                                Required in /POST.
                              example: 256
                            variant_id:
                              type: integer
                              description: |-
                                The unique numeric ID of the variant with which the rule condition is associated.
                                Required in /POST.
                              example: 1
                            combination_id:
                              type: integer
                              description: |
                                (READ-ONLY:) The unique numeric ID of the SKU (v2 API), or Combination, with which the rule condition is associated. This is to maintain cross-compatibility between v2 and v3.
                          description: 'Complex rules may return with conditions that apply to one or more variants, or with a single modifier value (if the rules were created using the v2 API or the control panel). Complex rules created or updated in the v3 API must have conditions that either reference multiple `modifier_value_id`’s, or else reference a `modifier_value_id` and a `variant_id`.'
                    description: Common ComplexRule properties.
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Complex Rules
      summary: Update a Complex Rule
      description: |-
        Updates a *Complex Rule*.

        **Required Fields**:
        - none

        **Read-Only Fields**:
        - complex_rule_id
        - conditions_id
        - rule_id
        - combination_id
        - id
      operationId: updateComplexRule
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: complex_rule_id
          in: path
          description: |
            The ID of the `ComplexRule`.
          required: true
          schema:
            type: integer

      requestBody:
        content:
          application/json:
            schema:
              title: Complex Rule
              type: object
              properties:
                product_id:
                  type: integer
                  description: |
                    The unique numeric ID of the product with which the rule is associated; increments sequentially.
                  nullable: true
                  example: 67
                  x-required:
                    - post
                    - put
                sort_order:
                  maximum: 2147483647
                  minimum: -2147483648
                  type: integer
                  description: |
                    The priority to give this rule when making adjustments to the product properties.
                  example: 0
                enabled:
                  type: boolean
                  description: |
                    Flag for determining whether the rule is to be used when adjusting a product's price, weight, image, or availabilty.
                  example: true
                stop:
                  type: boolean
                  description: |
                    Flag for determining whether other rules should not be applied after this rule has been applied.
                purchasing_disabled:
                  type: boolean
                  description: |
                    Flag for determining whether the rule should disable purchasing of a product when the conditions are applied.
                purchasing_disabled_message:
                  maxLength: 255
                  minLength: 0
                  type: string
                  description: |
                    Message displayed on the storefront when a rule disables the purchasing of a product.
                  example: This product is not available at this time.
                purchasing_hidden:
                  type: boolean
                  description: |
                    Flag for determining whether the rule should hide purchasing of a product when the conditions are applied.
                image_url:
                  type: string
                  description: |
                    The URL for an image displayed on the storefront when the conditions are applied. Limit of 8MB per file.
                  example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
                price_adjuster:
                  title: Adjuster
                  type: object
                  properties:
                    adjuster:
                      type: string
                      description: |
                        The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                      nullable: true
                      enum:
                        - relative
                        - percentage
                    adjuster_value:
                      type: number
                      description: |
                        The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                      example: 5
                  description: Adjuster for Complex Rules.
                weight_adjuster:
                  title: Adjuster
                  type: object
                  properties:
                    adjuster:
                      type: string
                      description: |
                        The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                      nullable: true
                      enum:
                        - relative
                        - percentage
                    adjuster_value:
                      type: number
                      description: |
                        The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                      example: 5
                  description: Adjuster for Complex Rules.
                conditions:
                  type: array
                  items:
                    title: Complex Rule Condition
                    required:
                      - modifier_id
                      - modifier_value_id
                      - variant_id
                    type: object
                    properties:
                      modifier_id:
                        type: integer
                        description: |-
                          The unique numeric ID of the modifier with which the rule condition is associated.
                          Required in /POST.
                        nullable: true
                        example: 55
                      modifier_value_id:
                        type: integer
                        description: |-
                          The unique numeric ID of the modifier value with which the rule condition is associated.
                          Required in /POST.
                        nullable: true
                        example: 256
                      variant_id:
                        type: integer
                        description: |-
                          The unique numeric ID of the variant with which the rule condition is associated.
                          Required in /POST.
                        nullable: true
                        example: 1
              description: Common ComplexRule properties.
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    title: Complex Rule
                    type: object
                    properties:
                      id:
                        type: integer
                        description: |-
                          The unique numeric ID of the rule; increments sequentially.
                          Read-Only
                        example: 5
                      product_id:
                        type: integer
                        description: |
                          The unique numeric ID of the product with which the rule is associated; increments sequentially.
                        example: 67
                        x-required:
                          - post
                          - put
                      sort_order:
                        maximum: 2147483647
                        minimum: -2147483648
                        type: integer
                        description: |
                          The priority to give this rule when making adjustments to the product properties.
                        example: 0
                      enabled:
                        type: boolean
                        description: |
                          Flag for determining whether the rule is to be used when adjusting a product's price, weight, image, or availabilty.
                        example: true
                      stop:
                        type: boolean
                        description: |
                          Flag for determining whether other rules should not be applied after this rule has been applied.
                      purchasing_disabled:
                        type: boolean
                        description: |
                          Flag for determining whether the rule should disable purchasing of a product when the conditions are applied.
                      purchasing_disabled_message:
                        maxLength: 255
                        minLength: 0
                        type: string
                        description: |
                          Message displayed on the storefront when a rule disables the purchasing of a product.
                        example: This product is not available at this time.
                      purchasing_hidden:
                        type: boolean
                        description: |
                          Flag for determining whether the rule should hide purchasing of a product when the conditions are applied.
                      image_url:
                        type: string
                        description: |
                          The URL for an image displayed on the storefront when the conditions are applied. Limit of 8MB per file.
                        example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
                      price_adjuster:
                        title: Adjuster
                        type: object
                        properties:
                          adjuster:
                            type: string
                            description: |
                              The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                            enum:
                              - relative
                              - percentage
                          adjuster_value:
                            type: number
                            description: |
                              The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                            example: 5
                        description: Adjuster for Complex Rules.
                      weight_adjuster:
                        title: Adjuster
                        type: object
                        properties:
                          adjuster:
                            type: string
                            description: |
                              The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                            enum:
                              - relative
                              - percentage
                          adjuster_value:
                            type: number
                            description: |
                              The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                            example: 5
                        description: Adjuster for Complex Rules.
                      conditions:
                        type: array
                        items:
                          title: Complex Rule Condition
                          required:
                            - modifier_id
                            - modifier_value_id
                            - variant_id
                          type: object
                          properties:
                            id:
                              type: integer
                              description: |
                                The unique numeric ID of the rule condition; increments sequentially. Read-Only
                              example: 3
                            rule_id:
                              type: integer
                              description: |-
                                The unique numeric ID of the rule with which the condition is associated.
                                Read-Only
                              example: 4
                            modifier_id:
                              type: integer
                              description: |-
                                The unique numeric ID of the modifier with which the rule condition is associated.
                                Required in /POST.
                              example: 55
                            modifier_value_id:
                              type: integer
                              description: |-
                                The unique numeric ID of the modifier value with which the rule condition is associated.
                                Required in /POST.
                              example: 256
                            variant_id:
                              type: integer
                              description: |-
                                The unique numeric ID of the variant with which the rule condition is associated.
                                Required in /POST.
                              example: 1
                            combination_id:
                              type: integer
                              description: |
                                (READ-ONLY:) The unique numeric ID of the SKU (v2 API), or Combination, with which the rule condition is associated. This is to maintain cross-compatibility between v2 and v3.
                          description: 'Complex rules may return with conditions that apply to one or more variants, or with a single modifier value (if the rules were created using the v2 API or the control panel). Complex rules created or updated in the v3 API must have conditions that either reference multiple `modifier_value_id`’s, or else reference a `modifier_value_id` and a `variant_id`.'
                    description: Common ComplexRule properties.
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
        '409':
          description: |
            The `ComplexRule` was in conflict with another `ComplexRule`. This is the result of duplicate conditions.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `ComplexRule` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: ComplexRule
    delete:
      tags:
        - Complex Rules
      summary: Delete a Complex Rule
      description: Deletes a product *Complex Rule*.
      operationId: deleteComplexRuleById
      parameters:
        - name: complex_rule_id
          in: path
          description: |
            The ID of the `ComplexRule`.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/ComplexRuleIdParam'
  '/catalog/products/{product_id}/custom-fields':
    get:
      tags:
        - Custom Fields
      summary: Get Custom Fields
      description: Returns a list of product *Custom Fields*. Optional parameters can be passed in.
      operationId: getCustomFields
      parameters:
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      title: Custom Field
                      required:
                        - name
                        - value
                      type: object
                      properties:
                        id:
                          minimum: 1
                          type: integer
                          description: |-
                            The unique numeric ID of the custom field; increments sequentially.
                            Read-Only
                          example: 6
                        name:
                          maxLength: 250
                          minLength: 1
                          type: string
                          description: |
                            The name of the field, shown on the storefront, orders, etc. Required for /POST
                          example: ISBN
                          x-required:
                            - post
                        value:
                          maxLength: 250
                          minLength: 1
                          type: string
                          description: |
                            The name of the field, shown on the storefront, orders, etc. Required for /POST
                          example: '1234567890123'
                          x-required:
                            - post
                      description: 'Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product’s page, such as a book’s ISBN or a DVD’s release date.'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
              example:
                data:
                  - name: Release year
                    value: '1987'
                    id: 1
                meta:
                  pagination:
                    total: 1
                    count: 1
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      previous: '?page=1&limit=50'
                      current: '?page=1&limit=50'
                      next: '?page=1&limit=50'
    post:
      tags:
        - Custom Fields
      summary: Create a Custom Fields
      description: |-
        Creates a *Custom Field*.

        **Required Fields:**
        - name
        - value

        **Read-Only:**
        - id

        **Limits**
        - 200 custom fields per product limit.
        - 255 characters per custom field limit.
      operationId: createCustomField
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Custom Field
              required:
                - name
                - value
              type: object
              properties:
                name:
                  maxLength: 250
                  minLength: 1
                  type: string
                  description: |
                    The name of the field, shown on the storefront, orders, etc. Required for /POST
                  example: ISBN
                  x-required:
                    - post
                value:
                  maxLength: 250
                  minLength: 1
                  type: string
                  description: |
                    The name of the field, shown on the storefront, orders, etc. Required for /POST
                  example: '1234567890123'
                  x-required:
                    - post
              description: 'Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product’s page, such as a book’s ISBN or a DVD’s release date.'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    title: Custom Field
                    required:
                      - name
                      - value
                    type: object
                    properties:
                      id:
                        minimum: 1
                        type: integer
                        description: |-
                          The unique numeric ID of the custom field; increments sequentially.
                          Read-Only
                        example: 6
                      name:
                        maxLength: 250
                        minLength: 1
                        type: string
                        description: |
                          The name of the field, shown on the storefront, orders, etc. Required for /POST
                        example: ISBN
                        x-required:
                          - post
                      value:
                        maxLength: 250
                        minLength: 1
                        type: string
                        description: |
                          The name of the field, shown on the storefront, orders, etc. Required for /POST
                        example: '1234567890123'
                        x-required:
                          - post
                    description: 'Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product’s page, such as a book’s ISBN or a DVD’s release date.'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  name: Release Year
                  value: '1976'
                  id: 2
                meta: {}
        '404':
          description: |
            The parent resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '422':
          description: |
            The `CustomField` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: CustomField
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
  '/catalog/products/{product_id}/custom-fields/{custom_field_id}':
    get:
      tags:
        - Custom Fields
      summary: Get a Custom Field
      description: Returns a single *Custom Field*. Optional parameters can be passed in.
      operationId: getCustomFieldById
      parameters:
        - name: custom_field_id
          in: path
          description: |
            The ID of the `CustomField`.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/productCustomField_Base'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  name: Release Year
                  value: '1976'
                  id: 2
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Custom Fields
      summary: Update a Custom Field
      description: |-
        Updates a *Custom Field*.

        **Required Fields**
        - none

        **Read-Only**
        - id
      operationId: updateCustomField
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: custom_field_id
          in: path
          description: |
            The ID of the `CustomField`.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              title: Custom Field
              required:
                - name
                - value
              type: object
              properties:
                id:
                  minimum: 1
                  type: integer
                  description: |-
                    The unique numeric ID of the custom field; increments sequentially.
                    Read-Only
                  example: 6
                name:
                  maxLength: 250
                  minLength: 1
                  type: string
                  description: |
                    The name of the field, shown on the storefront, orders, etc. Required for /POST
                  example: ISBN
                  x-required:
                    - post
                value:
                  maxLength: 250
                  minLength: 1
                  type: string
                  description: |
                    The name of the field, shown on the storefront, orders, etc. Required for /POST
                  example: '1234567890123'
                  x-required:
                    - post
              description: 'Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product’s page, such as a book’s ISBN or a DVD’s release date.'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    title: Custom Field
                    required:
                      - name
                      - value
                    type: object
                    properties:
                      id:
                        minimum: 1
                        type: integer
                        description: |-
                          The unique numeric ID of the custom field; increments sequentially.
                          Read-Only
                        example: 6
                      name:
                        maxLength: 250
                        minLength: 1
                        type: string
                        description: |
                          The name of the field, shown on the storefront, orders, etc. Required for /POST
                        example: ISBN
                        x-required:
                          - post
                      value:
                        maxLength: 250
                        minLength: 1
                        type: string
                        description: |
                          The name of the field, shown on the storefront, orders, etc. Required for /POST
                        example: '1234567890123'
                        x-required:
                          - post
                    description: 'Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product’s page, such as a book’s ISBN or a DVD’s release date.'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  name: Release Year
                  value: '1976'
                  id: 2
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '422':
          description: |
            The `CustomField` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: CustomField
    delete:
      tags:
        - Custom Fields
      summary: Delete a Custom Field
      description: Deletes a product *Custom Field*.
      operationId: deleteCustomFieldById
      parameters:
        - name: custom_field_id
          in: path
          description: |
            The ID of the `CustomField`.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: '`204 No Content`. Action has been enacted and no further information is to be supplied. `null` is returned.'
          content: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/CustomFieldIdParam'
  '/catalog/products/{product_id}/bulk-pricing-rules':
    get:
      tags:
        - Bulk Pricing Rules
      summary: Get All Bulk Pricing Rules
      description: Returns a list of *Bulk Pricing Rules*. Optional parameters can be passed in.
      operationId: getBulkPricingRules
      parameters:
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                            id:
                              type: integer
                              description: Unique ID of the *Bulk Pricing Rule*. Read-Only.
                              readOnly: true
                          required:
                            - id
                        - $ref: '#/components/schemas/bulkPricingRule_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
              example:
                data:
                  - id: 83
                    quantity_min: 1
                    quantity_max: 3
                    type: price
                    amount: 1
                  - id: 84
                    quantity_min: 4
                    quantity_max: 0
                    type: price
                    amount: 1
                meta:
                  pagination:
                    total: 2
                    count: 2
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
        '404':
          description: |
            The parent resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    post:
      tags:
        - Bulk Pricing Rules
      summary: Create a Bulk Pricing Rule
      description: |-
        Creates a *Bulk Pricing Rule*.

        **Required Fields**
        - quantity_min
        - quantity_max
        - type
        - amount

        **Read-Only Fields**
        - id

        **Limits**
        - 50 bulk pricing rule per product limit.
      operationId: createBulkPricingRule
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bulkPricingRule_Full'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: Unique ID of the *Bulk Pricing Rule*. Read-Only.
                            readOnly: true
                        required:
                          - id
                      - $ref: '#/components/schemas/bulkPricingRule_Full'
                  meta:
                    title: Meta
                    type: object
                    description: Empty meta object; may be used later.
              example:
                data:
                  id: 83
                  quantity_min: 1
                  quantity_max: 3
                  type: price
                  amount: 1
                meta: {}
        '404':
          description: |
            The parent resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '409':
          description: |
            The `BulkPricingRule` was in conflict with another bulk pricing rule. This is the result of quantity range overlapping with existing bulk pricing rules.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `BulkPricingRule` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: BulkPricingRule
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
  '/catalog/products/{product_id}/bulk-pricing-rules/{bulk_pricing_rule_id}':
    get:
      tags:
        - Bulk Pricing Rules
      summary: Get a Bulk Pricing Rule
      description: Returns a single *Bulk Pricing Rule*. Optional parameters can be passed in.
      operationId: getBulkPricingRuleById
      parameters:
        - name: bulk_pricing_rule_id
          in: path
          description: |
            The ID of the `BulkPricingRule`.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: Unique ID of the *Bulk Pricing Rule*. Read-Only.
                            readOnly: true
                        required:
                          - id
                      - $ref: '#/components/schemas/bulkPricingRule_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 83
                  quantity_min: 1
                  quantity_max: 3
                  type: price
                  amount: 1
                meta: {}
        '404':
          description: |
            The resource or parent resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Bulk Pricing Rules
      summary: Update a Bulk Pricing Rule
      description: |-
        Updates a *Bulk Pricing Rule*.

        **Required Fields**
        * none

        **Read-Only Fields**
        - id
      operationId: updateBulkPricingRule
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: bulk_pricing_rule_id
          in: path
          description: |
            The ID of the `BulkPricingRule`.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    id:
                      type: integer
                      description: Unique ID of the *Bulk Pricing Rule*. Read-Only.
                      readOnly: true
                  required:
                    - id
                - $ref: '#/components/schemas/bulkPricingRule_Full'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    title: Bulk Pricing Rule
                    required:
                      - amount
                      - quantity_max
                      - quantity_min
                      - type
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Unique ID of the *Bulk Pricing Rule*. Read-Only.
                        readOnly: true
                      quantity_min:
                        minimum: 0
                        type: integer
                        description: |
                          The minimum inclusive quantity of a product to satisfy this rule. Must be greater than or equal to zero.
                          Required in /POST.
                        example: 10
                        x-required:
                          - post
                      quantity_max:
                        minimum: 0
                        type: integer
                        description: |-
                          The maximum inclusive quantity of a product to satisfy this rule. Must be greater than the `quantity_min` value – unless this field has a value of 0 (zero), in which case there will be no maximum bound for this rule.
                          Required in /POST.
                        example: 50
                        x-required:
                          - post
                      type:
                        type: string
                        description: |-
                          The type of adjustment that is made. Values: `price` - the adjustment amount per product; `percent` - the adjustment as a percentage of the original price; `fixed` - the adjusted absolute price of the product.
                          Required in /POST.
                        example: price
                        enum:
                          - price
                          - percent
                          - fixed
                        x-required:
                          - post
                      amount:
                        type: integer
                        description: |-
                          The discount can be a fixed dollar amount or a percentage. For a fixed dollar amount enter it as an integer and the response will return as an integer. For percentage enter the amount as the percentage divided by 100 using string format. For example 10% percent would be “.10”. The response will return as an integer.
                          Required in /POST.
                    description: Common BulkPricingRule properties
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 83
                  quantity_min: 1
                  quantity_max: 3
                  type: price
                  amount: 1
                meta: {}
        '404':
          description: |
            The resource or parent resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '409':
          description: |
            The `BulkPricingRule` was in conflict with another bulk pricing rule. This is the result of quantity range overlapping with existing bulk pricing rules.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `BulkPricingRule` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: BulkPricingRule
    delete:
      tags:
        - Bulk Pricing Rules
      summary: Delete a Bulk Pricing Rule
      description: Deletes a *Bulk Pricing Rule*.
      operationId: deleteBulkPricingRuleById
      parameters:
        - name: bulk_pricing_rule_id
          in: path
          description: |
            The ID of the `BulkPricingRule`.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
        '404':
          description: |
            The resource or parent resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/BulkPricingRuleIdParam'
  '/catalog/products/{product_id}/metafields':
    get:
      tags:
        - Metafields
      summary: Get All Product Metafields
      description: Returns a list of *Product Metafields*. Optional parameters can be passed in.
      operationId: getProductMetafieldsByProductId
      parameters:
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: key
          in: query
          description: |
            Filter based on a metafield's key.
          schema:
            type: string
        - name: namespace
          in: query
          description: Filter based on a metafield's namespace.
          schema:
            type: string
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Meta Field Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
              example:
                data:
                  - id: 6
                    key: Location
                    value: 4HG
                    namespace: Warehouse Locations
                    permission_set: app_only
                    resource_type: product
                    resource_id: 111
                    description: Location in the warehouse
                    date_created: '1973-01-20T21:34:57.903Z'
                    date_modified: '1990-12-30T00:29:23.515Z'
                  - id: 7
                    key: Sublocation
                    value: 4HG
                    namespace: Warehouse Locations
                    permission_set: read
                    resource_type: product
                    resource_id: 111
                    description: Location in the warehouse
                    date_created: '1973-01-20T21:34:57.903Z'
                    date_modified: '1990-12-30T00:29:23.515Z'
                meta:
                  pagination:
                    total: 2
                    count: 2
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    post:
      tags:
        - Metafields
      summary: Create a Product Metafield
      description: |-
        Creates a *Product Metafield*.

        **Required Fields:**
        * permission_set
        * namespace
        * key
        * value

        **Note:** The maxiumum number of metafields allowed on each order, product, category, variant, or brand is 250 per client ID. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in the Help Center.
      operationId: createProductMetafield
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Base'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Metafield Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 8
                  key: location_id
                  value: 'Shelf 3, Bin 5'
                  namespace: Inventory Namespace
                  permission_set: read
                  resource_type: product
                  resource_id: 158
                  description: Where products are located
                  date_created: '2018-09-13T16:42:37+00:00'
                  date_modified: '2018-09-13T16:42:37+00:00'
                meta: {}
        '409':
          description: |
            The `Metafield` was in conflict with another `Metafield`. This can be the result of duplicate unique key combinations of the app's client ID, namespace, key, resource_type, and resource_id.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |-
                      The HTTP status code.
                  title:
                    type: string
                    description: |-
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `Metafield` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
  '/catalog/products/{product_id}/metafields/{metafield_id}':
    get:
      tags:
        - Metafields
      summary: Get a Product Metafield
      description: Returns a single *Product Metafield*. Optional parameters can be passed in.
      operationId: getProductMetafieldByProductId
      parameters:
        - name: metafield_id
          in: path
          description: |
            The ID of the `Metafield`.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Metafield Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 4
                  key: location_id
                  value: 'Shelf 3, Bin 5'
                  namespace: App Namespace
                  permission_set: app_only
                  resource_type: product
                  resource_id: 137
                  description: Where products are located
                  date_created: '2021-08-06T19:15:35+00:00'
                  date_modified: '2021-08-06T19:15:35+00:00'
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Metafields
      summary: Update a Product Metafield
      description: "Updates a *Product Metafield*.\n\n**Required Fields**\n* none\n\n**Read-Only Fields**\n* id\n* These fields can only be modified using the API account that created the metafield:\n\t* `namespace`\n\t* `key`\n\t* `permission_set`\n\t* `value`\n\n**Usage Notes**\n* Attempting to modify the `namespace`, `key`, `permission_set`, or `value` field using an API account different from the one used to create those metafields will result in a `403` error message. "
      operationId: updateProductMetafield
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: metafield_id
          in: path
          description: |
            The ID of the `Metafield`.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Base'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Metafield Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 4
                  key: location_id
                  value: 'Shelf 3, Bin 5'
                  namespace: App Namespace
                  permission_set: app_only
                  resource_type: product
                  resource_id: 137
                  description: Where products are located
                  date_created: '2021-08-06T19:15:35+00:00'
                  date_modified: '2021-08-06T19:15:35+00:00'
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
      x-codegen-request-body-name: Metafield
    delete:
      tags:
        - Metafields
      summary: Delete a Product Metafield
      description: Deletes a *Product Metafield*.
      operationId: deleteProductMetafieldById
      parameters:
        - name: metafield_id
          in: path
          description: |
            The ID of the `Metafield`.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/MetafieldIdParam'
  '/catalog/products/{product_id}/reviews':
    get:
      tags:
        - Reviews
      summary: Get Product Reviews
      description: Returns a list of all *Product Reviews*. Optional parameters can be passed in.
      operationId: getProductReviews
      parameters:
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: status
          in: query
          description: 'Filter items by status. `1` for approved, `0` for pending.'
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Review Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      title: Product Review
                      type: object
                      description: |
                        A product review model.
                      allOf:
                        - title: Product Review Base
                          required:
                            - date_reviewed
                            - title
                          type: object
                          properties:
                            title:
                              maxLength: 255
                              minLength: 0
                              type: string
                              description: |-
                                The title for the product review.
                                Required in /POST.
                            text:
                              type: string
                              description: |
                                The text for the product review.
                            status:
                              type: string
                              description: |
                                The status of the product review. Must be one of `approved`, `disapproved` or `pending`.
                            rating:
                              type: integer
                              description: 'The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5.'
                            email:
                              type: string
                              description: 'The email of the reviewer. Must be a valid email, or an empty string.'
                            name:
                              maxLength: 255
                              minLength: 0
                              type: string
                              description: The name of the reviewer.
                            date_reviewed:
                              type: string
                              description: |
                                Date the product was reviewed. Required in /POST.
                              format: date-time
                        - type: object
                          properties:
                            id:
                              type: integer
                              description: |
                                The unique numeric ID of the product review; increments sequentially.
                            product_id:
                              type: integer
                              description: |
                                The unique numeric identifier for the product with which the review is associated.
                            date_created:
                              type: string
                              description: |
                                Date the product review was created.
                              format: date-time
                            date_modified:
                              type: string
                              description: |
                                Date the product review was modified.
                              format: date-time
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
        '204':
          description: |
            There are no reviews on this product.
          content: {}
        '404':
          description: |
            The product ID does not exist.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    post:
      tags:
        - Reviews
      summary: Create a Product Review
      description: |-
        Creates a *Product Review*.

        **Required Fields**
        - title
        - date_reviewed

        **Read-Only Fields**
        * id
      operationId: createProductReview
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Product Review Post
              description: |
                The model for a POST to create a product review.
              allOf:
                - title: Product Review Base
                  required:
                    - date_reviewed
                    - title
                  type: object
                  properties:
                    title:
                      maxLength: 255
                      minLength: 0
                      type: string
                      description: |-
                        The title for the product review.
                        Required in /POST.
                    text:
                      type: string
                      description: |
                        The text for the product review.
                    status:
                      type: string
                      description: |
                        The status of the product review. Must be one of `approved`, `disapproved` or `pending`.
                    rating:
                      type: integer
                      description: 'The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5.'
                    email:
                      type: string
                      description: 'The email of the reviewer. Must be a valid email, or an empty string.'
                    name:
                      maxLength: 255
                      minLength: 0
                      type: string
                      description: The name of the reviewer.
                    date_reviewed:
                      type: string
                      description: |
                        Date the product was reviewed. Required in /POST.
                      format: date-time
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Review Response
                type: object
                properties:
                  data:
                    title: Product Review
                    type: object
                    description: |
                      A product review model.
                    allOf:
                      - title: Product Review Base
                        required:
                          - date_reviewed
                          - title
                        type: object
                        properties:
                          title:
                            maxLength: 255
                            minLength: 0
                            type: string
                            description: |-
                              The title for the product review.
                              Required in /POST.
                          text:
                            type: string
                            description: |
                              The text for the product review.
                          status:
                            type: string
                            description: |
                              The status of the product review. Must be one of `approved`, `disapproved` or `pending`.
                          rating:
                            type: integer
                            description: 'The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5.'
                          email:
                            type: string
                            description: 'The email of the reviewer. Must be a valid email, or an empty string.'
                          name:
                            maxLength: 255
                            minLength: 0
                            type: string
                            description: The name of the reviewer.
                          date_reviewed:
                            type: string
                            description: |
                              Date the product was reviewed. Required in /POST.
                            format: date-time
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the product review; increments sequentially.
                          product_id:
                            type: integer
                            description: |
                              The unique numeric identifier for the product with which the review is associated.
                          date_created:
                            type: string
                            description: |
                              Date the product review was created.
                            format: date-time
                          date_modified:
                            type: string
                            description: |
                              Date the product review was modified.
                            format: date-time
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |
                  Response payload for the BigCommerce API.
              example:
                data:
                  title: irur
                  text: anim aute
                  status: Lorem ad sed voluptate
                  rating: 3
                  email: esse Lorem laborum aute
                  name: 'ut in '
                  date_reviewed: '2011-12-31T13:40:42.971Z'
                  id: 82495037
                  product_id: 22609026
                  date_created: '1985-01-17T07:37:20.439Z'
                  date_modified: '2004-09-28T14:38:21.973Z'
                meta: {}
        '404':
          description: |
            The product ID does not exist.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
      x-codegen-request-body-name: productReview
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
  '/catalog/products/{product_id}/reviews/{review_id}':
    get:
      tags:
        - Reviews
      summary: Get a Product Review
      description: Returns a single *Product Review*. Optional parameters maybe passed in.
      operationId: getProductReviewById
      parameters:
        - name: review_id
          in: path
          description: |
            The ID of the `review` that is being operated on.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Review Response
                type: object
                properties:
                  data:
                    title: Product Review
                    type: object
                    description: |
                      A product review model.
                    allOf:
                      - title: Product Review Base
                        required:
                          - date_reviewed
                          - title
                        type: object
                        properties:
                          title:
                            maxLength: 255
                            minLength: 0
                            type: string
                            description: |-
                              The title for the product review.
                              Required in /POST.
                          text:
                            type: string
                            description: |
                              The text for the product review.
                          status:
                            type: string
                            description: |
                              The status of the product review. Must be one of `approved`, `disapproved` or `pending`.
                          rating:
                            type: integer
                            description: 'The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5.'
                          email:
                            type: string
                            description: 'The email of the reviewer. Must be a valid email, or an empty string.'
                          name:
                            maxLength: 255
                            minLength: 0
                            type: string
                            description: The name of the reviewer.
                          date_reviewed:
                            type: string
                            description: |
                              Date the product was reviewed. Required in /POST.
                            format: date-time
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the product review; increments sequentially.
                          date_created:
                            type: string
                            description: |
                              Date the product review was created.
                            format: date-time
                          date_modified:
                            type: string
                            description: |
                              Date the product review was modified.
                            format: date-time
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |
                  Response payload for the BigCommerce API.
              example:
                data:
                  title: irur
                  text: anim aute
                  status: Lorem ad sed voluptate
                  rating: 3
                  email: esse Lorem laborum aute
                  name: 'ut in '
                  date_reviewed: '2011-12-31T13:40:42.971Z'
                  id: 82495037
                  product_id: 22609026
                  date_created: '1985-01-17T07:37:20.439Z'
                  date_modified: '2004-09-28T14:38:21.973Z'
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Reviews
      summary: Update a Product Review
      description: |-
        Updates a *Product Review*.

        **Required Fields**
        * none

        **Read-Only Fields**
        * id
      operationId: updateProductReview
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: review_id
          in: path
          description: |
            The ID of the `review` that is being operated on.
          required: true
          schema:
            type: integer
      requestBody:
        description: |
          A BigCommerce `ProductReview` object.
        content:
          application/json:
            schema:
              title: Product Review Put
              description: |
                The model for a PUT to update a product review.
              allOf:
                - title: Product Review Base
                  required:
                    - date_reviewed
                    - title
                  type: object
                  properties:
                    title:
                      maxLength: 255
                      minLength: 0
                      type: string
                      description: |-
                        The title for the product review.
                        Required in /POST.
                    text:
                      type: string
                      description: |
                        The text for the product review.
                    status:
                      type: string
                      description: |
                        The status of the product review. Must be one of `approved`, `disapproved` or `pending`.
                    rating:
                      type: integer
                      description: 'The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5.'
                    email:
                      type: string
                      description: 'The email of the reviewer. Must be a valid email, or an empty string.'
                    name:
                      maxLength: 255
                      minLength: 0
                      type: string
                      description: The name of the reviewer.
                    date_reviewed:
                      type: string
                      description: |
                        Date the product was reviewed. Required in /POST.
                      format: date-time
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Review Response
                type: object
                properties:
                  data:
                    title: Product Review
                    type: object
                    description: |
                      A product review model.
                    allOf:
                      - title: Product Review Base
                        required:
                          - date_reviewed
                          - title
                        type: object
                        properties:
                          title:
                            maxLength: 255
                            minLength: 0
                            type: string
                            description: |-
                              The title for the product review.
                              Required in /POST.
                          text:
                            type: string
                            description: |
                              The text for the product review.
                          status:
                            type: string
                            description: |
                              The status of the product review. Must be one of `approved`, `disapproved` or `pending`.
                          rating:
                            type: integer
                            description: 'The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5.'
                          email:
                            type: string
                            description: 'The email of the reviewer. Must be a valid email, or an empty string.'
                          name:
                            maxLength: 255
                            minLength: 0
                            type: string
                            description: The name of the reviewer.
                          date_reviewed:
                            type: string
                            description: |
                              Date the product was reviewed. Required in /POST.
                            format: date-time
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the product review; increments sequentially.
                          product_id:
                            type: integer
                            description: |
                              The unique numeric identifier for the product with which the review is associated.
                          date_created:
                            type: string
                            description: |
                              Date the product review was created.
                            format: date-time
                          date_modified:
                            type: string
                            description: |
                              Date the product review was modified.
                            format: date-time
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |
                  Response payload for the BigCommerce API.
              example:
                data:
                  title: irur
                  text: anim aute
                  status: Lorem ad sed voluptate
                  rating: 3
                  email: esse Lorem laborum aute
                  name: 'ut in '
                  date_reviewed: '2011-12-31T13:40:42.971Z'
                  id: 82495037
                  product_id: 22609026
                  date_created: '1985-01-17T07:37:20.439Z'
                  date_modified: '2004-09-28T14:38:21.973Z'
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
      x-codegen-request-body-name: productReview
    delete:
      tags:
        - Reviews
      summary: Delete a Product Review
      description: Deletes a *Product Review*.
      operationId: deleteProductReview
      parameters:
        - name: review_id
          in: path
          description: |
            The ID of the `review` that is being operated on.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/ReviewIdParam'
  '/catalog/products/channel-assignments':
    get:
      summary: Get Products Channel Assignments
      description: Returns a list of products channel assignments.
      operationId: GetProductsChannelAssignments
      tags:
        - Channel Assignments
      parameters:
        - name: page
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
        - name: 'product_id:in'
          in: query
          schema:
            type: string
        - name: 'channel_id:in'
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Collection of channel assignments.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductChannelAssignment'
                  meta:
                    $ref: '#/components/schemas/MetaPaginationObject'
    put:
      summary: Create Products Channel Assignments
      description: Creates products channel assignments.
      operationId: CreateProductsChannelAssignments
      parameters:
        - $ref: '#/components/parameters/ContentType'
      tags:
        - Channel Assignments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProductChannelAssignment'
      responses:
        '204':
          description: Updated
        '422':
          description: Error response for batch PUT of Channel Assignments. Includes the errors for each reference id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/beta5ErrorResponse'
    delete:
      summary: Delete Products Channel Assignments
      description: Delete products channel assignments. A filter must be supplied.
      operationId: DeleteProductsChannelAssignments
      tags:
        - Channel Assignments
      parameters:
        - name: 'product_id:in'
          in: query
          schema:
            type: string
        - name: 'channel_id:in'
          in: query
          schema:
            type: string
      responses:
        '204':
          description: Deleted
        '422':
          description: At least one filter must be provided in order to delete channel assignments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/beta5ErrorResponse'
    parameters:
      - $ref: '#/components/parameters/Accept'
  '/catalog/products/category-assignments':
    get:
      summary: Get Products Category Assignments
      description: Returns a list of products category assignments.
      operationId: GetProductsCategoryAssignments
      tags:
        - Category Assignments
      parameters:
        - name: page
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
        - name: 'product_id:in'
          in: query
          schema:
            type: string
        - name: 'category_id:in'
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Collection of category assignments.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductCategoryAssignment'
                  meta:
                    $ref: '#/components/schemas/MetaPaginationObject'
    put:
      summary: Create Products Category Assignments.
      description: Creates products category assignments.
      operationId: CreateProductsCategoryAssignments
      parameters:
        - $ref: '#/components/parameters/ContentType'
      tags:
        - Category Assignments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProductCategoryAssignment'
      responses:
        '204':
          description: Updated
        '422':
          description: Error response for batch PUT of Category Assignments. Includes the errors for each reference id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/beta5ErrorResponse'
    delete:
      summary: Delete Products Category Assignments
      description: Deletes products category assignments. A filter must be supplied.
      operationId: DeleteProductsCategoryAssignments
      tags:
        - Category Assignments
      parameters:
        - name: 'product_id:in'
          in: query
          schema:
            type: string
        - name: 'category_id:in'
          in: query
          schema:
            type: string
      responses:
        '204':
          description: Deleted
        '422':
          description: At least one filter must be provided in order to delete category assignments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/beta5ErrorResponse'
    parameters:
      - $ref: '#/components/parameters/Accept'
  '/catalog/summary':
    get:
      tags:
        - Summary
      summary: Get a Catalog Summary
      description: |-
        Returns a lightweight inventory summary from the BigCommerce Catalog.

        The inventory summary includes:
        * "inventory_count"
        * "variant_count"
        * "inventory_value"
        * "highest_variant_price"
        * "average_variant_price"
        * "lowest_variant_price"
        * "oldest_variant_date"
        * "newest_variant_date"
        * "primary_category_id"
        * "primary_category_name"
      operationId: getCatalogSummary
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Catalog Summary Response
                type: object
                properties:
                  data:
                    title: Catalog Summary
                    type: object
                    properties:
                      inventory_count:
                        type: integer
                        description: |
                          A count of all inventory items in the catalog.
                        example: 2000
                      inventory_value:
                        type: number
                        description: |
                          Total value of store's inventory.
                        format: double
                        example: 267000
                      primary_category_id:
                        type: integer
                        description: |
                          ID of the category containing the most products.
                        example: 23
                      primary_category_name:
                        type: string
                        description: |
                          Name of the category containing the most products.
                        example: Shop All
                      variant_count:
                        type: integer
                        description: Total number of variants
                        example: 46
                      highest_variant_price:
                        type: number
                        description: Highest priced variant
                        format: double
                        example: 249
                      average_variant_price:
                        type: number
                        description: Average price of all variants
                        format: double
                        example: 83.07978261
                      lowest_variant_price:
                        type: string
                        description: Lowest priced variant in the store
                        example: '7'
                      oldest_variant_date:
                        type: string
                        example: '2018-08-15T00:00:00+00:00'
                      newest_variant_date:
                        type: string
                        example: '2018-08-16T00:00:00+00:00'
                    description: Catalog Summary object describes a lightweight summary of the catalog.
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
    parameters:
      - $ref: '#/components/parameters/Accept'
components:
  schemas:
    productModifier_Base:
      title: productModifier_Base
      required:
        - required
        - type
      type: object
      properties:
        type:
          type: string
          description: |
            BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.
          enum:
            - date
            - checkbox
            - file
            - text
            - multi_line_text
            - numbers_only_text
            - radio_buttons
            - rectangles
            - dropdown
            - product_list
            - product_list_with_images
            - swatch
          x-required:
            - post
        required:
          type: boolean
          description: |
            Whether or not this modifer is required or not at checkout. Required in a /POST.
          x-required:
            - post
        sort_order:
          type: integer
          description: The order the modifiers display on the product detail page.
        config:
          $ref: '#/components/schemas/config_Full'
        display_name:
          type: string
          description: The name of the option shown on the storefront.
      description: Common Modifier properties.
      x-internal: false
    productModifier_Full:
      title: productModifier_Full
      description: Product Modifier
      allOf:
        - $ref: '#/components/schemas/productModifier_Base'
        - type: object
          properties:
            id:
              type: integer
              description: |
                The unique numeric ID of the modifier; increments sequentially.
              example: 12
            product_id:
              type: integer
              description: |
                The unique numeric ID of the product to which the option belongs.
              example: 77
            name:
              type: string
              description: |
                The unique option name. Auto-generated from the display name, a timestamp, and the product ID.
              example: Add-a-$5-Donation1535039590-191
            option_values:
              type: array
              items:
                $ref: '#/components/schemas/productModifierOptionValue_Full'
      x-internal: false
    productModifierOptionValue_Base:
      title: productModifierOptionValue_Base
      required:
        - label
        - sort_order
      type: object
      properties:
        is_default:
          type: boolean
          description: |
            The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
          example: false
        label:
          type: string
          description: |
            The text display identifying the value on the storefront. Required in a /POST.
          example: Green
          x-required:
            - post
        sort_order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: |
            The order in which the value will be displayed on the product page. Required in a /POST.
          example: 0
          x-required:
            - post
        value_data:
          type: object
          properties: {}
          description: |
            Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state. If no data is available, returns `null`.
          nullable: true
        adjusters:
          $ref: '#/components/schemas/adjusters_Full'
      description: Common Product Modifer `option_value` properties.
      x-internal: false
    productModifierOptionValue_Full:
      title: productModifierOptionValue_Full
      description: Product Modifer `option_value`.
      allOf:
        - $ref: '#/components/schemas/productModifierOptionValue_Base'
        - type: object
          properties:
            id:
              type: integer
              description: |
                The unique numeric ID of the value; increments sequentially.
            option_id:
              type: integer
      x-internal: false
    productOption_Base:
      title: productOption_Base
      type: object
      properties:
        id:
          type: integer
          description: |
            The unique numerical ID of the option, increments sequentially.
          nullable: true
          example: 55
        product_id:
          type: integer
          description: |
            The unique numerical ID of the product to which the option belongs.
          example: 4
          x-required:
            - post
            - put
        display_name:
          maxLength: 255
          minLength: 1
          type: string
          description: |
            The name of the option shown on the storefront.
          example: Add-a-$5-Donation1535042499-187
          x-required:
            - post
            - put
        type:
          type: string
          description: |
            The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.
          enum:
            - radio_buttons
            - rectangles
            - dropdown
            - product_list
            - product_list_with_images
            - swatch
          x-required:
            - post
            - put
        config:
          $ref: '#/components/schemas/productOptionConfig_Full'
        sort_order:
          type: integer
          description: 'Order in which the option is displayed on the storefront. '
          example: 1
        option_values:
          type: array
          items:
            $ref: '#/components/schemas/productOptionOptionValue_Full'
      description: Common Option properties.
      x-internal: false
    productVariant_Base:
      title: productVariant_Base
      type: object
      properties:
        cost_price:
          minimum: 0
          type: number
          description: The cost price of the variant. Not affected by Price List prices.
          format: double
          nullable: true
        price:
          minimum: 0
          type: number
          description: 'This variant’s base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product’s default price (set in the Product resource’s `price` field) will be used as the base price.'
          format: double
          nullable: true
        sale_price:
          minimum: 0
          type: number
          description: 'This variant’s sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s sale price (set in the Product resource’s `price` field) will be used as the sale price.'
          format: double
          nullable: true
        retail_price:
          minimum: 0
          type: number
          description: 'This variant’s retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s retail price (set in the Product resource’s `price` field) will be used as the retail price.'
          format: double
          nullable: true
        weight:
          minimum: 0
          type: number
          description: 'This variant’s base weight on the storefront. If this value is null, the product’s default weight (set in the Product resource’s weight field) will be used as the base weight.'
          format: double
          nullable: true
        width:
          minimum: 0
          type: number
          description: |
            Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.
          format: double
          nullable: true
        height:
          minimum: 0
          type: number
          description: |
            Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.
          format: double
          nullable: true
        depth:
          minimum: 0
          type: number
          description: |
            Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.
          format: double
          nullable: true
        is_free_shipping:
          type: boolean
          description: |
            Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.
        fixed_cost_shipping_price:
          minimum: 0
          type: number
          description: |
            A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.
          format: double
          nullable: true
        purchasing_disabled:
          type: boolean
          description: 'If `true`, this variant will not be purchasable on the storefront.'
        purchasing_disabled_message:
          maxLength: 255
          minLength: 0
          type: string
          description: 'If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.'
        upc:
          type: string
          description: The UPC code used in feeds for shopping comparison sites and external channel integrations.
          nullable: true
        inventory_level:
          type: integer
          description: |- 
            Inventory level for the variant, which is used when the product’s inventory_tracking is set to `variant`. The Catalog API returns the inventory for only the default location.
                                
            The inventory for a variant cannot exceed 2,147,483,647 in the catalog. The sum of the variant inventories, or the total inventory for a product, cannot exceed 2,147,483,647. 
                                
            If you exceed the limit, the store sets the variant inventory to the limit if no other variant inventories are set. If other variant inventories are set, the store does not save the variant inventory rather than setting the variant inventory to the remaining limit.
            
            The Catalog API handles limits in a different way than the Inventory API. For more information, see [Limit handling](/buy-online-pick-up-in-store/inventory#limit-handling-in-inventory-versus-catalog-api). 
          nullable: true
          maximum: 2147483647
        inventory_warning_level:
          type: integer
          description: 'When the variant hits this inventory level, it is considered low stock.'
          nullable: true
          maximum: 2147483647
        bin_picking_number:
          maxLength: 255
          minLength: 0
          type: string
          description: Identifies where in a warehouse the variant is located.
          nullable: true
        mpn:
          type: string
          description: The Manufacturer Part Number (MPN) for the variant.
        gtin:
          type: string
          example: '012345678905'
      description: Common Variant properties.
      x-internal: false
      x-examples:
        example-1:
          cost_price: 0
          price: 0
          sale_price: 0
          retail_price: 0
          weight: 0
          width: 0
          height: 0
          depth: 0
          is_free_shipping: true
          fixed_cost_shipping_price: 0
          purchasing_disabled: true
          purchasing_disabled_message: string
          upc: string
          inventory_level: 0
          inventory_warning_level: 0
          bin_picking_number: string
          mpn: string
          gtin: '012345678905'
    productVariant_Full:
      title: productVariant_Full
      allOf:
        - $ref: '#/components/schemas/productVariant_Base'
        - type: object
          properties:
            product_id:
              type: integer
            sku:
              type: string
            option_values:
              type: array
              description: Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant.
              items:
                $ref: '#/components/schemas/productVariantOptionValue_Full'
            calculated_price:
              type: number
              description: |
                The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.
              format: double
            calculated_weight:
              type: number
      required:
          - sku
      x-internal: false
      description: ''
      x-examples:
        example-1:
          cost_price: 0
          price: 0
          sale_price: 0
          retail_price: 0
          weight: 0
          width: 0
          height: 0
          depth: 0
          is_free_shipping: true
          fixed_cost_shipping_price: 0
          purchasing_disabled: true
          purchasing_disabled_message: string
          upc: string
          inventory_level: 0
          inventory_warning_level: 0
          bin_picking_number: string
          mpn: string
          gtin: '012345678905'
          id: 0
          product_id: 0
          sku: string
          sku_id: 0
          option_values:
            - option_display_name: Color
              label: Beige
              id: 146
              option_id: 151
          calculated_price: 0
          calculated_weight: 0
    productVariant_Put_Product:
      title: productVariant_Put_Product
      type: object
      properties:
        cost_price:
          minimum: 0
          type: number
          description: The cost price of the variant. Not affected by Price List prices.
          format: double
          nullable: true
        price:
          minimum: 0
          type: number
          description: 'This variant’s base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product’s default price (set in the Product resource’s `price` field) will be used as the base price.'
          format: double
          nullable: true
        sale_price:
          minimum: 0
          type: number
          description: 'This variant’s sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s sale price (set in the Product resource’s `price` field) will be used as the sale price.'
          format: double
          nullable: true
        retail_price:
          minimum: 0
          type: number
          description: 'This variant’s retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s retail price (set in the Product resource’s `price` field) will be used as the retail price.'
          format: double
          nullable: true
        weight:
          minimum: 0
          type: number
          description: 'This variant’s base weight on the storefront. If this value is null, the product’s default weight (set in the Product resource’s weight field) will be used as the base weight.'
          format: double
          nullable: true
        width:
          minimum: 0
          type: number
          description: |
            Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.
          format: double
          nullable: true
        height:
          minimum: 0
          type: number
          description: |
            Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.
          format: double
          nullable: true
        depth:
          minimum: 0
          type: number
          description: |
            Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.
          format: double
          nullable: true
        is_free_shipping:
          type: boolean
          description: |
            Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.
        fixed_cost_shipping_price:
          minimum: 0
          type: number
          description: |
            A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.
          format: double
          nullable: true
        purchasing_disabled:
          type: boolean
          description: 'If `true`, this variant will not be purchasable on the storefront.'
        purchasing_disabled_message:
          maxLength: 255
          minLength: 0
          type: string
          description: 'If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.'
        upc:
          type: string
          description: The UPC code used in feeds for shopping comparison sites and external channel integrations.
          nullable: true
        inventory_level:
          type: integer
          description: |- 
            Inventory level for the variant, which is used when the product’s inventory_tracking is set to `variant`. The Catalog API returns the inventory for only the default location.
                                
            The inventory for a variant cannot exceed 2,147,483,647 in the catalog. The sum of the variant inventories, or the total inventory for a product, cannot exceed 2,147,483,647. 
                                
            If you exceed the limit, the store sets the variant inventory to the limit if no other variant inventories are set. If other variant inventories are set, the store does not save the variant inventory rather than setting the variant inventory to the remaining limit.
            
            The Catalog API handles limits in a different way than the Inventory API. For more information, see [Limit handling](/buy-online-pick-up-in-store/inventory#limit-handling-in-inventory-versus-catalog-api). 
          nullable: true
          maximum: 2147483647
        inventory_warning_level:
          type: integer
          description: 'When the variant hits this inventory level, it is considered low stock.'
          nullable: true
          maximum: 2147483647
        bin_picking_number:
          maxLength: 255
          minLength: 0
          type: string
          description: Identifies where in a warehouse the variant is located.
          nullable: true
        product_id:
          type: integer
          description: Product ID
        id:
          type: integer
          description: Variant ID
        sku:
          maxLength: 255
          minLength: 1
          type: string
      description: |
        The model for a PUT to update variants on a product.
      required:
        - product_id
        - id
      x-internal: false
    productVariantOptionValue_Full:
      title: productVariantOptionValue_Full
      allOf:
        - type: object
          properties:
            option_display_name:
              maxLength: 255
              minLength: 1
              type: string
              description: |
                The name of the option.
              example: Color
              x-required:
                - post
            label:
              maxLength: 255
              minLength: 1
              type: string
              description: |
                The label of the option value.
              example: Beige
              x-required:
                - post
      required:
          - option_display_name
          - label
      x-internal: false
    productVariantOptionValue_Base:
      title: productVariantOptionValue_Base
      type: object
      properties:
        id:
          type: integer
          description: '`option_value` ID.'
          example: 146
        option_id:
          type: integer
          description: '`option` ID.'
          example: 151
      description: Common Product Variant Option properties.
      x-internal: false
    productOptionOptionValue_Base:
      title: productOptionOptionValue_Base
      required:
        - label
        - sort_order
      type: object
      properties:
        is_default:
          type: boolean
          description: |
            The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
          example: false
        label:
          type: string
          description: |
            The text display identifying the value on the storefront. Required in a /POST.
          example: Green
          x-required:
            - post
        sort_order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: |
            The order in which the value will be displayed on the product page. Required in a /POST.
          example: 0
          x-required:
            - post
        value_data:
          type: object
          properties: {}
          description: |
            Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state. If no data is available, returns `null`.
          nullable: true
      description: Common Product Option `option_value` properties.
      x-internal: false
    productOptionOptionValue_Full:
      title: productOptionOptionValue_Full
      description: Product Option `option_value`.
      allOf:
        - $ref: '#/components/schemas/productOptionOptionValue_Base'
        - type: object
          properties:
            id:
              type: integer
              description: |
                The unique numeric ID of the value; increments sequentially.
      x-internal: false
    productImage_Base:
      title: productImage_Base
      type: object
      properties:
        image_file:
          type: string
          description: |
            The local path to the original image file uploaded to BigCommerce. Limit of 8MB per file.
        is_thumbnail:
          type: boolean
          description: |
            Flag for identifying whether the image is used as the product's thumbnail.
        sort_order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: |
            The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.
        description:
          type: string
          description: |
            The description for the image.
        image_url:
          type: string
          description: 'Must be a fully qualified URL path, including protocol. Limit of 8MB per file.'
      description: Common ProductImage properties.
      x-internal: false
    productImage_Put:
      title: productImage_Put
      description: The model for a PUT to update applicable Product Image fields.
      allOf:
        - title: Product Image Base
          type: object
          properties:
            product_id:
              type: integer
              description: |
                The unique numeric identifier for the product with which the image is associated.
            url_zoom:
              readOnly: true
              type: string
              description: |
                The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.
            url_standard:
              readOnly: true
              type: string
              description: |
                The standard URL for this image. By default, this is used for product-page images.
            url_thumbnail:
              readOnly: true
              type: string
              description: |
                The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.
            url_tiny:
              readOnly: true
              type: string
              description: |
                The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.
          description: Common ProductImage properties.
        - $ref: '#/components/schemas/productImage_Base'
      x-internal: false
    productVideo_Base:
      title: productVideo_Base
      type: object
      description: |
        The model for a POST to create a video on a product.
      x-internal: false
      properties:
        title:
          type: string
          maxLength: 255
          minLength: 0
          description: |
            The title for the video. If left blank, this will be filled in according to data on a host site.
          example: Writing Great Documentation
        description:
          type: string
          description: |
            The description for the video. If left blank, this will be filled in according to data on a host site.
          example: A video about documenation
        sort_order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: |
            The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.
          example: 1
        type:
          type: string
          description: |
            The video type (a short name of a host site).
          enum:
            - youtube
        video_id:
          type: string
          description: The ID of the video on a host site.
          example: z3fRu9pkuXE
    productVideo_Full:
      title: productVideo_Full
      description: |
        A product video model.
      allOf:
        - $ref: '#/components/schemas/productVideo_Base'
        - type: object
          properties:
            id:
              type: integer
              description: |
                The unique numeric ID of the product video; increments sequentially.
            product_id:
              type: integer
              description: |
                The unique numeric identifier for the product with which the image is associated.
            length:
              type: string
              description: |
                Length of the video. This will be filled in according to data on a host site.
      x-internal: false
    product_Put:
      title: product_Put
      description: The model for a PUT to update a product.
      allOf:
        - $ref: '#/components/schemas/product_Base'
        - type: object
          properties:
            variants:
              type: array
              items:
                $ref: '#/components/schemas/productVariant_Put_Product'
      x-internal: false
    metafield_Base:
      title: metafield_Base
      type: object
      description: 'Metafield for products, categories, variants, and brands; the max number of metafields allowed on each is 50. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in the Help Center.'
      x-internal: false
      properties:
        key:
          maxLength: 64
          minLength: 1
          type: string
          description: |
            The name of the field, for example: `location_id`, `color`. Required for POST.
          example: Location
          x-required:
            - post
        value:
          maxLength: 65535
          minLength: 1
          type: string
          description: |
            The value of the field, for example: `1`, `blue`. Required for POST.
          example: 4HG
          x-required:
            - post
        namespace:
          maxLength: 64
          minLength: 1
          type: string
          description: |
            Namespace for the metafield, for organizational purposes. This is set by the developer. Required for POST.
          example: Warehouse Locations
          x-required:
            - post
        permission_set:
          type: string
          description: |-
            Determines the visibility and writeability of the field by other API consumers.

            |Value|Description
            |-|-|
            |`app_only`|Private to the app that owns the field|
            |`read`|Visible to other API consumers|
            |`write`|Open for reading and writing by other API consumers|
            |`read_and_sf_access`|Visible to other API consumers, including on storefront|
            |`write_and_sf_access`|Open for reading and writing by other API consumers, including on storefront|
          enum:
            - app_only
            - read
            - write
            - read_and_sf_access
            - write_and_sf_access
        description:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            Description for the metafields.
          example: Location in the warehouse
      required:
        - permission_set
        - namespace
        - key
        - value
    complexRule_Base:
      title: complexRule_Base
      type: object
      properties:
        id:
          type: integer
          description: |-
            The unique numeric ID of the rule; increments sequentially.
            Read-Only
          example: 5
        product_id:
          type: integer
          description: |
            The unique numeric ID of the product with which the rule is associated; increments sequentially.
          nullable: true
          example: 67
          x-required:
            - post
            - put
        sort_order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: |
            The priority to give this rule when making adjustments to the product properties.
          example: 0
        enabled:
          type: boolean
          description: |
            Flag for determining whether the rule is to be used when adjusting a product's price, weight, image, or availabilty.
          example: true
        stop:
          type: boolean
          description: |
            Flag for determining whether other rules should not be applied after this rule has been applied.
        purchasing_disabled:
          type: boolean
          description: |
            Flag for determining whether the rule should disable purchasing of a product when the conditions are applied.
        purchasing_disabled_message:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            Message displayed on the storefront when a rule disables the purchasing of a product.
          example: This product is not available at this time.
        purchasing_hidden:
          type: boolean
          description: |
            Flag for determining whether the rule should hide purchasing of a product when the conditions are applied.
        image_url:
          type: string
          description: |
            The URL for an image displayed on the storefront when the conditions are applied. Limit of 8MB per file.
          example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
        price_adjuster:
          $ref: '#/components/schemas/adjuster_Full'
        weight_adjuster:
          $ref: '#/components/schemas/adjuster_Full'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/complexRuleConditionBase'
      description: Common ComplexRule properties.
      x-internal: false
    productCustomField_Base:
      title: productCustomField_Base
      required:
        - name
        - value
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: |-
            The unique numeric ID of the custom field; increments sequentially.
            Read-Only
          example: 6
        name:
          maxLength: 250
          minLength: 1
          type: string
          description: |
            The name of the field, shown on the storefront, orders, etc. Required for /POST
          example: ISBN
          x-required:
            - post
        value:
          maxLength: 250
          minLength: 1
          type: string
          description: |
            The name of the field, shown on the storefront, orders, etc. Required for /POST
          example: '1234567890123'
          x-required:
            - post
      description: 'Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product’s page, such as a book’s ISBN or a DVD’s release date.'
      x-internal: false
    productCustomField_Put:
      title: productCustomField_Put
      required:
        - name
        - value
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: |-
            The unique numeric ID of the custom field; increments sequentially. Required to update existing custom field in /PUT request.
            Read-Only
          example: 6
        name:
          maxLength: 250
          minLength: 1
          type: string
          description: |
            The name of the field, shown on the storefront, orders, etc. Required for /POST
          example: ISBN
          x-required:
            - post
        value:
          maxLength: 250
          minLength: 1
          type: string
          description: |
            The name of the field, shown on the storefront, orders, etc. Required for /POST
          example: '1234567890123'
          x-required:
            - post
      description: The model for a PUT to update a custom field on a product.
      x-internal: false
    complexRuleConditionBase:
      title: complexRuleConditionBase
      required:
        - modifier_id
        - modifier_value_id
        - variant_id
      type: object
      properties:
        id:
          type: integer
          description: |
            The unique numeric ID of the rule condition; increments sequentially. Read-Only
          nullable: true
          example: 3
        rule_id:
          type: integer
          description: |-
            The unique numeric ID of the rule with which the condition is associated.
            Read-Only
          nullable: true
          example: 4
        modifier_id:
          type: integer
          description: |-
            The unique numeric ID of the modifier with which the rule condition is associated.
            Required in /POST.
          nullable: true
          example: 55
        modifier_value_id:
          type: integer
          description: |-
            The unique numeric ID of the modifier value with which the rule condition is associated.
            Required in /POST.
          nullable: true
          example: 256
        variant_id:
          type: integer
          description: |-
            The unique numeric ID of the variant with which the rule condition is associated.
            Required in /POST.
          nullable: true
          example: 1
        combination_id:
          type: integer
          description: |
            (READ-ONLY:) The unique numeric ID of the SKU (v2 API), or Combination, with which the rule condition is associated. This is to maintain cross-compatibility between v2 and v3.
      description: 'Complex rules may return with conditions that apply to one or more variants, or with a single modifier value (if the rules were created using the v2 API or the control panel). Complex rules created or updated in the v3 API must have conditions that either reference multiple `modifier_value_id`’s, or else reference a `modifier_value_id` and a `variant_id`.'
      x-internal: false
    customUrl_Full:
      title: customUrl_Full
      type: object
      properties:
        url:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            Product URL on the storefront.
          x-required:
            - post
            - put
          x-url: true
        is_customized:
          type: boolean
          description: |
            Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).
          x-required:
            - post
            - put
      description: The custom URL for the product on the storefront.
      x-internal: false
    bulkPricingRule_Full:
      title: bulkPricingRule_Full
      type: object
      description: Common Bulk Pricing Rule properties
      x-internal: false
      properties:
        quantity_min:
          minimum: 0
          type: integer
          description: |
            The minimum inclusive quantity of a product to satisfy this rule. Must be greater than or equal to zero. For `fixed` rules, the minimum quantity canʼt be less than two.
            Required in /POST.
          example: 10
          x-required:
            - post
        quantity_max:
          minimum: 0
          type: integer
          description: |-
            The maximum inclusive quantity of a product to satisfy this rule. Must be greater than the `quantity_min` value – unless this field has a value of 0 (zero), in which case there will be no maximum bound for this rule.
            Required in /POST.
          example: 50
          x-required:
            - post
        type:
          type: string
          description: |-
            The type of adjustment that is made. Values: `price` - the adjustment amount per product; `percent` - the adjustment as a percentage of the original price; `fixed` - the adjusted absolute price of the product.
            Required in /POST.
          example: price
          enum:
            - price
            - percent
            - fixed
          x-required:
            - post
        amount:
          oneOf:
            - type: number
              example: 10
            - type: string
              example: '.10'
          description: |-
            You can express the adjustment type as either a fixed dollar amount or a percentage. Send a number; the response will return a number for `price` and `fixed` adjustments.
            Divide the adjustment percentage by 100 and send the result in string format. For example, represent 10% as “.10”. The response will return a float value for both `price` and `percentage` adjustments. 
            Required in /POST.
      required:
        - quantity_min
        - quantity_max
        - type
        - amount
    productOptionConfig_Full:
      title: productOptionConfig_Full
      type: object
      properties:
        default_value:
          type: string
          description: |
            (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
        checked_by_default:
          type: boolean
          description: |
            (checkbox) Flag for setting the checkbox to be checked by default.
        checkbox_label:
          type: string
          description: |
            (checkbox) Label displayed for the checkbox option.
        date_limited:
          type: boolean
          description: |
            (date) Flag to limit the dates allowed to be entered on a date option.
        date_limit_mode:
          type: string
          description: |
            (date) The type of limit that is allowed to be entered on a date option.
          example: range
          enum:
            - earliest
            - range
            - latest
        date_earliest_value:
          type: string
          description: |
            (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
          format: date
        date_latest_value:
          type: string
          description: |
            (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
          format: date
        file_types_mode:
          type: string
          description: |
            (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
          example: specific
          enum:
            - specific
            - all
        file_types_supported:
          type: array
          description: |
            (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
              `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
              `other` - Allows file types defined in the `file_types_other` array.
          items:
            type: string
            example: 'images, documents, other'
        file_types_other:
          type: array
          description: |
            (file) A list of other file types allowed with the file upload option.
          items:
            type: string
            example: pdf
        file_max_size:
          type: integer
          description: |
            (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
          example: 5
        text_characters_limited:
          type: boolean
          description: |
            (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
        text_min_length:
          type: integer
          description: |
            (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
          example: 1
        text_max_length:
          type: integer
          description: |
            (text, multi_line_text) The maximum length allowed for a text or multi line text option.
          example: 55
        text_lines_limited:
          type: boolean
          description: |
            (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
          example: true
        text_max_lines:
          type: integer
          description: |
            (multi_line_text) The maximum number of lines allowed on a multi-line text input.
          example: 4
        number_limited:
          type: boolean
          description: |
            (numbers_only_text) Flag to limit the value of a number option.
          example: true
        number_limit_mode:
          type: string
          description: |
            (numbers_only_text) The type of limit on values entered for a number option.
          example: lowest
          enum:
            - lowest
            - highest
            - range
        number_lowest_value:
          type: number
          description: |
            (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
          example: 100
        number_highest_value:
          type: number
          description: |
            (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
        number_integers_only:
          type: boolean
          description: |
            (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
          example: false
        product_list_adjusts_inventory:
          type: boolean
          description: |
            (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
        product_list_adjusts_pricing:
          type: boolean
          description: |
            (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
        product_list_shipping_calc:
          type: string
          description: |
            (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
          example: weight
          enum:
            - none
            - weight
            - package
      description: The values for option config can vary based on the Modifier created.
      x-internal: false
    adjuster_Full:
      title: adjuster_Full
      type: object
      properties:
        adjuster:
          type: string
          description: |
            The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
          nullable: true
          enum:
            - relative
            - percentage
        adjuster_value:
          type: number
          description: |
            The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
          example: 5
      description: Adjuster for Complex Rules.
      x-internal: false
    metaCollection_Full:
      title: metaCollection_Full
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/pagination_Full'
      description: 'Data about the response, including pagination and collection totals.'
      x-internal: false
    pagination_Full:
      title: pagination_Full
      type: object
      properties:
        total:
          type: integer
          description: |
            Total number of items in the result set.
          example: 36
        count:
          type: integer
          description: |
            Total number of items in the collection response.
          example: 36
        per_page:
          type: integer
          description: |
            The amount of items returned in the collection per page, controlled by the limit parameter.
          example: 50
        current_page:
          type: integer
          description: |
            The page you are currently on within the collection.
          example: 1
        total_pages:
          type: integer
          description: |
            The total number of pages in the collection.
          example: 1
        links:
          type: object
          properties:
            previous:
              type: string
              description: |
                Link to the previous page returned in the response.
            current:
              type: string
              description: |
                Link to the current page returned in the response.
              example: '?page=1&limit=50'
            next:
              type: string
              description: |
                Link to the next page returned in the response.
          description: |
            Pagination links for the previous and next parts of the whole collection.
      description: 'Data about the response, including pagination and collection totals.'
      x-internal: false
    metaEmpty_Full:
      type: object
      title: Response meta
      properties: {}
      additionalProperties: true
      description: Response metadata.
    error_Base:
      title: error_Base
      type: object
      properties:
        status:
          type: integer
          description: |
            The HTTP status code.
        title:
          type: string
          description: |
            The error title describing the particular error.
        type:
          type: string
        instance:
          type: string
      description: |
        Error payload for the BigCommerce API.
      x-internal: false
    errorMultiStatus:
      title: errorMultiStatus
      type: object
      properties:
        status: 
          type: integer
          minLength: 3
          maxLength: 3
          description: 'The [HTTP status code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status) of the failure or partial success.'
        title: 
          type: string
          description: A summary of the failure or partial success.
        type: 
          type: string
          description: A BigCommerce-defined error signifier.
        errors: 
          $ref: '#/components/schemas/DetailedErrors'
    DetailedErrors:
      title: DetailedErrors
      description: Each key-value pair describes a failure or partial success case.
      type: object
      properties: {}
      additionalProperties: true
      x-internal: false
    product_Full:
      title: product_Full
      allOf:
        - type: object
          properties:
            id:
              minimum: 1
              type: integer
              description: ID of the product. Read-Only.
              readOnly: true
        - $ref: '#/components/schemas/product_Base'
        - type: object
          properties:
            date_created:
              type: string
              description: |
                The date on which the product was created.
              format: date-time
              example: '2018-08-15T14:49:05+00:00'
            date_modified:
              type: string
              description: |
                The date on which the product was modified.
              format: date-time
              example: '2018-08-24T14:41:00+00:00'
            base_variant_id:
              type: integer
              description: The unique identifier of the base variant associated with a simple product. This value is `null` for complex products.
            calculated_price:
              type: number
              description: 'The calculated_price is derived from the default price and sale price of the product. It is equal to the sale price if set or the default price if there is not a sale price present. Depending on your store settings and customer group, or channel-specific pricing, this value may or may not be equal to the price seen on the storefront.'
              format: float
            options:
              type: array
              items:
                $ref: '#/components/schemas/productOption_Base'
            modifiers:
              type: array
              items:
                $ref: '#/components/schemas/productModifier_Full'
            map_price:
              type: number
              description: Minimum Advertised Price.
            option_set_id:
              type: integer
              description: Indicates that the product is in an Option Set (legacy V2 concept).
            option_set_display:
              type: string
              description: Legacy template setting which controls if the option set shows up to the side of or below the product image and description.
            variants:
              type: array
              items:
                $ref: '#/components/schemas/productVariant_Full'
      x-internal: false
    productImage_Full:
      title: productImage_Full
      description: Common ProductImage properties.
      allOf:
        - $ref: '#/components/schemas/productImage_Base'
        - title: productImage
          type: object
          properties:
            id:
              type: integer
              description: |
                The unique numeric ID of the image; increments sequentially.
            product_id:
              type: integer
              description: |
                The unique numeric identifier for the product with which the image is associated.
            url_zoom:
              readOnly: true
              type: string
              description: |
                The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.
            url_standard:
              readOnly: true
              type: string
              description: |
                The standard URL for this image. By default, this is used for product-page images.
            url_thumbnail:
              readOnly: true
              type: string
              description: |
                The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.
            url_tiny:
              readOnly: true
              type: string
              description: |
                The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.
            date_modified:
              type: string
              description: |
                The date on which the product image was modified.
              format: date-time
          description: Common ProductImage properties.
      x-internal: false
    product_Put_Collection:
      title: product_Put_Collection
      description: The model for batch updating products.
      x-internal: false
      items:
        allOf:
          - type: object
            properties:
              id:
                type: integer
                description: Unique ID of the *Product*. Read-Only.
                readOnly: true
            required:
              - id
          - $ref: '#/components/schemas/product_Base'
      x-examples:
        example-1:
          - id: 0
            name: Smith Journal 13
            type: physical
            sku: SM-13
            description: '<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>'
            weight: 0
            width: 0
            depth: 0
            height: 0
            price: 0
            cost_price: 0
            retail_price: 0
            sale_price: 0
            map_price: 0
            tax_class_id: 0
            product_tax_code: string
            categories:
              - 0
            brand_id: 0
            inventory_level: 0
            inventory_warning_level: 0
            inventory_tracking: none
            fixed_cost_shipping_price: 0
            is_free_shipping: true
            is_visible: true
            is_featured: true
            related_products:
              - 0
            warranty: string
            bin_picking_number: string
            layout_file: string
            upc: string
            search_keywords: string
            availability: available
            availability_description: string
            gift_wrapping_options_type: list
            gift_wrapping_options_list:
              - 0
            sort_order: -2147483648
            condition: New
            is_condition_shown: true
            order_quantity_minimum: 0
            order_quantity_maximum: 0
            page_title: string
            meta_keywords:
              - string
            meta_description: string
            view_count: 0
            preorder_release_date: '2019-08-24T14:15:22Z'
            preorder_message: string
            is_preorder_only: true
            is_price_hidden: true
            price_hidden_label: string
            custom_url:
              url: string
              is_customized: true
            open_graph_type: product
            open_graph_title: string
            open_graph_description: string
            open_graph_use_meta_description: true
            open_graph_use_product_name: true
            open_graph_use_image: true
            brand_name: Common Good
            gtin: string
            mpn: string
            reviews_rating_sum: 3.2
            reviews_count: 4
            total_sold: 80
            custom_fields:
              - id: 6
                name: ISBN
                value: '1234567890123'
            bulk_pricing_rules:
              - id: 0
                quantity_min: 10
                quantity_max: 50
                type: price
                amount: 10
            images:
              - image_file: string
                is_thumbnail: true
                sort_order: -2147483648
                description: string
                image_url: string
                id: 0
                product_id: 0
                url_zoom: string
                url_standard: string
                url_thumbnail: string
                url_tiny: string
                date_modified: '2019-08-24T14:15:22Z'
            videos:
              - title: Writing Great Documentation
                description: A video about documenation
                sort_order: 1
                type: youtube
                video_id: z3fRu9pkuXE
                id: 0
                product_id: 0
                length: string
      type: array
    config_Full:
      title: config_Full
      type: object
      properties:
        default_value:
          type: string
          description: |
            (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
        checked_by_default:
          type: boolean
          description: |
            (checkbox) Flag for setting the checkbox to be checked by default.
        checkbox_label:
          type: string
          description: |
            (checkbox) Label displayed for the checkbox option.
        date_limited:
          type: boolean
          description: |
            (date) Flag to limit the dates allowed to be entered on a date option.
        date_limit_mode:
          type: string
          description: |
            (date) The type of limit that is allowed to be entered on a date option.
          example: range
          enum:
            - earliest
            - range
            - latest
        date_earliest_value:
          type: string
          description: |
            (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
          format: date
        date_latest_value:
          type: string
          description: |
            (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
          format: date
        file_types_mode:
          type: string
          description: |
            (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
          example: specific
          enum:
            - specific
            - all
        file_types_supported:
          type: array
          description: |
            (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
              `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
              `other` - Allows file types defined in the `file_types_other` array.        
          items:
            type: string
            example: 'images, documents, other'
        file_types_other:
          type: array
          description: |
            (file) A list of other file types allowed with the file upload option.
          items:
            type: string
            example: pdf
        file_max_size:
          type: integer
          description: |
            (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
          example: 5
        text_characters_limited:
          type: boolean
          description: |
            (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
        text_min_length:
          type: integer
          description: |
            (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
          example: 1
        text_max_length:
          type: integer
          description: |
            (text, multi_line_text) The maximum length allowed for a text or multi line text option.
          example: 55
        text_lines_limited:
          type: boolean
          description: |
            (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
          example: true
        text_max_lines:
          type: integer
          description: |
            (multi_line_text) The maximum number of lines allowed on a multi-line text input.
          example: 4
        number_limited:
          type: boolean
          description: |
            (numbers_only_text) Flag to limit the value of a number option.
          example: true
        number_limit_mode:
          type: string
          description: |
            (numbers_only_text) The type of limit on values entered for a number option.
          example: lowest
          enum:
            - lowest
            - highest
            - range
        number_lowest_value:
          type: number
          description: |
            (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
          example: 100
        number_highest_value:
          type: number
          description: |
            (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
        number_integers_only:
          type: boolean
          description: |
            (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
          example: false
        product_list_adjusts_inventory:
          type: boolean
          description: |
            (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
        product_list_adjusts_pricing:
          type: boolean
          description: |
            (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
        product_list_shipping_calc:
          type: string
          description: |
            (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
          example: weight
          enum:
            - none
            - weight
            - package
      description: The values for option config can vary based on the Modifier created.
      x-internal: false
    adjusters_Full:
      title: adjusters_Full
      type: object
      properties:
        price:
          $ref: '#/components/schemas/adjuster_Full'
        weight:
          $ref: '#/components/schemas/adjuster_Full'
        image_url:
          type: string
          description: |
            The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file.
          example: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
        purchasing_disabled:
          type: object
          properties:
            status:
              type: boolean
              description: |
                Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
            message:
              type: string
              description: |
                The message displayed on the storefront when the purchasing disabled status is `true`.
      x-internal: false
    product_Base:
      title: product_Base
      type: object
      description: |-
        Shared `Product` properties used in:
        * `POST`
        * `PUT`
        * `GET`
      x-internal: false
      x-examples:
        example-1:
          id: 0
          name: Smith Journal 13
          type: physical
          sku: SM-13
          description: '<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>'
          weight: 0
          width: 0
          depth: 0
          height: 0
          price: 0
          cost_price: 0
          retail_price: 0
          sale_price: 0
          map_price: 0
          tax_class_id: 0
          product_tax_code: string
          categories:
            - 0
          brand_id: 0
          inventory_level: 0
          inventory_warning_level: 0
          inventory_tracking: none
          fixed_cost_shipping_price: 0
          is_free_shipping: true
          is_visible: true
          is_featured: true
          related_products:
            - 0
          warranty: string
          bin_picking_number: string
          layout_file: string
          upc: string
          search_keywords: string
          availability_description: string
          availability: available
          gift_wrapping_options_type: any
          gift_wrapping_options_list:
            - 0
          sort_order: -2147483648
          condition: New
          is_condition_shown: true
          order_quantity_minimum: 0
          order_quantity_maximum: 0
          page_title: string
          meta_keywords:
            - string
          meta_description: string
          view_count: 0
          preorder_release_date: '2019-08-24T14:15:22Z'
          preorder_message: string
          is_preorder_only: true
          is_price_hidden: true
          price_hidden_label: string
          custom_url:
            url: string
            is_customized: true
          open_graph_type: product
          open_graph_title: string
          open_graph_description: string
          open_graph_use_meta_description: true
          open_graph_use_product_name: true
          open_graph_use_image: true
          brand_name: Common Good
          gtin: string
          mpn: string
          reviews_rating_sum: 3.2
          reviews_count: 4
          total_sold: 80
          custom_fields:
            - id: 6
              name: ISBN
              value: '1234567890123'
          bulk_pricing_rules:
            - id: 0
              quantity_min: 10
              quantity_max: 50
              type: price
              amount: 10
          images:
            - image_file: string
              is_thumbnail: true
              sort_order: -2147483648
              description: string
              image_url: string
              id: 0
              product_id: 0
              url_zoom: string
              url_standard: string
              url_thumbnail: string
              url_tiny: string
              date_modified: '2019-08-24T14:15:22Z'
          videos:
            - title: Writing Great Documentation
              description: A video about documenation
              sort_order: 1
              type: youtube
              video_id: z3fRu9pkuXE
              id: 0
              product_id: 0
              length: string
      properties:
        name:
          maxLength: 250
          minLength: 1
          type: string
          description: |
            A unique product name.
          example: Smith Journal 13
          x-required:
            - post
        type:
          type: string
          description: |
            The product type. One of: `physical` - a physical stock unit, `digital` - a digital download.
          example: physical
          enum:
            - physical
            - digital
          x-required:
            - post
        sku:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            A unique user-defined alphanumeric product code/stock keeping unit (SKU).
          example: SM-13
        description:
          type: string
          description: |
            The product description, which can include HTML formatting.
          example: '<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>'
        weight:
          maximum: 9999999999
          minimum: 0
          type: number
          description: |
            Weight of the product, which can be used when calculating shipping costs. This is based on the unit set on the store
          format: float
        width:
          maximum: 9999999999
          minimum: 0
          type: number
          description: |
            Width of the product, which can be used when calculating shipping costs.
          format: float
        depth:
          maximum: 9999999999
          minimum: 0
          type: number
          description: |
            Depth of the product, which can be used when calculating shipping costs.
          format: float
        height:
          maximum: 9999999999
          minimum: 0
          type: number
          description: |
            Height of the product, which can be used when calculating shipping costs.
          format: float
        price:
          minimum: 0
          type: number
          description: |
            The price of the product. The price should include or exclude tax, based on the store settings.
          format: float
        cost_price:
          minimum: 0
          type: number
          description: |
            The cost price of the product. Stored for reference only; it is not used or displayed anywhere on the store.
          format: float
        retail_price:
          minimum: 0
          type: number
          description: |
            The retail cost of the product. If entered, the retail cost price will be shown on the product page.
          format: float
        sale_price:
          minimum: 0
          type: number
          description: |
            If entered, the sale price will be used instead of value in the price field when calculating the product's cost.
          format: float
        map_price:
          type: number
          description: Minimum Advertised Price
        tax_class_id:
          maximum: 255
          minimum: 0
          type: number
          description: |
            The ID of the tax class applied to the product. (NOTE: Value ignored if automatic tax is enabled.)
        product_tax_code:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            Tax Codes, such as AvaTax System Tax Codes, identify products and services that fall into special sales-tax categories. By using these codes, merchants who subscribe to a tax provider integration, such as BigCommerce's Avalara Premium, can calculate sales taxes more accurately. Stores without a tax provider will ignore the code when calculating sales tax. Do not pass more than one code. The codes are case-sensitive. For details, please see the tax provider's documentation.
        categories:
          type: array
          description: |
            An array of IDs for the categories to which this product belongs. When updating a product, if an array of categories is supplied, all product categories will be overwritten. Does not accept more than 1,000 ID values.
          x-required:
            - post
          items:
            type: number
          maximum: 1000
          minimum: 0
        brand_id:
          maximum: 1000000000
          minimum: 0
          type: integer
          description: |
            You can add a product to an existing brand during a product /PUT or /POST. Use either the `brand_id` or the `brand_name` field. The response body can include `brand_id`.
        brand_name:
          type: string
          description: You can create the brand during a product PUT or POST request. If the brand already exists, the product /PUT or /POST request adds the product to the brand. If not, the product /PUT or /POST request creates the brand and then adds the product to the brand. Brand name is not case-sensitive; "Common Good" and "Common good" are the same. Use either the `brand_id` or the `brand_name` field. The response body does not include `brand_name`.
          example: Common Good
        inventory_level:
          maximum: 2147483647
          minimum: 0
          type: integer
          description: |- 
            Current inventory level of the product. You must track inventory by _product_ for this to take effect (see the `inventory_tracking` field). The Catalog API returns the inventory for only the default location.

            The inventory for a product cannot exceed 2,147,483,647 in the catalog. If you exceed the limit, the store sets the inventory level to the limit.

            The Catalog API handles limits in a different way than the Inventory API. For more information, see [Limit handling](/buy-online-pick-up-in-store/inventory#limit-handling-in-inventory-versus-catalog-api). 
        inventory_warning_level:
          maximum: 2147483647
          minimum: 0
          type: integer
          description: |
            Inventory warning level for the product. When the product's inventory level drops below the warning level, the store owner will be informed. Simple inventory tracking must be enabled (see the `inventory_tracking` field) for this to take any effect.
        inventory_tracking:
          type: string
          description: |
            The type of inventory tracking for the product. Values are: `none` - inventory levels will not be tracked; `product` - inventory levels will be tracked using the `inventory_level` and `inventory_warning_level` fields; `variant` - inventory levels will be tracked based on variants, which maintain their own warning levels and inventory levels.
          enum:
            - none
            - product
            - variant
        fixed_cost_shipping_price:
          minimum: 0
          type: number
          description: |
            A fixed shipping cost for the product. If defined, this value will be used during checkout instead of normal shipping-cost calculation.
          format: float
        is_free_shipping:
          type: boolean
          description: |
            Flag used to indicate whether the product has free shipping. If `true`, the shipping cost for the product will be zero.
        is_visible:
          type: boolean
          description: |
            Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the product will be displayed. If `false`, the product will be hidden from view.
        is_featured:
          type: boolean
          description: |
            Flag to determine whether the product should be included in the `featured products` panel when viewing the store.
        related_products:
          type: array
          description: |
            An array of IDs for the related products.
          items:
            type: integer
        warranty:
          maxLength: 65535
          minLength: 0
          type: string
          description: |
            Warranty information displayed on the product page. Can include HTML formatting.
        bin_picking_number:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            The BIN picking number for the product.
        layout_file:
          maxLength: 500
          minLength: 0
          type: string
          description: |
            The layout template file used to render this product category. This field is writable only for stores with a Blueprint theme applied. For stores with a Stencil theme applied, see [Custom Template Associations](/docs/rest-content/custom-template-associations).
        upc:
          type: string
          maxLength: 32
          minLength: 0
          description: |
            The product UPC code, which is used in feeds for shopping comparison sites and external channel integrations.
        search_keywords:
          maxLength: 65535
          minLength: 0
          type: string
          description: |
            A comma-separated list of keywords that can be used to locate the product when searching the store.
        availability_description:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            Availability text displayed on the checkout page, under the product title. Tells the customer how long it will normally take to ship this product, such as: 'Usually ships in 24 hours.'
        availability:
          type: string
          description: |
            Availability of the product. (Corresponds to the product's [Purchasability](https://support.bigcommerce.com/s/article/Adding-Products-v3?language=en_US#sections) section in the control panel.) Supported values: `available` - the product is available for purchase; `disabled` - the product is listed on the storefront, but cannot be purchased; `preorder` - the product is listed for pre-orders.
          enum:
            - available
            - disabled
            - preorder
        gift_wrapping_options_type:
          type: string
          description: |
            Type of gift-wrapping options. Values: `any` - allow any gift-wrapping options in the store; `none` - disallow gift-wrapping on the product; `list` – provide a list of IDs in the `gift_wrapping_options_list` field.
          enum:
            - any
            - none
            - list
        gift_wrapping_options_list:
          type: array
          description: |
            A list of gift-wrapping option IDs.
          items:
            type: integer
        sort_order:
          type: integer
          description: |
            Priority to give this product when included in product lists on category pages and in search results. Lower integers will place the product closer to the top of the results.
          maximum: 2147483647
          minimum: -2147483648
        condition:
          type: string
          description: |
            The product condition. Will be shown on the product page if the `is_condition_shown` field's value is `true`. Possible values: `New`, `Used`, `Refurbished`.
          enum:
            - New
            - Used
            - Refurbished
        is_condition_shown:
          type: boolean
          description: |
            Flag used to determine whether the product condition is shown to the customer on the product page.
        order_quantity_minimum:
          maximum: 1000000000
          minimum: 0
          type: integer
          description: |
            The minimum quantity an order must contain, to be eligible to purchase this product.
        order_quantity_maximum:
          maximum: 1000000000
          minimum: 0
          type: integer
          description: |
            The maximum quantity an order can contain when purchasing the product.
        page_title:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            Custom title for the product page. If not defined, the product name will be used as the meta title.
        meta_keywords:
          type: array
          maxLength: 65535
          minLength: 0
          description: |
            Custom meta keywords for the product page. If not defined, the store's default keywords will be used.
          items:
            type: string
        meta_description:
          maxLength: 65535
          minLength: 0
          type: string
          description: |
            Custom meta description for the product page. If not defined, the store's default meta description will be used.
        view_count:
          maximum: 1000000000
          minimum: 0
          type: integer
          description: |
            The number of times the product has been viewed.
        preorder_release_date:
          type: string
          description: |
            Pre-order release date. See the `availability` field for details on setting a product's availability to accept pre-orders.
          format: date-time
          nullable: true
        preorder_message:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            Custom expected-date message to display on the product page. If undefined, the message defaults to the storewide setting. Can contain the `%%DATE%%` placeholder, which will be substituted for the release date.
        is_preorder_only:
          type: boolean
          description: |
            If set to true then on the preorder release date the preorder status will automatically be removed.
            If set to false, then on the release date the preorder status **will not** be removed. It will need to be changed manually either in the
            control panel or using the API. Using the API set `availability` to `available`.
        is_price_hidden:
          type: boolean
          description: |
            False by default, indicating that this product's price should be shown on the product page. If set to `true`, the price is hidden. (NOTE: To successfully set `is_price_hidden` to `true`, the `availability` value must be `disabled`.)
        price_hidden_label:
          maxLength: 200
          minLength: 0
          type: string
          description: |
            By default, an empty string. If `is_price_hidden` is `true`, the value of `price_hidden_label` is displayed instead of the price. (NOTE: To successfully set a non-empty string value with `is_price_hidden` set to `true`, the `availability` value must be `disabled`.)
        custom_url:
          $ref: '#/components/schemas/customUrl_Full'
        open_graph_type:
          type: string
          description: |
            Type of product, defaults to `product`.
          enum:
            - product
            - album
            - book
            - drink
            - food
            - game
            - movie
            - song
            - tv_show
        open_graph_title:
          type: string
          description: |
            Title of the product, if not specified the product name will be used instead.
        open_graph_description:
          type: string
          description: |
            Description to use for the product, if not specified then the meta_description will be used instead.
        open_graph_use_meta_description:
          type: boolean
          description: |
            Flag to determine if product description or open graph description is used.
        open_graph_use_product_name:
          type: boolean
          description: |
            Flag to determine if product name or open graph name is used.
        open_graph_use_image:
          type: boolean
          description: |
            Flag to determine if product image or open graph image is used.
        gtin:
          type: string
          description: Global Trade Item Number
        mpn:
          type: string
          description: Manufacturer Part Number
        reviews_rating_sum:
          type: integer
          description: |
            The total (cumulative) rating for the product.
          example: 3
        reviews_count:
          type: integer
          description: |
            The number of times the product has been rated.
          example: 4
        total_sold:
          type: integer
          description: |
            The total quantity of this product sold.
          example: 80
        custom_fields:
          type: array
          minimum: 0
          maximum: 255
          description: 200 maximum custom fields per product. 255 maximum characters per custom field.
          items:
            $ref: '#/components/schemas/productCustomField_Put'
        bulk_pricing_rules:
          type: array
          items:
            allOf:
              - type: object
                properties:
                  id:
                    type: integer
                    description: Unique ID of the *Bulk Pricing Rule*. Read-Only.
                    readOnly: true
                required:
                  - id
              - $ref: '#/components/schemas/bulkPricingRule_Full'
        images:
          type: array
          items:
            $ref: '#/components/schemas/productImage_Full'
        videos:
          type: array
          items:
            $ref: '#/components/schemas/productVideo_Full'
        variants:
          type: array
          items:
            $ref: '#/components/schemas/productVariant_Full'
      required:
        - name
        - type
        - weight
        - price
    metafield_Full:
      title: metafield_Full
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: Unique ID of the *Metafield*. Read-Only.
              readOnly: true
              example: 6
        - $ref: '#/components/schemas/metafield_Base'
        - type: object
          properties:
            resource_type:
              type: string
              description: |
                The type of resource with which the metafield is associated.
              example: product
              enum:
                - category
                - brand
                - product
                - variant
              x-required:
                - post
            resource_id:
              maximum: 10000000000
              minimum: 0
              type: integer
              description: |
                The ID of the resource with which the metafield is associated.
              example: 111
              x-required:
                - post
            date_created:
              type: string
              description: |
                Date and time of the metafield's creation. Read-Only.
              readOnly: true
              format: date-time
              example: '2018-05-07T20:14:17+00:00'
            date_modified:
              type: string
              description: |
                Date and time when the metafield was last updated. Read-Only.
              readOnly: true
              format: date-time
              example: '2018-05-07T20:14:17+00:00'
      x-internal: false
    errorResponse_409:
      title: errorResponse_409
      allOf:
        - type: object
          properties:
            code:
              type: integer
            status:
              type: integer
            title:
              type: string
              description: The error title describing the particular error.
            type:
              type: string
        - type: object
          properties:
            errors:
              $ref: '#/components/schemas/DetailedErrors'
      x-internal: false
    errorResponse_422:
      title: errorResponse_422
      allOf:
        - type: object
          properties:
            code:
              type: integer
            status:
              type: integer
            title:
              type: string
              description: The error title describing the particular error.
            type:
              type: string
        - type: object
          properties:
            errors:
              $ref: '#/components/schemas/DetailedErrors'
      x-internal: false
    MetaPaginationObject:
      type: object
      properties:
        pagination:
          type: object
          properties:
            total:
              type: integer
              example: 246
              minimum: 0
            count:
              type: integer
              example: 5
              minimum: 0
            per_page:
              type: integer
              example: 5
              minimum: 0
            current_page:
              type: integer
              example: 1
              minimum: 1
            total_pages:
              type: integer
              example: 50
              minimum: 0
            links:
              type: object
              properties:
                next:
                  type: string
                  example: '?limit=5&page=2'
                current:
                  type: string
                  example: '?limit=5&page=1'
      x-tags:
        - Models
    BaseError:
      type: object
      description: |
        Error payload for the BigCommerce API.
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
      x-tags:
        - Models
    ProductChannelAssignment:
      properties:
        product_id:
          type: integer
        channel_id:
          type: integer
      x-tags:
        - Models
    ProductCategoryAssignment:
      properties:
        product_id:
          type: integer
        category_id:
          type: integer
      x-tags:
        - Models
    beta5DetailedErrors:
      type: object
      properties: {}
      additionalProperties: true
      x-tags:
        - Models
    beta5ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            errors:
              $ref: '#/components/schemas/beta5DetailedErrors'
      x-tags:
        - Models
  parameters:
    ProductIdParam:
      name: product_id
      in: path
      description: |
        The ID of the `Product` to which the resource belongs.
      required: true
      schema:
        type: integer
    ReviewIdParam:
      name: review_id
      description: |
        The ID of the `review` that is being operated on.
      required: true
      in: path
      schema:
        type: integer
    ImageIdParam:
      name: image_id
      description: |
        The ID of the `Image` that is being operated on.
      required: true
      in: path
      schema:
        type: integer
    MetafieldIdParam:
      name: metafield_id
      in: path
      description: |
        The ID of the `Metafield`.
      required: true
      schema:
        type: integer
    VideoIdParam:
      name: id
      description: The BigCommerce ID of the `Video`
      required: true
      in: path
      schema:
        type: integer
    ComplexRuleIdParam:
      name: complex_rule_id
      description: |
        The ID of the `ComplexRule`.
      required: true
      in: path
      schema:
        type: integer
    CustomFieldIdParam:
      name: custom_field_id
      description: |
        The ID of the `CustomField`.
      required: true
      in: path
      schema:
        type: integer
    BulkPricingRuleIdParam:
      name: bulk_pricing_rule_id
      description: |
        The ID of the `BulkPricingRule`.
      required: true
      in: path
      schema:
        type: integer
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Products | modify | `store_v2_products` |
        |  Products | read-only | `store_v2_products_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header

openapi: '3.0.0'
info:
  version: ''
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  title: Channels
  description: |-
    Create and manage sales [channels](/api-docs/channels/overview), their [sites](/docs/rest-management/channels/channel-site), and their [product listings](/docs/rest-management/channels/channel-listings).

    ## Channels

    A [channel](/docs/rest-management/channels) is anywhere a merchant sells their products. This encompasses headless storefronts, marketplaces, POS systems, and marketing platforms.

    ### Platform

    A channel's `type` and `platform` combination must be a valid pair as indicated in the table below.

    | Platform            | Accepted Type |
    |:--------------------|:--------------|
    | `clover`            | `pos` |
    | `square`            | `pos` |
    | `stripe`            | `pos` |
    | `talech`            | `pos` |
    | `vend`              | `pos` |
    | `amazon`            | `marketplace` |
    | `belk`              | `marketplace` |
    | `catch`             | `marketplace` |
    | `ebay`              | `marketplace` |
    | `etsy`              | `marketplace` |
    | `facebook`  | `marketplace`, `marketing` |
    | `hudsons_bay`       | `marketplace` |
    | `google`            | `marketplace`, `marketing` |
    | `google_shopping` (deprecated)   | `marketing` |
    | `instagram` | `marketplace`, `marketing` |
    | `macys`             | `marketplace` |
    | `mirakl`            | `marketplace` |
    | `overstock`         | `marketplace` |
    | `pinterest`         | `marketplace` |
    | `target_plus`       | `marketplace` |
    | `tiktok`            | `marketplace` |
    | `wayfair`           | `marketplace` |
    | `wish`              | `marketplace` |
    | `walmart`           | `marketplace` |
    | `acquia`            | `storefront` |
    | `bigcommerce`       | `storefront` |
    | `bloomreach`        | `storefront` |
    | `deity`             | `storefront` |
    | `drupal`            | `storefront` |
    | `gatsby`            | `storefront` |
    | `next`              | `storefront` |
    | `vue`               | `storefront` |
    | `wordpress`         | `storefront` |
    | `custom`            | `storefront`, `pos`, `marketing`, `marketplace` |
        

    ### Status

    Allowed values for a channel's `status` vary by channel `type` and `platform`.

    |Type|Platform|Allowed Statuses|
    |--|--|--|
    |`storefront`|`bigcommerce`|`prelaunch`, `active`, `inactive`, `archived`, `deleted`|
    |`storefront`|**Is not** `bigcommerce` |`prelaunch`, `active`, `inactive`, `archived`, `deleted` 
    |`marketing`, `marketplace`, `pos`|N/A|`connected`, `disconnected`, `archived`, `deleted`|

    > #### Warning
    > * You can restore a Channel with `deleted` status within **90 days** after deletion by contacting the BigCommerce support team. After the 90-days grace period is over, the Channel `status` will become `terminated`.
    > * The `terminated` status is read-only. Channels with a `status` of `terminated` **cannot** be restored.

    ## Channel listings

    [Channel listings](/docs/rest-management/channels/channel-listings) allow you to manage catalog differences among different storefronts or marketplaces.

    ## Channel site

    A [Channel site](/docs/rest-management/channels/channel-site) refers to the domain associated with a channel.

    ## Resources

    * [Sites and Routes API Reference](/docs/rest-management/sites)
    * [Building Channels Overview](/api-docs/channels/overview)
    * [Building Channel Apps](/api-docs/channels/building-channel-apps)
    * [Channels Toolkit Reference](/api-docs/channels/channels-toolkit-reference)
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Channels
  - name: Channel Active Theme
  - name: Channel Currency Assignments
  - name: Channel Listings
  - name: Channel Site
  - name: Channel Site Checkout Url
  - name: Channel Menus
  - name: Channel Metafields
paths:
  '/channels':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
        - Channels
      summary: Get All Channels
      operationId: listChannels
      description: |-
        Returns a list of *Channels*.

        Will always return the default BigCommerce storefront with an ID of `1`. This storefront is created by default when you provision a BigCommerce store.
      parameters:
        - $ref: '#/components/parameters/include'
        - $ref: '#/components/parameters/available'
        - $ref: '#/components/parameters/status_in'
        - $ref: '#/components/parameters/type_in'
        - $ref: '#/components/parameters/platform_in'
        - $ref: '#/components/parameters/date_created'
        - $ref: '#/components/parameters/date_created_min'
        - $ref: '#/components/parameters/date_created_max'
        - $ref: '#/components/parameters/date_modified'
        - $ref: '#/components/parameters/date_modified_min'
        - $ref: '#/components/parameters/date_modified_max'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/multiple_channels_without_currencies_resp'
        '422':
          $ref: '#/components/responses/invalid_filter_value_resp'
    post:
      tags:
        - Channels
      summary: Create a Channel
      parameters:
        - $ref: '#/components/parameters/ContentType'
      operationId: createChannel
      description: Creates a *Channel*.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChannelReq'
            examples:
              Create eBay Channel:
                $ref: '#/components/examples/create_channel_req_example'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/single_channel_without_currencies_resp'
        '422':
          $ref: '#/components/responses/missing_or_invalid_channel_data_resp'
  '/channels/{channel_id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/channel_id_path_param'
    get:
      tags:
        - Channels
      summary: Get a Channel
      operationId: getChannel
      description: Returns a *Channel*. Channel ID `1` returns the default BigCommerce storefront.
      parameters:
        - $ref: '#/components/parameters/include'
      responses:
        '200':
          $ref: '#/components/responses/single_channel_with_currencies_resp'
        '404':
          $ref: '#/components/responses/channel_not_found_resp'
    put:
      tags:
        - Channels
      summary: Update a Channel
      parameters:
        - $ref: '#/components/parameters/ContentType'
      operationId: updateChannel
      description: |-
        Updates a *Channel*.

        ## Updatable Fields

        The following fields can be updated.
        * `name`
        * `external_id`
        * `status`
        * `is_listable_from_ui`
        * `is_visible`
        * `config_meta`


        > #### Note
        > * Partial updates are supported. In most cases, if a field that *cannot* be updated is passed in, the API **will not** respond with an error. It returns a 200 response with the object, in which you will see the field(s) were not updated.
        > * `platform` and `type` cannot be updated after a channel is created.
        > * A channel with status `deleted` or `terminated` cannot be updated.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChannelReq'
            examples:
              Update a Facebook by Meta Channel:
                $ref: '#/components/examples/update_channel_req_example'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/single_channel_without_currencies_resp'
        '404':
          $ref: '#/components/responses/channel_entity_not_found_resp'
        '409':
          $ref: '#/components/responses/duplicate_channel_resp'
        '422':
          $ref: '#/components/responses/invalid_channel_update_field_resp'
  '/channels/{channel_id}/active-theme':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/channel_id_path_param'
    get:
      tags:
        - Channel Active Theme
      summary: Get a Channel Active Theme
      operationId: getChannelActiveTheme
      description: |-
        Returns details of the theme active on the specified channel.
        Does not support active Blueprint (legacy) themes.
      responses:
        '200':
          $ref: '#/components/responses/channel_active_theme_resp'
        '404':
          $ref: '#/components/responses/active_theme_not_found_resp'
  '/channels/currency-assignments':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
        - Channel Currency Assignments
      summary: Get All Channels Currency Assignments
      operationId: listAllCurrencyAssignments
      description: Returns a list of currency assignments for all channels.
      responses:
        '200':
          $ref: '#/components/responses/multiple_channels_currency_assignments_resp'
    post:
      tags:
        - Channel Currency Assignments
      parameters:
        - $ref: '#/components/parameters/ContentType'
      summary: Create Multiple Channels Currency Assignments
      operationId: createMultipleChannelsCurrencyAssignments
      description: Sets enabled currencies and default currency for multiple channels. Note that currencies must be added first in the **Settings > Setup > Currencies** settings from an active MSF-enabled BigCommerce store control panel before the currencies can be assigned to a channel.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertMultipleChannelsCurrencyAssignmentsReq'
            examples:
              Create Currency Assignments for Multiple Channels:
                $ref: '#/components/examples/multiple_channels_currency_assignments_req_example'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/multiple_channels_currency_assignments_resp'
        '422':
          $ref: '#/components/responses/missing_or_invalid_multiple_channels_currency_assignments_data_resp'
    put:
      tags:
        - Channel Currency Assignments
      summary: Update Multiple Channels Currency Assignments
      parameters:
        - $ref: '#/components/parameters/ContentType'
      operationId: updateMultipleChannelsCurrencyAssignments
      description: Updates enabled currencies and default currency for multiple channels. Note that currencies must be added first in the **Settings > Setup > Currencies** settings from an active MSF-enabled BigCommerce store control panel before the currencies can be assigned to a channel.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertMultipleChannelsCurrencyAssignmentsReq'
            examples:
              Update Currency Assignments for Multiple Channels:
                $ref: '#/components/examples/multiple_channels_currency_assignments_req_example'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/multiple_channels_currency_assignments_resp'
        '422':
          $ref: '#/components/responses/missing_or_invalid_multiple_channels_currency_assignments_data_resp'
  '/channels/{channel_id}/currency-assignments':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/channel_id_path_param'
    get:
      tags:
        - Channel Currency Assignments
      summary: Get Channel Currency Assignments
      operationId: getSingleChannelCurrencyAssignments
      description: Returns a list of currency assignments for a specific channel.
      responses:
        '200':
          $ref: '#/components/responses/single_channel_currency_assignments_resp'
        '404':
          $ref: '#/components/responses/channel_not_found_resp'
    post:
      tags:
        - Channel Currency Assignments
      summary: Create Channel Currency Assignments
      parameters:
        - $ref: '#/components/parameters/ContentType'
      operationId: createSingleChannelCurrencyAssignments
      description: Sets enabled currencies and default currency for a specific channel. Note that currencies must be added first in the **Settings > Setup > Currencies** settings from an active MSF-enabled BigCommerce store control panel before the currencies can be assigned to a channel.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrencyRequiredWithoutChannelId'
            examples:
              Create Currency Assignments for a Channel:
                $ref: '#/components/examples/single_channel_currency_assignments_req_example'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/single_channel_currency_assignments_resp'
        '422':
          $ref: '#/components/responses/missing_or_invalid_single_channel_currency_assignments_data_resp'
    put:
      tags:
        - Channel Currency Assignments
      summary: Update Channel Currency Assignments
      parameters:
        - $ref: '#/components/parameters/ContentType'
      operationId: updateSingleChannelCurrencyAssignments
      description: Updates enabled currencies and default currency for a specific channel. Note that currencies must be added first in the **Settings > Setup > Currencies** settings from an active MSF-enabled BigCommerce store control panel before the currencies can be assigned to a channel.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrencyRequiredWithoutChannelId'
            examples:
              Update Currency Assignments for a Channel:
                $ref: '#/components/examples/single_channel_currency_assignments_req_example'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/single_channel_currency_assignments_resp'
        '422':
          $ref: '#/components/responses/missing_or_invalid_single_channel_currency_assignments_data_resp'
    delete:
      tags:
        - Channel Currency Assignments
      summary: Delete Channel Currency Assignments
      operationId: deleteSingleChannelCurrencyAssignments
      description: 'Deletes currency assignments for a specific channel. Once done, this channel will inherit the store’s currency settings.'
      responses:
        '200':
          $ref: '#/components/responses/delete_currency_assignments_resp'
        '404':
          $ref: '#/components/responses/channel_not_found_resp'
  '/channels/{channel_id}/listings':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/channel_id_path_param'
    get:
      tags:
        - Channel Listings
      summary: Get Channel Listings
      operationId: listChannelListings
      description: 'Returns a list of all *Channel Listings* for a specific channel. Note that if the *Channel* is not found or there is no listing associated to the *Channel*, it will return a 200 response with empty data.'
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/after'
        - $ref: '#/components/parameters/product_id_in'
        - $ref: '#/components/parameters/date_created'
        - $ref: '#/components/parameters/date_created_min'
        - $ref: '#/components/parameters/date_created_max'
        - $ref: '#/components/parameters/date_modified'
        - $ref: '#/components/parameters/date_modified_min'
        - $ref: '#/components/parameters/date_modified_max'
      responses:
        '200':
          $ref: '#/components/responses/single_and_multiple_listings_resp'
        '400':
          $ref: '#/components/responses/invalid_channel_id_resp'
        '422':
          $ref: '#/components/responses/invalid_filters_resp'
    post:
      tags:
        - Channel Listings
      summary: Create Channel Listings
      parameters:
        - $ref: '#/components/parameters/ContentType'
      operationId: createChannelListings
      description: Creates one or more *Channel Listings* for a specific channel.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMultipleListingsReq'
            examples:
              Create Single Listing:
                $ref: '#/components/examples/create_single_listing_req_example'
              Create Multiple Listings:
                $ref: '#/components/examples/create_multiple_listings_req_example'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/single_and_multiple_listings_resp'
        '422':
          $ref: '#/components/responses/missing_or_invalid_multiple_listings_data_for_post_resp'
    put:
      tags:
        - Channel Listings
      summary: Update Channel Listings
      parameters:
        - $ref: '#/components/parameters/ContentType'
      operationId: updateChannelListings
      description: |-
        Updates one or more *Channel Listings* for a specific channel.

        > #### Note
        > * Partial updates are supported. In most cases, if a field that *cannot* be updated is passed in, the API **will not** respond with an error. It returns a 200 response with the object, in which you will see the field(s) were not updated.
        > * If a new variant is provided, the API will append the variant to the list. If a variant already exists, the API will update the existing variant. Other variants that are not provided in the payload remains unchanged.
        > * If `listing_id` does not exist, the API will return a 200 response with empty data.
        > * `listing_id` is required and cannot be less than or equal to zero.
        > * `product_id` cannot be updated after a channel listing is created.
        > * `product_id` of a variant must match the `product_id` of the channel listing.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMultipleListingsReq'
            examples:
              Update Single Listing:
                $ref: '#/components/examples/update_single_listing_req_example'
              Update Multiple Listings:
                $ref: '#/components/examples/update_multiple_listings_req_example'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/single_and_multiple_listings_resp'
        '422':
          $ref: '#/components/responses/missing_or_invalid_multiple_listings_data_for_put_resp'
  '/channels/{channel_id}/listings/{listing_id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/channel_id_path_param'
      - $ref: '#/components/parameters/listing_id_path_param'
    get:
      tags:
        - Channel Listings
      summary: Get a Channel Listing
      operationId: getChannelListing
      description: Returns a *Channel Listing* for a specific channel.
      responses:
        '200':
          $ref: '#/components/responses/single_listing_resp'
        '404':
          $ref: '#/components/responses/listing_not_found_resp'
  '/channels/{channel_id}/site/checkout-url':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/channel_id_path_param'
    put:
      summary: Upsert a Site's Checkout URL
      tags:
        - Channel Site Checkout Url
      description: Creates or updates (upserts) a site's checkout URL
      operationId: putCheckoutUrl
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutCheckoutUrl'
        description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
            Example 1:
              examples:
                response:
                  value: |-
                    {
                        "id": 1,
                        "url": "https://kittens.mybigcommerce.com/",
                        "channel_id": 1,
                        "created_at": "2018-01-04T04:15:50.000Z",
                        "updated_at": "2018-01-04T04:15:50.000Z",
                        "urls": [
                            {
                                "url": "https://kittens.mybigcommerce.com",
                                "type": "primary",
                                "created_at": "2022-03-22T13:08:59Z",
                                "updated_at": "2022-03-22T13:08:59Z"
                            },
                            {
                                "url": "https://store-abc.store.bcdev",
                                "type": "canonical",
                                "created_at": "2022-03-22T13:08:59Z",
                                "updated_at": "2022-03-22T13:08:59Z"
                            },
                            {
                                "url": "https://checkout.kittens.mybigcommerce.com",
                                "type": "checkout",
                                "created_at": "2022-03-23T10:21:11Z",
                                "updated_at": "2022-03-29T13:44:22Z"
                            }
                        ],
                        "is_checkout_url_customized": true
                    }
        '422':
          description: Unprocessable Entity. Your checkout and storefront must be within the same main domain like `example.com` and `subdomain.example.com`
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    status: 422
                    title: 'Incorrect checkout url https://bc.kittykat.me. Your checkout and storefront must be within the same main domain like “main.com” and “subdomain.main.com”'
                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
                    errors: {}
                properties:
                  status:
                    type: integer
                    default: 422
                  title:
                    type: string
                    example: 'Incorrect checkout url https://checkout.example.com. Your checkout and storefront must be within the same main domain like “main.com” and “subdomain.main.com'
                  type:
                    type: string
                    default: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
                  errors:
                    type: object
    delete:
      summary: Delete a Site's Checkout URL
      operationId: delete-checkout-url
      description: Deletes a siteʼs checkout URL. After deletion, a shared checkout URL is used.
      tags:
        - Channel Site Checkout Url
      responses:
        '200':
          description: OK. `data` and `meta` are empty objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties: {}
                  meta:
                    $ref: '#/components/schemas/EmptyMeta'
  '/channels/{channel_id}/site':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/channel_id_path_param'
    get:
      summary: Get a Channel Site
      description: |
        Alias of `GET /sites?channel_id=channel_id`

        Returns site data for the specified channel.
      operationId: get-channel-site
      responses:
        '200':
          $ref: '#/components/responses/site_Resp'
      tags:
        - Channel Site
    put:
      responses:
        '200':
          $ref: '#/components/responses/site_Resp'
      summary: Update a Channel Site
      parameters:
        - $ref: '#/components/parameters/ContentType'
      operationId: put-channel-site
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/site_Put'
        x-examples:
          application/json:
            url: 'https://example.com/'
      tags:
        - Channel Site
      description: Updates a site for provided channel.
    post:
      responses:
        '200':
          $ref: '#/components/responses/site_Resp'
      summary: Create a Channel Site
      parameters:
        - $ref: '#/components/parameters/ContentType'
      operationId: postChannelSite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/site_Post'
        x-examples:
          application/json:
            url: 'http://kittens.mybigcommerce.com/'
            channel_id: 123
      tags:
        - Channel Site
      description: Alias of POST `/sites`. Creates a site for provided channel.
    delete:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: Deletes the Channel's site.
      operationId: DeleteChannelSite
      tags:
        - Channel Site
      summary: Delete a Channel Site
  '/channels/{channel_id}/channel-menus':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/channel_id_path_param'
    get:
      summary: Get Channel Menus
      description: |
        Returns list of Control Panel side navigation menus for a channel.
      operationId: get-channel-menus
      responses:
        '200':
          $ref: '#/components/responses/channel_menus_Resp'
      tags:
        - Channel Menus
    post:
      responses:
        '200':
          $ref: '#/components/responses/channel_menus_Resp'
      summary: Create Channel Menus
      operationId: postChannelMenus
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/channel_menus_Post'
            examples: {}
      tags:
        - Channel Menus
      description: Creates or replaces list of control panel side navigation menus for a channel.
    delete:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: integer
                  meta:
                    $ref: '#/components/schemas/EmptyMeta'
                x-examples:
                  example-1:
                    data: 1
                    meta: {}
      description: Deletes control panel side navigation menus for a channel.
      operationId: DeleteChannelMenus
      tags:
        - Channel Menus
      summary: Delete Channel Menus
  '/channels/{channel_id}/metafields':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/channel_id_path_param'
    get:
      summary: Get Channel Metafields
      tags:
        - Channel Metafields
      responses:
        '200':
          $ref: '#/components/responses/metafield_200'
      operationId: get-channels-channel_id-metafields
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/MetafieldKeyParam'
        - $ref: '#/components/parameters/MetafieldNamespaceParam'
        - $ref: '#/components/parameters/DirectionParam'
      description: Returns a list of metafields on a channel. Optional filter parameters can be passed in.
    post:
      summary: Create a Channel Metafield
      parameters:
        - $ref: '#/components/parameters/ContentType'
      operationId: post-channels-channel_id-metafields
      responses:
        '200':
          $ref: '#/components/responses/metafield_200'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Post'
            examples: {}
      tags:
        - Channel Metafields
      description: |-
        Creates a channel metafield.

        **Note:** The maxiumum number of metafields allowed on each order, product, category, variant, channel, or brand is 250 per client ID. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in the Help Center.
  '/channels/{channel_id}/metafields/{metafield_id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/channel_id_path_param'
      - name: metafield_id
        schema:
          type: string
        in: path
        required: true
    get:
      summary: Get a Channel Metafield
      tags:
        - Channel Metafields
      responses:
        '200':
          $ref: '#/components/responses/metafield_200'
      operationId: get-channels-channel_id-metafields-metafield_id
      description: Returns a single channel metafield.
    put:
      summary: Update a Channel Metafield
      parameters:
        - $ref: '#/components/parameters/ContentType'
      operationId: put-channels-channel_id-metafields-metafield_id
      responses:
        '200':
          $ref: '#/components/responses/metafield_200'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Put'
      tags:
        - Channel Metafields
      description: |-
        Updates a single channel metafield.

        **Usage Notes**
        * Attempting to modify `namespace`, `key`, and `permission_set` fields using a client ID different from the one used to create those metafields will result in a `403` error message. 
    delete:
      summary: Delete a Channel Metafield
      operationId: delete-channels-channel_id-metafields-metafield_id
      responses:
        '204':
          description: No Content
      tags:
        - Channel Metafields
      description: Deletes a single channel metafield.
components:
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
    PageParam:
      name: page
      description: |
        Specifies the page number in a limited (paginated) list of products.
      required: false
      in: query
      schema:
        type: integer
    MetafieldIdParam:
      name: metafield_id
      in: path
      description: |
        The ID of the `Metafield`.
      required: true
      schema:
        type: integer
    MetafieldKeyParam:
      name: key
      in: query
      description: |
        Filter based on a metafield's key.
      required: false
      schema:
        type: string
    MetafieldNamespaceParam:
      name: namespace
      in: query
      description: Filter based on a metafield's namespace.
      required: false
      schema:
        type: string
    LimitParam:
      name: limit
      description: |
        Controls the number of items per page in a limited (paginated) list of products.
      required: false
      in: query
      schema:
        type: integer
    DirectionParam:
      name: direction
      description: Sort direction.
      required: false
      in: query
      schema:
        type: string
        enum:
          - asc
          - desc
    include:
      name: include
      description: Channels subresources that can be included in the response.
      in: query
      required: false
      schema:
        type: string
        enum:
          - currencies
    available:
      name: available
      description: 'Filter items based on whether the channel is currently available for integration. Setting this query parameter to `true` will return channels with the status of `prelaunch`, `active` , `inactive`, and `connected`. Setting this query parameter to `false` will return channels with the status of `disconnected`, `archived`, `deleted`, and `terminated`.'
      in: query
      required: false
      schema:
        type: boolean
    status_in:
      name: 'status:in'
      description: Filter items by a comma-separated list of statuses.
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - prelaunch
            - active
            - inactive
            - connected
            - disconnected
            - archived
            - deleted
            - terminated
    type_in:
      name: 'type:in'
      description: Filter items by a comma-separated list of types.
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - marketplace
            - marketing
            - pos
            - storefront
    platform_in:
      name: 'platform:in'
      description: 'Filter items by a comma-separated list of platforms. For a list of supported platforms, see [Platform](/docs/rest-management/channels#platform).'
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
        example:
          - 'facebook by meta, amazon'
    date_created:
      name: date_created
      description: 'Filter items by date_created. For example, `date_created=2019-09-04T00:00:00`, `date_created=2019-09-04`, or `date_created=1567573200`'
      in: query
      required: false
      schema:
        type: string
    date_created_min:
      name: 'date_created:min'
      description: 'Filter items by minimum date_created. For example, `date_created:min=2019-09-04T00:00:00`, `date_created:min=2019-09-04`, or `date_created:min=1567573200`'
      in: query
      required: false
      schema:
        type: string
    date_created_max:
      name: 'date_created:max'
      description: 'Filter items by maximum date_created. For example, `date_created:max=2019-09-04T00:00:00`, `date_created:max=2019-09-04`, or `date_created:max=1567573200`'
      in: query
      required: false
      schema:
        type: string
    date_modified:
      name: date_modified
      description: 'Filter items by date_modified. For example, `date_modified=2019-09-04T00:00:00`, `date_modified=2019-09-04`, or `date_modified=1567573200`'
      in: query
      required: false
      schema:
        type: string
    date_modified_min:
      name: 'date_modified:min'
      description: 'Filter items by minimum date_modified. For example, `date_modified:min=2019-09-04T00:00:00`, `date_modified:min=2019-09-04`, or `date_modified:min=1567573200`'
      in: query
      required: false
      schema:
        type: string
    date_modified_max:
      name: 'date_modified:max'
      description: 'Filter items by maximum date_modified. For example, `date_modified:max=2019-09-04T00:00:00`, `date_modified:max=2019-09-04`, or `date_modified:max=1567573200`'
      in: query
      required: false
      schema:
        type: string
    limit:
      name: limit
      description: Controls the number of items per page for paginated responses.
      in: query
      required: false
      schema:
        type: integer
    page:
      name: page
      description: Specifies the page number for a paginated response.
      in: query
      required: false
      schema:
        type: integer
    after:
      name: after
      description: Specifies the prior listing ID in a limited (paginated) list of listings.
      in: query
      required: false
      schema:
        type: integer
    product_id_in:
      name: 'product_id:in'
      description: Filter items by a comma-separated list of product IDs.
      in: query
      required: false
      schema:
        type: array
        items:
          type: integer
          format: int64
    channel_id_path_param:
      name: channel_id
      description: The ID of a channel.
      in: path
      required: true
      schema:
        type: integer
        format: int64
    listing_id_path_param:
      name: listing_id
      description: The ID of a channel listing.
      in: path
      required: true
      schema:
        type: integer
        format: int64
  responses:
    multiple_channels_without_currencies_resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/ChannelWithoutCurrencies'
              meta:
                $ref: '#/components/schemas/MetaWithFullPagination'
          examples:
            response:
              $ref: '#/components/examples/multiple_channels_without_currencies_resp_example'
    single_channel_without_currencies_resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/ChannelWithoutCurrencies'
              meta:
                $ref: '#/components/schemas/EmptyMeta'
          examples:
            response:
              $ref: '#/components/examples/single_channel_without_currencies_resp_example'
    single_channel_with_currencies_resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/ChannelWithCurrencies'
              meta:
                $ref: '#/components/schemas/EmptyMeta'
          examples:
            response:
              $ref: '#/components/examples/single_channel_with_currencies_resp_example'
    channel_active_theme_resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/ActiveTheme'
              meta:
                $ref: '#/components/schemas/EmptyMeta'
          examples:
            response:
              $ref: '#/components/examples/single_active_theme_resp_example'
    multiple_channels_currency_assignments_resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/CurrencyNotRequiredWithChannelId'
              meta:
                $ref: '#/components/schemas/EmptyMeta'
          examples:
            response:
              $ref: '#/components/examples/multiple_channels_currency_assignments_resp_example'
    single_channel_currency_assignments_resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/CurrencyNotRequiredWithChannelId'
              meta:
                $ref: '#/components/schemas/EmptyMeta'
          examples:
            response:
              $ref: '#/components/examples/single_channel_currency_assignments_resp_example'
    delete_currency_assignments_resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/ChannelId'
              meta:
                $ref: '#/components/schemas/EmptyMeta'
          examples:
            response:
              $ref: '#/components/examples/delete_currency_assignments_resp_example'
    single_and_multiple_listings_resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Listing'
              meta:
                $ref: '#/components/schemas/MetaWithPartialPagination'
          examples:
            Single Listing:
              $ref: '#/components/examples/single_listing_resp_example'
            Multiple Listings:
              $ref: '#/components/examples/multiple_listings_resp_example'
    single_listing_resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Listing'
              meta:
                $ref: '#/components/schemas/EmptyMeta'
          examples:
            response:
              $ref: '#/components/examples/single_listing_with_empty_meta_resp_example'
    site_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Site'
              meta:
                $ref: '#/components/schemas/EmptyMeta'
          examples: {}
    channel_menus_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  bigcommerce_protected_app_sections:
                    $ref: '#/components/schemas/BigCommerceProtectedAppSections'
                  custom_app_sections:
                    $ref: '#/components/schemas/CustomAppSections'
              meta:
                $ref: '#/components/schemas/EmptyMeta'
          examples:
            response:
              $ref: '#/components/examples/channel_menus_resp_example'
    invalid_channel_id_resp:
      description: Invalid channel ID is provided.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Invalid Channel ID:
              $ref: '#/components/examples/error_400_resp_example'
    invalid_filter_value_resp:
      description: Invalid value is provided to the query parameter(s).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Invalid Filter Value:
              $ref: '#/components/examples/error_422_invalid_filter_value_resp_example'
    missing_or_invalid_channel_data_resp:
      description: 'The request is missing one or more required fields or invalid data is submitted. Commonly, an invalid combination of `type` and `platform` was provided.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Missing Required Field and Invalid Data:
              $ref: '#/components/examples/error_422_channel_resp_example'
            Invalid Type and Platform Combination:
              $ref: '#/components/examples/error_422_invalid_type_platform_combination_resp_example'
    channel_not_found_resp:
      description: A *Channel* with the provided ID was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Channel Not Found:
              $ref: '#/components/examples/error_404_resp_example'
    listing_not_found_resp:
      description: A *Channel Listing* with the provided channel ID and listing ID was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Listing Not Found:
              $ref: '#/components/examples/error_404_listing_not_found_resp_example'
    active_theme_not_found_resp:
      description: Active Theme of the *Channel* was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Active Theme Not Found:
              $ref: '#/components/examples/error_404_active_theme_not_found_resp_example'
    channel_entity_not_found_resp:
      description: A *Channel* with the provided ID was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Channel Not Found:
              $ref: '#/components/examples/error_404_entity_not_found_resp_example'
    duplicate_channel_resp:
      description: 'A *Channel* with the same combination of `name`, `platform`, and `type` already exists.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Duplicate Channel:
              $ref: '#/components/examples/error_409_resp_example'
    invalid_channel_update_field_resp:
      description: 'When an invalid value or invalid field is submitted, a 422 response will be sent. Note that attempt to update a deleted or terminated channel will also result in 422 response.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Update Type and Platform Error:
              $ref: '#/components/examples/error_422_prevent_update_type_and_platform_resp_example'
            Update Deleted Channel Error:
              $ref: '#/components/examples/error_422_prevent_update_deleted_channel_resp_example'
    missing_or_invalid_multiple_channels_currency_assignments_data_resp:
      description: The request is missing one or more required fields or invalid data is submitted.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Missing Required Fields and Invalid Data:
              $ref: '#/components/examples/error_422_multiple_channels_currency_assignments_resp_example'
            Currency Not Yet Enabled:
              $ref: '#/components/examples/error_422_invalid_enabled_currencies_resp_example'
    missing_or_invalid_single_channel_currency_assignments_data_resp:
      description: The request is missing one or more required fields or invalid data is submitted.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Missing Required Fields:
              $ref: '#/components/examples/error_422_single_channel_currency_assignments_resp_example'
            Currency Not Yet Enabled:
              $ref: '#/components/examples/error_422_invalid_enabled_currencies_resp_example'
            Invalid Channel ID:
              $ref: '#/components/examples/error_422_invalid_channel_id_resp_example'
    missing_or_invalid_multiple_listings_data_for_post_resp:
      description: The request is missing one or more required fields or invalid data is submitted.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Product ID Mismatch:
              $ref: '#/components/examples/error_422_product_id_mismatch_resp_example'
            Missing Required Fields For Channel Listing:
              $ref: '#/components/examples/error_422_missing_listing_required_fields_resp_example'
            Missing Required Fields For Variants:
              $ref: '#/components/examples/error_422_missing_listing_variants_required_fields_resp_example'
            Invalid Channel ID:
              $ref: '#/components/examples/error_422_invalid_channel_id_v2_resp_example'
    missing_or_invalid_multiple_listings_data_for_put_resp:
      description: The request is missing one or more required fields or invalid data is submitted. Note that the `group_id` in the Invalid Listing ID example refers to `listing_id`. Please use `listing_id` instead of `group_id` in the request payload.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Product ID Mismatch:
              $ref: '#/components/examples/error_422_product_id_mismatch_resp_example'
            Missing Required Fields For Channel Listing:
              $ref: '#/components/examples/error_422_missing_listing_required_fields_resp_example'
            Missing Required Fields For Variants:
              $ref: '#/components/examples/error_422_missing_listing_variants_required_fields_resp_example'
            Invalid Channel ID:
              $ref: '#/components/examples/error_422_invalid_channel_id_v2_resp_example'
            Invalid Listing ID:
              $ref: '#/components/examples/error_422_invalid_listing_id_resp_example'
    invalid_filters_resp:
      description: 'When an invalid value or invalid query parameter is submitted, a 422 response will be sent.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Invalid Filters:
              $ref: '#/components/examples/error_422_invalid_filters_resp_example'
            Invalid Filter Value:
              $ref: '#/components/examples/error_422_invalid_filter_value_resp_example'
    metafield_200:
      description: OK
      content:
        application/json:
          schema:
            description: 'Metafield for products, categories, variants, and brands. The max number of metafields allowed on each product, category, variant, or brand is 250. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in the Help Center.'
            x-internal: false
            type: object
            properties:
              id:
                type: integer
                description: Unique ID of the *Metafield*.
                example: 6
              permission_set:
                type: string
                description: |-
                  Determines the visibility and writeability of the field by other API consumers.

                  |Value|Description
                  |-|-|
                  |`app_only`|Private to the app that owns the field|
                  |`read`|Visible to other API consumers|
                  |`write`|Open for reading and writing by other API consumers|
                  |`read_and_sf_access`|Visible to other API consumers, including on storefront|
                  |`write_and_sf_access`|Open for reading and writing by other API consumers, including on storefront|
                enum:
                  - app_only
                  - read
                  - write
                  - read_and_sf_access
                  - write_and_sf_access
              namespace:
                maxLength: 64
                minLength: 1
                type: string
                description: 'Namespace for the metafield, for organizational purposes.'
                example: Warehouse Locations
                x-required:
                  - post
              key:
                maxLength: 64
                minLength: 1
                type: string
                description: |
                  The name of the field, for example: `location_id`, `color`. 
                example: Location
                x-required:
                  - post
              value:
                maxLength: 65535
                minLength: 1
                type: string
                description: |
                  The value of the field.
                example: 4HG
                x-required:
                  - post
              description:
                maxLength: 255
                minLength: 0
                type: string
                description: |
                  Description for the metafields.
                example: Location in the warehouse
              resource_type:
                type: string
                description: |
                  The type of resource with which the metafield is associated.
                example: product
                enum:
                  - category
                  - brand
                  - product
                  - variant
                x-required:
                  - post
              resource_id:
                maximum: 10000000000
                minimum: 0
                type: integer
                description: |
                  The ID for the resource with which the metafield is associated.
                example: 111
                x-required:
                  - post
              date_created:
                type: string
                description: |
                  Date and time of the metafield's creation. Read-Only.
                format: date-time
                example: '2018-05-07T20:14:17.000Z'
              date_modified:
                type: string
                description: |
                  Date and time when the metafield was last updated. Read-Only.
                format: date-time
                example: '2018-05-07T20:14:17.000Z'
    metafields_200:
      description: Example response
      content:
        application/json:
          schema:
            x-examples:
              example-1:
                data:
                  - id: 19
                    key: Location
                    value: 4HG
                    namespace: Warehouse Locations
                    permission_set: app_only
                    resource_type: channel
                    resource_id: 1
                    description: Location in the warehouse
                    date_created: '2022-06-28T18:00:15+00:00'
                    date_modified: '2022-06-28T18:00:15+00:00'
                  - id: 21
                    key: sssPlease provide a key.
                    value: sssPlease provide a value.
                    namespace: ssssssPlease provide a namespace.
                    permission_set: app_only
                    resource_type: channel
                    resource_id: 1
                    description: thiss
                    date_created: '2022-06-28T18:15:04+00:00'
                    date_modified: '2022-06-28T18:16:02+00:00'
                meta:
                  pagination:
                    total: 2
                    count: 2
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
            allOf:
              - properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/metafield_Base'
              - properties:
                  meta:
                    $ref: '#/components/schemas/MetaWithFullPagination'
            type: object
          examples: {}
  examples:
    create_channel_req_example:
      value:
        name: eBay
        platform: ebay
        type: marketplace
        status: connected
        config_meta:
          app:
            id: 123
            sections:
              - title: Overview
                query_path: overview
              - title: Settings
                query_path: settings
    update_channel_req_example:
      value:
        name: Facebook by Meta
        status: connected
        is_listable_from_ui: false
        config_meta:
          app:
            id: 123
            sections:
              - title: Overview
                query_path: overview
              - title: Settings
                query_path: settings
    multiple_channels_currency_assignments_req_example:
      value:
        - channel_id: 1
          enabled_currencies:
            - USD
          default_currency: USD
        - channel_id: 664177
          enabled_currencies:
            - USD
            - GBP
          default_currency: USD
        - channel_id: 664179
          enabled_currencies:
            - USD
            - AUD
          default_currency: USD
        - channel_id: 667159
          enabled_currencies:
            - USD
          default_currency: USD
    single_channel_currency_assignments_req_example:
      value:
        enabled_currencies:
          - USD
          - GBP
          - AUD
        default_currency: USD
    create_single_listing_req_example:
      value:
        - product_id: 80
          state: active
          name: Orbit Terrarium - Large
          description: 'The same terrarium, but not a [Sample]'
          variants:
            - product_id: 80
              variant_id: 64
              state: active
              name: Terrarium with dinosaur
            - product_id: 80
              variant_id: 65
              state: active
              name: Terrarium with fish
    create_multiple_listings_req_example:
      value:
        - product_id: 80
          state: active
          name: Orbit Terrarium - Large
          description: 'The same terrarium, but not a [Sample]'
          variants:
            - product_id: 80
              variant_id: 64
              state: active
              name: Terrarium with dinosaur
            - product_id: 80
              variant_id: 65
              state: active
              name: Terrarium with fish
        - product_id: 100
          state: pending
          name: Women's Bold T-Shirt
          description: 'The same t-shirt, but not a [Sample]'
          variants:
            - product_id: 100
              variant_id: 91
              state: pending
              name: Small women's bold t-shirt
            - product_id: 100
              variant_id: 92
              state: pending
              name: Medium women's bold t-shirt
    update_single_listing_req_example:
      value:
        - listing_id: 882998595
          product_id: 80
          state: active
          name: Orbit Terrarium - Large
          variants:
            - product_id: 80
              variant_id: 64
              state: active
              name: Terrarium with dinosaur
    update_multiple_listings_req_example:
      value:
        - listing_id: 882789361
          product_id: 80
          state: active
          name: Orbit Terrarium - Large
          variants:
            - product_id: 80
              variant_id: 64
              state: active
              name: Terrarium with dinosaur
        - listing_id: 882789362
          product_id: 100
          state: pending
          name: Women's Bold T-Shirt
          variants:
            - product_id: 100
              variant_id: 91
              state: pending
              name: Small women's bold t-shirt
    multiple_channels_without_currencies_resp_example:
      value:
        data:
          - id: 1
            icon_url: 'https://storage.googleapis.com/bigcommerce-production-dev-center/images/bigcommerce_icon.svg'
            is_listable_from_ui: true
            is_visible: true
            date_created: '2021-05-07T14:54:51Z'
            external_id: ''
            type: storefront
            platform: bigcommerce
            date_modified: '2021-05-07T14:54:51Z'
            name: Test Store
            status: prelaunch
          - id: 664179
            icon_url: 'https://storage.googleapis.com/bigcommerce-production-dev-center/images/amazon_icon.svg'
            is_listable_from_ui: true
            is_visible: true
            date_created: '2021-05-10T20:32:40Z'
            external_id: ''
            type: marketplace
            platform: amazon
            date_modified: '2021-05-13T14:25:54Z'
            name: Amazon
            status: connected
          - id: 667159
            icon_url: 'https://storage.googleapis.com/bigcommerce-production-dev-center/images/facebook_icon.svg'
            is_listable_from_ui: false
            is_visible: true
            date_created: '2021-05-13T15:41:39Z'
            external_id: ''
            config_meta:
              app:
                id: 123
                sections:
                  - title: Overview
                    query_path: overview
                  - title: Settings
                    query_path: settings
            type: marketplace
            platform: facebook by meta
            date_modified: '2021-05-13T15:41:39Z'
            name: Facebook by Meta
            status: connected
        meta:
          pagination:
            per_page: 2
            total: 8
            count: 2
            links:
              previous: '?page=1&limit=2'
              current: '?page=2&limit=2'
              next: '?page=3&limit=2'
            total_pages: 4
            current_page: 2
    single_channel_without_currencies_resp_example:
      value:
        data:
          id: 667159
          icon_url: 'https://storage.googleapis.com/bigcommerce-production-dev-center/images/ebay_icon.png'
          is_listable_from_ui: false
          is_visible: true
          date_created: '2021-05-13T15:41:39Z'
          external_id: ''
          config_meta:
            app:
              id: 123
              sections:
                - title: Overview
                  query_path: overview
                - title: Settings
                  query_path: settings
          type: marketplace
          platform: ebay
          date_modified: '2021-05-13T15:41:39Z'
          name: ebay
          status: connected
        meta: {}
    single_channel_with_currencies_resp_example:
      value:
        data:
          id: 667159
          icon_url: 'https://storage.googleapis.com/bigcommerce-production-dev-center/images/facebook_icon.svg'
          is_listable_from_ui: false
          is_visible: true
          date_created: '2021-05-13T15:41:39Z'
          external_id: ''
          config_meta:
            app:
              id: 123
              sections:
                - title: Overview
                  query_path: overview
                - title: Settings
                  query_path: settings
          type: marketplace
          platform: facebook by meta
          date_modified: '2021-05-13T15:41:39Z'
          name: Facebook by Meta
          status: connected
          currencies:
            channel_id: 667159
            enabled_currencies:
              - USD
            default_currency: USD
        meta: {}
    single_active_theme_resp_example:
      value:
        data:
          active_theme_uuid: e3d82ce0-9bae-0133-0de7-525400970412
          active_theme_configuration_uuid: 1c0962a0-9172-0139-70bc-2a81c0049363
          active_theme_version_uuid: b9911770-8a43-0139-f84a-7e39a3a0bc55
          saved_theme_configuration_uuid: 1c0962a0-9172-0139-70bc-2a81c0049363
        meta: {}
    multiple_channels_currency_assignments_resp_example:
      value:
        data:
          - channel_id: 1
            enabled_currencies:
              - USD
            default_currency: USD
          - channel_id: 664177
            enabled_currencies:
              - USD
              - GBP
            default_currency: USD
          - channel_id: 664179
            enabled_currencies:
              - USD
              - AUD
            default_currency: USD
          - channel_id: 667159
            enabled_currencies:
              - USD
            default_currency: USD
        meta: {}
    single_channel_currency_assignments_resp_example:
      value:
        data:
          channel_id: 1
          enabled_currencies:
            - USD
            - GBP
            - AUD
          default_currency: USD
        meta: {}
    delete_currency_assignments_resp_example:
      value:
        data: 1
        meta: {}
    single_listing_resp_example:
      value:
        data:
          - channel_id: 667159
            listing_id: 882998595
            product_id: 80
            state: active
            name: Orbit Terrarium - Large
            description: 'The same terrarium, but not a [Sample]'
            date_created: '2021-05-24T17:46:33Z'
            date_modified: '2021-05-24T17:46:33Z'
            variants:
              - channel_id: 667159
                product_id: 80
                variant_id: 64
                state: active
                name: Terrarium with dinosaur
                date_created: '2021-05-24T17:46:33Z'
                date_modified: '2021-05-24T17:46:33Z'
              - channel_id: 667159
                product_id: 80
                variant_id: 65
                state: active
                name: Terrarium with fish
                date_created: '2021-05-24T17:46:33Z'
                date_modified: '2021-05-24T17:46:33Z'
        meta:
          pagination:
            count: 1
            total: 1
            links:
              current: '?limit=1000'
            total_pages: 1
    multiple_listings_resp_example:
      value:
        data:
          - channel_id: 664177
            listing_id: 882789361
            product_id: 80
            state: active
            name: Orbit Terrarium - Large
            description: 'The same terrarium, but not a [Sample]'
            date_created: '2021-05-24T17:46:33Z'
            date_modified: '2021-05-24T17:46:33Z'
            variants:
              - channel_id: 664177
                product_id: 80
                variant_id: 64
                state: active
                name: Terrarium with dinosaur
                date_created: '2021-05-24T17:46:33Z'
                date_modified: '2021-05-24T17:46:33Z'
              - channel_id: 664177
                product_id: 80
                variant_id: 65
                state: active
                name: Terrarium with fish
                date_created: '2021-05-24T17:46:33Z'
                date_modified: '2021-05-24T17:46:33Z'
          - channel_id: 664177
            listing_id: 882789362
            product_id: 100
            state: pending
            name: Women's Bold T-Shirt
            description: 'The same t-shirt, but not a [Sample]'
            date_created: '2021-05-24T17:46:33Z'
            date_modified: '2021-05-24T17:46:33Z'
            variants:
              - channel_id: 664177
                product_id: 100
                variant_id: 91
                state: pending
                name: Small women's bold t-shirt
                date_created: '2021-05-24T17:46:33Z'
                date_modified: '2021-05-24T17:46:33Z'
              - channel_id: 664177
                product_id: 100
                variant_id: 92
                state: pending
                name: Medium women's bold t-shirt
                date_created: '2021-05-24T17:46:33Z'
                date_modified: '2021-05-24T17:46:33Z'
        meta:
          pagination:
            count: 2
            total: 2
            links:
              current: '?limit=1000'
            total_pages: 1
    single_listing_with_empty_meta_resp_example:
      value:
        data:
          channel_id: 667159
          listing_id: 882998595
          product_id: 80
          state: active
          name: Orbit Terrarium - Large
          description: 'The same terrarium, but not a [Sample]'
          date_created: '2021-05-24T17:46:33Z'
          date_modified: '2021-05-24T17:46:33Z'
          variants:
            - channel_id: 667159
              product_id: 80
              variant_id: 64
              state: active
              name: Terrarium with dinosaur
              date_created: '2021-05-24T17:46:33Z'
              date_modified: '2021-05-24T17:46:33Z'
            - channel_id: 667159
              product_id: 80
              variant_id: 65
              state: active
              name: Terrarium with fish
              date_created: '2021-05-24T17:46:33Z'
              date_modified: '2021-05-24T17:46:33Z'
        meta: {}
    channel_menus_resp_example:
      value:
        data:
          bigcommerce_protected_app_sections:
            - social
            - carousel
            - domains
            - currencies
            - notifications
            - storefront_settings
          custom_app_sections:
            - title: Overview
              query_path: overview
            - title: Products
              query_path: products
            - title: Campaigns
              query_path: campaigns
            - title: Settings
              query_path: settings
        meta: {}
    error_400_resp_example:
      value:
        status: 400
        title: Input is invalid
        type: /api-docs/getting-started/api-status-codes
        errors: {}
    error_404_resp_example:
      value:
        status: 404
        title: Not found
        type: /api-docs/getting-started/api-status-codes
        errors: {}
    error_404_entity_not_found_resp_example:
      value:
        status: 404
        title: The requested entity was not found.
        type: /api-docs/getting-started/api-status-codes
        errors: {}
    error_404_active_theme_not_found_resp_example:
      value:
        status: 404
        title: 'No active theme found with channel_id: 123456789'
        type: /api-docs/getting-started/api-status-codes
        errors: {}
    error_404_listing_not_found_resp_example:
      value:
        status: 404
        title: 'Listing [123456789] not found'
        type: /api-docs/getting-started/api-status-codes
        errors: {}
    error_409_resp_example:
      value:
        status: 409
        title: 'Channel already exists with name: "Facebook by Meta", platform: "facebook by meta", and type: "marketplace"'
        type: /api-docs/getting-started/api-status-codes
        errors: {}
    error_422_invalid_filter_value_resp_example:
      value:
        status: 422
        title: 'Query parameter "limit" value must be integer. For input string: "a".'
        type: /api-docs/getting-started/api-status-codes
        errors: {}
    error_422_channel_resp_example:
      value:
        status: 422
        title: JSON data is missing or invalid
        type: /api-docs/getting-started/api-status-codes
        errors:
          platform: error.path.missing
          name: error.expected.jsstring
    error_422_invalid_type_platform_combination_resp_example:
      value:
        status: 422
        title: 'Input channel type [marketplace] with platform [bigcommerce] is not supported'
        type: /api-docs/getting-started/api-status-codes
        errors: {}
    error_422_prevent_update_type_and_platform_resp_example:
      value:
        status: 422
        title: 'The following fields are invalid: type, platform'
        type: /api-docs/getting-started/api-status-codes
        errors:
          type: The field 'type' can not be updated after channel is created.
          platform: The field 'platform' can not be updated after channel is created.
    error_422_prevent_update_deleted_channel_resp_example:
      value:
        status: 422
        title: A deleted channel cannot be updated. Channel can be restored within 90 days after deleting by contacting BigCommerce support team
        type: /api-docs/getting-started/api-status-codes
        errors: {}
    error_422_multiple_channels_currency_assignments_resp_example:
      value:
        status: 422
        title: JSON data is missing or invalid
        type: /api-docs/getting-started/api-status-codes
        errors:
          0.channel_id: error.expected.jsnumber
          0.enabled_currencies: error.path.missing
          0.default_currency: error.path.missing
    error_422_single_channel_currency_assignments_resp_example:
      value:
        status: 422
        title: JSON data is missing or invalid
        type: /api-docs/getting-started/api-status-codes
        errors:
          enabled_currencies: error.path.missing
          default_currency: error.path.missing
    error_422_invalid_enabled_currencies_resp_example:
      value:
        status: 422
        title: 'The following fields are invalid: `enabled_currencies`'
        type: /api-docs/getting-started/api-status-codes
        errors:
          enabled_currencies: 'The field `enabled_currencies` contains the following currencies that have not been enabled [AWG]'
    error_422_invalid_channel_id_resp_example:
      value:
        status: 422
        title: 'The following `channel_id`s [123456789] are not valid for store 1000000000.'
        type: /api-docs/getting-started/api-status-codes
        errors: {}
    error_422_invalid_filters_resp_example:
      value:
        status: 422
        title: 'The filter(s): a, b are not valid filter parameter(s).'
        type: /api-docs/getting-started/api-status-codes
        errors: {}
    error_422_product_id_mismatch_resp_example:
      value:
        status: 422
        title: '0/0 product listing group(s) and 0/0 product listing(s) upserted. Invalid fields: '
        type: /api-docs/getting-started/api-status-codes
        errors: {}
    error_422_missing_listing_required_fields_resp_example:
      value:
        status: 422
        title: JSON data is missing or invalid
        type: /api-docs/getting-started/api-status-codes
        errors:
          0.state: error.path.missing
          0.variants: error.path.missing
          0.product_id: error.path.missing
    error_422_missing_listing_variants_required_fields_resp_example:
      value:
        status: 422
        title: JSON data is missing or invalid
        type: /api-docs/getting-started/api-status-codes
        errors:
          0.variants.0.state: error.path.missing
          0.variants.0.product_id: error.path.missing
          0.variants.0.variant_id: error.path.missing
    error_422_invalid_channel_id_v2_resp_example:
      value:
        status: 422
        title: Channel id (1000000) is not valid for store (1001808665)!
        type: /api-docs/getting-started/api-status-codes
        errors: {}
    error_422_invalid_listing_id_resp_example:
      value:
        status: 422
        title: '0/0 product listing group(s) and 0/0 product listing(s) upserted. Invalid fields: group_id,'
        type: /api-docs/getting-started/api-status-codes
        errors:
          group_id: Group id (0) for store (1001808665) cannot be less than or equal to zero!
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Channel Listings | modify | `store_channel_listings` |
        |  Channel Listings | read-only | `store_channel_listings_read_only` |
        |  Channel Settings | modify | `store_channel_settings` |
        |  Channel Settings | read-only | `store_channel_settings_read_only` |
        |  Sites & Routes | modify | `store_sites` |
        |  Sites & Routes | read-only | `store_sites_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header
  schemas:
    ChannelId:
      type: integer
      format: int64
      description: The ID of the channel.
      x-internal: false
    metafield_Base:
      title: metafield_Base
      type: object
      properties:
        id:
          type: integer
          description: Unique ID of the *Metafield*.
          example: 6
        permission_set:
          type: string
          description: |-
            Determines the visibility and writeability of the field by other API consumers.

            |Value|Description
            |-|-|
            |`app_only`|Private to the app that owns the field|
            |`read`|Visible to other API consumers|
            |`write`|Open for reading and writing by other API consumers|
            |`read_and_sf_access`|Visible to other API consumers, including on storefront|
            |`write_and_sf_access`|Open for reading and writing by other API consumers, including on storefront|
          enum:
            - app_only
            - read
            - write
            - read_and_sf_access
            - write_and_sf_access
        namespace:
          maxLength: 64
          minLength: 1
          type: string
          description: 'Namespace for the metafield, for organizational purposes.'
          example: Warehouse Locations
          x-required:
            - post
        key:
          maxLength: 64
          minLength: 1
          type: string
          description: |
            The name of the field, for example: `location_id`, `color`. 
          example: Location
          x-required:
            - post
        value:
          maxLength: 65535
          minLength: 1
          type: string
          description: |
            The value of the field.
          example: 4HG
          x-required:
            - post
        description:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            Description for the metafields.
          example: Location in the warehouse
        resource_type:
          type: string
          description: |
            The type of resource with which the metafield is associated.
          example: product
          enum:
            - category
            - brand
            - product
            - variant
          x-required:
            - post
        resource_id:
          maximum: 10000000000
          minimum: 0
          type: integer
          description: |
            The ID for the resource with which the metafield is associated.
          example: 111
          x-required:
            - post
        date_created:
          type: string
          description: |
            Date and time of the metafield's creation. Read-Only.
          format: date-time
          example: '2018-05-07T20:14:17.000Z'
        date_modified:
          type: string
          description: |
            Date and time when the metafield was last updated. Read-Only.
          format: date-time
          example: '2018-05-07T20:14:17.000Z'
    PutCheckoutUrl:
      type: object
      properties:
        url:
          type: string
          description: Unique site checkout URL. Must be valid and a sub-domain of primary channel URL.
          format: uri
          example: 'https://checkout.kittens.mybigcommerce.com'
      title: ''
    ChannelIdForListing:
      type: integer
      format: int64
      description: The ID of the channel associated with this channel listing.
      x-internal: false
    ListingId:
      type: integer
      format: int64
      minimum: 1
      description: 'The ID of the channel listing that has been created, returned, or updated.'
      x-internal: false
    ProductId:
      type: integer
      format: int64
      description: The ID of the product associated with this channel listing.
      x-internal: false
    VariantId:
      type: integer
      format: int64
      description: The ID of the product variant associated with this channel listing.
      x-internal: false
    ExternalId:
      type: string
      description: Associated ID within a system / platform outside of BC.
      x-internal: false
    IsListableFromUI:
      type: boolean
      description: Indicates if a channel can create listings from the BigCommerce UI. Default value for this field is based on the channel type and platform combination if not specified on create.
      x-internal: false
      x-examples:
        example-1: true
    IsVisible:
      type: boolean
      description: 'Indicates if a channel is visible within the BigCommerce merchant admin UI (control panel). If `false`, the channel will not show in Channel Manager nor in any channels dropdown throughout the UI. Default value for this field is `true` if not specified on create.'
      x-internal: false
    ChannelStatus:
      type: string
      description: 'The status of the channel; channel `type`, `platform`, and `status` must be a [valid combination](/docs/rest-management/channels#status). `terminated` is not valid for `PUT` or `POST` requests. `deleted` is not valid for `POST` requests.'
      enum:
        - active
        - prelaunch
        - inactive
        - connected
        - disconnected
        - archived
        - deleted
        - terminated
      title: ''
      x-internal: false
      x-examples:
        example-1: active
    ChannelName:
      type: string
      description: Name of the channel as it will appear to merchants in the control panel.
      x-internal: false
      x-examples:
        example-1: string
    ChannelType:
      type: string
      description: 'The type of channel; channel `platform` and `type` must be a [valid combination](/docs/rest-management/channels#status).'
      enum:
        - pos
        - marketplace
        - storefront
        - marketing
      x-internal: false
    ChannelPlatform:
      type: string
      description: 'The name of the platform for the channel; channel `platform` and `type` must be a [valid combination](/docs/rest-management/channels#status).'
      x-internal: false
    ChannelDateCreated:
      type: string
      format: date-time
      description: Date on which the channel was first created.
      x-internal: false
    ChannelDateModified:
      type: string
      format: date-time
      description: Date on which the channel was most recently changed.
      x-internal: false
    IconUrl:
      type: string
      format: url
      description: Link to the platform icon.
      x-internal: false
    EnabledCurrencies:
      type: array
      description: 'Currencies that are enabled for the specified channel in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) three character alphabetic format.'
      items:
        type: string
      x-internal: false
    DefaultCurrency:
      type: string
      description: 'Default currency for the channel in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) three character alphabetic format. Will be used on storefront when other currencies cannot.'
      x-internal: false
    ChannelProductName:
      type: string
      description: Name of the product for this channel listing specifically. This is an optional field that can be used to override the product name in the catalog.
      x-internal: false
    ChannelProductVariantName:
      type: string
      description: Name of the product variant for this channel listing specifically. This is an optional field that can be used to override the name of the product variant in the catalog.
      x-internal: false
    ChannelProductDescription:
      type: string
      description: Description of the product for this channel listing specifically. This is an optional field that can be used to override the product description in the catalog.
      x-internal: false
    ChannelProductVariantDescription:
      type: string
      description: Description of the product variant for this channel listing specifically. This is an optional field that can be used to override the description of the product variant in the catalog.
      x-internal: false
    ChannelListingDateCreated:
      type: string
      format: date-time
      description: Date on which the channel listing was first created.
      x-internal: false
    ChannelListingVariantDateCreated:
      type: string
      format: date-time
      description: Date on which the channel listing variant was first created.
      x-internal: false
    ChannelListingDateModified:
      type: string
      format: date-time
      description: Date on which the channel listing was most recently changed.
      x-internal: false
    ChannelListingVariantDateModified:
      type: string
      format: date-time
      description: Date on which the channel listing variant was most recently changed.
      x-internal: false
    ListingState:
      type: string
      description: The state of the product assignment or channel listing.
      enum:
        - active
        - disabled
        - error
        - pending
        - pending_disable
        - pending_delete
        - partially_rejected
        - queued
        - rejected
        - submitted
        - deleted
      x-internal: false
    VariantState:
      type: string
      description: The state of the channel listing variant.
      enum:
        - active
        - disabled
        - error
        - pending
        - pending_disable
        - pending_delete
        - queued
        - rejected
        - submitted
        - deleted
      x-internal: false
    ChannelConfigMeta:
      type: object
      description: Optional channel configuration object.
      x-internal: false
      properties:
        app:
          type: object
          description: 'A [channel app](/api-docs/channels/overview#channel-apps) config object for optionally configuring the channelʼs user interface in the control panel.'
          properties:
            id:
              type: integer
              description: 'The unique `id` given to an app registered in [DevTools](https://devtools.bigcommerce.com/); used to create links to the app in channel manager. `app.id` is optional; however, if youʼre building an app that creates or manages a channel, we recommend including it to ensure the user interface in the control panel works properly. Select partners who are promoted in the Channel Manager must build an app, and include the app ID in the create channel request. [Learn how to find an Appʼs ID](/api-docs/apps/tutorials/id).'
            sections:
              type: array
              description: 'Sections are now deprecated under config_meta. The new /channel-menus endpoints should be used instead. If set, when the app is loaded within the control panel, the navigation `sections` will be directly embedded in the control panel navigation.'
              deprecated: true
              items:
                type: object
                deprecated: true
                properties:
                  title:
                    type: string
                    description: The title of the navigation section.
                    example: '"Settings"'
                    deprecated: true
                  query_path:
                    type: string
                    description: The value that will be passed to the app's iFrame in the URL and will allow the app to display the appropriate section within the app iFrame in the control panel.
                    deprecated: true
      x-examples:
        example-1:
          app:
            id: 0
            sections:
              - title: '"Settings"'
                query_path: string
    CurrencyNotRequiredWithChannelId:
      type: object
      description: Details about currency assignments for a specific channel.
      properties:
        channel_id:
          $ref: '#/components/schemas/ChannelId'
        enabled_currencies:
          $ref: '#/components/schemas/EnabledCurrencies'
        default_currency:
          $ref: '#/components/schemas/DefaultCurrency'
      x-internal: false
    CurrencyRequiredWithChannelId:
      type: object
      description: Details about currency assignments for a specific channel.
      properties:
        channel_id:
          $ref: '#/components/schemas/ChannelId'
        enabled_currencies:
          $ref: '#/components/schemas/EnabledCurrencies'
        default_currency:
          $ref: '#/components/schemas/DefaultCurrency'
      required:
        - channel_id
        - enabled_currencies
        - default_currency
      x-internal: false
    CurrencyRequiredWithoutChannelId:
      type: object
      description: Details about currency assignments for a specific channel.
      properties:
        enabled_currencies:
          $ref: '#/components/schemas/EnabledCurrencies'
        default_currency:
          $ref: '#/components/schemas/DefaultCurrency'
      required:
        - enabled_currencies
        - default_currency
      x-internal: false
    CreateChannelReq:
      type: object
      properties:
        config_meta:
          $ref: '#/components/schemas/ChannelConfigMeta'
        external_id:
          $ref: '#/components/schemas/ExternalId'
        is_listable_from_ui:
          $ref: '#/components/schemas/IsListableFromUI'
        is_visible:
          $ref: '#/components/schemas/IsVisible'
        status:
          $ref: '#/components/schemas/ChannelStatus'
        name:
          $ref: '#/components/schemas/ChannelName'
        type:
          $ref: '#/components/schemas/ChannelType'
        platform:
          $ref: '#/components/schemas/ChannelPlatform'
      required:
        - name
        - type
        - platform
      x-internal: false
      x-examples:
        example-1:
          config_meta:
            app:
              id: 0
              sections:
                - title: '"Settings"'
                  query_path: string
          external_id: string
          is_listable_from_ui: true
          is_visible: true
          status: active
          name: string
          type: pos
          platform: string
    UpdateChannelReq:
      type: object
      properties:
        config_meta:
          $ref: '#/components/schemas/ChannelConfigMeta'
        external_id:
          $ref: '#/components/schemas/ExternalId'
        is_listable_from_ui:
          $ref: '#/components/schemas/IsListableFromUI'
        is_visible:
          $ref: '#/components/schemas/IsVisible'
        name:
          $ref: '#/components/schemas/ChannelName'
        status:
          $ref: '#/components/schemas/ChannelStatus'
      x-internal: false
    UpsertMultipleChannelsCurrencyAssignmentsReq:
      type: array
      items:
        $ref: '#/components/schemas/CurrencyRequiredWithChannelId'
      x-internal: false
    CreateMultipleListingsReq:
      type: array
      items:
        $ref: '#/components/schemas/UpsertListingWithoutListingIdReq'
      x-internal: false
    UpdateMultipleListingsReq:
      type: array
      items:
        $ref: '#/components/schemas/UpsertListingWithListingIdReq'
      x-internal: false
    UpsertListingWithoutListingIdReq:
      type: object
      description: Details about assigning a product to a specific channel.
      properties:
        product_id:
          $ref: '#/components/schemas/ProductId'
        external_id:
          $ref: '#/components/schemas/ExternalId'
        state:
          $ref: '#/components/schemas/ListingState'
        name:
          $ref: '#/components/schemas/ChannelProductName'
        description:
          $ref: '#/components/schemas/ChannelProductDescription'
        variants:
          $ref: '#/components/schemas/ChannelProductMultipleVariants'
      required:
        - product_id
        - state
        - variants
      x-internal: false
    UpsertListingWithListingIdReq:
      type: object
      description: Details about assigning a product to a specific channel.
      properties:
        listing_id:
          $ref: '#/components/schemas/ListingId'
        product_id:
          $ref: '#/components/schemas/ProductId'
        external_id:
          $ref: '#/components/schemas/ExternalId'
        state:
          $ref: '#/components/schemas/ListingState'
        name:
          $ref: '#/components/schemas/ChannelProductName'
        description:
          $ref: '#/components/schemas/ChannelProductDescription'
        variants:
          $ref: '#/components/schemas/ChannelProductMultipleVariants'
      required:
        - listing_id
        - product_id
        - state
        - variants
      x-internal: false
    ChannelProductMultipleVariants:
      type: array
      items:
        $ref: '#/components/schemas/ChannelProductVariantPartial'
      x-internal: false
    ChannelProductVariantPartial:
      type: object
      description: Details about a variant of the product for this channel listing.
      properties:
        product_id:
          $ref: '#/components/schemas/ProductId'
        variant_id:
          $ref: '#/components/schemas/VariantId'
        external_id:
          $ref: '#/components/schemas/ExternalId'
        state:
          $ref: '#/components/schemas/VariantState'
        name:
          $ref: '#/components/schemas/ChannelProductVariantName'
        description:
          $ref: '#/components/schemas/ChannelProductVariantDescription'
      required:
        - product_id
        - variant_id
        - state
      x-internal: false
    ChannelProductVariantFull:
      type: object
      description: Details about a variant of the product for this channel listing.
      properties:
        channel_id:
          $ref: '#/components/schemas/ChannelIdForListing'
        product_id:
          $ref: '#/components/schemas/ProductId'
        variant_id:
          $ref: '#/components/schemas/VariantId'
        external_id:
          $ref: '#/components/schemas/ExternalId'
        state:
          $ref: '#/components/schemas/VariantState'
        name:
          $ref: '#/components/schemas/ChannelProductVariantName'
        description:
          $ref: '#/components/schemas/ChannelProductVariantDescription'
        date_created:
          $ref: '#/components/schemas/ChannelListingVariantDateCreated'
        date_modified:
          $ref: '#/components/schemas/ChannelListingVariantDateModified'
      x-internal: false
    ChannelWithoutCurrencies:
      type: object
      properties:
        config_meta:
          $ref: '#/components/schemas/ChannelConfigMeta'
        id:
          $ref: '#/components/schemas/ChannelId'
        external_id:
          $ref: '#/components/schemas/ExternalId'
        is_listable_from_ui:
          $ref: '#/components/schemas/IsListableFromUI'
        is_visible:
          $ref: '#/components/schemas/IsVisible'
        status:
          $ref: '#/components/schemas/ChannelStatus'
        name:
          $ref: '#/components/schemas/ChannelName'
        type:
          $ref: '#/components/schemas/ChannelType'
        platform:
          $ref: '#/components/schemas/ChannelPlatform'
        date_created:
          $ref: '#/components/schemas/ChannelDateCreated'
        date_modified:
          $ref: '#/components/schemas/ChannelDateModified'
        icon_url:
          $ref: '#/components/schemas/IconUrl'
      x-internal: false
    ChannelWithCurrencies:
      type: object
      properties:
        config_meta:
          $ref: '#/components/schemas/ChannelConfigMeta'
        id:
          $ref: '#/components/schemas/ChannelId'
        external_id:
          $ref: '#/components/schemas/ExternalId'
        is_listable_from_ui:
          $ref: '#/components/schemas/IsListableFromUI'
        is_visible:
          $ref: '#/components/schemas/IsVisible'
        status:
          $ref: '#/components/schemas/ChannelStatus'
        name:
          $ref: '#/components/schemas/ChannelName'
        type:
          $ref: '#/components/schemas/ChannelType'
        platform:
          $ref: '#/components/schemas/ChannelPlatform'
        date_created:
          $ref: '#/components/schemas/ChannelDateCreated'
        date_modified:
          $ref: '#/components/schemas/ChannelDateModified'
        icon_url:
          $ref: '#/components/schemas/IconUrl'
        currencies:
          $ref: '#/components/schemas/CurrencyNotRequiredWithChannelId'
      x-internal: false
    ActiveTheme:
      type: object
      description: Details about the Channel's relationship to Themes.
      properties:
        active_theme_uuid:
          type: string
          description: The UUID of the currently active Theme on the Channel.
        active_theme_configuration_uuid:
          type: string
          description: The UUID of the currently active Theme Configuration on the Channel.
        active_theme_version_uuid:
          type: string
          description: The UUID of the currently active Theme Version on the Channel. Needed to look up the available Custom Templates for the Theme.
        saved_theme_configuration_uuid:
          type: string
          description: 'The UUID of the most recently saved Theme Configuration. If this is different from the active Theme Configuration UUID, this indicates that some changes have been saved in the control panel Theme Editor that have not yet been published.'
      x-internal: false
    Listing:
      type: object
      properties:
        channel_id:
          $ref: '#/components/schemas/ChannelIdForListing'
        listing_id:
          $ref: '#/components/schemas/ListingId'
        external_id:
          $ref: '#/components/schemas/ExternalId'
        product_id:
          $ref: '#/components/schemas/ProductId'
        state:
          $ref: '#/components/schemas/ListingState'
        name:
          $ref: '#/components/schemas/ChannelProductName'
        description:
          $ref: '#/components/schemas/ChannelProductDescription'
        date_created:
          $ref: '#/components/schemas/ChannelListingDateCreated'
        date_modified:
          $ref: '#/components/schemas/ChannelListingDateModified'
        variants:
          type: array
          items:
            $ref: '#/components/schemas/ChannelProductVariantFull'
      x-internal: false
    BigCommerceProtectedAppSections:
      type: array
      description: 'List of channel-specific control panel menu navigation items and corresponding settings pages an app developer can choose to enable for the subject channel. Protected settings override any settings set in those UI sections at the storewide level. Learn more in the [Building Storefront Channels](/api-docs/channels/tutorials/storefront#protected-ui-sections) tutorial.'
      items:
        type: string
        enum:
          - storefront_settings
          - social
          - carousel
          - domains
          - currencies
          - notifications
    channel_menus_Post:
      type: object
      properties:
        bigcommerce_protected_app_sections:
          $ref: '#/components/schemas/BigCommerceProtectedAppSections'
        custom_app_sections:
          $ref: '#/components/schemas/CustomAppSections'
    CustomAppSections:
      type: array
      items:
        type: object
        properties:
          title:
            type: string
            description: Text displayed to the merchant.
          query_path:
            type: string
            description: Value used in the `section` query param.
        x-internal: false
    Error:
      type: object
      properties:
        status:
          type: integer
          format: int32
          description: The HTTP status code.
        title:
          type: string
          description: The error title describing the particular error.
        type:
          type: string
          description: Link to a list of BigCommerce API status codes.
        errors:
          type: object
          description: Provides more details to errors.
      x-internal: false
    MetaWithFullPagination:
      type: object
      description: 'Data about the response, including pagination.'
      properties:
        pagination:
          $ref: '#/components/schemas/pagination_Full'
      x-internal: false
    MetaWithPartialPagination:
      type: object
      description: 'Data about the response, including pagination.'
      properties:
        pagination:
          $ref: '#/components/schemas/pagination_Partial'
      x-internal: false
    EmptyMeta:
      type: object
      title: Empty meta response.
      properties: {}
      additionalProperties: true
      description: Response metadata.
    pagination_Full:
      type: object
      description: |
        Data about the pagination.
      properties:
        per_page:
          type: integer
          description: |
            The maximum number of items per page.
        total:
          type: integer
          description: |
            Total number of items in the result set.
        count:
          type: integer
          description: |
            Total number of items in the collection response.
        total_pages:
          type: integer
          description: |
            The total number of pages in the collection.
        current_page:
          type: integer
          description: The current page number.
        links:
          type: object
          description: |
            Pagination links for the previous, current, or next parts of the whole collection.
          properties:
            previous:
              type: string
              description: |
                Link to the previous page returned in the response.
            current:
              type: string
              description: |
                Link to the current page returned in the response.
            next:
              type: string
              description: |
                Link to the next page returned in the response.
      x-internal: false
    pagination_Partial:
      type: object
      description: |
        Data about the pagination.
      properties:
        count:
          type: integer
          description: |
            Total number of items in the collection response.
        total:
          type: integer
          description: |
            Total number of items in the result set.
        links:
          type: object
          description: |
            Pagination links for the previous, current, or next parts of the whole collection.
          properties:
            previous:
              type: string
              description: |
                Link to the previous page returned in the response.
            current:
              type: string
              description: |
                Link to the current page returned in the response.
            next:
              type: string
              description: |
                Link to the next page returned in the response.
        total_pages:
          type: integer
          description: |
            The total number of pages in the collection.
      x-internal: false
    Site:
      type: object
      properties:
        id:
          type: integer
        url:
          type: string
          description: The fully qualified URL (including host and scheme) where this site is hosted. All URLs generated for this site will be appended to this.
          example: 'http://kittens.mybigcommerce.com/'
        channel_id:
          type: integer
          description: 'The channel to which this site is attached. Each site belongs to a single channel, and each channel can have either zero or more sites.'
        created_at:
          type: string
          description: 'The date-time that this site was created, formatted as an [RFC-3339](https://www.ietf.org/rfc/rfc3339.txt) string.'
          example: '2018-01-04T04:15:50.000Z'
          format: date-time
        updated_at:
          type: string
          description: 'The date-time that this site was last updated, formatted as an [RFC-3339](https://www.ietf.org/rfc/rfc3339.txt) string.'
          example: '2018-01-04T04:15:50.000Z'
          format: date-time
        ssl_status:
          type: string
          enum:
            - dedicated
            - shared
          description: 'Indicates if a private/dedicated SSL is installed on this site, or if itʼs using shared SSL.'
        urls:
          type: array
          description: 'All URLs that belong to the site, including `primary`, `canonical`, and `checkout` URLs.'
          items:
            $ref: '#/components/schemas/Url'
        is_checkout_url_customized:
          type: boolean
          description: 'Indicates whether the channel uses a custom checkout domain. When `false`, the checkout domain falls back to the default channel’s primary URL.'
    Url:
      type: object
      properties:
        url:
          type: string
          description: URL of site
        type:
          type: string
          description: URL type
          enum:
            - primary
            - canonical
            - checkout
        created_at:
          type: string
          example: '2018-01-04T04:15:50.000Z'
          format: date-time
          description: 'The date-time that this URL was created, formatted as an [RFC-3339](https://www.ietf.org/rfc/rfc3339.txt) string.'
        updated_at:
          type: string
          description: 'The date-time that this URL was last updated, formatted as an [RFC-3339](https://www.ietf.org/rfc/rfc3339.txt) string.'
          example: '2018-01-04T04:15:50.000Z'
          format: date-time
    site_Put:
      type: object
      properties:
        url:
          type: string
          description: The Fully Qualified URL (including host and scheme) where this site is hosted. All URLs generated for this site will be appended to this.
      title: site_Put
      x-internal: false
    site_Post:
      type: object
      properties:
        url:
          type: string
          description: The Fully Qualified URL (including host and scheme) where this site is hosted. All URLs generated for this site will be appended to this.
          example: 'http://kittens.mybigcommerce.com/'
        channel_id:
          type: integer
          description: 'The channel this site is attached to. Each site belongs to a single channel, and each channel can have either zero or one sites.'
      title: site_Post
      x-internal: false
    site_Full:
      type: object
      properties:
        id:
          type: integer
        url:
          type: string
          description: The Fully Qualified URL (including host and scheme) where this site is hosted. All URLs generated for this site will be appended to this.
          example: 'http://kittens.mybigcommerce.com/'
        channel_id:
          type: integer
          description: 'The channel this site is attached to. Each site belongs to a single channel, and each channel can have either zero or one sites.'
        created_at:
          type: string
          description: When was this site created? RFC 3339
          example: '2018-01-04T04:15:50.000Z'
        updated_at:
          type: string
          description: When was this site defintion last updated? RFC 3339
          example: '2018-01-04T04:15:50.000Z'
        routes:
          type: array
          description: (optional - if included) collection of routes defined for this site. Limited to 200 routes side loaded (query routes direction via `/routes` for bulk)
          items:
            type: object
            properties:
              id:
                type: integer
                description: Unique ID for this route. Required when updating an existing route
              type:
                type: string
                description: What type of resource are we routing to?
                enum:
                  - product
                  - brand
                  - category
                  - page
                  - blog
                  - home
                  - cart
                  - checkout
                  - search
                  - account
                  - login
                  - returns
                  - static
              matching:
                type: string
                description: |-
                  (entity_id?) For the specified type, which resources should match this route? e.g For a route with the type: "product" and matching: "5" this route would be used for the product with the ID of 5.

                  Depending on the type of resource, this may be an ID (matching a specific item), or a "*" wildcard matching all items of that type.
                example: '5'
              route:
                type: string
                description: |-
                  The route template that will be used to generate the URL for the requested resource.

                  Supports several tokens:

                  - {id} The ID of the requested item
                  - {slug} The slug for the requested item (if available). Note: the `slug` value may contain `/` slash
                  - {language} The language string that the client is using
                example: /my-amazing-product
      title: site_Full
      x-internal: false
    metafield_Post:
      title: metafield_Post
      type: object
      description: 'Metafield for products, categories, variants, and brands. The max number of metafields allowed on each product, category, variant, or brand is 250. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in the Help Center.'
      x-internal: false
      properties:
        namespace:
          maxLength: 64
          minLength: 1
          type: string
          description: 'Namespace for the metafield, for organizational purposes. This is set by the developer.'
          example: Warehouse Locations
          x-required:
            - post
        key:
          maxLength: 64
          minLength: 1
          type: string
          description: |
            The name of the field.
          example: Location
          x-required:
            - post
        value:
          maxLength: 65535
          minLength: 1
          type: string
          description: |
            The value of the field.
          example: 4HG
          x-required:
            - post
        permission_set:
          type: string
          description: |-
            Determines the visibility and writeability of the field by other API consumers.

            |Value|Description
            |-|-|
            |`app_only`|Private to the app that owns the field|
            |`read`|Visible to other API consumers|
            |`write`|Open for reading and writing by other API consumers|
            |`read_and_sf_access`|Visible to other API consumers, including on storefront|
            |`write_and_sf_access`|Open for reading and writing by other API consumers, including on storefront|
          enum:
            - app_only
            - read
            - write
            - read_and_sf_access
            - write_and_sf_access
        description:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            Description for the metafield.
          example: Location in the warehouse
      required:
        - namespace
        - key
        - value
        - permission_set
    metafield_Put:
      title: metafield_Put
      type: object
      description: 'Metafield for products, categories, variants, and brands. The max number of metafields allowed on each product, category, variant, or brand 250. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in the Help Center.'
      x-internal: false
      properties:
        namespace:
          maxLength: 64
          minLength: 1
          type: string
          description: 'Namespace for the metafield, for organizational purposes.'
          example: Warehouse Locations
          x-required:
            - post
        key:
          maxLength: 64
          minLength: 1
          type: string
          description: |
            The name of the field.
          example: Location
          x-required:
            - post
        value:
          maxLength: 65535
          minLength: 1
          type: string
          description: |
            The value of the field.
          example: 4HG
          x-required:
            - post
        permission_set:
          type: string
          description: |-
            Determines the visibility and writeability of the field by other API consumers.

            |Value|Description
            |-|-|
            |`app_only`|Private to the app that owns the field|
            |`read`|Visible to other API consumers|
            |`write`|Open for reading and writing by other API consumers|
            |`read_and_sf_access`|Visible to other API consumers, including on storefront|
            |`write_and_sf_access`|Open for reading and writing by other API consumers, including on storefront|
          enum:
            - app_only
            - read
            - write
            - read_and_sf_access
            - write_and_sf_access
        description:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            Description for the metafield.
          example: Location in the warehouse


openapi: '3.0.1'
info:
  title: Storefront Checkouts
  description: |-
    Manage checkout operations and data using front-end JavaScript on BigCommerce
    Stencil-powered storefronts.

    For info about API accounts, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts).
        
    For info about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#same-origin-cors-authentication).
  version: ''
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
servers:
  - url: 'https://{store_domain}/api/storefront'
    variables:
      store_domain:
        default: your_store.example.com
        description: 'The [URL authority](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_URL#authority) of the storefront.'
tags:
  - name: Checkout
  - name: Checkout Billing Address
  - name: Checkout Cart Items
  - name: Checkout Consignments
  - name: Checkout Coupons
  - name: Checkout Gift Certificates
  - name: Checkout Spam Protection
  - name: Checkout Store Credit
paths:
  '/checkouts/{checkoutId}':
    get:
      tags:
        - Checkout
      summary: Get a Checkout
      description: |-
        Returns a *Checkout*.

        The cart ID and checkout ID are the same.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
      operationId: CheckoutsByCheckoutIdGet
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
        - name: include
          in: query
          description: |-
            * `cart.lineItems.physicalItems.options` - physical options
            * `cart.lineItems.digitalItems.options` - digital options
            * `cart.lineItems.physicalItems.categoryNames` - physical categories
            * `cart.lineItems.digitalItems.categoryNames` - digital categories
            * `cart.lineItems.customItems.categoryNames` - custom categories
            * `customer` - customer
            * `customer.customerGroup` - customer group
            * `payments` - payments
            * `promotions` - promotions
            * `consignments.availableShippingOptions` - shipping options
          schema:
            type: string
            default: consignments.availableShippingOptions
            enum:
              - cart.lineItems.physicalItems.options
              - cart.lineItems.digitalItems.options
              - cart.lineItems.physicalItems.categoryNames
              - cart.lineItems.digitalItems.categoryNames
              - cart.lineItems.customItems.categoryNames
              - customer
              - customer.customerGroup
              - payments
              - promotions
              - consignments.availableShippingOptions
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkouts_Resp'
              example:
                id: 29eb9b44-8f33-4e4a-9429-d0e8e24641ed
                cart:
                  id: 29eb9b44-8f33-4e4a-9429-d0e8e24641ed
                  customerId: 18
                  email: dwaynecole@testing.com
                  currency:
                    name: US Dollars
                    code: USD
                    symbol: $
                    decimalPlaces: 2
                  isTaxIncluded: true
                  baseAmount: 7.95
                  discountAmount: 0
                  cartAmount: 7.95
                  coupons: []
                  discounts:
                    - id: 243c9ca2-22b4-417a-8b09-b3fc05778b52
                      discountedAmount: 0
                  lineItems:
                    physicalItems:
                      - id: 243c9ca2-22b4-417a-8b09-b3fc05778b52
                        parentId: {}
                        variantId: 345
                        productId: 174
                        sku: ''
                        name: 1L Le Parfait Jar
                        url: 'https://{store_domain}/all/1l-le-parfait-jar/'
                        quantity: 1
                        brand: OFS
                        isTaxable: true
                        imageUrl: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/174/images/425/leparfaitmedium3_1024x1024_1024x1024__37756__81924.1534344526.330.500.jpg?c=2'
                        discounts: []
                        discountAmount: 0
                        couponAmount: 0
                        originalPrice: 7.95
                        listPrice: 7.95
                        salePrice: 7.95
                        extendedListPrice: 7.95
                        extendedSalePrice: 7.95
                        isShippingRequired: true
                        giftWrapping: {}
                        addedByPromotion: false
                    digitalItems: []
                    giftCertificates: []
                    customItems: []
                  createdTime: '2019-01-10T17:18:00+00:00'
                  updatedTime: '2019-01-10T17:19:47+00:00'
                billingAddress:
                  id: 5c377ead301c2
                  firstName: Dwayne
                  lastName: Cole
                  email: dwaynecole@testing.com
                  company: ''
                  address1: Mauna Kea Access Rd
                  address2: ''
                  city: Hilo
                  stateOrProvince: Hawaii
                  stateOrProvinceCode: HI
                  country: United States
                  countryCode: US
                  postalCode: '96720'
                  phone: '8081234567'
                  customFields: []
                consignments:
                  - id: 5c377ead30ac1
                    shippingCost: 8
                    handlingCost: 0
                    couponDiscounts: []
                    discounts: []
                    lineItemIds:
                      - 243c9ca2-22b4-417a-8b09-b3fc05778b52
                    selectedShippingOption:
                      id: d09e05c0-3788-44df-a1bb-b6d3afdf6841
                      type: shipping_byweight
                      description: Ship by Weight
                      imageUrl: ''
                      cost: 8
                      transitTime: ''
                    address:
                      firstName: Dwayne
                      lastName: Cole
                      email: dwaynecole@testing.com
                      company: ''
                      address1: Mauna Kea Access Rd
                      address2: ''
                      city: Hilo
                      stateOrProvince: Hawaii
                      stateOrProvinceCode: HI
                      country: United States
                      countryCode: US
                      postalCode: '96720'
                      phone: '8081234567'
                      customFields: []
                orderId: null
                shippingCostTotal: 8
                shippingCostBeforeDiscount: 8
                handlingCostTotal: 0
                taxTotal: 1.22
                coupons: []
                taxes:
                  - name: Tax
                    amount: 1.22
                subtotal: 7.95
                grandTotal: 15.95
                giftCertificates: []
                createdTime: '2019-01-10T17:18:00+00:00'
                updatedTime: '2019-01-10T17:19:47+00:00'
                customerMessage: ''
        '400':
          description: When a problem arises, returns a generic response.
          content:
            application/json:
              schema:
                title: Checkout Error
                type: object
                properties:
                  errors:
                    type: array
                    description: ''
                    items:
                      title: Error Inner
                      type: object
                      properties:
                        status:
                          type: integer
                          description: ''
                          format: int32
                        title:
                          type: string
                          description: ''
                        type:
                          type: string
                          description: ''
                        detail:
                          type: string
                          description: ''
    put:
      tags:
        - Checkout
      summary: Update Customer Messages
      description: |-
        Updates *Checkout* customer messages.

        **Limits**

        * 2000 character limit

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
      operationId: CheckoutsByCheckoutIdPut
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/checkout_Put'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkouts_Resp'
              example:
                id: 29eb9b44-8f33-4e4a-9429-d0e8e24641ed
                cart:
                  id: 29eb9b44-8f33-4e4a-9429-d0e8e24641ed
                  customerId: 18
                  email: dwaynecole@testing.com
                  currency:
                    name: US Dollars
                    code: USD
                    symbol: $
                    decimalPlaces: 2
                  isTaxIncluded: true
                  baseAmount: 7.95
                  discountAmount: 0
                  cartAmount: 7.95
                  coupons: []
                  discounts:
                    - id: 243c9ca2-22b4-417a-8b09-b3fc05778b52
                      discountedAmount: 0
                  lineItems:
                    physicalItems:
                      - id: 243c9ca2-22b4-417a-8b09-b3fc05778b52
                        parentId: {}
                        variantId: 345
                        productId: 174
                        sku: ''
                        name: 1L Le Parfait Jar
                        url: 'https://{store_domain}/all/1l-le-parfait-jar/'
                        quantity: 1
                        brand: OFS
                        isTaxable: true
                        imageUrl: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/174/images/425/leparfaitmedium3_1024x1024_1024x1024__37756__81924.1534344526.330.500.jpg?c=2'
                        discounts: []
                        discountAmount: 0
                        couponAmount: 0
                        originalPrice: 7.95
                        listPrice: 7.95
                        salePrice: 7.95
                        extendedListPrice: 7.95
                        extendedSalePrice: 7.95
                        isShippingRequired: true
                        giftWrapping: {}
                        addedByPromotion: false
                    digitalItems: []
                    giftCertificates: []
                    customItems: []
                  createdTime: '2019-01-10T17:18:00+00:00'
                  updatedTime: '2019-01-10T17:19:47+00:00'
                billingAddress:
                  id: 5c377ead301c2
                  firstName: Dwayne
                  lastName: Cole
                  email: dwaynecole@testing.com
                  company: ''
                  address1: Mauna Kea Access Rd
                  address2: ''
                  city: Hilo
                  stateOrProvince: Hawaii
                  stateOrProvinceCode: HI
                  country: United States
                  countryCode: US
                  postalCode: '96720'
                  phone: '8081234567'
                  customFields: []
                consignments:
                  - id: 5c377ead30ac1
                    shippingCost: 8
                    handlingCost: 0
                    couponDiscounts: []
                    discounts: []
                    lineItemIds:
                      - 243c9ca2-22b4-417a-8b09-b3fc05778b52
                    selectedShippingOption:
                      id: d09e05c0-3788-44df-a1bb-b6d3afdf6841
                      type: shipping_byweight
                      description: Ship by Weight
                      imageUrl: ''
                      cost: 8
                      transitTime: ''
                    address:
                      firstName: Dwayne
                      lastName: Cole
                      email: dwaynecole@testing.com
                      company: ''
                      address1: Mauna Kea Access Rd
                      address2: ''
                      city: Hilo
                      stateOrProvince: Hawaii
                      stateOrProvinceCode: HI
                      country: United States
                      countryCode: US
                      postalCode: '96720'
                      phone: '8081234567'
                      customFields: []
                orderId: null
                shippingCostTotal: 8
                shippingCostBeforeDiscount: 8
                handlingCostTotal: 0
                taxTotal: 1.22
                coupons: []
                taxes:
                  - name: Tax
                    amount: 1.22
                subtotal: 7.95
                grandTotal: 15.95
                giftCertificates: []
                createdTime: '2019-01-10T17:18:00+00:00'
                updatedTime: '2019-01-10T17:19:47+00:00'
                customerMessage: ''
      x-codegen-request-body-name: body
  '/checkouts/{checkoutId}/carts/{cartId}/items/{itemId}':
    put:
      tags:
        - Checkout Cart Items
      summary: Update a Line Item
      description: |-
        Updates a *Checkout Line Item*. Updates an existing, single line item in the cart.

        If a variant needs to be changed or updated, the product will need to be removed and re-added to the cart with the correct variants using the [Add Cart Line Items](/docs/rest-storefront/carts/cart-items#add-cart-line-items) endpoint or the [GraphQL Storefront API](/api-docs/storefront/graphql/carts-and-checkout).

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
      operationId: CheckoutsCartsItemsItemIdByCheckoutIdAndCartIdPut
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
        - name: cartId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cart_Put'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
              example:
                id: 29eb9b44-8f33-4e4a-9429-d0e8e24641ed
                cart:
                  id: 29eb9b44-8f33-4e4a-9429-d0e8e24641ed
                  customerId: 18
                  email: dwaynecole@testing.com
                  currency:
                    name: US Dollars
                    code: USD
                    symbol: $
                    decimalPlaces: 2
                  isTaxIncluded: true
                  baseAmount: 7.95
                  discountAmount: 0
                  cartAmount: 7.95
                  coupons: []
                  discounts:
                    - id: 243c9ca2-22b4-417a-8b09-b3fc05778b52
                      discountedAmount: 0
                  lineItems:
                    physicalItems:
                      - id: 243c9ca2-22b4-417a-8b09-b3fc05778b52
                        parentId: {}
                        variantId: 345
                        productId: 174
                        sku: ''
                        name: 1L Le Parfait Jar
                        url: 'https://{store_domain}/all/1l-le-parfait-jar/'
                        quantity: 1
                        brand: OFS
                        isTaxable: true
                        imageUrl: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/174/images/425/leparfaitmedium3_1024x1024_1024x1024__37756__81924.1534344526.330.500.jpg?c=2'
                        discounts: []
                        discountAmount: 0
                        couponAmount: 0
                        originalPrice: 7.95
                        listPrice: 7.95
                        salePrice: 7.95
                        extendedListPrice: 7.95
                        extendedSalePrice: 7.95
                        isShippingRequired: true
                        giftWrapping: {}
                        addedByPromotion: false
                    digitalItems: []
                    giftCertificates: []
                    customItems: []
                  createdTime: '2019-01-10T17:18:00+00:00'
                  updatedTime: '2019-01-10T17:19:47+00:00'
                billingAddress:
                  id: 5c377ead301c2
                  firstName: Dwayne
                  lastName: Cole
                  email: dwaynecole@testing.com
                  company: ''
                  address1: Mauna Kea Access Rd
                  address2: ''
                  city: Hilo
                  stateOrProvince: Hawaii
                  stateOrProvinceCode: HI
                  country: United States
                  countryCode: US
                  postalCode: '96720'
                  phone: '8081234567'
                  customFields: []
                consignments:
                  - id: 5c377ead30ac1
                    shippingCost: 8
                    handlingCost: 0
                    couponDiscounts: []
                    discounts: []
                    lineItemIds:
                      - 243c9ca2-22b4-417a-8b09-b3fc05778b52
                    selectedShippingOption:
                      id: d09e05c0-3788-44df-a1bb-b6d3afdf6841
                      type: shipping_byweight
                      description: Ship by Weight
                      imageUrl: ''
                      cost: 8
                      transitTime: ''
                    address:
                      firstName: Dwayne
                      lastName: Cole
                      email: dwaynecole@testing.com
                      company: ''
                      address1: Mauna Kea Access Rd
                      address2: ''
                      city: Hilo
                      stateOrProvince: Hawaii
                      stateOrProvinceCode: HI
                      country: United States
                      countryCode: US
                      postalCode: '96720'
                      phone: '8081234567'
                      customFields: []
                orderId: null
                shippingCostTotal: 8
                shippingCostBeforeDiscount: 8
                handlingCostTotal: 0
                taxTotal: 1.22
                coupons: []
                taxes:
                  - name: Tax
                    amount: 1.22
                subtotal: 7.95
                grandTotal: 15.95
                giftCertificates: []
                createdTime: '2019-01-10T17:18:00+00:00'
                updatedTime: '2019-01-10T17:19:47+00:00'
                customerMessage: ''
      x-codegen-request-body-name: body
    delete:
      tags:
        - Checkout Cart Items
      summary: Delete a Line Item
      description: |-
        Deletes a *Line Item* from the *Cart*.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
      operationId: CheckoutsCartsItemsItemIdByCheckoutIdAndCartIdDelete
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
        - name: cartId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'NOTE: Discounted line items are re-evaluated on cart actions and may be automatically added back to your cart with a new line item ID to satisfy promotional requirements.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
              example:
                id: b6fbd994-61a8-4f25-9167-6ec10489c448
                cart:
                  id: b6fbd994-61a8-4f25-9167-6ec10489c448
                  customerId: 11
                  email: janedoe@example.com
                  currency:
                    name: US Dollars
                    code: USD
                    symbol: $
                    decimalPlaces: 2
                  isTaxIncluded: false
                  baseAmount: 119.93
                  discountAmount: 0
                  cartAmount: 112.93
                  coupons:
                    - id: 1
                      code: S2549JM0Y
                      displayName: $5.00 off the order total
                      couponType: per_total_discount
                      discountedAmount: 5
                  discounts:
                    - id: 69791a88-85c9-4c19-8042-e537621e8a55
                      discountedAmount: 2.59
                    - id: ba2c619d-e6b4-48c2-8809-d88e424ed450
                      discountedAmount: 1.06
                    - id: c72d6651-978d-45e5-881b-c2bb5f7ff1d5
                      discountedAmount: 2.12
                    - id: 6477a4a1-02cf-4287-8bf2-fd043bdd5234
                      discountedAmount: 0.8
                    - id: 871f1f56-4c88-43c3-a6e5-0a647d83d6ac
                      discountedAmount: 0.43
                  lineItems:
                    physicalItems:
                      - id: 69791a88-85c9-4c19-8042-e537621e8a55
                        parentId: {}
                        variantId: 364
                        productId: 184
                        sku: SMA-RED
                        name: Canvas Laundry Cart
                        url: 'https://{store_domain}/all/canvas-laundry-cart/'
                        quantity: 1
                        isTaxable: true
                        imageUrl: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.330.500.jpg?c=2'
                        discounts:
                          - id: total-coupon
                            discountedAmount: 0.59
                          - id: 2
                            discountedAmount: 2
                        discountAmount: 2
                        couponAmount: 0
                        originalPrice: 17.99
                        listPrice: 15.99
                        salePrice: 13.99
                        extendedListPrice: 15.99
                        extendedSalePrice: 13.99
                        isShippingRequired: true
                        giftWrapping: {}
                        addedByPromotion: false
                      - id: ba2c619d-e6b4-48c2-8809-d88e424ed450
                        parentId: {}
                        variantId: 341
                        productId: 170
                        sku: ''
                        name: Ceramic Measuring Spoons
                        url: 'https://{store_domain}/all/ceramic-measuring-spoons/'
                        quantity: 1
                        isTaxable: true
                        imageUrl: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/170/images/411/measuringsquares2_1024x1024__07108__95421.1534344522.330.500.jpg?c=2'
                        discounts:
                          - id: total-coupon
                            discountedAmount: 1.06
                        discountAmount: 0
                        couponAmount: 0
                        originalPrice: 25
                        listPrice: 25
                        salePrice: 25
                        extendedListPrice: 25
                        extendedSalePrice: 25
                        isShippingRequired: true
                        giftWrapping: {}
                        addedByPromotion: false
                      - id: c72d6651-978d-45e5-881b-c2bb5f7ff1d5
                        parentId: {}
                        variantId: 376
                        productId: 158
                        sku: SKU-A0C8A203
                        name: Chambray Towel
                        url: 'https://{store_domain}/all/chambray-towel/'
                        quantity: 1
                        isTaxable: true
                        imageUrl: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.330.500.jpg?c=2'
                        discounts:
                          - id: total-coupon
                            discountedAmount: 2.12
                        discountAmount: 0
                        couponAmount: 0
                        originalPrice: 49.99
                        listPrice: 49.99
                        salePrice: 49.99
                        extendedListPrice: 49.99
                        extendedSalePrice: 49.99
                        isShippingRequired: true
                        giftWrapping: {}
                        addedByPromotion: false
                    digitalItems:
                      - id: 6477a4a1-02cf-4287-8bf2-fd043bdd5234
                        parentId: {}
                        variantId: 360
                        productId: 189
                        name: Gather Journal Issue 7 - Digital
                        url: 'https://{store_domain}/all/gather-journal-issue-7/'
                        quantity: 1
                        isTaxable: true
                        imageUrl: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/189/images/465/gather_1024x1024__17195__82620.1534344540.330.500.jpg?c=2'
                        discounts:
                          - id: total-coupon
                            discountedAmount: 0.8
                        discountAmount: 0
                        couponAmount: 0
                        originalPrice: 18.95
                        listPrice: 18.95
                        salePrice: 18.95
                        extendedListPrice: 18.95
                        extendedSalePrice: 18.95
                        isShippingRequired: false
                        type: digital
                    giftCertificates:
                      - id: 871f1f56-4c88-43c3-a6e5-0a647d83d6ac
                        name: $10.00 Gift Certificate
                        theme: Celebration
                        amount: 10
                        taxable: false
                        sender:
                          name: Jane Doe
                          email: janedoe@example.com
                        recipient:
                          name: John Doe
                          email: johndoe@example.com
                        message: Thank you!
                        type: giftCertificate
                  createdTime: '2018-09-18T15:48:26+00:00'
                  updatedTime: '2018-09-18T16:59:45+00:00'
                billingAddress:
                  id: 5ba11e4a10fb5
                  firstName: Jane
                  lastName: Doe
                  email: janedoe@example.com
                  company: ''
                  address1: 123 Main Street
                  address2: ''
                  city: Austin
                  stateOrProvince: Texas
                  stateOrProvinceCode: TX
                  country: United States
                  countryCode: US
                  postalCode: '78751'
                  phone: '1234567890'
                  customFields:
                    - fieldId: field_25
                      fieldValue: Leave in backyard
                consignments:
                  - id: 5ba121929619b
                    shippingCost: 69.94
                    handlingCost: 0
                    couponDiscounts: []
                    discounts: []
                    lineItemIds:
                      - 69791a88-85c9-4c19-8042-e537621e8a55
                      - ba2c619d-e6b4-48c2-8809-d88e424ed450
                      - c72d6651-978d-45e5-881b-c2bb5f7ff1d5
                    selectedShippingOption:
                      id: bb3c818f-17ce-46fe-9475-65933095da0d
                      type: shipping_upsready
                      description: UPS® (UPS Next Day Air®)
                      imageUrl: ''
                      cost: 69.94
                      transitTime: 1 business day
                    address:
                      firstName: Jane
                      lastName: Doe
                      email: janedoe@example.com
                      company: ''
                      address1: 123 Main Street
                      address2: ''
                      city: Austin
                      stateOrProvince: Texas
                      stateOrProvinceCode: TX
                      country: United States
                      countryCode: US
                      postalCode: '78751'
                      phone: '1234567890'
                      customFields:
                        - fieldId: field_25
                          fieldValue: Leave in backyard
                orderId: null
                shippingCostTotal: 69.94
                shippingCostBeforeDiscount: 69.94
                handlingCostTotal: 0
                taxTotal: 28.62
                coupons:
                  - id: 1
                    code: S2549JM0Y
                    displayName: $5.00 off the order total
                    couponType: 2
                    discountedAmount: 5
                taxes:
                  - name: Store Tax
                    amount: 28.62
                subtotal: 117.93
                grandTotal: 211.49
                giftCertificates: []
                createdTime: '2018-09-18T15:48:26+00:00'
                updatedTime: '2018-09-18T16:59:45+00:00'
                customerMessage: 'Thank you, BigCommerce'
  '/checkouts/{checkoutId}/billing-address':
    post:
      tags:
        - Checkout Billing Address
      summary: Add Checkout Billing Address
      description: |-
        Adds a billing address to an existing *Checkout*.

        **Required Fields**
        * country_code


        > #### Note
        > * The `email` property is only required if the customer is a guest shopper. Otherwise, it is set automatically.
        > * Sending `email` property as a payload in POST request triggers the abandoned cart notification process.
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
      operationId: CheckoutsBillingAddressByCheckoutIdPost
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/address_Base'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
              example:
                id: 29eb9b44-8f33-4e4a-9429-d0e8e24641ed
                cart:
                  id: 29eb9b44-8f33-4e4a-9429-d0e8e24641ed
                  customerId: 18
                  email: dwaynecole@testing.com
                  currency:
                    name: US Dollars
                    code: USD
                    symbol: $
                    decimalPlaces: 2
                  isTaxIncluded: true
                  baseAmount: 7.95
                  discountAmount: 0
                  cartAmount: 7.95
                  coupons: []
                  discounts:
                    - id: 243c9ca2-22b4-417a-8b09-b3fc05778b52
                      discountedAmount: 0
                  lineItems:
                    physicalItems:
                      - id: 243c9ca2-22b4-417a-8b09-b3fc05778b52
                        parentId: {}
                        variantId: 345
                        productId: 174
                        sku: ''
                        name: 1L Le Parfait Jar
                        url: 'https://{store_domain}/all/1l-le-parfait-jar/'
                        quantity: 1
                        brand: OFS
                        isTaxable: true
                        imageUrl: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/174/images/425/leparfaitmedium3_1024x1024_1024x1024__37756__81924.1534344526.330.500.jpg?c=2'
                        discounts: []
                        discountAmount: 0
                        couponAmount: 0
                        originalPrice: 7.95
                        listPrice: 7.95
                        salePrice: 7.95
                        extendedListPrice: 7.95
                        extendedSalePrice: 7.95
                        isShippingRequired: true
                        giftWrapping: {}
                        addedByPromotion: false
                    digitalItems: []
                    giftCertificates: []
                    customItems: []
                  createdTime: '2019-01-10T17:18:00+00:00'
                  updatedTime: '2019-01-10T17:19:47+00:00'
                billingAddress:
                  id: 5c377ead301c2
                  firstName: Dwayne
                  lastName: Cole
                  email: dwaynecole@testing.com
                  company: ''
                  address1: Mauna Kea Access Rd
                  address2: ''
                  city: Hilo
                  stateOrProvince: Hawaii
                  stateOrProvinceCode: HI
                  country: United States
                  countryCode: US
                  postalCode: '96720'
                  phone: '8081234567'
                  customFields: []
                consignments:
                  - id: 5c377ead30ac1
                    shippingCost: 8
                    handlingCost: 0
                    couponDiscounts: []
                    discounts: []
                    lineItemIds:
                      - 243c9ca2-22b4-417a-8b09-b3fc05778b52
                    selectedShippingOption:
                      id: d09e05c0-3788-44df-a1bb-b6d3afdf6841
                      type: shipping_byweight
                      description: Ship by Weight
                      imageUrl: ''
                      cost: 8
                      transitTime: ''
                    address:
                      firstName: Dwayne
                      lastName: Cole
                      email: dwaynecole@testing.com
                      company: ''
                      address1: Mauna Kea Access Rd
                      address2: ''
                      city: Hilo
                      stateOrProvince: Hawaii
                      stateOrProvinceCode: HI
                      country: United States
                      countryCode: US
                      postalCode: '96720'
                      phone: '8081234567'
                      customFields: []
                orderId: null
                shippingCostTotal: 8
                shippingCostBeforeDiscount: 8
                handlingCostTotal: 0
                taxTotal: 1.22
                coupons: []
                taxes:
                  - name: Tax
                    amount: 1.22
                subtotal: 7.95
                grandTotal: 15.95
                giftCertificates: []
                createdTime: '2019-01-10T17:18:00+00:00'
                updatedTime: '2019-01-10T17:19:47+00:00'
                customerMessage: ''
        '403':
          description: The email trying to be set for the guest is associated with an account. The customer must sign in.
          content: {}
        '429':
          description: Unable to determine if provided email is associated with an account. The customer must sign in.
          content: {}
      x-codegen-request-body-name: body
  '/checkouts/{checkoutId}/billing-address/{addressId}':
    put:
      tags:
        - Checkout Billing Address
      summary: Update Checkout Billing Address
      description: |-
        Updates an existing billing address on *Checkout*.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
      operationId: CheckoutsBillingAddressByCheckoutIdAndAddressIdPut
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
        - name: addressId
          in: path
          required: true
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: number
            format: double
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/address_Base'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
              example:
                id: b6fbd994-61a8-4f25-9167-6ec10489c448
                cart:
                  id: b6fbd994-61a8-4f25-9167-6ec10489c448
                  customerId: 11
                  email: janedoe@example.com
                  currency:
                    name: US Dollars
                    code: USD
                    symbol: $
                    decimalPlaces: 2
                  isTaxIncluded: false
                  baseAmount: 119.93
                  discountAmount: 0
                  cartAmount: 112.93
                  coupons:
                    - id: 1
                      code: S2549JM0Y
                      displayName: $5.00 off the order total
                      couponType: per_total_discount
                      discountedAmount: 5
                  discounts:
                    - id: 69791a88-85c9-4c19-8042-e537621e8a55
                      discountedAmount: 2.59
                    - id: ba2c619d-e6b4-48c2-8809-d88e424ed450
                      discountedAmount: 1.06
                    - id: c72d6651-978d-45e5-881b-c2bb5f7ff1d5
                      discountedAmount: 2.12
                    - id: 6477a4a1-02cf-4287-8bf2-fd043bdd5234
                      discountedAmount: 0.8
                    - id: 871f1f56-4c88-43c3-a6e5-0a647d83d6ac
                      discountedAmount: 0.43
                  lineItems:
                    physicalItems:
                      - id: 69791a88-85c9-4c19-8042-e537621e8a55
                        parentId: {}
                        variantId: 364
                        productId: 184
                        sku: SMA-RED
                        name: Canvas Laundry Cart
                        url: 'https://{store_domain}/all/canvas-laundry-cart/'
                        quantity: 1
                        isTaxable: true
                        imageUrl: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.330.500.jpg?c=2'
                        discounts:
                          - id: total-coupon
                            discountedAmount: 0.59
                          - id: 2
                            discountedAmount: 2
                        discountAmount: 2
                        couponAmount: 0
                        originalPrice: 17.99
                        listPrice: 15.99
                        salePrice: 13.99
                        extendedListPrice: 15.99
                        extendedSalePrice: 13.99
                        isShippingRequired: true
                        giftWrapping: {}
                        addedByPromotion: false
                      - id: ba2c619d-e6b4-48c2-8809-d88e424ed450
                        parentId: {}
                        variantId: 341
                        productId: 170
                        sku: ''
                        name: Ceramic Measuring Spoons
                        url: 'https://{store_domain}/all/ceramic-measuring-spoons/'
                        quantity: 1
                        isTaxable: true
                        imageUrl: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/170/images/411/measuringsquares2_1024x1024__07108__95421.1534344522.330.500.jpg?c=2'
                        discounts:
                          - id: total-coupon
                            discountedAmount: 1.06
                        discountAmount: 0
                        couponAmount: 0
                        originalPrice: 25
                        listPrice: 25
                        salePrice: 25
                        extendedListPrice: 25
                        extendedSalePrice: 25
                        isShippingRequired: true
                        giftWrapping: {}
                        addedByPromotion: false
                      - id: c72d6651-978d-45e5-881b-c2bb5f7ff1d5
                        parentId: {}
                        variantId: 376
                        productId: 158
                        sku: SKU-A0C8A203
                        name: Chambray Towel
                        url: 'https://{store_domain}/all/chambray-towel/'
                        quantity: 1
                        isTaxable: true
                        imageUrl: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.330.500.jpg?c=2'
                        discounts:
                          - id: total-coupon
                            discountedAmount: 2.12
                        discountAmount: 0
                        couponAmount: 0
                        originalPrice: 49.99
                        listPrice: 49.99
                        salePrice: 49.99
                        extendedListPrice: 49.99
                        extendedSalePrice: 49.99
                        isShippingRequired: true
                        giftWrapping: {}
                        addedByPromotion: false
                    digitalItems:
                      - id: 6477a4a1-02cf-4287-8bf2-fd043bdd5234
                        parentId: {}
                        variantId: 360
                        productId: 189
                        name: Gather Journal Issue 7 - Digital
                        url: 'https://{store_domain}/all/gather-journal-issue-7/'
                        quantity: 1
                        isTaxable: true
                        imageUrl: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/189/images/465/gather_1024x1024__17195__82620.1534344540.330.500.jpg?c=2'
                        discounts:
                          - id: total-coupon
                            discountedAmount: 0.8
                        discountAmount: 0
                        couponAmount: 0
                        originalPrice: 18.95
                        listPrice: 18.95
                        salePrice: 18.95
                        extendedListPrice: 18.95
                        extendedSalePrice: 18.95
                        isShippingRequired: false
                        type: digital
                    giftCertificates:
                      - id: 871f1f56-4c88-43c3-a6e5-0a647d83d6ac
                        name: $10.00 Gift Certificate
                        theme: Celebration
                        amount: 10
                        taxable: false
                        sender:
                          name: Jane Doe
                          email: janedoe@example.com
                        recipient:
                          name: John Doe
                          email: johndoe@example.com
                        message: Thank you!
                        type: giftCertificate
                  createdTime: '2018-09-18T15:48:26+00:00'
                  updatedTime: '2018-09-18T16:59:45+00:00'
                billingAddress:
                  id: 5ba11e4a10fb5
                  firstName: Jane
                  lastName: Doe
                  email: janedoe@example.com
                  company: ''
                  address1: 123 Main Street
                  address2: ''
                  city: Austin
                  stateOrProvince: Texas
                  stateOrProvinceCode: TX
                  country: United States
                  countryCode: US
                  postalCode: '78751'
                  phone: '1234567890'
                  customFields:
                    - fieldId: field_25
                      fieldValue: Leave in backyard
                consignments:
                  - id: 5ba121929619b
                    shippingCost: 69.94
                    handlingCost: 0
                    couponDiscounts: []
                    discounts: []
                    lineItemIds:
                      - 69791a88-85c9-4c19-8042-e537621e8a55
                      - ba2c619d-e6b4-48c2-8809-d88e424ed450
                      - c72d6651-978d-45e5-881b-c2bb5f7ff1d5
                    selectedShippingOption:
                      id: bb3c818f-17ce-46fe-9475-65933095da0d
                      type: shipping_upsready
                      description: UPS® (UPS Next Day Air®)
                      imageUrl: ''
                      cost: 69.94
                      transitTime: 1 business day
                    address:
                      firstName: Jane
                      lastName: Doe
                      email: janedoe@example.com
                      company: ''
                      address1: 123 Main Street
                      address2: ''
                      city: Austin
                      stateOrProvince: Texas
                      stateOrProvinceCode: TX
                      country: United States
                      countryCode: US
                      postalCode: '78751'
                      phone: '1234567890'
                      customFields:
                        - fieldId: field_25
                          fieldValue: Leave in backyard
                orderId: null
                shippingCostTotal: 69.94
                shippingCostBeforeDiscount: 69.94
                handlingCostTotal: 0
                taxTotal: 28.62
                coupons:
                  - id: 1
                    code: S2549JM0Y
                    displayName: $5.00 off the order total
                    couponType: 2
                    discountedAmount: 5
                taxes:
                  - name: Store Tax
                    amount: 28.62
                subtotal: 117.93
                grandTotal: 211.49
                giftCertificates: []
                createdTime: '2018-09-18T15:48:26+00:00'
                updatedTime: '2018-09-18T16:59:45+00:00'
                customerMessage: 'Thank you, BigCommerce'
        '403':
          description: The email trying to be set for the guest is associated with an account. The customer must sign in.
          content: {}
        '429':
          description: Unable to determine if provided email is associated with an account. The customer must sign in.
          content: {}
      x-codegen-request-body-name: body
  '/checkouts/{checkoutId}/consignments':
    post:
      tags:
        - Checkout Consignments
      summary: Create a Consignment
      description: |
        Adds a new *Consignment* to *Checkout*.

        Perform the following two steps to define the fulfillment of the items in the cart.
          ### For **shipping** consignments:
            1. Add a new Consignment to Checkout.
                * Send a `POST` request to `/consignments` with each shipping address, line item IDs, and quantities. Each address can have its own line item IDs.
                * Provide a full valid customer address before placing the order. If provided, the order placement will succeed. 
                * As part of the request URL make sure to add `include=consignments.availableShippingOptions` to return the available shipping options based on the items, the address, and the shipping location. This will return `availableShippingOptions` in the response.

              * Required Fields:
                * `shipping_address` (deprecated) or `address`
                * `lineItems`
            2. Update the Consignment with Shipping Options using the [REST Storefront API](/checkouts/checkout-consignments#update-a-consignment), the [REST Management API](/docs/rest-management/checkouts/checkout-consignments#update-checkout-consignment) or the [GraphQL Storefront API](/api-docs/storefront/graphql/carts-and-checkout).
                  
          ### For **pickup** consignments:
            1. Create a new consignment object. 
              - Send a `POST` request to `/consignments` with line item IDs and quantities.
              - Provide a `pickupMethodId`. This is the `id` of the Pickup Method provided in the response body of the Storefront Pickup Options API.
              - Required Fields:
                  * `pickupOption`
                  * `lineItems`

        To learn more about creating a Checkout Consignment, see the [Carts and Checkouts Tutorial](/api-docs/storefront/tutorials/carts).

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
      operationId: CheckoutsConsignmentsByCheckoutIdPost
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
        - name: include
          in: query
          schema:
            type: string
            default: consignments.availableShippingOptions
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateConsignmentRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
              example:
                id: 29eb9b44-8f33-4e4a-9429-d0e8e24641ed
                cart:
                  id: 29eb9b44-8f33-4e4a-9429-d0e8e24641ed
                  customerId: 18
                  email: dwaynecole@testing.com
                  currency:
                    name: US Dollars
                    code: USD
                    symbol: $
                    decimalPlaces: 2
                  isTaxIncluded: true
                  baseAmount: 7.95
                  discountAmount: 0
                  cartAmount: 7.95
                  coupons: []
                  discounts:
                    - id: 243c9ca2-22b4-417a-8b09-b3fc05778b52
                      discountedAmount: 0
                  lineItems:
                    physicalItems:
                      - id: 243c9ca2-22b4-417a-8b09-b3fc05778b52
                        parentId: {}
                        variantId: 345
                        productId: 174
                        sku: ''
                        name: 1L Le Parfait Jar
                        url: 'https://{store_domain}/all/1l-le-parfait-jar/'
                        quantity: 1
                        brand: OFS
                        isTaxable: true
                        imageUrl: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/174/images/425/leparfaitmedium3_1024x1024_1024x1024__37756__81924.1534344526.330.500.jpg?c=2'
                        discounts: []
                        discountAmount: 0
                        couponAmount: 0
                        originalPrice: 7.95
                        listPrice: 7.95
                        salePrice: 7.95
                        extendedListPrice: 7.95
                        extendedSalePrice: 7.95
                        isShippingRequired: true
                        giftWrapping: {}
                        addedByPromotion: false
                    digitalItems: []
                    giftCertificates: []
                    customItems: []
                  createdTime: '2019-01-10T17:18:00+00:00'
                  updatedTime: '2019-01-10T17:19:47+00:00'
                billingAddress:
                  id: 5c377ead301c2
                  firstName: Dwayne
                  lastName: Cole
                  email: dwaynecole@testing.com
                  company: ''
                  address1: Mauna Kea Access Rd
                  address2: ''
                  city: Hilo
                  stateOrProvince: Hawaii
                  stateOrProvinceCode: HI
                  country: United States
                  countryCode: US
                  postalCode: '96720'
                  phone: '8081234567'
                  customFields: []
                consignments:
                  - id: 5c377ead30ac1
                    shippingCost: 8
                    handlingCost: 0
                    couponDiscounts: []
                    discounts: []
                    lineItemIds:
                      - 243c9ca2-22b4-417a-8b09-b3fc05778b52
                    selectedShippingOption:
                      id: d09e05c0-3788-44df-a1bb-b6d3afdf6841
                      type: shipping_byweight
                      description: Ship by Weight
                      imageUrl: ''
                      cost: 8
                      transitTime: ''
                    address:
                      firstName: Dwayne
                      lastName: Cole
                      email: dwaynecole@example.com
                      company: ''
                      address1: Mauna Kea Access Rd
                      address2: ''
                      city: Hilo
                      stateOrProvince: Hawaii
                      stateOrProvinceCode: HI
                      country: United States
                      countryCode: US
                      postalCode: '96720'
                      phone: '8081234567'
                      customFields: []
                      shouldSaveAddress: true
                orderId: null
                shippingCostTotal: 8
                shippingCostBeforeDiscount: 8
                handlingCostTotal: 0
                taxTotal: 1.22
                coupons: []
                taxes:
                  - name: Tax
                    amount: 1.22
                subtotal: 7.95
                grandTotal: 15.95
                giftCertificates: []
                createdTime: '2019-01-10T17:18:00+00:00'
                updatedTime: '2019-01-10T17:19:47+00:00'
                customerMessage: ''
  '/checkouts/{checkoutId}/consignments/{consignmentId}':
    put:
      tags:
        - Checkout Consignments
      summary: Update a Consignment
      description: |-
        Updates an existing consignment. An update is either one of the following:

        1. Updates the consignment address and/or line items.
        2. Selects a specific fulfillment option.

        ### Update the consignment address and line items
        For this type of update, the payload is the same as when creating a new consignment.         Update each *Consignment* `shippingOptionId` (shipping address and line items) with the `availableShippingOption > id` from the POST `/consignment` response. 
        
        **Note:**
        Updating a consignment could invalidate the value for `selectedShippingOption` and `selectedPickupOption`.
        
        ### Select a specific fulfillment option
        Before placing an order, each consignment must have a `selectedShippingOption` or a `selectedPickupOption`.
        
        If the consignment already has a pick-up option selected and a shipping option is provided, the pick-up option will be deselected and the shipping option will be selected instead (and vice versa). The `PUT` request will fail if it contains a shipping option ID and a pickup option ID.
        
        Required Fields:
        * `shippingOptionId` or `pickupOptionId`
        * `lineItems`

        To learn more about creating a Checkout Consignment see [Checkout Consignment API](/api-docs/checkouts/checkout-consignment).

        > #### Note
        > * You cannot pass both an `address` and a `shippingOptionId` because the shipping option may not be available for the new address 
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
      operationId: CheckoutsConsignmentsByCheckoutIdAndConsignmentIdPut
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
        - name: consignmentId
          in: path
          required: true
          schema:
            type: string
        - name: include
          in: query
          schema:
            type: string
            default: consignments.availableShippingOptions, consignments.availablePickupOptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUpdateConsignment'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
              example:
                id: 29eb9b44-8f33-4e4a-9429-d0e8e24641ed
                cart:
                  id: 29eb9b44-8f33-4e4a-9429-d0e8e24641ed
                  customerId: 18
                  email: dwaynecole@testing.com
                  currency:
                    name: US Dollars
                    code: USD
                    symbol: $
                    decimalPlaces: 2
                  isTaxIncluded: true
                  baseAmount: 7.95
                  discountAmount: 0
                  cartAmount: 7.95
                  coupons: []
                  discounts:
                    - id: 243c9ca2-22b4-417a-8b09-b3fc05778b52
                      discountedAmount: 0
                  lineItems:
                    physicalItems:
                      - id: 243c9ca2-22b4-417a-8b09-b3fc05778b52
                        parentId: {}
                        variantId: 345
                        productId: 174
                        sku: ''
                        name: 1L Le Parfait Jar
                        url: 'https://{store_domain}/all/1l-le-parfait-jar/'
                        quantity: 1
                        brand: OFS
                        isTaxable: true
                        imageUrl: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/174/images/425/leparfaitmedium3_1024x1024_1024x1024__37756__81924.1534344526.330.500.jpg?c=2'
                        discounts: []
                        discountAmount: 0
                        couponAmount: 0
                        originalPrice: 7.95
                        listPrice: 7.95
                        salePrice: 7.95
                        extendedListPrice: 7.95
                        extendedSalePrice: 7.95
                        isShippingRequired: true
                        giftWrapping: {}
                        addedByPromotion: false
                    digitalItems: []
                    giftCertificates: []
                    customItems: []
                  createdTime: '2019-01-10T17:18:00+00:00'
                  updatedTime: '2019-01-10T17:19:47+00:00'
                billingAddress:
                  id: 5c377ead301c2
                  firstName: Dwayne
                  lastName: Cole
                  email: dwaynecole@testing.com
                  company: ''
                  address1: Mauna Kea Access Rd
                  address2: ''
                  city: Hilo
                  stateOrProvince: Hawaii
                  stateOrProvinceCode: HI
                  country: United States
                  countryCode: US
                  postalCode: '96720'
                  phone: '8081234567'
                  customFields: []
                consignments:
                  - id: 5c377ead30ac1
                    shippingCost: 8
                    handlingCost: 0
                    couponDiscounts: []
                    discounts: []
                    lineItemIds:
                      - 243c9ca2-22b4-417a-8b09-b3fc05778b52
                    selectedShippingOption:
                      id: d09e05c0-3788-44df-a1bb-b6d3afdf6841
                      type: shipping_byweight
                      description: Ship by Weight
                      imageUrl: ''
                      cost: 8
                      transitTime: ''
                    address:
                      firstName: Dwayne
                      lastName: Cole
                      email: dwaynecole@testing.com
                      company: ''
                      address1: Mauna Kea Access Rd
                      address2: ''
                      city: Hilo
                      stateOrProvince: Hawaii
                      stateOrProvinceCode: HI
                      country: United States
                      countryCode: US
                      postalCode: '96720'
                      phone: '8081234567'
                      customFields: []
                      shouldSaveAddress: true
                orderId: null
                shippingCostTotal: 8
                shippingCostBeforeDiscount: 8
                handlingCostTotal: 0
                taxTotal: 1.22
                coupons: []
                taxes:
                  - name: Tax
                    amount: 1.22
                subtotal: 7.95
                grandTotal: 15.95
                giftCertificates: []
                createdTime: '2019-01-10T17:18:00+00:00'
                updatedTime: '2019-01-10T17:19:47+00:00'
                customerMessage: ''
      x-codegen-request-body-name: body
    delete:
      tags:
        - Checkout Consignments
      summary: Delete a Consignment
      description: |-
        Removes an existing *Consignment* from *Checkout*.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
      operationId: CheckoutsConsignmentsByCheckoutIdAndConsignmentIdDelete
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
        - name: consignmentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
              example:
                id: 29eb9b44-8f33-4e4a-9429-d0e8e24641ed
                cart:
                  id: 29eb9b44-8f33-4e4a-9429-d0e8e24641ed
                  customerId: 18
                  email: dwaynecole@testing.com
                  currency:
                    name: US Dollars
                    code: USD
                    symbol: $
                    decimalPlaces: 2
                  isTaxIncluded: true
                  baseAmount: 7.95
                  discountAmount: 0
                  cartAmount: 7.95
                  coupons: []
                  discounts:
                    - id: 243c9ca2-22b4-417a-8b09-b3fc05778b52
                      discountedAmount: 0
                  lineItems:
                    physicalItems:
                      - id: 243c9ca2-22b4-417a-8b09-b3fc05778b52
                        parentId: {}
                        variantId: 345
                        productId: 174
                        sku: ''
                        name: 1L Le Parfait Jar
                        url: 'https://{store_domain}/all/1l-le-parfait-jar/'
                        quantity: 1
                        brand: OFS
                        isTaxable: true
                        imageUrl: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/174/images/425/leparfaitmedium3_1024x1024_1024x1024__37756__81924.1534344526.330.500.jpg?c=2'
                        discounts: []
                        discountAmount: 0
                        couponAmount: 0
                        originalPrice: 7.95
                        listPrice: 7.95
                        salePrice: 7.95
                        extendedListPrice: 7.95
                        extendedSalePrice: 7.95
                        isShippingRequired: true
                        giftWrapping: {}
                        addedByPromotion: false
                    digitalItems: []
                    giftCertificates: []
                    customItems: []
                  createdTime: '2019-01-10T17:18:00+00:00'
                  updatedTime: '2019-01-10T17:19:47+00:00'
                billingAddress:
                  id: 5c377ead301c2
                  firstName: Dwayne
                  lastName: Cole
                  email: dwaynecole@testing.com
                  company: ''
                  address1: Mauna Kea Access Rd
                  address2: ''
                  city: Hilo
                  stateOrProvince: Hawaii
                  stateOrProvinceCode: HI
                  country: United States
                  countryCode: US
                  postalCode: '96720'
                  phone: '8081234567'
                  customFields: []
                consignments:
                  - id: 5c377ead30ac1
                    shippingCost: 8
                    handlingCost: 0
                    couponDiscounts: []
                    discounts: []
                    lineItemIds:
                      - 243c9ca2-22b4-417a-8b09-b3fc05778b52
                    selectedShippingOption:
                      id: d09e05c0-3788-44df-a1bb-b6d3afdf6841
                      type: shipping_byweight
                      description: Ship by Weight
                      imageUrl: ''
                      cost: 8
                      transitTime: ''
                    address:
                      firstName: Dwayne
                      lastName: Cole
                      email: dwaynecole@testing.com
                      company: ''
                      address1: Mauna Kea Access Rd
                      address2: ''
                      city: Hilo
                      stateOrProvince: Hawaii
                      stateOrProvinceCode: HI
                      country: United States
                      countryCode: US
                      postalCode: '96720'
                      phone: '8081234567'
                      customFields: []
                orderId: null
                shippingCostTotal: 8
                shippingCostBeforeDiscount: 8
                handlingCostTotal: 0
                taxTotal: 1.22
                coupons: []
                taxes:
                  - name: Tax
                    amount: 1.22
                subtotal: 7.95
                grandTotal: 15.95
                giftCertificates: []
                createdTime: '2019-01-10T17:18:00+00:00'
                updatedTime: '2019-01-10T17:19:47+00:00'
                customerMessage: ''
  '/checkouts/{checkoutId}/gift-certificates':
    post:
      tags:
        - Checkout Gift Certificates
      summary: Add Gift Certificate to Checkout
      description: |-
        Adds a *Gift Certificate Code* to *Checkout*.

        > #### Note
        > * *Gift Certificates* are treated as a payment methods.
        > * You are not able to purchase a gift certificate with a gift certificate.
        > * The rate limit is 20/hour (only for unique gift-certificate codes).
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
      operationId: CheckoutsGiftCertificatesByCheckoutIdPost
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GiftCertificateRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
              example:
                id: 29eb9b44-8f33-4e4a-9429-d0e8e24641ed
                cart:
                  id: 29eb9b44-8f33-4e4a-9429-d0e8e24641ed
                  customerId: 18
                  email: dwaynecole@testing.com
                  currency:
                    name: US Dollars
                    code: USD
                    symbol: $
                    decimalPlaces: 2
                  isTaxIncluded: true
                  baseAmount: 7.95
                  discountAmount: 0
                  cartAmount: 7.95
                  coupons: []
                  discounts:
                    - id: 243c9ca2-22b4-417a-8b09-b3fc05778b52
                      discountedAmount: 0
                  lineItems:
                    physicalItems:
                      - id: 243c9ca2-22b4-417a-8b09-b3fc05778b52
                        parentId: {}
                        variantId: 345
                        productId: 174
                        sku: ''
                        name: 1L Le Parfait Jar
                        url: 'https://{store_domain}/all/1l-le-parfait-jar/'
                        quantity: 1
                        brand: OFS
                        isTaxable: true
                        imageUrl: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/174/images/425/leparfaitmedium3_1024x1024_1024x1024__37756__81924.1534344526.330.500.jpg?c=2'
                        discounts: []
                        discountAmount: 0
                        couponAmount: 0
                        originalPrice: 7.95
                        listPrice: 7.95
                        salePrice: 7.95
                        extendedListPrice: 7.95
                        extendedSalePrice: 7.95
                        isShippingRequired: true
                        giftWrapping: {}
                        addedByPromotion: false
                    digitalItems: []
                    giftCertificates: []
                    customItems: []
                  createdTime: '2019-01-10T17:18:00+00:00'
                  updatedTime: '2019-01-10T17:19:47+00:00'
                billingAddress:
                  id: 5c377ead301c2
                  firstName: Dwayne
                  lastName: Cole
                  email: dwaynecole@testing.com
                  company: ''
                  address1: Mauna Kea Access Rd
                  address2: ''
                  city: Hilo
                  stateOrProvince: Hawaii
                  stateOrProvinceCode: HI
                  country: United States
                  countryCode: US
                  postalCode: '96720'
                  phone: '8081234567'
                  customFields: []
                consignments:
                  - id: 5c377ead30ac1
                    shippingCost: 8
                    handlingCost: 0
                    couponDiscounts: []
                    discounts: []
                    lineItemIds:
                      - 243c9ca2-22b4-417a-8b09-b3fc05778b52
                    selectedShippingOption:
                      id: d09e05c0-3788-44df-a1bb-b6d3afdf6841
                      type: shipping_byweight
                      description: Ship by Weight
                      imageUrl: ''
                      cost: 8
                      transitTime: ''
                    address:
                      firstName: Dwayne
                      lastName: Cole
                      email: dwaynecole@testing.com
                      company: ''
                      address1: Mauna Kea Access Rd
                      address2: ''
                      city: Hilo
                      stateOrProvince: Hawaii
                      stateOrProvinceCode: HI
                      country: United States
                      countryCode: US
                      postalCode: '96720'
                      phone: '8081234567'
                      customFields: []
                orderId: null
                shippingCostTotal: 8
                shippingCostBeforeDiscount: 8
                handlingCostTotal: 0
                taxTotal: 1.22
                coupons: []
                taxes:
                  - name: Tax
                    amount: 1.22
                subtotal: 7.95
                grandTotal: 15.95
                giftCertificates: []
                createdTime: '2019-01-10T17:18:00+00:00'
                updatedTime: '2019-01-10T17:19:47+00:00'
                customerMessage: ''
        '404':
          description: Gift certificate code not found
          content:
            application/json:
              schema:
                type: object
      x-codegen-request-body-name: body
  '/checkouts/{checkoutId}/gift-certificates/{giftCertificateCode}':
    delete:
      tags:
        - Checkout Gift Certificates
      summary: Delete Gift Certificate
      description: |-
        Deletes an existing *Gift Certificate*.

        This removes the *Gift Certificate* payment method.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
      operationId: CheckoutsGiftCertificatesByCheckoutIdAndGiftCertificateCodeDelete
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
        - name: giftCertificateCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
  '/checkouts/{checkoutId}/coupons':
    post:
      tags:
        - Checkout Coupons
      summary: Add Coupon to Checkout
      description: |-
        Adds a *Coupon Code* to *Checkout*.

        **Required Fields**
        * couponCode

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
      operationId: CheckoutsCouponsByCheckoutIdPost
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Coupon Code Request
              type: object
              properties:
                couponCode:
                  type: string
                  description: ''
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
              example:
                id: 29eb9b44-8f33-4e4a-9429-d0e8e24641ed
                cart:
                  id: 29eb9b44-8f33-4e4a-9429-d0e8e24641ed
                  customerId: 18
                  email: dwaynecole@testing.com
                  currency:
                    name: US Dollars
                    code: USD
                    symbol: $
                    decimalPlaces: 2
                  isTaxIncluded: true
                  baseAmount: 7.95
                  discountAmount: 0
                  cartAmount: 7.95
                  coupons: []
                  discounts:
                    - id: 243c9ca2-22b4-417a-8b09-b3fc05778b52
                      discountedAmount: 0
                  lineItems:
                    physicalItems:
                      - id: 243c9ca2-22b4-417a-8b09-b3fc05778b52
                        parentId: {}
                        variantId: 345
                        productId: 174
                        sku: ''
                        name: 1L Le Parfait Jar
                        url: 'https://{store_domain}/all/1l-le-parfait-jar/'
                        quantity: 1
                        brand: OFS
                        isTaxable: true
                        imageUrl: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/174/images/425/leparfaitmedium3_1024x1024_1024x1024__37756__81924.1534344526.330.500.jpg?c=2'
                        discounts: []
                        discountAmount: 0
                        couponAmount: 0
                        originalPrice: 7.95
                        listPrice: 7.95
                        salePrice: 7.95
                        extendedListPrice: 7.95
                        extendedSalePrice: 7.95
                        isShippingRequired: true
                        giftWrapping: {}
                        addedByPromotion: false
                    digitalItems: []
                    giftCertificates: []
                    customItems: []
                  createdTime: '2019-01-10T17:18:00+00:00'
                  updatedTime: '2019-01-10T17:19:47+00:00'
                billingAddress:
                  id: 5c377ead301c2
                  firstName: Dwayne
                  lastName: Cole
                  email: dwaynecole@testing.com
                  company: ''
                  address1: Mauna Kea Access Rd
                  address2: ''
                  city: Hilo
                  stateOrProvince: Hawaii
                  stateOrProvinceCode: HI
                  country: United States
                  countryCode: US
                  postalCode: '96720'
                  phone: '8081234567'
                  customFields: []
                consignments:
                  - id: 5c377ead30ac1
                    shippingCost: 8
                    handlingCost: 0
                    couponDiscounts: []
                    discounts: []
                    lineItemIds:
                      - 243c9ca2-22b4-417a-8b09-b3fc05778b52
                    selectedShippingOption:
                      id: d09e05c0-3788-44df-a1bb-b6d3afdf6841
                      type: shipping_byweight
                      description: Ship by Weight
                      imageUrl: ''
                      cost: 8
                      transitTime: ''
                    address:
                      firstName: Dwayne
                      lastName: Cole
                      email: dwaynecole@testing.com
                      company: ''
                      address1: Mauna Kea Access Rd
                      address2: ''
                      city: Hilo
                      stateOrProvince: Hawaii
                      stateOrProvinceCode: HI
                      country: United States
                      countryCode: US
                      postalCode: '96720'
                      phone: '8081234567'
                      customFields: []
                orderId: null
                shippingCostTotal: 8
                shippingCostBeforeDiscount: 8
                handlingCostTotal: 0
                taxTotal: 1.22
                coupons: []
                taxes:
                  - name: Tax
                    amount: 1.22
                subtotal: 7.95
                grandTotal: 15.95
                giftCertificates: []
                createdTime: '2019-01-10T17:18:00+00:00'
                updatedTime: '2019-01-10T17:19:47+00:00'
                customerMessage: ''
      x-codegen-request-body-name: body
  '/checkouts/{checkoutId}/coupons/{couponCode}':
    delete:
      tags:
        - Checkout Coupons
      summary: Delete Checkout Coupon
      description: |
        Deletes a *Coupon Code* from *Checkout*.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
      operationId: CheckoutsCouponsByCheckoutIdAndCouponCodeDelete
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
        - name: couponCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
              example:
                id: b6fbd994-61a8-4f25-9167-6ec10489c448
                cart:
                  id: b6fbd994-61a8-4f25-9167-6ec10489c448
                  customerId: 11
                  email: janedoe@example.com
                  currency:
                    name: US Dollars
                    code: USD
                    symbol: $
                    decimalPlaces: 2
                  isTaxIncluded: false
                  baseAmount: 119.93
                  discountAmount: 0
                  cartAmount: 117.93
                  coupons: []
                  discounts:
                    - id: 69791a88-85c9-4c19-8042-e537621e8a55
                      discountedAmount: 2
                    - id: ba2c619d-e6b4-48c2-8809-d88e424ed450
                      discountedAmount: 0
                    - id: c72d6651-978d-45e5-881b-c2bb5f7ff1d5
                      discountedAmount: 0
                    - id: 6477a4a1-02cf-4287-8bf2-fd043bdd5234
                      discountedAmount: 0
                    - id: 871f1f56-4c88-43c3-a6e5-0a647d83d6ac
                      discountedAmount: 0
                  lineItems:
                    physicalItems:
                      - id: 69791a88-85c9-4c19-8042-e537621e8a55
                        variantId: 364
                        productId: 184
                        sku: SMA-RED
                        name: Canvas Laundry Cart
                        url: 'https://{store_domain}/all/canvas-laundry-cart/'
                        quantity: 1
                        isTaxable: true
                        imageUrl: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.330.500.jpg?c=2'
                        discounts:
                          - id: 2
                            discountedAmount: 2
                        discountAmount: 2
                        couponAmount: 0
                        originalPrice: 17.99
                        listPrice: 15.99
                        salePrice: 13.99
                        extendedListPrice: 15.99
                        extendedSalePrice: 13.99
                        isShippingRequired: true
                        addedByPromotion: false
                      - id: ba2c619d-e6b4-48c2-8809-d88e424ed450
                        variantId: 341
                        productId: 170
                        sku: ''
                        name: Ceramic Measuring Spoons
                        url: 'https://{store_domain}/all/ceramic-measuring-spoons/'
                        quantity: 1
                        isTaxable: true
                        imageUrl: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/170/images/411/measuringsquares2_1024x1024__07108__95421.1534344522.330.500.jpg?c=2'
                        discounts: []
                        discountAmount: 0
                        couponAmount: 0
                        originalPrice: 25
                        listPrice: 25
                        salePrice: 25
                        extendedListPrice: 25
                        extendedSalePrice: 25
                        isShippingRequired: true
                        addedByPromotion: false
                      - id: c72d6651-978d-45e5-881b-c2bb5f7ff1d5
                        variantId: 376
                        productId: 158
                        sku: SKU-A0C8A203
                        name: Chambray Towel
                        url: 'https://{store_domain}/all/chambray-towel/'
                        quantity: 1
                        isTaxable: true
                        imageUrl: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.330.500.jpg?c=2'
                        discounts: []
                        discountAmount: 0
                        couponAmount: 0
                        originalPrice: 49.99
                        listPrice: 49.99
                        salePrice: 49.99
                        extendedListPrice: 49.99
                        extendedSalePrice: 49.99
                        isShippingRequired: true
                        addedByPromotion: false
                    digitalItems:
                      - id: 6477a4a1-02cf-4287-8bf2-fd043bdd5234
                        variantId: 360
                        productId: 189
                        name: Gather Journal Issue 7 - Digital
                        url: 'https://{store_domain}/all/gather-journal-issue-7/'
                        quantity: 1
                        isTaxable: true
                        imageUrl: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/189/images/465/gather_1024x1024__17195__82620.1534344540.330.500.jpg?c=2'
                        discounts: []
                        discountAmount: 0
                        couponAmount: 0
                        originalPrice: 18.95
                        listPrice: 18.95
                        salePrice: 18.95
                        extendedListPrice: 18.95
                        extendedSalePrice: 18.95
                        isShippingRequired: false
                        type: digital
                    giftCertificates:
                      - id: 871f1f56-4c88-43c3-a6e5-0a647d83d6ac
                        name: $10.00 Gift Certificate
                        theme: Celebration
                        amount: 10
                        taxable: false
                        sender:
                          name: Jane Doe
                          email: janedoe@example.com
                        recipient:
                          name: John Doe
                          email: johndoe@example.com
                        message: Thank you!
                        type: giftCertificate
                  createdTime: '2018-09-18T15:48:26+00:00'
                  updatedTime: '2018-09-18T17:47:35+00:00'
                billingAddress:
                  id: 5ba11e4a10fb5
                  firstName: Jane
                  lastName: Doe
                  email: janedoe@example.com
                  address1: 123 Main Street
                  city: Austin
                  stateOrProvince: Texas
                  stateOrProvinceCode: TX
                  country: United States
                  countryCode: US
                  postalCode: '78751'
                  phone: '1234567890'
                  customFields:
                    - fieldId: field_25
                      fieldValue: Leave in backyard
                consignments:
                  - id: 5ba13935c977a
                    shippingCost: 8
                    handlingCost: 0
                    couponDiscounts: []
                    discounts: []
                    lineItemIds:
                      - ba2c619d-e6b4-48c2-8809-d88e424ed450
                      - c72d6651-978d-45e5-881b-c2bb5f7ff1d5
                    selectedShippingOption:
                      id: 8458d845-a589-477c-a70d-977eed19e0d6
                      type: shipping_byweight
                      description: Ship by Weight
                      imageUrl: ''
                      cost: 8
                      transitTime: ''
                    address:
                      firstName: Jane
                      lastName: Doe
                      email: ''
                      company: ''
                      address1: 123 Main Street
                      address2: ''
                      city: Austin
                      stateOrProvince: Texas
                      stateOrProvinceCode: TX
                      country: United States
                      countryCode: US
                      postalCode: '78751'
                      phone: '1234567890'
                      customFields: []
                  - id: 5ba13995cf156
                    shippingCost: 62.63
                    handlingCost: 0
                    couponDiscounts: []
                    discounts: []
                    lineItemIds:
                      - 69791a88-85c9-4c19-8042-e537621e8a55
                    selectedShippingOption:
                      id: 989cdc72-2eee-49d8-bc71-5d466f905fdc
                      type: shipping_upsready
                      description: UPS® (UPS Next Day Air®)
                      imageUrl: ''
                      cost: 62.63
                      transitTime: 1 business day
                    address:
                      firstName: John
                      lastName: Doe
                      email: ''
                      company: ''
                      address1: 555 South Street
                      address2: ''
                      city: Austin
                      stateOrProvince: Texas
                      stateOrProvinceCode: TX
                      country: United States
                      countryCode: US
                      postalCode: '78751'
                      phone: '1234567890'
                      customFields: []
                shippingCostTotal: 70.63
                shippingCostBeforeDiscount: 70.63
                handlingCostTotal: 0
                taxTotal: 29.44
                coupons: []
                taxes:
                  - name: Store Tax
                    amount: 29.44
                subtotal: 117.93
                grandTotal: 218
                giftCertificates: []
                createdTime: '2018-09-18T15:48:26+00:00'
                updatedTime: '2018-09-18T17:47:35+00:00'
                customerMessage: ''
  '/checkouts/{checkoutId}/store-credit':
    post:
      tags:
        - Checkout Store Credit
      summary: Add Store Credit
      description: |-
        Applies any available store credit to a checkout. As on the storefront, all available store credit will be used (up to the value of the order) and no amount need be specified.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.
      operationId: CheckoutStoreCreditAdd
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkouts_Resp'
    delete:
      tags:
        - Checkout Store Credit
      summary: Remove Store Credit
      description: |-
        Removes store credit from a checkout.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
      operationId: CheckoutsStoreCreditRemove
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  '/checkouts/{checkoutId}/spam-protection':
    post:
      tags:
        - Checkout Spam Protection
      summary: Checkout Spam Protection
      description: |-
        Verifies if checkout is created by human.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
      operationId: checkoutSpamProtection
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpamProtectionRequest'
        required: true
      responses:
        '200':
          description: Returns Checkout Object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
      deprecated: false
      x-codegen-request-body-name: body
components:
  schemas:
    SpamProtectionRequest:
      title: SpamProtectionRequest
      type: object
      properties:
        token:
          type: string
      x-internal: false
    checkout_Full:
      title: checkout_Full
      type: object
      properties:
        id:
          type: string
          description: ''
          format: uuid
        cart:
          $ref: '#/components/schemas/checkoutCart'
        billingAddress:
          $ref: '#/components/schemas/address_Base'
        consignments:
          type: array
          description: ''
          items:
            $ref: '#/components/schemas/consignment_Full'
        coupons:
          type: array
          description: Coupons applied at the checkout level.
          items:
            $ref: '#/components/schemas/CheckoutCoupon'
        orderId:
          type: string
          description: ''
          nullable: true
        shippingCostTotal:
          type: number
          description: Shipping cost before any discounts are applied.
          format: float
        giftWrappingCostTotal:
          type: number
          description: Gift wrapping cost for all items, including or excluding tax.
        handlingCostTotal:
          type: number
          description: Handling cost for all consignments including or excluding tax.
          format: float
        taxTotal:
          type: number
          description: ''
          format: float
        taxes:
          type: array
          items:
            $ref: '#/components/schemas/checkoutTax'
        subtotal:
          type: number
          description: Subtotal of the checkout before applying item-level discounts. Tax inclusive based on the store settings.
          format: float
        grandTotal:
          type: number
          description: The total payable amount, before applying any store credit or gift certificate.
          format: float
        giftCertificates:
          type: array
          description: Applied gift certificate (as a payment method).
          items:
            $ref: '#/components/schemas/checkoutGiftCertificates'
        createdTime:
          type: string
          description: Time when the cart was created.
        updatedTime:
          type: string
          description: Time when the cart was last updated.
        customerMessage:
          type: string
          description: Shopperʼs message provided as details for the order to be created from this cart
        outstandingBalance:
          type: number
          description: |
            `grandTotal` subtract the store-credit amount
        isStoreCreditApplied:
          type: boolean
          description: |
            `true` value indicates StoreCredit has been applied.
      description: ''
      x-internal: false
    CartCoupon:
      title: Cart Coupon
      required:
        - code
      type: object
      properties:
        id:
          type: integer
          description: The coupon ID.
        code:
          type: string
          description: the coupon code
        displayName:
          type: string
          description: The coupon title based on different types provided in control panel section.
        couponType:
          type: string
          description: Key name to identify the type of coupon.
          enum:
            - per_item_discount
            - percentage_discount
            - per_total_discount
            - shipping_discount
            - free_shipping
            - promotion
        discountedAmount:
          type: number
          description: The discounted amount applied within a given context.
          format: double
      x-internal: false
    CheckoutCoupon:
      title: Checkout Coupon
      required:
        - code
      type: object
      properties:
        id:
          type: integer
          description: The coupon ID.
        code:
          type: string
          description: the coupon code
        displayName:
          type: string
          description: The coupon title based on different types provided in control panel section.
        couponType:
          type: integer
          description: |-
            |Type `int`|Type Name|
            |-|-|
            |`0`|`per_item_discount`|
            |`1`|`percentage_discount`|
            |`2`|`per_total_discount`|
            |`3`|`shipping_discount`|
            |`4`|`free_shipping`|
            |`5`|`promotion`|
        discountedAmount:
          type: number
          description: The discounted amount applied within a given context.
          format: double
      x-internal: false
    contactEntity:
      title: contactEntity
      type: object
      properties:
        name:
          type: string
          description: ''
        email:
          type: string
          description: ''
      description: Model for sender and receiver objects.
      x-internal: false
    address_Full:
      title: address_Full
      description: ''
      allOf:
        - $ref: '#/components/schemas/address_Base'
        - type: object
          properties:
            id:
              type: string
              description: ''
            shouldSaveAddress:
              type: boolean
              description: Indicates whether we should add this address to the customer address book.
      x-internal: false
    address_Base:
      title: address_Base
      required:
        - countryCode
      type: object
      properties:
        firstName:
          type: string
          description: ''
        lastName:
          type: string
          description: ''
        email:
          type: string
          description: ''
        company:
          type: string
          description: ''
        address1:
          type: string
          description: ''
        address2:
          type: string
          description: ''
        city:
          type: string
          description: ''
        stateOrProvince:
          type: string
          description: Represents state or province.
        stateOrProvinceCode:
          type: string
          description: ''
        countryCode:
          type: string
          description: 'ISO 3166-1 alpha-2 country code. (See: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)'
        postalCode:
          type: string
          description: ''
        phone:
          pattern: '^\+?[1-9]\d{1,14}(x\d{1-5})?$'
          type: string
          description: ''
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/customFields'
      x-internal: false
    customFields:
      title: customFields
      type: object
      properties:
        fieldId:
          type: string
        fieldValue:
          type: string
          description: This can also be an array for fields that need to support list of values; for example, a set of checkboxes. When doing a PUT or POST to the `fieldValue` with a pick list, the input must be a number. The response will be a string.
      description: 'When doing a PUT or POST to the `fieldValue` with a pick list, the input must be a number. The response will be a string.'
      x-internal: false
    consignment_Full:
      title: consignment_Full
      type: object
      properties:
        id:
          type: string
          description: ''
        shippingAddress:
          type: object
          properties: {}
          x-deprecated: true
        address:
          $ref: '#/components/schemas/address_Full'
        selectedPickupOption:
          $ref: '#/components/schemas/PickupOption'
        availableShippingOptions:
          type: array
          description: 'This is available only when "include=consignments.availableShippingOptions" is present in the URL.'
          items:
            $ref: '#/components/schemas/consignmentAvailableShippingOptions'
        selectedShippingOption:
          title: Selected Shipping Option
          type: object
          properties:
            description:
              type: string
              description: Read only.
              readOnly: true
            id:
              type: string
              description: ''
            type:
              type: string
              description: Specifies the type of shipping option; for example, flat rate, UPS, etc.
            imageUrl:
              type: string
              description: ''
            cost:
              type: number
              description: ''
              format: double
            transitTime:
              type: string
              description: An estimate of the arrival time.
            additionalDescription:
              type: string
              description: Read only. Field used for Shipping Provider API.
              readOnly: true
        couponDiscounts:
          type: array
          description: List of consignment discounts applied through coupons.
          items:
            title: Consignment Coupon Discount
            type: object
            properties:
              code:
                type: string
                description: Coupon code that applied this discount.
              amount:
                type: number
                description: ''
                format: double
        discounts:
          type: array
          description: List of consignment discounts applied through cart level discounts.
          items:
            title: Consignment Discount
            type: object
            properties:
              id:
                type: string
                description: Discount rule ID that applied this discount.
        shippingCost:
          type: number
          description: The shipping cost for this consignment.
          format: double
        handlingCost:
          type: number
          description: The handling cost of shipping for this consignment.
          format: double
        lineItemIds:
          type: array
          description: ''
          items:
            type: string
      description: This allows us to have multiple shipping addresses. Where there is only one shipping address, this array will contain only one value, with all the items.
      x-internal: false
    consignmentAvailableShippingOptions:
      title: consignmentAvailableShippingOptions
      allOf:
        - $ref: '#/components/schemas/consignmentShippingOption_Base'
        - type: object
          properties:
            isRecommended:
              type: boolean
              description: Is this shipping method the recommended shipping option or not.
            additionalDescription:
              type: string
      x-internal: false
    checkoutTax:
      title: checkoutTax
      type: object
      properties:
        name:
          type: string
          description: Name of the tax.
        amount:
          type: number
          description: ''
          format: double
      x-internal: false
    checkout_Put:
      title: checkout_Put
      type: object
      properties:
        customerMessage:
          type: string
          description: ''
      x-internal: false
    checkouts_Resp:
      title: checkouts_Resp
      type: object
      properties:
        data:
          title: Checkout
          type: object
          properties:
            id:
              type: string
              description: ''
              format: uuid
            cart:
              title: Cart
              type: object
              properties:
                id:
                  type: string
                  description: Cart ID, provided after creating a cart with a POST.
                  format: uuid
                customer_id:
                  type: integer
                  description: ID of the customer to which the cart belongs.
                  format: int32
                email:
                  type: string
                  description: The cartʼs email. This is the same email that is used in the billing address
                currency:
                  title: Currency
                  type: object
                  properties:
                    name:
                      type: string
                      description: The currency name.
                    code:
                      type: string
                      description: 'ISO-4217 currency code. (See: http://en.wikipedia.org/wiki/ISO_4217.)'
                    symbol:
                      type: string
                      description: The currency symbol.
                    decimalPlaces:
                      type: number
                      description: The number of decimal places for the currency. For example, the USD currency has two decimal places.
                      format: double
                  description: The currency in which prices are displayed (the store default currency).
                istaxIncluded:
                  type: boolean
                  description: Boolean representing whether tax information is included.
                baseAmount:
                  type: number
                  description: The cost of the cart’s contents, before applying discounts.
                  format: double
                discountAmount:
                  type: number
                  description: Order-based discounted amount only - Excludes coupon discounts and product-based discounts.
                  format: double
                cartAmount:
                  type: number
                  description: Sum of line-items amounts, minus cart-level discounts and coupons. This amount includes taxes, where applicable.
                  format: double
                coupons:
                  type: array
                  description: ''
                  items:
                    title: Applied Coupon
                    required:
                      - code
                    type: object
                    properties:
                      id:
                        type: string
                        description: The coupon ID.
                      code:
                        type: string
                        description: the coupon code
                      displayName:
                        type: string
                        description: The coupon title based on different types provided in control panel section.
                      couponType:
                        type: string
                        description: Key name to identify the type of coupon.
                      discountedAmount:
                        type: number
                        description: The discounted amount applied within a given context.
                        format: double
                discounts:
                  type: array
                  description: ''
                  items:
                    title: Applied Discount
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name provided by the merchant.
                      discountedAmount:
                        type: number
                        description: The discounted amount applied within a given context.
                        format: double
                lineItems:
                  type: object
                  description: ''
                  items:
                    title: Line Item
                    required:
                      - digitalItems
                      - physicalItems
                    type: object
                    properties:
                      physicalItems:
                        type: array
                        description: ''
                        items:
                          title: Item Physical
                          required:
                            - quantity
                          type: object
                          properties:
                            id:
                              type: string
                              description: The line-item ID.
                            parentId:
                              type: string
                              description: The product is part of a bundle, such as a product pick list, then the parentId or the main product ID will populate.
                            variantId:
                              type: integer
                              description: ID of the variant.
                            productId:
                              type: integer
                              description: ID of the product.
                            sku:
                              type: string
                              description: SKU of the variant.
                            name:
                              type: string
                              description: The itemʼs product name.
                            url:
                              type: string
                              description: The product URL.
                            quantity:
                              type: number
                              description: Quantity of this item.
                              format: double
                            isTaxable:
                              type: boolean
                              description: Whether the item is taxable.
                            imageUrl:
                              type: string
                              description: A publicly-accessible URL for an image of this item.
                            discounts:
                              type: array
                              description: A list of discounts applied to this item, as an array of AppliedDiscount objects.
                              items:
                                title: Applied Discount
                                type: object
                                properties:
                                  name:
                                    type: string
                                    description: The name provided by the merchant.
                                  discountedAmount:
                                    type: number
                                    description: The discounted amount applied within a given context.
                                    format: double
                            discountAmount:
                              type: number
                              description: The total value of all discounts applied to this item (excluding coupon).
                              format: double
                            brand:
                              type: string
                              description: The product's brand.
                            couponAmount:
                              type: number
                              description: The total value of all coupons applied to this item.
                              format: double
                            listPrice:
                              type: number
                              description: The item’s list price, as quoted by the manufacturer or distributor.
                              format: double
                            salePrice:
                              type: number
                              description: The itemʼs price after all discounts are applied. (The final price before tax calculation.)
                              format: double
                            extendedListPrice:
                              type: number
                              description: The itemʼs list price multiplied by the quantity.
                              format: double
                            extendedSalePrice:
                              type: number
                              description: The itemʼs sale price multiplied by the quantity.
                              format: double
                            type:
                              type: string
                              description: the product type - physical or digital
                            addedByPromotion:
                              type: boolean
                              description: If the item was added automatically by a promotion, such as a coupon or buy one, get one.
                            isShippingRequired:
                              type: boolean
                              description: Whether this item requires shipping to a physical address.
                            isMutable:
                              type: boolean
                              description: ''
                            giftWrapping:
                              title: Gift Wrapping
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: ''
                                message:
                                  type: string
                                  description: ''
                                amount:
                                  type: number
                                  description: ''
                                  format: double
                      digitalItems:
                        type: array
                        description: ''
                        items:
                          title: Item Digital
                          required:
                            - quantity
                          type: object
                          properties:
                            id:
                              type: string
                              description: The line-item ID.
                            parentId:
                              type: string
                              description: Bundled items will have their parentʼs item ID.
                            variantId:
                              type: number
                              description: ID of the variant.
                              format: double
                            productId:
                              type: number
                              description: ID of the product.
                              format: double
                            sku:
                              type: string
                              description: SKU of the variant.
                            name:
                              type: string
                              description: The itemʼs product name.
                            url:
                              type: string
                              description: The product URL.
                            quantity:
                              type: number
                              description: Quantity of this item.
                              format: double
                            brand:
                              type: string
                              description: The itemʼs brand.
                            isTaxable:
                              type: boolean
                              description: Whether the item is taxable.
                            imageUrl:
                              type: string
                              description: A publicly-accessible URL for an image of this item.
                            discounts:
                              type: array
                              description: List of discounts applied to this item, as an array of AppliedDiscount objects.
                              items:
                                title: Applied Discount
                                type: object
                                properties:
                                  name:
                                    type: string
                                    description: The name provided by the merchant.
                                  discountedAmount:
                                    type: number
                                    description: The discounted amount applied within a given context.
                                    format: double
                            discountAmount:
                              type: number
                              description: The total value of all discounts applied to this item (excluding coupon).
                              format: double
                            couponAmount:
                              type: number
                              description: The total value of all coupons applied to this item.
                              format: double
                            listPrice:
                              type: number
                              description: The item’s list price, as quoted by the manufacturer or distributor.
                              format: double
                            salePrice:
                              type: number
                              description: The itemʼs price after all discounts are applied. (The final price before tax calculation.)
                              format: double
                            extendedListPrice:
                              type: number
                              description: The itemʼs list price multiplied by the quantity.
                              format: double
                            extendedSalePrice:
                              type: number
                              description: The itemʼs sale price multiplied by the quantity.
                              format: double
                            type:
                              type: string
                              description: the product type - physical or digital
                            isMutable:
                              type: boolean
                              description: ''
                            isShippingRequired:
                              type: boolean
                              description: Whether this item requires shipping to a physical address.
                            downloadFileUrls:
                              type: array
                              description: URLs to download all product files.
                              items:
                                type: string
                            downloadPageUrl:
                              type: string
                              description: The URL for the combined downloads page.
                            downloadSize:
                              type: string
                              description: 'Specifies the combined download size in human-readable style; for example, `30MB`.'
                      giftCertificate:
                        type: array
                        description: ''
                        items:
                          title: Item Gift Certificate
                          required:
                            - amount
                            - recipient
                            - sender
                            - theme
                          type: object
                          properties:
                            id:
                              type: string
                              description: Gift certificate identifier
                            name:
                              type: string
                              description: 'The name of the purchased gift certificate; for example, `$20 Gift Certificate`.'
                            theme:
                              type: string
                              description: 'Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.'
                            amount:
                              type: number
                              description: 'Value must be between $1.00 and $1,000.00.'
                              format: double
                            taxable:
                              type: boolean
                              description: ''
                            sender:
                              title: Contact Entity
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: ''
                                email:
                                  type: string
                                  description: ''
                            recipient:
                              title: Contact Entity
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: ''
                                email:
                                  type: string
                                  description: ''
                            message:
                              type: string
                              description: Limited to 200 characters.
                            type:
                              type: string
                              description: Explicitly specifying the gift certificate type.
                      customItems:
                        type: array
                        items:
                          title: Item Custom
                          type: object
                          properties:
                            id:
                              type: string
                              description: ID of the custom item
                            sku:
                              type: string
                              description: Custom item SKU
                            name:
                              type: string
                              description: Item name
                            quantity:
                              type: string
                            listPrice:
                              type: string
                              description: Price of the item. With or without tax depending on your store setup.
                          description: |-
                            Add a custom item to the shoppers cart.
                            * Custom items are not added to the catalog.
                            * The price should be set to match the store settings for taxes.
                createdTime:
                  type: string
                  description: Time when the cart was created.
                updatedTime:
                  type: string
                  description: Time when the cart was last updated.
              description: A cart contains a collection of items, prices, discounts, etc. It does not contain customer-related data.
            billingAddress:
              title: Address Response
              type: object
              allOf:
                - title: Address Properties
                  required:
                    - countryCode
                  type: object
                  properties:
                    firstName:
                      type: string
                      description: ''
                    lastName:
                      type: string
                      description: ''
                    email:
                      type: string
                      description: ''
                    company:
                      type: string
                      description: ''
                    address1:
                      type: string
                      description: ''
                    address2:
                      type: string
                      description: ''
                    city:
                      type: string
                      description: ''
                    stateOrProvince:
                      type: string
                      description: Represents state or province.
                    stateOrProvinceCode:
                      type: string
                      description: ''
                    countryCode:
                      type: string
                      description: 'ISO 3166-1 alpha-2 country code. (See: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)'
                    postalCode:
                      type: string
                      description: ''
                    phone:
                      pattern: '^\+?[1-9]\d{1,14}(x\d{1-5})?$'
                      type: string
                      description: ''
                    customFields:
                      type: array
                      description: ''
                      items:
                        title: CustomField
                        type: object
                        properties:
                          fieldId:
                            type: string
                            description: ''
                          fieldValue:
                            type: string
                            description: This can also be an array for fields that need to support list of values; for example, a set of checkboxes.
                - type: object
                  properties:
                    id:
                      type: string
                      description: ''
            consignments:
              type: array
              description: This allows you to have multiple shipping addresses per checkout. Where there is only one shipping address, this array will contain only one value, with all the items.
              items:
                title: Consignment
                type: object
                properties:
                  id:
                    type: string
                    description: ''
                  shippingAddress:
                    type: object
                    properties: {}
                    x-deprecated: true
                  address:
                    title: Address Response
                    type: object
                    allOf:
                      - title: Address Properties
                        required:
                          - countryCode
                        type: object
                        properties:
                          firstName:
                            type: string
                            description: ''
                          lastName:
                            type: string
                            description: ''
                          email:
                            type: string
                            description: ''
                          company:
                            type: string
                            description: ''
                          address1:
                            type: string
                            description: ''
                          address2:
                            type: string
                            description: ''
                          city:
                            type: string
                            description: ''
                          stateOrProvince:
                            type: string
                            description: Represents state or province.
                          stateOrProvinceCode:
                            type: string
                            description: ''
                          countryCode:
                            type: string
                            description: 'ISO 3166-1 alpha-2 country code. (See: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)'
                          postalCode:
                            type: string
                            description: ''
                          phone:
                            pattern: '^\+?[1-9]\d{1,14}(x\d{1-5})?$'
                            type: string
                            description: ''
                          customFields:
                            type: array
                            description: ''
                            items:
                              title: CustomField
                              type: object
                              properties:
                                fieldId:
                                  type: string
                                  description: ''
                                fieldValue:
                                  type: string
                                  description: This can also be an array for fields that need to support list of values; for example, a set of checkboxes.
                      - type: object
                        properties:
                          id:
                            type: string
                            description: ''
                  availableShippingOptions:
                    type: array
                    description: This is available only when "include=consignments.availableShippingOptions" is presented in the URL.
                    items:
                      title: Shipping Option Entity
                      type: object
                      allOf:
                        - title: Selected Shipping Option
                          type: object
                          properties:
                            description:
                              type: string
                              description: Read only.
                              readOnly: true
                            id:
                              type: string
                              description: ''
                            type:
                              type: string
                              description: 'Specified the type of shipping option. Flat rate, UPS, etc.,'
                            imageUrl:
                              type: string
                              description: ''
                            cost:
                              type: number
                              description: ''
                              format: double
                            transitTime:
                              type: string
                              description: An estimate of the arrival time.
                        - type: object
                          properties:
                            isRecommended:
                              type: boolean
                              description: Is this shipping method the recommended shipping option or not.
                  selectedShippingOption:
                    title: Selected Shipping Option
                    type: object
                    properties:
                      description:
                        type: string
                        description: Read only.
                        readOnly: true
                      id:
                        type: string
                        description: ''
                      type:
                        type: string
                        description: Specifies the type of shipping option; for example, flat rate, UPS, etc.
                      imageUrl:
                        type: string
                        description: ''
                      cost:
                        type: number
                        description: ''
                        format: double
                      transitTime:
                        type: string
                        description: An estimate of the arrival time.
                  couponDiscounts:
                    type: array
                    description: List of consignment discounts applied through coupons
                    items:
                      title: Consignment Coupon Discount
                      type: object
                      properties:
                        code:
                          type: string
                          description: Coupon code that applied this discount
                        amount:
                          type: number
                          description: ''
                          format: double
                  discounts:
                    type: array
                    description: List of consignment discounts applied through cart level discounts.
                    items:
                      title: Consignment Discount
                      type: object
                      properties:
                        id:
                          type: string
                          description: Discount rule ID that applied this discount
                  shippingCost:
                    type: number
                    description: The shipping cost for this consignment.
                    format: double
                  handlingCost:
                    type: number
                    description: The handling cost of shipping for this consignment.
                    format: double
                  lineItemIds:
                    type: array
                    description: ''
                    items:
                      type: string
                description: ''
            coupons:
              type: array
              description: Coupons applied at checkout level.
              items:
                $ref: '#/components/schemas/CheckoutCoupon'
            orderId:
              type: string
              description: ''
            shippingCostTotal:
              type: number
              description: Shipping cost before any discounts are applied.
              format: float
            giftWrappingCostTotal:
              type: number
              description: Gift wrapping for all items, including or excluding tax.
            handlingCostTotal:
              type: number
              description: Handling cost for all consignments including or excluding tax.
              format: float
            taxTotal:
              type: number
              description: ''
              format: float
            taxes:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: Name of the tax charged. This is either the system default or the custom name created for the tax.
                    example: Texas Taxes
                  amount:
                    type: number
                    description: Amount of the tax.
                    format: float
                    example: 1.12
            subtotal:
              type: number
              description: Subtotal of the checkout before applying item-level discounts. Tax inclusive based on the store settings.
              format: float
            grandTotal:
              type: number
              description: The total payable amount, before applying any store credit or gift certificate.
              format: float
            giftCertificates:
              type: array
              description: Applied gift certificate (as a payment method).
              items:
                title: Gift Certificate
                type: object
                properties:
                  balance:
                    type: number
                    description: ''
                    format: double
                  code:
                    type: string
                    description: ''
                  purchaseDate:
                    type: string
                    description: ''
                    format: date
                  remaining:
                    type: number
                    description: ''
                    format: double
                  used:
                    type: number
                    description: ''
                    format: double
                description: The values presented here are projections of how much we would be using out of an existing gift certificate.
            createdTime:
              type: string
              description: Time when the cart was created.
            updatedTime:
              type: string
              description: Time when the cart was last updated.
            customerMessage:
              type: string
              description: Shopperʼs message provided as details for the order to be created from this cart.
            outstandingBalance:
              type: number
              description: |
                `grandTotal` subtract the store-credit amount
            isStoreCreditApplied:
              type: boolean
              description: |
                `true` value indicates StoreCredit has been applied.
      x-internal: false
    cartLineItemPut:
      title: cartLineItemPut
      type: object
      properties:
        quantity:
          type: number
          description: ''
          format: double
        productId:
          type: number
          description: ''
          format: double
        variantId:
          type: number
          description: ''
          format: double
      x-internal: false
    cartLineItemGiftCertificate_Put:
      title: cartLineItemGiftCertificate_Put
      required:
        - amount
        - quantity
        - recipient
        - sender
        - theme
      type: object
      properties:
        theme:
          type: string
          description: 'Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.'
        amount:
          maximum: 1000
          minimum: 1
          type: number
          description: ''
          format: double
        sender:
          $ref: '#/components/schemas/contactEntity'
        recipient:
          $ref: '#/components/schemas/contactEntity'
        message:
          type: string
          description: Message shown to recipient, as provided by sender.
        quantity:
          type: number
          description: ''
          format: double
      x-internal: false
    CreateConsignmentRequest:
      title: Create Consignment Request
      type: object
      properties:
        shippingAddress:
          type: object
          properties: {}
          x-deprecated: true
        address:
          title: Address Properties
          required:
            - countryCode
          type: object
          properties:
            firstName:
              type: string
              description: ''
            lastName:
              type: string
              description: ''
            email:
              type: string
              description: ''
            company:
              type: string
              description: ''
            address1:
              type: string
              description: ''
            address2:
              type: string
              description: ''
            city:
              type: string
              description: ''
            stateOrProvince:
              type: string
              description: Represents state or province.
            stateOrProvinceCode:
              type: string
              description: ''
            countryCode:
              type: string
              description: 'ISO 3166-1 alpha-2 country code. (See: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)'
            postalCode:
              type: string
              description: ''
            phone:
              pattern: '^\+?[1-9]\d{1,14}(x\d{1-5})?$'
              type: string
              description: ''
            customFields:
              type: array
              items:
                type: object
                properties:
                  fieldId:
                    type: string
                  fieldValue:
                    type: string
            shouldSaveAddress:
              type: boolean
              description: Indicates whether we should add this address to the customer address book.
        lineItems:
          type: array
          description: ''
          items:
            title: Consignment Line Item
            required:
              - itemId
              - quantity
            type: object
            properties:
              itemId:
                type: string
                description: ''
              quantity:
                type: integer
                description: ''
                format: int32
        shippingOptionId:
          type: string
          description: ''
        pickupOption:
          type: object
          properties:
            pickupMethodId:
              type: integer
      x-internal: false
    GiftCertificateRequest:
      title: Gift Certificate Request
      type: object
      properties:
        giftCertificateCode:
          type: string
          description: ''
      x-internal: false
    cart_Put:
      title: cart_Put
      type: object
      properties:
        lineItem:
          $ref: '#/components/schemas/cartLineItemPut'
        giftCertificate:
          $ref: '#/components/schemas/cartLineItemGiftCertificate_Put'
      x-internal: false
    NewUpdateConsignment:
      title: Update Consignment Request
      type: object
      properties:
        shippingAddress:
          type: object
          properties: {}
          x-deprecated: true
        address:
          title: Address Properties
          required:
            - countryCode
          type: object
          properties:
            firstName:
              type: string
              description: ''
            lastName:
              type: string
              description: ''
            email:
              type: string
              description: ''
            company:
              type: string
              description: ''
            address1:
              type: string
              description: ''
            address2:
              type: string
              description: ''
            city:
              type: string
              description: ''
            stateOrProvince:
              type: string
              description: Represents state or province.
            stateOrProvinceCode:
              type: string
              description: ''
            countryCode:
              type: string
              description: 'ISO 3166-1 alpha-2 country code. (See: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)'
            postalCode:
              type: string
              description: ''
            phone:
              pattern: '^\+?[1-9]\d{1,14}(x\d{1-5})?$'
              type: string
              description: ''
            customFields:
              type: array
              items:
                type: object
                properties:
                  fieldId:
                    type: string
                  fieldValue:
                    type: string
            shouldSaveAddress:
              type: boolean
              description: Indicates whether we should add this address to the customer address book.
        lineItems:
          type: array
          description: ''
          items:
            title: Consignment Line Item
            required:
              - itemId
              - quantity
            type: object
            properties:
              itemId:
                type: string
                description: ''
              quantity:
                type: integer
                description: ''
                format: int32
        shippingOptionId:
          type: string
          description: ''
        pickupOption:
          type: object
          properties:
            pickupMethodId:
              type: integer
      description: One or more of these three fields is mandatory. You can update address and line items in one request. You have to update shipping option ID or pickup option ID in a separate request since changing the address or line items can invalidate the previously available shipping options.
      x-internal: false
    checkoutCart:
      title: checkoutCart
      type: object
      properties:
        id:
          type: string
          description: Cart ID, provided after creating a cart with a POST.
          format: uuid
        customer_id:
          type: integer
          description: ID of the customer to which the cart belongs.
          format: int32
        email:
          type: string
          description: The cartʼs email. This is the same email that is used in the billing address.
        currency:
          title: Currency
          type: object
          properties:
            name:
              type: string
              description: The currency name.
            code:
              type: string
              description: 'ISO-4217 currency code. (See: http://en.wikipedia.org/wiki/ISO_4217.)'
            symbol:
              type: string
              description: The currency symbol.
            decimalPlaces:
              type: number
              description: The number of decimal places for the currency. For example, the USD currency has two decimal places.
              format: double
          description: The currency in which prices are displayed; the store default currency.
        isTaxIncluded:
          type: boolean
          description: Boolean representing whether tax information is included.
        baseAmount:
          type: number
          description: Cost of cart’s contents, before applying discounts.
          format: double
        discountAmount:
          type: number
          description: Discounted amount.
          format: double
        cartAmount:
          type: number
          description: Sum of line-items amounts, minus cart-level discounts and coupons. This amount includes taxes, where applicable.
          format: double
        coupons:
          type: array
          description: ''
          items:
            $ref: '#/components/schemas/CartCoupon'
        discounts:
          type: array
          description: ''
          items:
            title: Applied Discount
            type: object
            properties:
              name:
                type: string
                description: The name provided by the merchant.
              discountedAmount:
                type: number
                description: The discounted amount applied within a given context.
                format: double
        lineItems:
          type: object
          description: ''
          items:
            title: Line Item
            required:
              - digitalItems
              - physicalItems
            type: object
            properties:
              physicalItems:
                type: array
                description: ''
                items:
                  title: Item Physical
                  required:
                    - quantity
                  type: object
                  properties:
                    id:
                      type: string
                      description: The line-item ID.
                    parentId:
                      type: string
                      description: The product is part of a bundle such as a product pick list, then the parentId or the main product ID will populate.
                    variantId:
                      type: integer
                      description: ID of the variant.
                    productId:
                      type: integer
                      description: ID of the product.
                    sku:
                      type: string
                      description: SKU of the variant.
                    name:
                      type: string
                      description: The itemʼs product name.
                    url:
                      type: string
                      description: The product URL.
                    quantity:
                      type: number
                      description: Quantity of this item.
                      format: double
                    isTaxable:
                      type: boolean
                      description: Whether the item is taxable.
                    imageUrl:
                      type: string
                      description: A publicly-accessible URL for an image of this item.
                    discounts:
                      type: array
                      description: A list of discounts applied to this item, as an array of AppliedDiscount objects.
                      items:
                        title: Applied Discount
                        type: object
                        properties:
                          name:
                            type: string
                            description: The name provided by the merchant.
                          discountedAmount:
                            type: number
                            description: The discounted amount applied within a given context.
                            format: double
                    discountAmount:
                      type: number
                      description: The total value of all discounts applied to this item (excluding coupon).
                      format: double
                    couponAmount:
                      type: number
                      description: The total value of all coupons applied to this item.
                      format: double
                    listPrice:
                      type: number
                      description: The item’s list price, as quoted by the manufacturer or distributor.
                      format: double
                    salePrice:
                      type: number
                      description: The itemʼs price after all discounts are applied. The final price before tax calculation.
                      format: double
                    extendedListPrice:
                      type: number
                      description: The itemʼs list price multiplied by the quantity.
                      format: double
                    extendedSalePrice:
                      type: number
                      description: The itemʼs sale price multiplied by the quantity.
                      format: double
                    comparisonPrice:
                      type: number
                      description: The itemʼs comparison price
                    extendedComparisonPrice:
                      type: number
                      description: The itemʼs comparison price multiplied by the quantity.
                    type:
                      type: string
                      description: the product type - physical or digital
                    addedByPromotion:
                      type: boolean
                      description: If the item was added automatically by a promotion, such as a coupon or buy one, get one.
                    isShippingRequired:
                      type: boolean
                      description: Whether this item requires shipping to a physical address.
                    isMutable:
                      type: boolean
                      description: ''
                    giftWrapping:
                      title: Gift Wrapping
                      type: object
                      properties:
                        name:
                          type: string
                          description: ''
                        message:
                          type: string
                          description: ''
                        amount:
                          type: number
                          description: ''
                          format: double
              digitalItems:
                type: array
                description: ''
                items:
                  title: Item Digital
                  required:
                    - quantity
                  type: object
                  properties:
                    id:
                      type: string
                      description: The line-item ID.
                    parentId:
                      type: string
                      description: Bundled items will have their parentʼs item ID.
                    variantId:
                      type: number
                      description: ID of the variant.
                      format: double
                    productId:
                      type: number
                      description: ID of the product.
                      format: double
                    sku:
                      type: string
                      description: SKU of the variant.
                    name:
                      type: string
                      description: The itemʼs product name.
                    url:
                      type: string
                      description: The product URL.
                    quantity:
                      type: number
                      description: Quantity of this item.
                      format: double
                    isTaxable:
                      type: boolean
                      description: Whether the item is taxable.
                    imageUrl:
                      type: string
                      description: A publicly-accessible URL for an image of this item.
                    discounts:
                      type: array
                      description: A list of discounts applied to this item, as an array of AppliedDiscount objects.
                      items:
                        title: Applied Discount
                        type: object
                        properties:
                          name:
                            type: string
                            description: The name provided by the merchant.
                          discountedAmount:
                            type: number
                            description: The discounted amount applied within a given context.
                            format: double
                    discountAmount:
                      type: number
                      description: The total value of all discounts applied to this item (excluding coupon).
                      format: double
                    couponAmount:
                      type: number
                      description: The total value of all coupons applied to this item.
                      format: double
                    listPrice:
                      type: number
                      description: The item’s list price, as quoted by the manufacturer or distributor.
                      format: double
                    salePrice:
                      type: number
                      description: The itemʼs price after all discounts are applied. The final price before tax calculation.
                      format: double
                    extendedListPrice:
                      type: number
                      description: The itemʼs list price multiplied by the quantity.
                      format: double
                    extendedSalePrice:
                      type: number
                      description: The itemʼs sale price multiplied by the quantity.
                      format: double
                    type:
                      type: string
                      description: The product type - physical or digital.
                    isShippingRequired:
                      type: boolean
                      description: Whether this item requires shipping to a physical address.
                    downloadFileUrls:
                      type: array
                      description: URLs to download all product files.
                      items:
                        type: string
                    downloadPageUrl:
                      type: string
                      description: The URL for the combined downloads page.
                    downloadSize:
                      type: string
                      description: 'Specifies the combined download size in human-readable style; for example, `30MB`.'
              giftCertificate:
                type: array
                description: ''
                items:
                  title: Item Gift Certificate
                  required:
                    - amount
                    - recipient
                    - sender
                    - theme
                  type: object
                  properties:
                    id:
                      type: string
                      description: Gift certificate identifier
                    name:
                      type: string
                      description: 'The name of the purchased gift certificate; for example, `$20 Gift Certificate`.'
                    theme:
                      type: string
                      description: 'Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.'
                    amount:
                      type: number
                      description: 'Value must be between $1.00 and $1,000.00.'
                      format: double
                    taxable:
                      type: boolean
                      description: ''
                    sender:
                      title: Contact Entity
                      type: object
                      properties:
                        name:
                          type: string
                          description: ''
                        email:
                          type: string
                          description: ''
                    recipient:
                      title: Contact Entity
                      type: object
                      properties:
                        name:
                          type: string
                          description: ''
                        email:
                          type: string
                          description: ''
                    message:
                      type: string
                      description: Limited to 200 characters.
                    type:
                      type: string
                      description: Explicitly specifying the gift certificate type.
              customItems:
                type: array
                items:
                  title: Item Custom
                  type: object
                  properties:
                    id:
                      type: string
                      description: ID of the custom item.
                    sku:
                      type: string
                      description: Custom item SKU.
                    name:
                      type: string
                      description: Item name.
                    quantity:
                      type: string
                    listPrice:
                      type: string
                      description: Price of the item. With or without tax depending on your store setup.
                  description: |-
                    Add a custom item to the shoppers cart.
                    * Custom items are not added to the catalog.
                    * The price should be set to match the store settings for taxes.
        createdTime:
          type: string
          description: Time when the cart was created.
        updatedTime:
          type: string
          description: Time when the cart was last updated.
      description: A cart contains a collection of items, prices, discounts, etc. It does not contain customer-related data.
      x-internal: false
    checkoutGiftCertificates:
      title: checkoutGiftCertificates
      type: array
      description: Applied gift certificate (as a payment method).
      items:
        title: Gift Certificate
        type: object
        properties:
          balance:
            type: number
            description: ''
            format: double
          code:
            type: string
            description: ''
          purchaseDate:
            type: string
            description: ''
            format: date
          remaining:
            type: number
            description: ''
            format: double
          used:
            type: number
            description: ''
            format: double
        description: The values presented here are projections of how much we would be using out of an existent gift certificate
      x-internal: false
    consignmentShippingOption_Base:
      title: consignmentShippingOption_Base
      type: object
      properties:
        description:
          type: string
          description: Read only.
          readOnly: true
        id:
          type: string
          description: ''
        type:
          type: string
          description: Specifies the type of shipping option; for example, flat rate, UPS, etc.
        imageUrl:
          type: string
          description: ''
        cost:
          type: number
          description: ''
          format: double
        transitTime:
          type: string
          description: An estimate of the arrival time.
      x-internal: false
    PickupOption:
      type: object
      title: Pickup Option
      description: An option that represents a location where customers can pick up items.
      properties:
        pickupMethodId:
          type: integer  
  responses:
    Checkout:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/checkout_Full'
          example:
            id: 29eb9b44-8f33-4e4a-9429-d0e8e24641ed
            cart:
              id: 29eb9b44-8f33-4e4a-9429-d0e8e24641ed
              customerId: 18
              email: dwaynecole@testing.com
              currency:
                name: US Dollars
                code: USD
                symbol: $
                decimalPlaces: 2
              isTaxIncluded: true
              baseAmount: 7.95
              discountAmount: 0
              cartAmount: 7.95
              coupons: []
              discounts:
                - id: 243c9ca2-22b4-417a-8b09-b3fc05778b52
                  discountedAmount: 0
              lineItems:
                physicalItems:
                  - id: 243c9ca2-22b4-417a-8b09-b3fc05778b52
                    parentId: {}
                    variantId: 345
                    productId: 174
                    sku: ''
                    name: 1L Le Parfait Jar
                    url: 'https://{store_domain}/all/1l-le-parfait-jar/'
                    quantity: 1
                    brand: OFS
                    isTaxable: true
                    imageUrl: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/174/images/425/leparfaitmedium3_1024x1024_1024x1024__37756__81924.1534344526.330.500.jpg?c=2'
                    discounts: []
                    discountAmount: 0
                    couponAmount: 0
                    listPrice: 7.95
                    salePrice: 7.95
                    extendedListPrice: 7.95
                    extendedSalePrice: 7.95
                    isShippingRequired: true
                    giftWrapping: {}
                    addedByPromotion: false
                digitalItems: []
                giftCertificates: []
                customItems: []
              createdTime: '2019-01-10T17:18:00+00:00'
              updatedTime: '2019-01-10T17:19:47+00:00'
            billingAddress:
              id: 5c377ead301c2
              firstName: Dwayne
              lastName: Cole
              email: dwaynecole@testing.com
              company: ''
              address1: Mauna Kea Access Rd
              address2: ''
              city: Hilo
              stateOrProvince: Hawaii
              stateOrProvinceCode: HI
              country: United States
              countryCode: US
              postalCode: '96720'
              phone: '8081234567'
              customFields: []
            consignments:
              - id: 5c377ead30ac1
                shippingCost: 8
                handlingCost: 0
                couponDiscounts: []
                discounts: []
                lineItemIds:
                  - 243c9ca2-22b4-417a-8b09-b3fc05778b52
                selectedShippingOption:
                  id: d09e05c0-3788-44df-a1bb-b6d3afdf6841
                  type: shipping_byweight
                  description: Ship by Weight
                  imageUrl: ''
                  cost: 8
                  transitTime: ''
                address:
                  firstName: Dwayne
                  lastName: Cole
                  email: dwaynecole@testing.com
                  company: ''
                  address1: Mauna Kea Access Rd
                  address2: ''
                  city: Hilo
                  stateOrProvince: Hawaii
                  stateOrProvinceCode: HI
                  country: United States
                  countryCode: US
                  postalCode: '96720'
                  phone: '8081234567'
                  customFields: []
            orderId: null
            shippingCostTotal: 8
            shippingCostBeforeDiscount: 8
            handlingCostTotal: 0
            taxTotal: 1.22
            coupons: []
            taxes:
              - name: Tax
                amount: 1.22
            subtotal: 7.95
            grandTotal: 15.95
            giftCertificates: []
            createdTime: '2019-01-10T17:18:00+00:00'
            updatedTime: '2019-01-10T17:19:47+00:00'
            customerMessage: ''
  parameters:
    include:
      name: include
      in: query
      schema:
        type: string
        default: consignments.availableShippingOptions

openapi: '3.0.3'
info:
  title: Checkouts
  description: |-
    For more information on authenticating BigCommerce APIs, see [Authentication](/api-docs/getting-started/authentication).

    Create and manage checkouts from existing carts using BigCommerce checkout logic.
  version: '3.0'
  termsOfService: 'http://www.bigcommerce.com/terms' 
  contact: 
    name: BigCommerce 
    url: 'https://www.bigcommerce.com' 
    email: support@bigcommerce.com 
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
tags:
  - name: Checkout
  - name: Checkout Billing Address
  - name: Checkout Consignments
  - name: Checkout Coupons
  - name: Checkout Discounts
  - name: Checkout Orders
  - name: Checkout Settings
  - name: Checkout Token
security:
  - X-Auth-Token: []
paths:
  '/checkouts/{checkoutId}':
    parameters:
      - $ref: '#/components/parameters/checkoutId'
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
        - Checkout
      summary: Get a Checkout
      description: |-
        Returns a *Checkout*.

        **Notes**

        The cart ID and checkout ID are the same.
      operationId: CheckoutsByCheckoutIdGet
      parameters:
        - name: include
          in: query
          description: |-
            * `cart.line_items.physical_items.options` - physical options
            * `cart.line_items.digital_items.options` - digital options
            * `consignments.available_shipping_options` - shipping options
            * `promotions.banners` - promotion options
          schema:
            type: string
            enum:
              - cart.line_items.physical_items.options
              - cart.line_items.digital_items.options
              - consignments.available_shipping_options
              - promotions.banners
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Checkout'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
              examples: {}
            Available Shipping Options:
              example:
                data:
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  cart:
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    customer_id: 11
                    channel_id: 1
                    email: janedoe@example.com
                    currency:
                      code: USD
                    base_amount: 31.95
                    discount_amount: 0
                    cart_amount_inc_tax: 33.23
                    cart_amount_ex_tax: 31.95
                    coupons:
                      - id: 1
                        code: SHOP20
                        coupon_type: percentage_discount
                        discounted_amount: 0.9
                    discounts:
                      - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                          parent_id: 123
                          variant_id: 359
                          product_id: 188
                          sku: DUST1
                          name: Hello
                          url: 'https://{store_hash}/all/dustpan-brush/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35.95
                          list_price: 31.95
                          sale_price: 33.23
                          extended_list_price: 31.95
                          extended_sale_price: 33.23
                          is_require_shipping: true
                          gift_wrapping: {}
                      digital_items: []
                      gift_certificates: []
                      custom_items: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    updated_time: '2019-08-05T15:41:28+00:00'
                  billing_address:
                    id: 5d484d668e5aa
                    first_name: Jane
                    last_name: Doe
                    email: janedoe@example.com
                    company: BigCommerce
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: ''
                    phone: '12125685555'
                    custom_fields: []
                  consignments:
                    - id: 5d484e28d20a8
                      shipping_cost_inc_tax: 0
                      shipping_cost_ex_tax: 0
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      coupon_discounts: []
                      discounts: []
                      line_item_ids:
                        - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                      address:
                        first_name: BigCommerce
                        last_name: Cart/Checkout
                        email: jane2@example.com
                        company: ''
                        address1: 123 Main Street
                        address2: ''
                        city: Austin
                        state_or_province: Texas
                        state_or_province_code: TX
                        country: United States
                        country_code: US
                        postal_code: '78751'
                        phone: '688546'
                        customFields:
                          - field_id: field_25
                            field_value: Great!
                      available_shipping_options:
                        - id: 006a58a98c9a844225552ee2a9c60ca8
                          type: shipping_byweight
                          description: Ship by Weight
                          image_url: ''
                          cost: 8
                          transit_time: ''
                          additional_description: ''
                        - id: 722d78b5120de60a725e41be9bb8d999
                          type: shipping_flatrate
                          description: Flat Rate
                          image_url: ''
                          cost: 12
                          transit_time: ''
                          additional_description: ''
                        - id: 71090fa93c8985348892543c3f4887b6
                          type: shipping_upsready
                          description: UPS® (UPS Next Day Air®)
                          image_url: ''
                          cost: 43.9
                          transit_time: 1 business day
                          additional_description: ''
                  taxes:
                    - name: Tax
                      amount: 1.28
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 1.28
                  subtotal_inc_tax: 33.23
                  subtotal_ex_tax: 31.95
                  grand_total: 33.23
                  created_time: '2019-08-05T15:38:14+00:00'
                  updated_time: '2019-08-05T15:41:28+00:00'
                  customer_message: ''
                meta: {}
            Selected Shipping Options:
              example:
                data:
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  cart:
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    customer_id: 11
                    channel_id: 1
                    email: janedoe@example.com
                    currency:
                      code: USD
                    base_amount: 31.95
                    discount_amount: 0
                    cart_amount_inc_tax: 33.23
                    cart_amount_ex_tax: 31.95
                    coupons: []
                    discounts:
                      - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                          parent_id: 123
                          variant_id: 359
                          product_id: 188
                          sku: DUST1
                          name: Hello
                          url: 'https://{store_hash}/all/dustpan-brush/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35.95
                          list_price: 31.95
                          sale_price: 33.23
                          extended_list_price: 31.95
                          extended_sale_price: 33.23
                          is_require_shipping: true
                      digital_items: []
                      gift_certificates: []
                      custom_items: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    updated_time: '2019-08-05T15:41:28+00:00'
                  billing_address:
                    id: 5d484d668e5aa
                    first_name: Jane
                    last_name: Doe
                    email: janedoe@example.com
                    company: BigCommerce
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: ''
                    phone: '12125559659'
                    custom_fields: []
                  consignments:
                    - id: 5d484e28d20a8
                      shipping_cost_inc_tax: 8.32
                      shipping_cost_ex_tax: 8
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      coupon_discounts: []
                      discounts: []
                      line_item_ids:
                        - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                      selected_shipping_option:
                        id: 006a58a98c9a844225552ee2a9c60ca8
                        type: shipping_byweight
                        description: Ship by Weight
                        image_url: ''
                        cost: 8
                        transit_time: ''
                        additional_description: ''
                      address:
                        first_name: BigCommerce
                        last_name: Cart/Checkout
                        email: jane2@example.com
                        company: ''
                        address1: 123 Main Street
                        address2: ''
                        city: Austin
                        state_or_province: Texas
                        state_or_province_code: TX
                        country: United States
                        country_code: US
                        postal_code: '78751'
                        phone: '688546'
                        customFields:
                          - field_id: field_25
                            field_value: Great!
                  taxes:
                    - name: Tax
                      amount: 1.6
                  coupons: []
                  shipping_cost_total_inc_tax: 8.32
                  shipping_cost_total_ex_tax: 8
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 1.6
                  subtotal_inc_tax: 33.23
                  subtotal_ex_tax: 31.95
                  grand_total: 41.55
                  created_time: '2019-08-05T15:38:14+00:00'
                  updated_time: '2019-08-05T15:41:28+00:00'
                  customer_message: ''
                meta: {}
            Coupon Applied:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 25
                    channel_id: 1
                    email: customer@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 53.6
                    cart_amount_ex_tax: 53.6
                    coupons:
                      - id: 1
                        code: SHOP20
                        coupon_type: percentage_discount
                        discounted_amount: 13.4
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 7
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 6.4
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts:
                            - id: coupon
                              discounted_amount: 6.4
                          coupons: 6.4
                          discount_amount: 0
                          coupon_amount: 6.4
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts:
                            - id: coupon
                              discounted_amount: 7
                          coupons: 7
                          discount_amount: 0
                          coupon_amount: 7
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:08:01+00:00'
                  billing_address:
                    id: 618a9ce18173e
                    first_name: Jane
                    last_name: Doe
                    email: customer@example.com
                    company: ''
                    address1: 123 Main Street
                    address2: ''
                    city: ''
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: '29681'
                    phone: '12125556895'
                    custom_fields: []
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons:
                    - id: 1
                      code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 13.4
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 53.6
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:08:01+00:00'
                  customer_message: ''
                meta: {}
            No Coupon Applied:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 0
                    channel_id: 1
                    email: example@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 67
                    cart_amount_ex_tax: 67
                    coupons: []
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 0
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:06:56+00:00'
                  billing_address: {}
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 67
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:06:56+00:00'
                  customer_message: ''
                meta: {}
            Include promotions:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 0
                    channel_id: 1
                    email: example@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 67
                    cart_amount_ex_tax: 67
                    coupons: []
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 0
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:06:56+00:00'
                  billing_address: {}
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 67
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:06:56+00:00'
                  customer_message: ''
                  promotions:
                    - banners:
                        - id: '3'
                          type: applied
                          page:
                            - homepage
                            - cartpage
                          text: Some text
                meta: {}
            example-1:
              example:
                data:
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  cart:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    customer_id: 0
                    email: string@example.com
                    currency:
                      code: string
                    base_amount: 0
                    channel_id: 0
                    discount_amount: 0
                    cart_amount_inc_tax: 0
                    cart_amount_ex_tax: 0
                    coupons:
                      - code: string
                        id: 0
                        coupon_type: string
                        discounted_amount: 0
                    discounts:
                      - id: string
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - quantity: 0
                          id: string
                          variant_id: 0
                          product_id: 0
                          sku: string
                          name: string
                          url: string
                          is_taxable: true
                          image_url: string
                          discounts:
                            - id: string
                              discounted_amount: 0
                          coupons: 0
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 0
                          list_price: 0
                          sale_price: 0
                          extended_list_price: 0
                          extended_sale_price: 0
                          is_require_shipping: true
                          is_mutable: true
                          parent_id: 0
                          gift_wrapping:
                            name: string
                            message: string
                            amount: 0
                            amount_as_integer: 0
                      digital_items:
                        - quantity: 0
                          id: string
                          variant_id: 0
                          parent_id: 0
                          product_id: 0
                          sku: string
                          name: string
                          url: string
                          is_mutable: true
                          is_require_shipping: true
                          is_taxable: true
                          image_url: string
                          discounts:
                            - id: string
                              discounted_amount: 0
                          coupons: 0
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 0
                          list_price: 0
                          sale_price: 0
                          extended_list_price: 0
                          extended_sale_price: 0
                      gift_certificates:
                        - theme: string
                          amount: 0
                          sender:
                            name: string
                            email: string
                          recipient:
                            name: string
                            email: string
                          id: string
                          name: string
                          taxable: true
                          message: string
                      custom_items:
                        - quantity: 0
                          id: string
                          extended_list_price: 0
                          list_price: 0
                          sku: string
                          name: string
                          image_url: string
                    created_time: string
                    updated_time: string
                  billing_address:
                    first_name: string
                    last_name: string
                    email: string
                    company: string
                    address1: string
                    address2: string
                    city: string
                    state_or_province: string
                    state_or_province_code: string
                    country_code: string
                    postal_code: string
                    phone: '12128565555'
                    custom_fields:
                      - field_id: string
                        field_value: string
                    id: string
                  consignments:
                    - id: string
                      shippingAddress: {}
                      address:
                        first_name: string
                        last_name: string
                        email: string
                        company: string
                        address1: string
                        address2: string
                        city: string
                        state_or_province: string
                        state_or_province_code: string
                        country_code: string
                        postal_code: string
                        phone: '12125556858'
                        custom_fields:
                          - field_id: string
                            field_value: string
                        id: string
                      available_shipping_options:
                        - description: string
                          id: string
                          type: string
                          image_url: string
                          cost: 0
                          transit_time: string
                          additional_description: string
                      selected_shipping_option:
                        description: string
                        id: string
                        type: string
                        image_url: string
                        cost: 0
                        transit_time: string
                        additional_description: string
                      coupon_discounts:
                        - code: string
                          amount: 0
                      discounts:
                        - id: 0
                      shipping_cost_inc_tax: 0
                      shipping_cost_ex_tax: 0
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      line_item_ids:
                        - string
                  taxes:
                    - name: string
                      amount: 0
                  coupons:
                    - code: SHOPNOW
                      id: 1
                      coupon_type: percentage_discount
                      discounted_amount: 0.9
                  order_id: string
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 0
                  subtotal_ex_tax: 0
                  grand_total: 0
                  created_time: string
                  updated_time: string
                  customer_message: string
                  promotions:
                    - banners:
                        - id: '3'
                          type: applied
                          page:
                            - homepage
                            - cartpage
                          text: Some text
        '404':
          description: Error code that is displayed when a given checkout ID is not found.
          content:
            application/json:
              schema:
                title: Checkout Error
                type: object
                properties:
                  errors:
                    type: array
                    description: ''
                    items:
                      title: ErrorDetail
                      type: object
                      properties:
                        status:
                          type: integer
                          description: ''
                          format: int32
                        title:
                          type: string
                          description: ''
                        type:
                          type: string
                          description: ''
                        detail:
                          type: string
                          description: ''
    put:
      tags:
        - Checkout
      summary: Update Customer Messages
      description: |-
        Change customer message pertaining to an existing *Checkout*.

        **Limits:**
        * 2000 characters for customer message
      operationId: CheckoutsByCheckoutIdPut
      parameters:
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        description: '`customer_message` is required (maximum length is 2000).'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Checkout_Put'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Checkout'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
            Available Shipping Options:
              example:
                data:
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  cart:
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    customer_id: 11
                    channel_id: 1
                    email: janedoe@example.com
                    currency:
                      code: USD
                    base_amount: 31.95
                    discount_amount: 0
                    cart_amount_inc_tax: 33.23
                    cart_amount_ex_tax: 31.95
                    coupons:
                      - id: 1
                        code: SHOP20
                        coupon_type: percentage_discount
                        discounted_amount: 0.9
                    discounts:
                      - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                          parent_id: 123
                          variant_id: 359
                          product_id: 188
                          sku: DUST1
                          name: Hello
                          url: 'https://{store_hash}/all/dustpan-brush/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35.95
                          list_price: 31.95
                          sale_price: 33.23
                          extended_list_price: 31.95
                          extended_sale_price: 33.23
                          is_require_shipping: true
                          gift_wrapping: {}
                      digital_items: []
                      gift_certificates: []
                      custom_items: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    updated_time: '2019-08-05T15:41:28+00:00'
                  billing_address:
                    id: 5d484d668e5aa
                    first_name: Jane
                    last_name: Doe
                    email: janedoe@example.com
                    company: BigCommerce
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: ''
                    phone: '12125685555'
                    custom_fields: []
                  consignments:
                    - id: 5d484e28d20a8
                      shipping_cost_inc_tax: 0
                      shipping_cost_ex_tax: 0
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      coupon_discounts: []
                      discounts: []
                      line_item_ids:
                        - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                      address:
                        first_name: BigCommerce
                        last_name: Cart/Checkout
                        email: jane2@example.com
                        company: ''
                        address1: 123 Main Street
                        address2: ''
                        city: Austin
                        state_or_province: Texas
                        state_or_province_code: TX
                        country: United States
                        country_code: US
                        postal_code: '78751'
                        phone: '688546'
                        customFields:
                          - field_id: field_25
                            field_value: Great!
                      available_shipping_options:
                        - id: 006a58a98c9a844225552ee2a9c60ca8
                          type: shipping_byweight
                          description: Ship by Weight
                          image_url: ''
                          cost: 8
                          transit_time: ''
                          additional_description: ''
                        - id: 722d78b5120de60a725e41be9bb8d999
                          type: shipping_flatrate
                          description: Flat Rate
                          image_url: ''
                          cost: 12
                          transit_time: ''
                          additional_description: ''
                        - id: 71090fa93c8985348892543c3f4887b6
                          type: shipping_upsready
                          description: UPS® (UPS Next Day Air®)
                          image_url: ''
                          cost: 43.9
                          transit_time: 1 business day
                          additional_description: ''
                  taxes:
                    - name: Tax
                      amount: 1.28
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 1.28
                  subtotal_inc_tax: 33.23
                  subtotal_ex_tax: 31.95
                  grand_total: 33.23
                  created_time: '2019-08-05T15:38:14+00:00'
                  updated_time: '2019-08-05T15:41:28+00:00'
                  customer_message: ''
                meta: {}
            Selected Shipping Options:
              example:
                data:
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  cart:
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    customer_id: 11
                    channel_id: 1
                    email: janedoe@example.com
                    currency:
                      code: USD
                    base_amount: 31.95
                    discount_amount: 0
                    cart_amount_inc_tax: 33.23
                    cart_amount_ex_tax: 31.95
                    coupons: []
                    discounts:
                      - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                          parent_id: 123
                          variant_id: 359
                          product_id: 188
                          sku: DUST1
                          name: Hello
                          url: 'https://{store_hash}/all/dustpan-brush/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35.95
                          list_price: 31.95
                          sale_price: 33.23
                          extended_list_price: 31.95
                          extended_sale_price: 33.23
                          is_require_shipping: true
                      digital_items: []
                      gift_certificates: []
                      custom_items: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    updated_time: '2019-08-05T15:41:28+00:00'
                  billing_address:
                    id: 5d484d668e5aa
                    first_name: Jane
                    last_name: Doe
                    email: janedoe@example.com
                    company: BigCommerce
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: ''
                    phone: '12125559659'
                    custom_fields: []
                  consignments:
                    - id: 5d484e28d20a8
                      shipping_cost_inc_tax: 8.32
                      shipping_cost_ex_tax: 8
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      coupon_discounts: []
                      discounts: []
                      line_item_ids:
                        - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                      selected_shipping_option:
                        id: 006a58a98c9a844225552ee2a9c60ca8
                        type: shipping_byweight
                        description: Ship by Weight
                        image_url: ''
                        cost: 8
                        transit_time: ''
                        additional_description: ''
                      address:
                        first_name: BigCommerce
                        last_name: Cart/Checkout
                        email: jane2@example.com
                        company: ''
                        address1: 123 Main Street
                        address2: ''
                        city: Austin
                        state_or_province: Texas
                        state_or_province_code: TX
                        country: United States
                        country_code: US
                        postal_code: '78751'
                        phone: '688546'
                        customFields:
                          - field_id: field_25
                            field_value: Great!
                  taxes:
                    - name: Tax
                      amount: 1.6
                  coupons: []
                  shipping_cost_total_inc_tax: 8.32
                  shipping_cost_total_ex_tax: 8
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 1.6
                  subtotal_inc_tax: 33.23
                  subtotal_ex_tax: 31.95
                  grand_total: 41.55
                  created_time: '2019-08-05T15:38:14+00:00'
                  updated_time: '2019-08-05T15:41:28+00:00'
                  customer_message: ''
                meta: {}
            Coupon Applied:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 25
                    channel_id: 1
                    email: customer@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 53.6
                    cart_amount_ex_tax: 53.6
                    coupons:
                      - id: 1
                        code: SHOP20
                        coupon_type: percentage_discount
                        discounted_amount: 13.4
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 7
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 6.4
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts:
                            - id: coupon
                              discounted_amount: 6.4
                          coupons: 6.4
                          discount_amount: 0
                          coupon_amount: 6.4
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts:
                            - id: coupon
                              discounted_amount: 7
                          coupons: 7
                          discount_amount: 0
                          coupon_amount: 7
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:08:01+00:00'
                  billing_address:
                    id: 618a9ce18173e
                    first_name: Jane
                    last_name: Doe
                    email: customer@example.com
                    company: ''
                    address1: 123 Main Street
                    address2: ''
                    city: ''
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: '29681'
                    phone: '12125556895'
                    custom_fields: []
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons:
                    - id: 1
                      code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 13.4
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 53.6
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:08:01+00:00'
                  customer_message: ''
                meta: {}
            No Coupon Applied:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 0
                    channel_id: 1
                    email: example@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 67
                    cart_amount_ex_tax: 67
                    coupons: []
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 0
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:06:56+00:00'
                  billing_address: {}
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 67
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:06:56+00:00'
                  customer_message: ''
                meta: {}
            Include promotions:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 0
                    channel_id: 1
                    email: example@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 67
                    cart_amount_ex_tax: 67
                    coupons: []
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 0
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:06:56+00:00'
                  billing_address: {}
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 67
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:06:56+00:00'
                  customer_message: ''
                  promotions:
                    - banners:
                        - id: '3'
                          type: applied
                          page:
                            - homepage
                            - cartpage
                          text: Some text
                meta: {}
            example-1:
              example:
                data:
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  cart:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    customer_id: 0
                    email: string@example.com
                    currency:
                      code: string
                    base_amount: 0
                    channel_id: 0
                    discount_amount: 0
                    cart_amount_inc_tax: 0
                    cart_amount_ex_tax: 0
                    coupons:
                      - code: string
                        id: 0
                        coupon_type: string
                        discounted_amount: 0
                    discounts:
                      - id: string
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - quantity: 0
                          id: string
                          variant_id: 0
                          product_id: 0
                          sku: string
                          name: string
                          url: string
                          is_taxable: true
                          image_url: string
                          discounts:
                            - id: string
                              discounted_amount: 0
                          coupons: 0
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 0
                          list_price: 0
                          sale_price: 0
                          extended_list_price: 0
                          extended_sale_price: 0
                          is_require_shipping: true
                          is_mutable: true
                          parent_id: 0
                          gift_wrapping:
                            name: string
                            message: string
                            amount: 0
                            amount_as_integer: 0
                      digital_items:
                        - quantity: 0
                          id: string
                          variant_id: 0
                          parent_id: 0
                          product_id: 0
                          sku: string
                          name: string
                          url: string
                          is_mutable: true
                          is_require_shipping: true
                          is_taxable: true
                          image_url: string
                          discounts:
                            - id: string
                              discounted_amount: 0
                          coupons: 0
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 0
                          list_price: 0
                          sale_price: 0
                          extended_list_price: 0
                          extended_sale_price: 0
                      gift_certificates:
                        - theme: string
                          amount: 0
                          sender:
                            name: string
                            email: string
                          recipient:
                            name: string
                            email: string
                          id: string
                          name: string
                          taxable: true
                          message: string
                      custom_items:
                        - quantity: 0
                          id: string
                          extended_list_price: 0
                          list_price: 0
                          sku: string
                          name: string
                          image_url: string
                    created_time: string
                    updated_time: string
                  billing_address:
                    first_name: string
                    last_name: string
                    email: string
                    company: string
                    address1: string
                    address2: string
                    city: string
                    state_or_province: string
                    state_or_province_code: string
                    country_code: string
                    postal_code: string
                    phone: '12128565555'
                    custom_fields:
                      - field_id: string
                        field_value: string
                    id: string
                  consignments:
                    - id: string
                      shippingAddress: {}
                      address:
                        first_name: string
                        last_name: string
                        email: string
                        company: string
                        address1: string
                        address2: string
                        city: string
                        state_or_province: string
                        state_or_province_code: string
                        country_code: string
                        postal_code: string
                        phone: '12125556858'
                        custom_fields:
                          - field_id: string
                            field_value: string
                        id: string
                      available_shipping_options:
                        - description: string
                          id: string
                          type: string
                          image_url: string
                          cost: 0
                          transit_time: string
                          additional_description: string
                      selected_shipping_option:
                        description: string
                        id: string
                        type: string
                        image_url: string
                        cost: 0
                        transit_time: string
                        additional_description: string
                      coupon_discounts:
                        - code: string
                          amount: 0
                      discounts:
                        - id: 0
                      shipping_cost_inc_tax: 0
                      shipping_cost_ex_tax: 0
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      line_item_ids:
                        - string
                  taxes:
                    - name: string
                      amount: 0
                  coupons:
                    - code: SHOPNOW
                      id: 1
                      coupon_type: percentage_discount
                      discounted_amount: 0.9
                  order_id: string
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 0
                  subtotal_ex_tax: 0
                  grand_total: 0
                  created_time: string
                  updated_time: string
                  customer_message: string
                  promotions:
                    - banners:
                        - id: '3'
                          type: applied
                          page:
                            - homepage
                            - cartpage
                          text: Some text
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-codegen-request-body-name: body
  '/checkouts/{checkoutId}/discounts':
    post:
      tags:
        - Checkout Discounts
      summary: Add Discount to Checkout
      description: |-
        Adds a discount to an existing *checkout*.

        This discount only applies to `line_items`. When you call this API, you clear out all existing discounts applied to line items, including product and order-based discounts.

        This endpoint splits the discount between line items based on the item value.

        Required Fields
        * discounted_amount
      operationId: post-store_hash-v3-checkouts-checkoutId-discounts
      parameters:
        - $ref: '#/components/parameters/checkoutId'
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cart:
                  type: object
                  properties:
                    discounts:
                      type: array
                      items:
                        required:
                          - discounted_amount
                        type: object
                        properties:
                          discounted_amount:
                            type: number
                            example: 10
                          name:
                            type: string
                            example: manual
        required: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Checkout'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
            Available Shipping Options:
              example:
                data:
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  cart:
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    customer_id: 11
                    channel_id: 1
                    email: janedoe@example.com
                    currency:
                      code: USD
                    base_amount: 31.95
                    discount_amount: 0
                    cart_amount_inc_tax: 33.23
                    cart_amount_ex_tax: 31.95
                    coupons:
                      - id: 1
                        code: SHOP20
                        coupon_type: percentage_discount
                        discounted_amount: 0.9
                    discounts:
                      - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                          parent_id: 123
                          variant_id: 359
                          product_id: 188
                          sku: DUST1
                          name: Hello
                          url: 'https://{store_hash}/all/dustpan-brush/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35.95
                          list_price: 31.95
                          sale_price: 33.23
                          extended_list_price: 31.95
                          extended_sale_price: 33.23
                          is_require_shipping: true
                          gift_wrapping: {}
                      digital_items: []
                      gift_certificates: []
                      custom_items: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    updated_time: '2019-08-05T15:41:28+00:00'
                  billing_address:
                    id: 5d484d668e5aa
                    first_name: Jane
                    last_name: Doe
                    email: janedoe@example.com
                    company: BigCommerce
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: ''
                    phone: '12125685555'
                    custom_fields: []
                  consignments:
                    - id: 5d484e28d20a8
                      shipping_cost_inc_tax: 0
                      shipping_cost_ex_tax: 0
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      coupon_discounts: []
                      discounts: []
                      line_item_ids:
                        - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                      address:
                        first_name: BigCommerce
                        last_name: Cart/Checkout
                        email: jane2@example.com
                        company: ''
                        address1: 123 Main Street
                        address2: ''
                        city: Austin
                        state_or_province: Texas
                        state_or_province_code: TX
                        country: United States
                        country_code: US
                        postal_code: '78751'
                        phone: '688546'
                        customFields:
                          - field_id: field_25
                            field_value: Great!
                      available_shipping_options:
                        - id: 006a58a98c9a844225552ee2a9c60ca8
                          type: shipping_byweight
                          description: Ship by Weight
                          image_url: ''
                          cost: 8
                          transit_time: ''
                          additional_description: ''
                        - id: 722d78b5120de60a725e41be9bb8d999
                          type: shipping_flatrate
                          description: Flat Rate
                          image_url: ''
                          cost: 12
                          transit_time: ''
                          additional_description: ''
                        - id: 71090fa93c8985348892543c3f4887b6
                          type: shipping_upsready
                          description: UPS® (UPS Next Day Air®)
                          image_url: ''
                          cost: 43.9
                          transit_time: 1 business day
                          additional_description: ''
                  taxes:
                    - name: Tax
                      amount: 1.28
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 1.28
                  subtotal_inc_tax: 33.23
                  subtotal_ex_tax: 31.95
                  grand_total: 33.23
                  created_time: '2019-08-05T15:38:14+00:00'
                  updated_time: '2019-08-05T15:41:28+00:00'
                  customer_message: ''
                meta: {}
            Selected Shipping Options:
              example:
                data:
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  cart:
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    customer_id: 11
                    channel_id: 1
                    email: janedoe@example.com
                    currency:
                      code: USD
                    base_amount: 31.95
                    discount_amount: 0
                    cart_amount_inc_tax: 33.23
                    cart_amount_ex_tax: 31.95
                    coupons: []
                    discounts:
                      - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                          parent_id: 123
                          variant_id: 359
                          product_id: 188
                          sku: DUST1
                          name: Hello
                          url: 'https://{store_hash}/all/dustpan-brush/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35.95
                          list_price: 31.95
                          sale_price: 33.23
                          extended_list_price: 31.95
                          extended_sale_price: 33.23
                          is_require_shipping: true
                      digital_items: []
                      gift_certificates: []
                      custom_items: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    updated_time: '2019-08-05T15:41:28+00:00'
                  billing_address:
                    id: 5d484d668e5aa
                    first_name: Jane
                    last_name: Doe
                    email: janedoe@example.com
                    company: BigCommerce
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: ''
                    phone: '12125559659'
                    custom_fields: []
                  consignments:
                    - id: 5d484e28d20a8
                      shipping_cost_inc_tax: 8.32
                      shipping_cost_ex_tax: 8
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      coupon_discounts: []
                      discounts: []
                      line_item_ids:
                        - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                      selected_shipping_option:
                        id: 006a58a98c9a844225552ee2a9c60ca8
                        type: shipping_byweight
                        description: Ship by Weight
                        image_url: ''
                        cost: 8
                        transit_time: ''
                        additional_description: ''
                      address:
                        first_name: BigCommerce
                        last_name: Cart/Checkout
                        email: jane2@example.com
                        company: ''
                        address1: 123 Main Street
                        address2: ''
                        city: Austin
                        state_or_province: Texas
                        state_or_province_code: TX
                        country: United States
                        country_code: US
                        postal_code: '78751'
                        phone: '688546'
                        customFields:
                          - field_id: field_25
                            field_value: Great!
                  taxes:
                    - name: Tax
                      amount: 1.6
                  coupons: []
                  shipping_cost_total_inc_tax: 8.32
                  shipping_cost_total_ex_tax: 8
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 1.6
                  subtotal_inc_tax: 33.23
                  subtotal_ex_tax: 31.95
                  grand_total: 41.55
                  created_time: '2019-08-05T15:38:14+00:00'
                  updated_time: '2019-08-05T15:41:28+00:00'
                  customer_message: ''
                meta: {}
            Coupon Applied:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 25
                    channel_id: 1
                    email: customer@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 53.6
                    cart_amount_ex_tax: 53.6
                    coupons:
                      - id: 1
                        code: SHOP20
                        coupon_type: percentage_discount
                        discounted_amount: 13.4
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 7
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 6.4
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts:
                            - id: coupon
                              discounted_amount: 6.4
                          coupons: 6.4
                          discount_amount: 0
                          coupon_amount: 6.4
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts:
                            - id: coupon
                              discounted_amount: 7
                          coupons: 7
                          discount_amount: 0
                          coupon_amount: 7
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:08:01+00:00'
                  billing_address:
                    id: 618a9ce18173e
                    first_name: Jane
                    last_name: Doe
                    email: customer@example.com
                    company: ''
                    address1: 123 Main Street
                    address2: ''
                    city: ''
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: '29681'
                    phone: '12125556895'
                    custom_fields: []
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons:
                    - id: 1
                      code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 13.4
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 53.6
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:08:01+00:00'
                  customer_message: ''
                meta: {}
            No Coupon Applied:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 0
                    channel_id: 1
                    email: example@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 67
                    cart_amount_ex_tax: 67
                    coupons: []
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 0
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:06:56+00:00'
                  billing_address: {}
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 67
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:06:56+00:00'
                  customer_message: ''
                meta: {}
            Include promotions:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 0
                    channel_id: 1
                    email: example@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 67
                    cart_amount_ex_tax: 67
                    coupons: []
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 0
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:06:56+00:00'
                  billing_address: {}
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 67
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:06:56+00:00'
                  customer_message: ''
                  promotions:
                    - banners:
                        - id: '3'
                          type: applied
                          page:
                            - homepage
                            - cartpage
                          text: Some text
                meta: {}
            example-1:
              example:
                data:
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  cart:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    customer_id: 0
                    email: string@example.com
                    currency:
                      code: string
                    base_amount: 0
                    channel_id: 0
                    discount_amount: 0
                    cart_amount_inc_tax: 0
                    cart_amount_ex_tax: 0
                    coupons:
                      - code: string
                        id: 0
                        coupon_type: string
                        discounted_amount: 0
                    discounts:
                      - id: string
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - quantity: 0
                          id: string
                          variant_id: 0
                          product_id: 0
                          sku: string
                          name: string
                          url: string
                          is_taxable: true
                          image_url: string
                          discounts:
                            - id: string
                              discounted_amount: 0
                          coupons: 0
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 0
                          list_price: 0
                          sale_price: 0
                          extended_list_price: 0
                          extended_sale_price: 0
                          is_require_shipping: true
                          is_mutable: true
                          parent_id: 0
                          gift_wrapping:
                            name: string
                            message: string
                            amount: 0
                            amount_as_integer: 0
                      digital_items:
                        - quantity: 0
                          id: string
                          variant_id: 0
                          parent_id: 0
                          product_id: 0
                          sku: string
                          name: string
                          url: string
                          is_mutable: true
                          is_require_shipping: true
                          is_taxable: true
                          image_url: string
                          discounts:
                            - id: string
                              discounted_amount: 0
                          coupons: 0
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 0
                          list_price: 0
                          sale_price: 0
                          extended_list_price: 0
                          extended_sale_price: 0
                      gift_certificates:
                        - theme: string
                          amount: 0
                          sender:
                            name: string
                            email: string
                          recipient:
                            name: string
                            email: string
                          id: string
                          name: string
                          taxable: true
                          message: string
                      custom_items:
                        - quantity: 0
                          id: string
                          extended_list_price: 0
                          list_price: 0
                          sku: string
                          name: string
                          image_url: string
                    created_time: string
                    updated_time: string
                  billing_address:
                    first_name: string
                    last_name: string
                    email: string
                    company: string
                    address1: string
                    address2: string
                    city: string
                    state_or_province: string
                    state_or_province_code: string
                    country_code: string
                    postal_code: string
                    phone: '12128565555'
                    custom_fields:
                      - field_id: string
                        field_value: string
                    id: string
                  consignments:
                    - id: string
                      shippingAddress: {}
                      address:
                        first_name: string
                        last_name: string
                        email: string
                        company: string
                        address1: string
                        address2: string
                        city: string
                        state_or_province: string
                        state_or_province_code: string
                        country_code: string
                        postal_code: string
                        phone: '12125556858'
                        custom_fields:
                          - field_id: string
                            field_value: string
                        id: string
                      available_shipping_options:
                        - description: string
                          id: string
                          type: string
                          image_url: string
                          cost: 0
                          transit_time: string
                          additional_description: string
                      selected_shipping_option:
                        description: string
                        id: string
                        type: string
                        image_url: string
                        cost: 0
                        transit_time: string
                        additional_description: string
                      coupon_discounts:
                        - code: string
                          amount: 0
                      discounts:
                        - id: 0
                      shipping_cost_inc_tax: 0
                      shipping_cost_ex_tax: 0
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      line_item_ids:
                        - string
                  taxes:
                    - name: string
                      amount: 0
                  coupons:
                    - code: SHOPNOW
                      id: 1
                      coupon_type: percentage_discount
                      discounted_amount: 0.9
                  order_id: string
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 0
                  subtotal_ex_tax: 0
                  grand_total: 0
                  created_time: string
                  updated_time: string
                  customer_message: string
                  promotions:
                    - banners:
                        - id: '3'
                          type: applied
                          page:
                            - homepage
                            - cartpage
                          text: Some text
      x-codegen-request-body-name: body
  '/checkouts/{checkoutId}/billing-address':
    post:
      tags:
        - Checkout Billing Address
      summary: Add Checkout Billing Address
      description: |-
        Adds a billing address to an existing checkout.

        **Required Fields**
        * email
        * country_code
      operationId: CheckoutsBillingAddressByCheckoutIdPost
      parameters:
        - $ref: '#/components/parameters/checkoutId'
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressProperties'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Checkout'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
            Available Shipping Options:
              example:
                data:
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  cart:
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    customer_id: 11
                    channel_id: 1
                    email: janedoe@example.com
                    currency:
                      code: USD
                    base_amount: 31.95
                    discount_amount: 0
                    cart_amount_inc_tax: 33.23
                    cart_amount_ex_tax: 31.95
                    coupons:
                      - id: 1
                        code: SHOP20
                        coupon_type: percentage_discount
                        discounted_amount: 0.9
                    discounts:
                      - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                          parent_id: 123
                          variant_id: 359
                          product_id: 188
                          sku: DUST1
                          name: Hello
                          url: 'https://{store_hash}/all/dustpan-brush/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35.95
                          list_price: 31.95
                          sale_price: 33.23
                          extended_list_price: 31.95
                          extended_sale_price: 33.23
                          is_require_shipping: true
                          gift_wrapping: {}
                      digital_items: []
                      gift_certificates: []
                      custom_items: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    updated_time: '2019-08-05T15:41:28+00:00'
                  billing_address:
                    id: 5d484d668e5aa
                    first_name: Jane
                    last_name: Doe
                    email: janedoe@example.com
                    company: BigCommerce
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: ''
                    phone: '12125685555'
                    custom_fields: []
                  consignments:
                    - id: 5d484e28d20a8
                      shipping_cost_inc_tax: 0
                      shipping_cost_ex_tax: 0
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      coupon_discounts: []
                      discounts: []
                      line_item_ids:
                        - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                      address:
                        first_name: BigCommerce
                        last_name: Cart/Checkout
                        email: jane2@example.com
                        company: ''
                        address1: 123 Main Street
                        address2: ''
                        city: Austin
                        state_or_province: Texas
                        state_or_province_code: TX
                        country: United States
                        country_code: US
                        postal_code: '78751'
                        phone: '688546'
                        customFields:
                          - field_id: field_25
                            field_value: Great!
                      available_shipping_options:
                        - id: 006a58a98c9a844225552ee2a9c60ca8
                          type: shipping_byweight
                          description: Ship by Weight
                          image_url: ''
                          cost: 8
                          transit_time: ''
                          additional_description: ''
                        - id: 722d78b5120de60a725e41be9bb8d999
                          type: shipping_flatrate
                          description: Flat Rate
                          image_url: ''
                          cost: 12
                          transit_time: ''
                          additional_description: ''
                        - id: 71090fa93c8985348892543c3f4887b6
                          type: shipping_upsready
                          description: UPS® (UPS Next Day Air®)
                          image_url: ''
                          cost: 43.9
                          transit_time: 1 business day
                          additional_description: ''
                  taxes:
                    - name: Tax
                      amount: 1.28
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 1.28
                  subtotal_inc_tax: 33.23
                  subtotal_ex_tax: 31.95
                  grand_total: 33.23
                  created_time: '2019-08-05T15:38:14+00:00'
                  updated_time: '2019-08-05T15:41:28+00:00'
                  customer_message: ''
                meta: {}
            Selected Shipping Options:
              example:
                data:
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  cart:
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    customer_id: 11
                    channel_id: 1
                    email: janedoe@example.com
                    currency:
                      code: USD
                    base_amount: 31.95
                    discount_amount: 0
                    cart_amount_inc_tax: 33.23
                    cart_amount_ex_tax: 31.95
                    coupons: []
                    discounts:
                      - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                          parent_id: 123
                          variant_id: 359
                          product_id: 188
                          sku: DUST1
                          name: Hello
                          url: 'https://{store_hash}/all/dustpan-brush/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35.95
                          list_price: 31.95
                          sale_price: 33.23
                          extended_list_price: 31.95
                          extended_sale_price: 33.23
                          is_require_shipping: true
                      digital_items: []
                      gift_certificates: []
                      custom_items: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    updated_time: '2019-08-05T15:41:28+00:00'
                  billing_address:
                    id: 5d484d668e5aa
                    first_name: Jane
                    last_name: Doe
                    email: janedoe@example.com
                    company: BigCommerce
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: ''
                    phone: '12125559659'
                    custom_fields: []
                  consignments:
                    - id: 5d484e28d20a8
                      shipping_cost_inc_tax: 8.32
                      shipping_cost_ex_tax: 8
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      coupon_discounts: []
                      discounts: []
                      line_item_ids:
                        - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                      selected_shipping_option:
                        id: 006a58a98c9a844225552ee2a9c60ca8
                        type: shipping_byweight
                        description: Ship by Weight
                        image_url: ''
                        cost: 8
                        transit_time: ''
                        additional_description: ''
                      address:
                        first_name: BigCommerce
                        last_name: Cart/Checkout
                        email: jane2@example.com
                        company: ''
                        address1: 123 Main Street
                        address2: ''
                        city: Austin
                        state_or_province: Texas
                        state_or_province_code: TX
                        country: United States
                        country_code: US
                        postal_code: '78751'
                        phone: '688546'
                        customFields:
                          - field_id: field_25
                            field_value: Great!
                  taxes:
                    - name: Tax
                      amount: 1.6
                  coupons: []
                  shipping_cost_total_inc_tax: 8.32
                  shipping_cost_total_ex_tax: 8
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 1.6
                  subtotal_inc_tax: 33.23
                  subtotal_ex_tax: 31.95
                  grand_total: 41.55
                  created_time: '2019-08-05T15:38:14+00:00'
                  updated_time: '2019-08-05T15:41:28+00:00'
                  customer_message: ''
                meta: {}
            Coupon Applied:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 25
                    channel_id: 1
                    email: customer@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 53.6
                    cart_amount_ex_tax: 53.6
                    coupons:
                      - id: 1
                        code: SHOP20
                        coupon_type: percentage_discount
                        discounted_amount: 13.4
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 7
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 6.4
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts:
                            - id: coupon
                              discounted_amount: 6.4
                          coupons: 6.4
                          discount_amount: 0
                          coupon_amount: 6.4
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts:
                            - id: coupon
                              discounted_amount: 7
                          coupons: 7
                          discount_amount: 0
                          coupon_amount: 7
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:08:01+00:00'
                  billing_address:
                    id: 618a9ce18173e
                    first_name: Jane
                    last_name: Doe
                    email: customer@example.com
                    company: ''
                    address1: 123 Main Street
                    address2: ''
                    city: ''
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: '29681'
                    phone: '12125556895'
                    custom_fields: []
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons:
                    - id: 1
                      code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 13.4
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 53.6
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:08:01+00:00'
                  customer_message: ''
                meta: {}
            No Coupon Applied:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 0
                    channel_id: 1
                    email: example@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 67
                    cart_amount_ex_tax: 67
                    coupons: []
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 0
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:06:56+00:00'
                  billing_address: {}
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 67
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:06:56+00:00'
                  customer_message: ''
                meta: {}
            Include promotions:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 0
                    channel_id: 1
                    email: example@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 67
                    cart_amount_ex_tax: 67
                    coupons: []
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 0
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:06:56+00:00'
                  billing_address: {}
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 67
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:06:56+00:00'
                  customer_message: ''
                  promotions:
                    - banners:
                        - id: '3'
                          type: applied
                          page:
                            - homepage
                            - cartpage
                          text: Some text
                meta: {}
            example-1:
              example:
                data:
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  cart:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    customer_id: 0
                    email: string@example.com
                    currency:
                      code: string
                    base_amount: 0
                    channel_id: 0
                    discount_amount: 0
                    cart_amount_inc_tax: 0
                    cart_amount_ex_tax: 0
                    coupons:
                      - code: string
                        id: 0
                        coupon_type: string
                        discounted_amount: 0
                    discounts:
                      - id: string
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - quantity: 0
                          id: string
                          variant_id: 0
                          product_id: 0
                          sku: string
                          name: string
                          url: string
                          is_taxable: true
                          image_url: string
                          discounts:
                            - id: string
                              discounted_amount: 0
                          coupons: 0
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 0
                          list_price: 0
                          sale_price: 0
                          extended_list_price: 0
                          extended_sale_price: 0
                          is_require_shipping: true
                          is_mutable: true
                          parent_id: 0
                          gift_wrapping:
                            name: string
                            message: string
                            amount: 0
                            amount_as_integer: 0
                      digital_items:
                        - quantity: 0
                          id: string
                          variant_id: 0
                          parent_id: 0
                          product_id: 0
                          sku: string
                          name: string
                          url: string
                          is_mutable: true
                          is_require_shipping: true
                          is_taxable: true
                          image_url: string
                          discounts:
                            - id: string
                              discounted_amount: 0
                          coupons: 0
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 0
                          list_price: 0
                          sale_price: 0
                          extended_list_price: 0
                          extended_sale_price: 0
                      gift_certificates:
                        - theme: string
                          amount: 0
                          sender:
                            name: string
                            email: string
                          recipient:
                            name: string
                            email: string
                          id: string
                          name: string
                          taxable: true
                          message: string
                      custom_items:
                        - quantity: 0
                          id: string
                          extended_list_price: 0
                          list_price: 0
                          sku: string
                          name: string
                          image_url: string
                    created_time: string
                    updated_time: string
                  billing_address:
                    first_name: string
                    last_name: string
                    email: string
                    company: string
                    address1: string
                    address2: string
                    city: string
                    state_or_province: string
                    state_or_province_code: string
                    country_code: string
                    postal_code: string
                    phone: '12128565555'
                    custom_fields:
                      - field_id: string
                        field_value: string
                    id: string
                  consignments:
                    - id: string
                      shippingAddress: {}
                      address:
                        first_name: string
                        last_name: string
                        email: string
                        company: string
                        address1: string
                        address2: string
                        city: string
                        state_or_province: string
                        state_or_province_code: string
                        country_code: string
                        postal_code: string
                        phone: '12125556858'
                        custom_fields:
                          - field_id: string
                            field_value: string
                        id: string
                      available_shipping_options:
                        - description: string
                          id: string
                          type: string
                          image_url: string
                          cost: 0
                          transit_time: string
                          additional_description: string
                      selected_shipping_option:
                        description: string
                        id: string
                        type: string
                        image_url: string
                        cost: 0
                        transit_time: string
                        additional_description: string
                      coupon_discounts:
                        - code: string
                          amount: 0
                      discounts:
                        - id: 0
                      shipping_cost_inc_tax: 0
                      shipping_cost_ex_tax: 0
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      line_item_ids:
                        - string
                  taxes:
                    - name: string
                      amount: 0
                  coupons:
                    - code: SHOPNOW
                      id: 1
                      coupon_type: percentage_discount
                      discounted_amount: 0.9
                  order_id: string
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 0
                  subtotal_ex_tax: 0
                  grand_total: 0
                  created_time: string
                  updated_time: string
                  customer_message: string
                  promotions:
                    - banners:
                        - id: '3'
                          type: applied
                          page:
                            - homepage
                            - cartpage
                          text: Some text
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-codegen-request-body-name: body
  '/checkouts/{checkoutId}/billing-address/{addressId}':
    put:
      tags:
        - Checkout Billing Address
      summary: Update Checkout Billing Address
      description: Updates an existing billing address on a checkout.
      operationId: CheckoutsBillingAddressByCheckoutIdAndAddressIdPut
      parameters:
        - $ref: '#/components/parameters/checkoutId'
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
        - name: addressId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressProperties'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Checkout'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
            Available Shipping Options:
              example:
                data:
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  cart:
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    customer_id: 11
                    channel_id: 1
                    email: janedoe@example.com
                    currency:
                      code: USD
                    base_amount: 31.95
                    discount_amount: 0
                    cart_amount_inc_tax: 33.23
                    cart_amount_ex_tax: 31.95
                    coupons:
                      - id: 1
                        code: SHOP20
                        coupon_type: percentage_discount
                        discounted_amount: 0.9
                    discounts:
                      - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                          parent_id: 123
                          variant_id: 359
                          product_id: 188
                          sku: DUST1
                          name: Hello
                          url: 'https://{store_hash}/all/dustpan-brush/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35.95
                          list_price: 31.95
                          sale_price: 33.23
                          extended_list_price: 31.95
                          extended_sale_price: 33.23
                          is_require_shipping: true
                          gift_wrapping: {}
                      digital_items: []
                      gift_certificates: []
                      custom_items: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    updated_time: '2019-08-05T15:41:28+00:00'
                  billing_address:
                    id: 5d484d668e5aa
                    first_name: Jane
                    last_name: Doe
                    email: janedoe@example.com
                    company: BigCommerce
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: ''
                    phone: '12125685555'
                    custom_fields: []
                  consignments:
                    - id: 5d484e28d20a8
                      shipping_cost_inc_tax: 0
                      shipping_cost_ex_tax: 0
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      coupon_discounts: []
                      discounts: []
                      line_item_ids:
                        - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                      address:
                        first_name: BigCommerce
                        last_name: Cart/Checkout
                        email: jane2@example.com
                        company: ''
                        address1: 123 Main Street
                        address2: ''
                        city: Austin
                        state_or_province: Texas
                        state_or_province_code: TX
                        country: United States
                        country_code: US
                        postal_code: '78751'
                        phone: '688546'
                        customFields:
                          - field_id: field_25
                            field_value: Great!
                      available_shipping_options:
                        - id: 006a58a98c9a844225552ee2a9c60ca8
                          type: shipping_byweight
                          description: Ship by Weight
                          image_url: ''
                          cost: 8
                          transit_time: ''
                          additional_description: ''
                        - id: 722d78b5120de60a725e41be9bb8d999
                          type: shipping_flatrate
                          description: Flat Rate
                          image_url: ''
                          cost: 12
                          transit_time: ''
                          additional_description: ''
                        - id: 71090fa93c8985348892543c3f4887b6
                          type: shipping_upsready
                          description: UPS® (UPS Next Day Air®)
                          image_url: ''
                          cost: 43.9
                          transit_time: 1 business day
                          additional_description: ''
                  taxes:
                    - name: Tax
                      amount: 1.28
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 1.28
                  subtotal_inc_tax: 33.23
                  subtotal_ex_tax: 31.95
                  grand_total: 33.23
                  created_time: '2019-08-05T15:38:14+00:00'
                  updated_time: '2019-08-05T15:41:28+00:00'
                  customer_message: ''
                meta: {}
            Selected Shipping Options:
              example:
                data:
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  cart:
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    customer_id: 11
                    channel_id: 1
                    email: janedoe@example.com
                    currency:
                      code: USD
                    base_amount: 31.95
                    discount_amount: 0
                    cart_amount_inc_tax: 33.23
                    cart_amount_ex_tax: 31.95
                    coupons: []
                    discounts:
                      - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                          parent_id: 123
                          variant_id: 359
                          product_id: 188
                          sku: DUST1
                          name: Hello
                          url: 'https://{store_hash}/all/dustpan-brush/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35.95
                          list_price: 31.95
                          sale_price: 33.23
                          extended_list_price: 31.95
                          extended_sale_price: 33.23
                          is_require_shipping: true
                      digital_items: []
                      gift_certificates: []
                      custom_items: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    updated_time: '2019-08-05T15:41:28+00:00'
                  billing_address:
                    id: 5d484d668e5aa
                    first_name: Jane
                    last_name: Doe
                    email: janedoe@example.com
                    company: BigCommerce
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: ''
                    phone: '12125559659'
                    custom_fields: []
                  consignments:
                    - id: 5d484e28d20a8
                      shipping_cost_inc_tax: 8.32
                      shipping_cost_ex_tax: 8
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      coupon_discounts: []
                      discounts: []
                      line_item_ids:
                        - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                      selected_shipping_option:
                        id: 006a58a98c9a844225552ee2a9c60ca8
                        type: shipping_byweight
                        description: Ship by Weight
                        image_url: ''
                        cost: 8
                        transit_time: ''
                        additional_description: ''
                      address:
                        first_name: BigCommerce
                        last_name: Cart/Checkout
                        email: jane2@example.com
                        company: ''
                        address1: 123 Main Street
                        address2: ''
                        city: Austin
                        state_or_province: Texas
                        state_or_province_code: TX
                        country: United States
                        country_code: US
                        postal_code: '78751'
                        phone: '688546'
                        customFields:
                          - field_id: field_25
                            field_value: Great!
                  taxes:
                    - name: Tax
                      amount: 1.6
                  coupons: []
                  shipping_cost_total_inc_tax: 8.32
                  shipping_cost_total_ex_tax: 8
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 1.6
                  subtotal_inc_tax: 33.23
                  subtotal_ex_tax: 31.95
                  grand_total: 41.55
                  created_time: '2019-08-05T15:38:14+00:00'
                  updated_time: '2019-08-05T15:41:28+00:00'
                  customer_message: ''
                meta: {}
            Coupon Applied:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 25
                    channel_id: 1
                    email: customer@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 53.6
                    cart_amount_ex_tax: 53.6
                    coupons:
                      - id: 1
                        code: SHOP20
                        coupon_type: percentage_discount
                        discounted_amount: 13.4
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 7
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 6.4
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts:
                            - id: coupon
                              discounted_amount: 6.4
                          coupons: 6.4
                          discount_amount: 0
                          coupon_amount: 6.4
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts:
                            - id: coupon
                              discounted_amount: 7
                          coupons: 7
                          discount_amount: 0
                          coupon_amount: 7
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:08:01+00:00'
                  billing_address:
                    id: 618a9ce18173e
                    first_name: Jane
                    last_name: Doe
                    email: customer@example.com
                    company: ''
                    address1: 123 Main Street
                    address2: ''
                    city: ''
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: '29681'
                    phone: '12125556895'
                    custom_fields: []
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons:
                    - id: 1
                      code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 13.4
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 53.6
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:08:01+00:00'
                  customer_message: ''
                meta: {}
            No Coupon Applied:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 0
                    channel_id: 1
                    email: example@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 67
                    cart_amount_ex_tax: 67
                    coupons: []
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 0
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:06:56+00:00'
                  billing_address: {}
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 67
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:06:56+00:00'
                  customer_message: ''
                meta: {}
            Include promotions:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 0
                    channel_id: 1
                    email: example@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 67
                    cart_amount_ex_tax: 67
                    coupons: []
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 0
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:06:56+00:00'
                  billing_address: {}
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 67
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:06:56+00:00'
                  customer_message: ''
                  promotions:
                    - banners:
                        - id: '3'
                          type: applied
                          page:
                            - homepage
                            - cartpage
                          text: Some text
                meta: {}
            example-1:
              example:
                data:
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  cart:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    customer_id: 0
                    email: string@example.com
                    currency:
                      code: string
                    base_amount: 0
                    channel_id: 0
                    discount_amount: 0
                    cart_amount_inc_tax: 0
                    cart_amount_ex_tax: 0
                    coupons:
                      - code: string
                        id: 0
                        coupon_type: string
                        discounted_amount: 0
                    discounts:
                      - id: string
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - quantity: 0
                          id: string
                          variant_id: 0
                          product_id: 0
                          sku: string
                          name: string
                          url: string
                          is_taxable: true
                          image_url: string
                          discounts:
                            - id: string
                              discounted_amount: 0
                          coupons: 0
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 0
                          list_price: 0
                          sale_price: 0
                          extended_list_price: 0
                          extended_sale_price: 0
                          is_require_shipping: true
                          is_mutable: true
                          parent_id: 0
                          gift_wrapping:
                            name: string
                            message: string
                            amount: 0
                            amount_as_integer: 0
                      digital_items:
                        - quantity: 0
                          id: string
                          variant_id: 0
                          parent_id: 0
                          product_id: 0
                          sku: string
                          name: string
                          url: string
                          is_mutable: true
                          is_require_shipping: true
                          is_taxable: true
                          image_url: string
                          discounts:
                            - id: string
                              discounted_amount: 0
                          coupons: 0
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 0
                          list_price: 0
                          sale_price: 0
                          extended_list_price: 0
                          extended_sale_price: 0
                      gift_certificates:
                        - theme: string
                          amount: 0
                          sender:
                            name: string
                            email: string
                          recipient:
                            name: string
                            email: string
                          id: string
                          name: string
                          taxable: true
                          message: string
                      custom_items:
                        - quantity: 0
                          id: string
                          extended_list_price: 0
                          list_price: 0
                          sku: string
                          name: string
                          image_url: string
                    created_time: string
                    updated_time: string
                  billing_address:
                    first_name: string
                    last_name: string
                    email: string
                    company: string
                    address1: string
                    address2: string
                    city: string
                    state_or_province: string
                    state_or_province_code: string
                    country_code: string
                    postal_code: string
                    phone: '12128565555'
                    custom_fields:
                      - field_id: string
                        field_value: string
                    id: string
                  consignments:
                    - id: string
                      shippingAddress: {}
                      address:
                        first_name: string
                        last_name: string
                        email: string
                        company: string
                        address1: string
                        address2: string
                        city: string
                        state_or_province: string
                        state_or_province_code: string
                        country_code: string
                        postal_code: string
                        phone: '12125556858'
                        custom_fields:
                          - field_id: string
                            field_value: string
                        id: string
                      available_shipping_options:
                        - description: string
                          id: string
                          type: string
                          image_url: string
                          cost: 0
                          transit_time: string
                          additional_description: string
                      selected_shipping_option:
                        description: string
                        id: string
                        type: string
                        image_url: string
                        cost: 0
                        transit_time: string
                        additional_description: string
                      coupon_discounts:
                        - code: string
                          amount: 0
                      discounts:
                        - id: 0
                      shipping_cost_inc_tax: 0
                      shipping_cost_ex_tax: 0
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      line_item_ids:
                        - string
                  taxes:
                    - name: string
                      amount: 0
                  coupons:
                    - code: SHOPNOW
                      id: 1
                      coupon_type: percentage_discount
                      discounted_amount: 0.9
                  order_id: string
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 0
                  subtotal_ex_tax: 0
                  grand_total: 0
                  created_time: string
                  updated_time: string
                  customer_message: string
                  promotions:
                    - banners:
                        - id: '3'
                          type: applied
                          page:
                            - homepage
                            - cartpage
                          text: Some text
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-codegen-request-body-name: body
  '/checkouts/{checkoutId}/consignments':
    post:
      tags:
        - Checkout Consignments
      summary: Add Consignment to Checkout
      description: |-
        Adds a new consignment to a checkout.

        For more information about working with consignments, see [Checkout consignment](/api-docs/checkouts/checkout-consignment).  

        Though the only required `address` properties to create a consignment are `email` and `country_code`, to successfully [create an order](/docs/rest-management/checkouts/checkout-orders#create-an-order) the `address` requires the following properties:
        * `first_name`
        * `last_name`
        * `address1`
        * `city`
        * `country`
        * `email`
        * `country_code`

        Depending on the country, the following `address` properties may also be required:

        * `postal_code`
        * `state_or_province`
      operationId: CheckoutsConsignmentsByCheckoutIdPost
      parameters:
        - $ref: '#/components/parameters/checkoutId'
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
        - name: include
          in: query
          schema:
            type: string
            enum:
              - consignments.available_shipping_options
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConsignmentRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Checkout'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
            Available Shipping Options:
              example:
                data:
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  cart:
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    customer_id: 11
                    channel_id: 1
                    email: janedoe@example.com
                    currency:
                      code: USD
                    base_amount: 31.95
                    discount_amount: 0
                    cart_amount_inc_tax: 33.23
                    cart_amount_ex_tax: 31.95
                    coupons:
                      - id: 1
                        code: SHOP20
                        coupon_type: percentage_discount
                        discounted_amount: 0.9
                    discounts:
                      - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                          parent_id: 123
                          variant_id: 359
                          product_id: 188
                          sku: DUST1
                          name: Hello
                          url: 'https://{store_hash}/all/dustpan-brush/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35.95
                          list_price: 31.95
                          sale_price: 33.23
                          extended_list_price: 31.95
                          extended_sale_price: 33.23
                          is_require_shipping: true
                          gift_wrapping: {}
                      digital_items: []
                      gift_certificates: []
                      custom_items: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    updated_time: '2019-08-05T15:41:28+00:00'
                  billing_address:
                    id: 5d484d668e5aa
                    first_name: Jane
                    last_name: Doe
                    email: janedoe@example.com
                    company: BigCommerce
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: ''
                    phone: '12125685555'
                    custom_fields: []
                  consignments:
                    - id: 5d484e28d20a8
                      shipping_cost_inc_tax: 0
                      shipping_cost_ex_tax: 0
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      coupon_discounts: []
                      discounts: []
                      line_item_ids:
                        - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                      address:
                        first_name: BigCommerce
                        last_name: Cart/Checkout
                        email: jane2@example.com
                        company: ''
                        address1: 123 Main Street
                        address2: ''
                        city: Austin
                        state_or_province: Texas
                        state_or_province_code: TX
                        country: United States
                        country_code: US
                        postal_code: '78751'
                        phone: '688546'
                        customFields:
                          - field_id: field_25
                            field_value: Great!
                      available_shipping_options:
                        - id: 006a58a98c9a844225552ee2a9c60ca8
                          type: shipping_byweight
                          description: Ship by Weight
                          image_url: ''
                          cost: 8
                          transit_time: ''
                          additional_description: ''
                        - id: 722d78b5120de60a725e41be9bb8d999
                          type: shipping_flatrate
                          description: Flat Rate
                          image_url: ''
                          cost: 12
                          transit_time: ''
                          additional_description: ''
                        - id: 71090fa93c8985348892543c3f4887b6
                          type: shipping_upsready
                          description: UPS® (UPS Next Day Air®)
                          image_url: ''
                          cost: 43.9
                          transit_time: 1 business day
                          additional_description: ''
                  taxes:
                    - name: Tax
                      amount: 1.28
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 1.28
                  subtotal_inc_tax: 33.23
                  subtotal_ex_tax: 31.95
                  grand_total: 33.23
                  created_time: '2019-08-05T15:38:14+00:00'
                  updated_time: '2019-08-05T15:41:28+00:00'
                  customer_message: ''
                meta: {}
            Selected Shipping Options:
              example:
                data:
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  cart:
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    customer_id: 11
                    channel_id: 1
                    email: janedoe@example.com
                    currency:
                      code: USD
                    base_amount: 31.95
                    discount_amount: 0
                    cart_amount_inc_tax: 33.23
                    cart_amount_ex_tax: 31.95
                    coupons: []
                    discounts:
                      - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                          parent_id: 123
                          variant_id: 359
                          product_id: 188
                          sku: DUST1
                          name: Hello
                          url: 'https://{store_hash}/all/dustpan-brush/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35.95
                          list_price: 31.95
                          sale_price: 33.23
                          extended_list_price: 31.95
                          extended_sale_price: 33.23
                          is_require_shipping: true
                      digital_items: []
                      gift_certificates: []
                      custom_items: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    updated_time: '2019-08-05T15:41:28+00:00'
                  billing_address:
                    id: 5d484d668e5aa
                    first_name: Jane
                    last_name: Doe
                    email: janedoe@example.com
                    company: BigCommerce
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: ''
                    phone: '12125559659'
                    custom_fields: []
                  consignments:
                    - id: 5d484e28d20a8
                      shipping_cost_inc_tax: 8.32
                      shipping_cost_ex_tax: 8
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      coupon_discounts: []
                      discounts: []
                      line_item_ids:
                        - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                      selected_shipping_option:
                        id: 006a58a98c9a844225552ee2a9c60ca8
                        type: shipping_byweight
                        description: Ship by Weight
                        image_url: ''
                        cost: 8
                        transit_time: ''
                        additional_description: ''
                      address:
                        first_name: BigCommerce
                        last_name: Cart/Checkout
                        email: jane2@example.com
                        company: ''
                        address1: 123 Main Street
                        address2: ''
                        city: Austin
                        state_or_province: Texas
                        state_or_province_code: TX
                        country: United States
                        country_code: US
                        postal_code: '78751'
                        phone: '688546'
                        customFields:
                          - field_id: field_25
                            field_value: Great!
                  taxes:
                    - name: Tax
                      amount: 1.6
                  coupons: []
                  shipping_cost_total_inc_tax: 8.32
                  shipping_cost_total_ex_tax: 8
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 1.6
                  subtotal_inc_tax: 33.23
                  subtotal_ex_tax: 31.95
                  grand_total: 41.55
                  created_time: '2019-08-05T15:38:14+00:00'
                  updated_time: '2019-08-05T15:41:28+00:00'
                  customer_message: ''
                meta: {}
            Coupon Applied:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 25
                    channel_id: 1
                    email: customer@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 53.6
                    cart_amount_ex_tax: 53.6
                    coupons:
                      - id: 1
                        code: SHOP20
                        coupon_type: percentage_discount
                        discounted_amount: 13.4
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 7
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 6.4
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts:
                            - id: coupon
                              discounted_amount: 6.4
                          coupons: 6.4
                          discount_amount: 0
                          coupon_amount: 6.4
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts:
                            - id: coupon
                              discounted_amount: 7
                          coupons: 7
                          discount_amount: 0
                          coupon_amount: 7
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:08:01+00:00'
                  billing_address:
                    id: 618a9ce18173e
                    first_name: Jane
                    last_name: Doe
                    email: customer@example.com
                    company: ''
                    address1: 123 Main Street
                    address2: ''
                    city: ''
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: '29681'
                    phone: '12125556895'
                    custom_fields: []
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons:
                    - id: 1
                      code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 13.4
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 53.6
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:08:01+00:00'
                  customer_message: ''
                meta: {}
            No Coupon Applied:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 0
                    channel_id: 1
                    email: example@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 67
                    cart_amount_ex_tax: 67
                    coupons: []
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 0
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:06:56+00:00'
                  billing_address: {}
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 67
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:06:56+00:00'
                  customer_message: ''
                meta: {}
            Include promotions:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 0
                    channel_id: 1
                    email: example@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 67
                    cart_amount_ex_tax: 67
                    coupons: []
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 0
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:06:56+00:00'
                  billing_address: {}
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 67
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:06:56+00:00'
                  customer_message: ''
                  promotions:
                    - banners:
                        - id: '3'
                          type: applied
                          page:
                            - homepage
                            - cartpage
                          text: Some text
                meta: {}
            example-1:
              example:
                data:
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  cart:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    customer_id: 0
                    email: string@example.com
                    currency:
                      code: string
                    base_amount: 0
                    channel_id: 0
                    discount_amount: 0
                    cart_amount_inc_tax: 0
                    cart_amount_ex_tax: 0
                    coupons:
                      - code: string
                        id: 0
                        coupon_type: string
                        discounted_amount: 0
                    discounts:
                      - id: string
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - quantity: 0
                          id: string
                          variant_id: 0
                          product_id: 0
                          sku: string
                          name: string
                          url: string
                          is_taxable: true
                          image_url: string
                          discounts:
                            - id: string
                              discounted_amount: 0
                          coupons: 0
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 0
                          list_price: 0
                          sale_price: 0
                          extended_list_price: 0
                          extended_sale_price: 0
                          is_require_shipping: true
                          is_mutable: true
                          parent_id: 0
                          gift_wrapping:
                            name: string
                            message: string
                            amount: 0
                            amount_as_integer: 0
                      digital_items:
                        - quantity: 0
                          id: string
                          variant_id: 0
                          parent_id: 0
                          product_id: 0
                          sku: string
                          name: string
                          url: string
                          is_mutable: true
                          is_require_shipping: true
                          is_taxable: true
                          image_url: string
                          discounts:
                            - id: string
                              discounted_amount: 0
                          coupons: 0
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 0
                          list_price: 0
                          sale_price: 0
                          extended_list_price: 0
                          extended_sale_price: 0
                      gift_certificates:
                        - theme: string
                          amount: 0
                          sender:
                            name: string
                            email: string
                          recipient:
                            name: string
                            email: string
                          id: string
                          name: string
                          taxable: true
                          message: string
                      custom_items:
                        - quantity: 0
                          id: string
                          extended_list_price: 0
                          list_price: 0
                          sku: string
                          name: string
                          image_url: string
                    created_time: string
                    updated_time: string
                  billing_address:
                    first_name: string
                    last_name: string
                    email: string
                    company: string
                    address1: string
                    address2: string
                    city: string
                    state_or_province: string
                    state_or_province_code: string
                    country_code: string
                    postal_code: string
                    phone: '12128565555'
                    custom_fields:
                      - field_id: string
                        field_value: string
                    id: string
                  consignments:
                    - id: string
                      shippingAddress: {}
                      address:
                        first_name: string
                        last_name: string
                        email: string
                        company: string
                        address1: string
                        address2: string
                        city: string
                        state_or_province: string
                        state_or_province_code: string
                        country_code: string
                        postal_code: string
                        phone: '12125556858'
                        custom_fields:
                          - field_id: string
                            field_value: string
                        id: string
                      available_shipping_options:
                        - description: string
                          id: string
                          type: string
                          image_url: string
                          cost: 0
                          transit_time: string
                          additional_description: string
                      selected_shipping_option:
                        description: string
                        id: string
                        type: string
                        image_url: string
                        cost: 0
                        transit_time: string
                        additional_description: string
                      coupon_discounts:
                        - code: string
                          amount: 0
                      discounts:
                        - id: 0
                      shipping_cost_inc_tax: 0
                      shipping_cost_ex_tax: 0
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      line_item_ids:
                        - string
                  taxes:
                    - name: string
                      amount: 0
                  coupons:
                    - code: SHOPNOW
                      id: 1
                      coupon_type: percentage_discount
                      discounted_amount: 0.9
                  order_id: string
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 0
                  subtotal_ex_tax: 0
                  grand_total: 0
                  created_time: string
                  updated_time: string
                  customer_message: string
                  promotions:
                    - banners:
                        - id: '3'
                          type: applied
                          page:
                            - homepage
                            - cartpage
                          text: Some text
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-codegen-request-body-name: body
  '/checkouts/{checkoutId}/consignments/{consignmentId}':
    parameters:
      
      - $ref: '#/components/parameters/checkoutId'
      - $ref: '#/components/parameters/Accept'
      - name: consignmentId
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
        - Checkout Consignments
      summary: Update Checkout Consignment
      description: |-
        Updates an existing consignment. The address, line item IDs, and the shipping option ID can be updated using this endpoint. 
        
        To add a new address and shipping options with line items, complete the following steps. 
        
        1. Add a new [consignment](/docs/rest-management/checkouts/checkout-consignments#add-consignment-to-checkout) to a checkout. 
        
        2. Assign a shipping option to the new consignment by sending a `PUT` request to update the consignment's `shipping_option_id` with a returned value from `data.consignments[N].available_shipping_option[N].id` obtained in Step One. 
      operationId: CheckoutsConsignmentsByCheckoutIdAndConsignmentIdPut
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - name: include
          in: query
          description: Include to get available shipping options.
          schema:
            type: string
            enum:
              - consignments.available_shipping_options
            x-enum-elements:
              - name: Enum_consignments.availableShippingOptions
                description: ''
          x-enum-elements:
            - name: Enum_consignments.availableShippingOptions
              description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConsignmentRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Checkout'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
            Available Shipping Options:
              example:
                data:
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  cart:
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    customer_id: 11
                    channel_id: 1
                    email: janedoe@example.com
                    currency:
                      code: USD
                    base_amount: 31.95
                    discount_amount: 0
                    cart_amount_inc_tax: 33.23
                    cart_amount_ex_tax: 31.95
                    coupons:
                      - id: 1
                        code: SHOP20
                        coupon_type: percentage_discount
                        discounted_amount: 0.9
                    discounts:
                      - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                          parent_id: 123
                          variant_id: 359
                          product_id: 188
                          sku: DUST1
                          name: Hello
                          url: 'https://{store_hash}/all/dustpan-brush/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35.95
                          list_price: 31.95
                          sale_price: 33.23
                          extended_list_price: 31.95
                          extended_sale_price: 33.23
                          is_require_shipping: true
                          gift_wrapping: {}
                      digital_items: []
                      gift_certificates: []
                      custom_items: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    updated_time: '2019-08-05T15:41:28+00:00'
                  billing_address:
                    id: 5d484d668e5aa
                    first_name: Jane
                    last_name: Doe
                    email: janedoe@example.com
                    company: BigCommerce
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: ''
                    phone: '12125685555'
                    custom_fields: []
                  consignments:
                    - id: 5d484e28d20a8
                      shipping_cost_inc_tax: 0
                      shipping_cost_ex_tax: 0
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      coupon_discounts: []
                      discounts: []
                      line_item_ids:
                        - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                      address:
                        first_name: BigCommerce
                        last_name: Cart/Checkout
                        email: jane2@example.com
                        company: ''
                        address1: 123 Main Street
                        address2: ''
                        city: Austin
                        state_or_province: Texas
                        state_or_province_code: TX
                        country: United States
                        country_code: US
                        postal_code: '78751'
                        phone: '688546'
                        customFields:
                          - field_id: field_25
                            field_value: Great!
                      available_shipping_options:
                        - id: 006a58a98c9a844225552ee2a9c60ca8
                          type: shipping_byweight
                          description: Ship by Weight
                          image_url: ''
                          cost: 8
                          transit_time: ''
                          additional_description: ''
                        - id: 722d78b5120de60a725e41be9bb8d999
                          type: shipping_flatrate
                          description: Flat Rate
                          image_url: ''
                          cost: 12
                          transit_time: ''
                          additional_description: ''
                        - id: 71090fa93c8985348892543c3f4887b6
                          type: shipping_upsready
                          description: UPS® (UPS Next Day Air®)
                          image_url: ''
                          cost: 43.9
                          transit_time: 1 business day
                          additional_description: ''
                  taxes:
                    - name: Tax
                      amount: 1.28
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 1.28
                  subtotal_inc_tax: 33.23
                  subtotal_ex_tax: 31.95
                  grand_total: 33.23
                  created_time: '2019-08-05T15:38:14+00:00'
                  updated_time: '2019-08-05T15:41:28+00:00'
                  customer_message: ''
                meta: {}
            Selected Shipping Options:
              example:
                data:
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  cart:
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    customer_id: 11
                    channel_id: 1
                    email: janedoe@example.com
                    currency:
                      code: USD
                    base_amount: 31.95
                    discount_amount: 0
                    cart_amount_inc_tax: 33.23
                    cart_amount_ex_tax: 31.95
                    coupons: []
                    discounts:
                      - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                          parent_id: 123
                          variant_id: 359
                          product_id: 188
                          sku: DUST1
                          name: Hello
                          url: 'https://{store_hash}/all/dustpan-brush/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35.95
                          list_price: 31.95
                          sale_price: 33.23
                          extended_list_price: 31.95
                          extended_sale_price: 33.23
                          is_require_shipping: true
                      digital_items: []
                      gift_certificates: []
                      custom_items: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    updated_time: '2019-08-05T15:41:28+00:00'
                  billing_address:
                    id: 5d484d668e5aa
                    first_name: Jane
                    last_name: Doe
                    email: janedoe@example.com
                    company: BigCommerce
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: ''
                    phone: '12125559659'
                    custom_fields: []
                  consignments:
                    - id: 5d484e28d20a8
                      shipping_cost_inc_tax: 8.32
                      shipping_cost_ex_tax: 8
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      coupon_discounts: []
                      discounts: []
                      line_item_ids:
                        - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                      selected_shipping_option:
                        id: 006a58a98c9a844225552ee2a9c60ca8
                        type: shipping_byweight
                        description: Ship by Weight
                        image_url: ''
                        cost: 8
                        transit_time: ''
                        additional_description: ''
                      address:
                        first_name: BigCommerce
                        last_name: Cart/Checkout
                        email: jane2@example.com
                        company: ''
                        address1: 123 Main Street
                        address2: ''
                        city: Austin
                        state_or_province: Texas
                        state_or_province_code: TX
                        country: United States
                        country_code: US
                        postal_code: '78751'
                        phone: '688546'
                        customFields:
                          - field_id: field_25
                            field_value: Great!
                  taxes:
                    - name: Tax
                      amount: 1.6
                  coupons: []
                  shipping_cost_total_inc_tax: 8.32
                  shipping_cost_total_ex_tax: 8
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 1.6
                  subtotal_inc_tax: 33.23
                  subtotal_ex_tax: 31.95
                  grand_total: 41.55
                  created_time: '2019-08-05T15:38:14+00:00'
                  updated_time: '2019-08-05T15:41:28+00:00'
                  customer_message: ''
                meta: {}
            Coupon Applied:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 25
                    channel_id: 1
                    email: customer@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 53.6
                    cart_amount_ex_tax: 53.6
                    coupons:
                      - id: 1
                        code: SHOP20
                        coupon_type: percentage_discount
                        discounted_amount: 13.4
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 7
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 6.4
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts:
                            - id: coupon
                              discounted_amount: 6.4
                          coupons: 6.4
                          discount_amount: 0
                          coupon_amount: 6.4
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts:
                            - id: coupon
                              discounted_amount: 7
                          coupons: 7
                          discount_amount: 0
                          coupon_amount: 7
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:08:01+00:00'
                  billing_address:
                    id: 618a9ce18173e
                    first_name: Jane
                    last_name: Doe
                    email: customer@example.com
                    company: ''
                    address1: 123 Main Street
                    address2: ''
                    city: ''
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: '29681'
                    phone: '12125556895'
                    custom_fields: []
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons:
                    - id: 1
                      code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 13.4
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 53.6
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:08:01+00:00'
                  customer_message: ''
                meta: {}
            No Coupon Applied:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 0
                    channel_id: 1
                    email: example@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 67
                    cart_amount_ex_tax: 67
                    coupons: []
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 0
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:06:56+00:00'
                  billing_address: {}
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 67
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:06:56+00:00'
                  customer_message: ''
                meta: {}
            Include promotions:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 0
                    channel_id: 1
                    email: example@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 67
                    cart_amount_ex_tax: 67
                    coupons: []
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 0
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:06:56+00:00'
                  billing_address: {}
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 67
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:06:56+00:00'
                  customer_message: ''
                  promotions:
                    - banners:
                        - id: '3'
                          type: applied
                          page:
                            - homepage
                            - cartpage
                          text: Some text
                meta: {}
            example-1:
              example:
                data:
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  cart:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    customer_id: 0
                    email: string@example.com
                    currency:
                      code: string
                    base_amount: 0
                    channel_id: 0
                    discount_amount: 0
                    cart_amount_inc_tax: 0
                    cart_amount_ex_tax: 0
                    coupons:
                      - code: string
                        id: 0
                        coupon_type: string
                        discounted_amount: 0
                    discounts:
                      - id: string
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - quantity: 0
                          id: string
                          variant_id: 0
                          product_id: 0
                          sku: string
                          name: string
                          url: string
                          is_taxable: true
                          image_url: string
                          discounts:
                            - id: string
                              discounted_amount: 0
                          coupons: 0
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 0
                          list_price: 0
                          sale_price: 0
                          extended_list_price: 0
                          extended_sale_price: 0
                          is_require_shipping: true
                          is_mutable: true
                          parent_id: 0
                          gift_wrapping:
                            name: string
                            message: string
                            amount: 0
                            amount_as_integer: 0
                      digital_items:
                        - quantity: 0
                          id: string
                          variant_id: 0
                          parent_id: 0
                          product_id: 0
                          sku: string
                          name: string
                          url: string
                          is_mutable: true
                          is_require_shipping: true
                          is_taxable: true
                          image_url: string
                          discounts:
                            - id: string
                              discounted_amount: 0
                          coupons: 0
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 0
                          list_price: 0
                          sale_price: 0
                          extended_list_price: 0
                          extended_sale_price: 0
                      gift_certificates:
                        - theme: string
                          amount: 0
                          sender:
                            name: string
                            email: string
                          recipient:
                            name: string
                            email: string
                          id: string
                          name: string
                          taxable: true
                          message: string
                      custom_items:
                        - quantity: 0
                          id: string
                          extended_list_price: 0
                          list_price: 0
                          sku: string
                          name: string
                          image_url: string
                    created_time: string
                    updated_time: string
                  billing_address:
                    first_name: string
                    last_name: string
                    email: string
                    company: string
                    address1: string
                    address2: string
                    city: string
                    state_or_province: string
                    state_or_province_code: string
                    country_code: string
                    postal_code: string
                    phone: '12128565555'
                    custom_fields:
                      - field_id: string
                        field_value: string
                    id: string
                  consignments:
                    - id: string
                      shippingAddress: {}
                      address:
                        first_name: string
                        last_name: string
                        email: string
                        company: string
                        address1: string
                        address2: string
                        city: string
                        state_or_province: string
                        state_or_province_code: string
                        country_code: string
                        postal_code: string
                        phone: '12125556858'
                        custom_fields:
                          - field_id: string
                            field_value: string
                        id: string
                      available_shipping_options:
                        - description: string
                          id: string
                          type: string
                          image_url: string
                          cost: 0
                          transit_time: string
                          additional_description: string
                      selected_shipping_option:
                        description: string
                        id: string
                        type: string
                        image_url: string
                        cost: 0
                        transit_time: string
                        additional_description: string
                      coupon_discounts:
                        - code: string
                          amount: 0
                      discounts:
                        - id: 0
                      shipping_cost_inc_tax: 0
                      shipping_cost_ex_tax: 0
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      line_item_ids:
                        - string
                  taxes:
                    - name: string
                      amount: 0
                  coupons:
                    - code: SHOPNOW
                      id: 1
                      coupon_type: percentage_discount
                      discounted_amount: 0.9
                  order_id: string
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 0
                  subtotal_ex_tax: 0
                  grand_total: 0
                  created_time: string
                  updated_time: string
                  customer_message: string
                  promotions:
                    - banners:
                        - id: '3'
                          type: applied
                          page:
                            - homepage
                            - cartpage
                          text: Some text
      x-codegen-request-body-name: body
    delete:
      tags:
        - Checkout Consignments
      summary: Delete Checkout Consignment
      description: |-
        Removes an existing consignment from a checkout.

        Removing the last consignment will remove the cart from the customer it is assigned to. Create a new redirect URL for the customer so they can access the cart again.
      operationId: CheckoutsConsignmentsByCheckoutIdAndConsignmentIdDelete
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Checkout'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
            Available Shipping Options:
              example:
                data:
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  cart:
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    customer_id: 11
                    channel_id: 1
                    email: janedoe@example.com
                    currency:
                      code: USD
                    base_amount: 31.95
                    discount_amount: 0
                    cart_amount_inc_tax: 33.23
                    cart_amount_ex_tax: 31.95
                    coupons:
                      - id: 1
                        code: SHOP20
                        coupon_type: percentage_discount
                        discounted_amount: 0.9
                    discounts:
                      - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                          parent_id: 123
                          variant_id: 359
                          product_id: 188
                          sku: DUST1
                          name: Hello
                          url: 'https://{store_hash}/all/dustpan-brush/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35.95
                          list_price: 31.95
                          sale_price: 33.23
                          extended_list_price: 31.95
                          extended_sale_price: 33.23
                          is_require_shipping: true
                          gift_wrapping: {}
                      digital_items: []
                      gift_certificates: []
                      custom_items: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    updated_time: '2019-08-05T15:41:28+00:00'
                  billing_address:
                    id: 5d484d668e5aa
                    first_name: Jane
                    last_name: Doe
                    email: janedoe@example.com
                    company: BigCommerce
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: ''
                    phone: '12125685555'
                    custom_fields: []
                  consignments:
                    - id: 5d484e28d20a8
                      shipping_cost_inc_tax: 0
                      shipping_cost_ex_tax: 0
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      coupon_discounts: []
                      discounts: []
                      line_item_ids:
                        - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                      address:
                        first_name: BigCommerce
                        last_name: Cart/Checkout
                        email: jane2@example.com
                        company: ''
                        address1: 123 Main Street
                        address2: ''
                        city: Austin
                        state_or_province: Texas
                        state_or_province_code: TX
                        country: United States
                        country_code: US
                        postal_code: '78751'
                        phone: '688546'
                        customFields:
                          - field_id: field_25
                            field_value: Great!
                      available_shipping_options:
                        - id: 006a58a98c9a844225552ee2a9c60ca8
                          type: shipping_byweight
                          description: Ship by Weight
                          image_url: ''
                          cost: 8
                          transit_time: ''
                          additional_description: ''
                        - id: 722d78b5120de60a725e41be9bb8d999
                          type: shipping_flatrate
                          description: Flat Rate
                          image_url: ''
                          cost: 12
                          transit_time: ''
                          additional_description: ''
                        - id: 71090fa93c8985348892543c3f4887b6
                          type: shipping_upsready
                          description: UPS® (UPS Next Day Air®)
                          image_url: ''
                          cost: 43.9
                          transit_time: 1 business day
                          additional_description: ''
                  taxes:
                    - name: Tax
                      amount: 1.28
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 1.28
                  subtotal_inc_tax: 33.23
                  subtotal_ex_tax: 31.95
                  grand_total: 33.23
                  created_time: '2019-08-05T15:38:14+00:00'
                  updated_time: '2019-08-05T15:41:28+00:00'
                  customer_message: ''
                meta: {}
            Selected Shipping Options:
              example:
                data:
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  cart:
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    customer_id: 11
                    channel_id: 1
                    email: janedoe@example.com
                    currency:
                      code: USD
                    base_amount: 31.95
                    discount_amount: 0
                    cart_amount_inc_tax: 33.23
                    cart_amount_ex_tax: 31.95
                    coupons: []
                    discounts:
                      - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                          parent_id: 123
                          variant_id: 359
                          product_id: 188
                          sku: DUST1
                          name: Hello
                          url: 'https://{store_hash}/all/dustpan-brush/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35.95
                          list_price: 31.95
                          sale_price: 33.23
                          extended_list_price: 31.95
                          extended_sale_price: 33.23
                          is_require_shipping: true
                      digital_items: []
                      gift_certificates: []
                      custom_items: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    updated_time: '2019-08-05T15:41:28+00:00'
                  billing_address:
                    id: 5d484d668e5aa
                    first_name: Jane
                    last_name: Doe
                    email: janedoe@example.com
                    company: BigCommerce
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: ''
                    phone: '12125559659'
                    custom_fields: []
                  consignments:
                    - id: 5d484e28d20a8
                      shipping_cost_inc_tax: 8.32
                      shipping_cost_ex_tax: 8
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      coupon_discounts: []
                      discounts: []
                      line_item_ids:
                        - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                      selected_shipping_option:
                        id: 006a58a98c9a844225552ee2a9c60ca8
                        type: shipping_byweight
                        description: Ship by Weight
                        image_url: ''
                        cost: 8
                        transit_time: ''
                        additional_description: ''
                      address:
                        first_name: BigCommerce
                        last_name: Cart/Checkout
                        email: jane2@example.com
                        company: ''
                        address1: 123 Main Street
                        address2: ''
                        city: Austin
                        state_or_province: Texas
                        state_or_province_code: TX
                        country: United States
                        country_code: US
                        postal_code: '78751'
                        phone: '688546'
                        customFields:
                          - field_id: field_25
                            field_value: Great!
                  taxes:
                    - name: Tax
                      amount: 1.6
                  coupons: []
                  shipping_cost_total_inc_tax: 8.32
                  shipping_cost_total_ex_tax: 8
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 1.6
                  subtotal_inc_tax: 33.23
                  subtotal_ex_tax: 31.95
                  grand_total: 41.55
                  created_time: '2019-08-05T15:38:14+00:00'
                  updated_time: '2019-08-05T15:41:28+00:00'
                  customer_message: ''
                meta: {}
            Coupon Applied:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 25
                    channel_id: 1
                    email: customer@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 53.6
                    cart_amount_ex_tax: 53.6
                    coupons:
                      - id: 1
                        code: SHOP20
                        coupon_type: percentage_discount
                        discounted_amount: 13.4
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 7
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 6.4
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts:
                            - id: coupon
                              discounted_amount: 6.4
                          coupons: 6.4
                          discount_amount: 0
                          coupon_amount: 6.4
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts:
                            - id: coupon
                              discounted_amount: 7
                          coupons: 7
                          discount_amount: 0
                          coupon_amount: 7
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:08:01+00:00'
                  billing_address:
                    id: 618a9ce18173e
                    first_name: Jane
                    last_name: Doe
                    email: customer@example.com
                    company: ''
                    address1: 123 Main Street
                    address2: ''
                    city: ''
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: '29681'
                    phone: '12125556895'
                    custom_fields: []
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons:
                    - id: 1
                      code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 13.4
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 53.6
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:08:01+00:00'
                  customer_message: ''
                meta: {}
            No Coupon Applied:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 0
                    channel_id: 1
                    email: example@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 67
                    cart_amount_ex_tax: 67
                    coupons: []
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 0
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:06:56+00:00'
                  billing_address: {}
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 67
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:06:56+00:00'
                  customer_message: ''
                meta: {}
            Include promotions:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 0
                    channel_id: 1
                    email: example@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 67
                    cart_amount_ex_tax: 67
                    coupons: []
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 0
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:06:56+00:00'
                  billing_address: {}
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 67
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:06:56+00:00'
                  customer_message: ''
                  promotions:
                    - banners:
                        - id: '3'
                          type: applied
                          page:
                            - homepage
                            - cartpage
                          text: Some text
                meta: {}
            example-1:
              example:
                data:
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  cart:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    customer_id: 0
                    email: string@example.com
                    currency:
                      code: string
                    base_amount: 0
                    channel_id: 0
                    discount_amount: 0
                    cart_amount_inc_tax: 0
                    cart_amount_ex_tax: 0
                    coupons:
                      - code: string
                        id: 0
                        coupon_type: string
                        discounted_amount: 0
                    discounts:
                      - id: string
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - quantity: 0
                          id: string
                          variant_id: 0
                          product_id: 0
                          sku: string
                          name: string
                          url: string
                          is_taxable: true
                          image_url: string
                          discounts:
                            - id: string
                              discounted_amount: 0
                          coupons: 0
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 0
                          list_price: 0
                          sale_price: 0
                          extended_list_price: 0
                          extended_sale_price: 0
                          is_require_shipping: true
                          is_mutable: true
                          parent_id: 0
                          gift_wrapping:
                            name: string
                            message: string
                            amount: 0
                            amount_as_integer: 0
                      digital_items:
                        - quantity: 0
                          id: string
                          variant_id: 0
                          parent_id: 0
                          product_id: 0
                          sku: string
                          name: string
                          url: string
                          is_mutable: true
                          is_require_shipping: true
                          is_taxable: true
                          image_url: string
                          discounts:
                            - id: string
                              discounted_amount: 0
                          coupons: 0
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 0
                          list_price: 0
                          sale_price: 0
                          extended_list_price: 0
                          extended_sale_price: 0
                      gift_certificates:
                        - theme: string
                          amount: 0
                          sender:
                            name: string
                            email: string
                          recipient:
                            name: string
                            email: string
                          id: string
                          name: string
                          taxable: true
                          message: string
                      custom_items:
                        - quantity: 0
                          id: string
                          extended_list_price: 0
                          list_price: 0
                          sku: string
                          name: string
                          image_url: string
                    created_time: string
                    updated_time: string
                  billing_address:
                    first_name: string
                    last_name: string
                    email: string
                    company: string
                    address1: string
                    address2: string
                    city: string
                    state_or_province: string
                    state_or_province_code: string
                    country_code: string
                    postal_code: string
                    phone: '12128565555'
                    custom_fields:
                      - field_id: string
                        field_value: string
                    id: string
                  consignments:
                    - id: string
                      shippingAddress: {}
                      address:
                        first_name: string
                        last_name: string
                        email: string
                        company: string
                        address1: string
                        address2: string
                        city: string
                        state_or_province: string
                        state_or_province_code: string
                        country_code: string
                        postal_code: string
                        phone: '12125556858'
                        custom_fields:
                          - field_id: string
                            field_value: string
                        id: string
                      available_shipping_options:
                        - description: string
                          id: string
                          type: string
                          image_url: string
                          cost: 0
                          transit_time: string
                          additional_description: string
                      selected_shipping_option:
                        description: string
                        id: string
                        type: string
                        image_url: string
                        cost: 0
                        transit_time: string
                        additional_description: string
                      coupon_discounts:
                        - code: string
                          amount: 0
                      discounts:
                        - id: 0
                      shipping_cost_inc_tax: 0
                      shipping_cost_ex_tax: 0
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      line_item_ids:
                        - string
                  taxes:
                    - name: string
                      amount: 0
                  coupons:
                    - code: SHOPNOW
                      id: 1
                      coupon_type: percentage_discount
                      discounted_amount: 0.9
                  order_id: string
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 0
                  subtotal_ex_tax: 0
                  grand_total: 0
                  created_time: string
                  updated_time: string
                  customer_message: string
                  promotions:
                    - banners:
                        - id: '3'
                          type: applied
                          page:
                            - homepage
                            - cartpage
                          text: Some text
  '/checkouts/{checkoutId}/coupons':
    post:
      tags:
        - Checkout Coupons
      summary: Add Coupon to Checkout
      description: |-
        Adds a coupon code to a checkout.

        **Required Fields**
        * coupon_code

        **Limits**
        * Coupon codes have a 50-character limit. 
      operationId: CheckoutsCouponsByCheckoutIdPost
      parameters:
        - $ref: '#/components/parameters/checkoutId'
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponCodeRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Checkout'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
            Available Shipping Options:
              example:
                data:
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  cart:
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    customer_id: 11
                    channel_id: 1
                    email: janedoe@example.com
                    currency:
                      code: USD
                    base_amount: 31.95
                    discount_amount: 0
                    cart_amount_inc_tax: 33.23
                    cart_amount_ex_tax: 31.95
                    coupons:
                      - id: 1
                        code: SHOP20
                        coupon_type: percentage_discount
                        discounted_amount: 0.9
                    discounts:
                      - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                          parent_id: 123
                          variant_id: 359
                          product_id: 188
                          sku: DUST1
                          name: Hello
                          url: 'https://{store_hash}/all/dustpan-brush/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35.95
                          list_price: 31.95
                          sale_price: 33.23
                          extended_list_price: 31.95
                          extended_sale_price: 33.23
                          is_require_shipping: true
                          gift_wrapping: {}
                      digital_items: []
                      gift_certificates: []
                      custom_items: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    updated_time: '2019-08-05T15:41:28+00:00'
                  billing_address:
                    id: 5d484d668e5aa
                    first_name: Jane
                    last_name: Doe
                    email: janedoe@example.com
                    company: BigCommerce
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: ''
                    phone: '12125685555'
                    custom_fields: []
                  consignments:
                    - id: 5d484e28d20a8
                      shipping_cost_inc_tax: 0
                      shipping_cost_ex_tax: 0
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      coupon_discounts: []
                      discounts: []
                      line_item_ids:
                        - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                      address:
                        first_name: BigCommerce
                        last_name: Cart/Checkout
                        email: jane2@example.com
                        company: ''
                        address1: 123 Main Street
                        address2: ''
                        city: Austin
                        state_or_province: Texas
                        state_or_province_code: TX
                        country: United States
                        country_code: US
                        postal_code: '78751'
                        phone: '688546'
                        customFields:
                          - field_id: field_25
                            field_value: Great!
                      available_shipping_options:
                        - id: 006a58a98c9a844225552ee2a9c60ca8
                          type: shipping_byweight
                          description: Ship by Weight
                          image_url: ''
                          cost: 8
                          transit_time: ''
                          additional_description: ''
                        - id: 722d78b5120de60a725e41be9bb8d999
                          type: shipping_flatrate
                          description: Flat Rate
                          image_url: ''
                          cost: 12
                          transit_time: ''
                          additional_description: ''
                        - id: 71090fa93c8985348892543c3f4887b6
                          type: shipping_upsready
                          description: UPS® (UPS Next Day Air®)
                          image_url: ''
                          cost: 43.9
                          transit_time: 1 business day
                          additional_description: ''
                  taxes:
                    - name: Tax
                      amount: 1.28
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 1.28
                  subtotal_inc_tax: 33.23
                  subtotal_ex_tax: 31.95
                  grand_total: 33.23
                  created_time: '2019-08-05T15:38:14+00:00'
                  updated_time: '2019-08-05T15:41:28+00:00'
                  customer_message: ''
                meta: {}
            Selected Shipping Options:
              example:
                data:
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  cart:
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    customer_id: 11
                    channel_id: 1
                    email: janedoe@example.com
                    currency:
                      code: USD
                    base_amount: 31.95
                    discount_amount: 0
                    cart_amount_inc_tax: 33.23
                    cart_amount_ex_tax: 31.95
                    coupons: []
                    discounts:
                      - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                          parent_id: 123
                          variant_id: 359
                          product_id: 188
                          sku: DUST1
                          name: Hello
                          url: 'https://{store_hash}/all/dustpan-brush/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35.95
                          list_price: 31.95
                          sale_price: 33.23
                          extended_list_price: 31.95
                          extended_sale_price: 33.23
                          is_require_shipping: true
                      digital_items: []
                      gift_certificates: []
                      custom_items: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    updated_time: '2019-08-05T15:41:28+00:00'
                  billing_address:
                    id: 5d484d668e5aa
                    first_name: Jane
                    last_name: Doe
                    email: janedoe@example.com
                    company: BigCommerce
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: ''
                    phone: '12125559659'
                    custom_fields: []
                  consignments:
                    - id: 5d484e28d20a8
                      shipping_cost_inc_tax: 8.32
                      shipping_cost_ex_tax: 8
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      coupon_discounts: []
                      discounts: []
                      line_item_ids:
                        - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                      selected_shipping_option:
                        id: 006a58a98c9a844225552ee2a9c60ca8
                        type: shipping_byweight
                        description: Ship by Weight
                        image_url: ''
                        cost: 8
                        transit_time: ''
                        additional_description: ''
                      address:
                        first_name: BigCommerce
                        last_name: Cart/Checkout
                        email: jane2@example.com
                        company: ''
                        address1: 123 Main Street
                        address2: ''
                        city: Austin
                        state_or_province: Texas
                        state_or_province_code: TX
                        country: United States
                        country_code: US
                        postal_code: '78751'
                        phone: '688546'
                        customFields:
                          - field_id: field_25
                            field_value: Great!
                  taxes:
                    - name: Tax
                      amount: 1.6
                  coupons: []
                  shipping_cost_total_inc_tax: 8.32
                  shipping_cost_total_ex_tax: 8
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 1.6
                  subtotal_inc_tax: 33.23
                  subtotal_ex_tax: 31.95
                  grand_total: 41.55
                  created_time: '2019-08-05T15:38:14+00:00'
                  updated_time: '2019-08-05T15:41:28+00:00'
                  customer_message: ''
                meta: {}
            Coupon Applied:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 25
                    channel_id: 1
                    email: customer@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 53.6
                    cart_amount_ex_tax: 53.6
                    coupons:
                      - id: 1
                        code: SHOP20
                        coupon_type: percentage_discount
                        discounted_amount: 13.4
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 7
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 6.4
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts:
                            - id: coupon
                              discounted_amount: 6.4
                          coupons: 6.4
                          discount_amount: 0
                          coupon_amount: 6.4
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts:
                            - id: coupon
                              discounted_amount: 7
                          coupons: 7
                          discount_amount: 0
                          coupon_amount: 7
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:08:01+00:00'
                  billing_address:
                    id: 618a9ce18173e
                    first_name: Jane
                    last_name: Doe
                    email: customer@example.com
                    company: ''
                    address1: 123 Main Street
                    address2: ''
                    city: ''
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: '29681'
                    phone: '12125556895'
                    custom_fields: []
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons:
                    - id: 1
                      code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 13.4
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 53.6
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:08:01+00:00'
                  customer_message: ''
                meta: {}
            No Coupon Applied:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 0
                    channel_id: 1
                    email: example@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 67
                    cart_amount_ex_tax: 67
                    coupons: []
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 0
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:06:56+00:00'
                  billing_address: {}
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 67
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:06:56+00:00'
                  customer_message: ''
                meta: {}
            Include promotions:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 0
                    channel_id: 1
                    email: example@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 67
                    cart_amount_ex_tax: 67
                    coupons: []
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 0
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:06:56+00:00'
                  billing_address: {}
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 67
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:06:56+00:00'
                  customer_message: ''
                  promotions:
                    - banners:
                        - id: '3'
                          type: applied
                          page:
                            - homepage
                            - cartpage
                          text: Some text
                meta: {}
            example-1:
              example:
                data:
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  cart:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    customer_id: 0
                    email: string@example.com
                    currency:
                      code: string
                    base_amount: 0
                    channel_id: 0
                    discount_amount: 0
                    cart_amount_inc_tax: 0
                    cart_amount_ex_tax: 0
                    coupons:
                      - code: string
                        id: 0
                        coupon_type: string
                        discounted_amount: 0
                    discounts:
                      - id: string
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - quantity: 0
                          id: string
                          variant_id: 0
                          product_id: 0
                          sku: string
                          name: string
                          url: string
                          is_taxable: true
                          image_url: string
                          discounts:
                            - id: string
                              discounted_amount: 0
                          coupons: 0
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 0
                          list_price: 0
                          sale_price: 0
                          extended_list_price: 0
                          extended_sale_price: 0
                          is_require_shipping: true
                          is_mutable: true
                          parent_id: 0
                          gift_wrapping:
                            name: string
                            message: string
                            amount: 0
                            amount_as_integer: 0
                      digital_items:
                        - quantity: 0
                          id: string
                          variant_id: 0
                          parent_id: 0
                          product_id: 0
                          sku: string
                          name: string
                          url: string
                          is_mutable: true
                          is_require_shipping: true
                          is_taxable: true
                          image_url: string
                          discounts:
                            - id: string
                              discounted_amount: 0
                          coupons: 0
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 0
                          list_price: 0
                          sale_price: 0
                          extended_list_price: 0
                          extended_sale_price: 0
                      gift_certificates:
                        - theme: string
                          amount: 0
                          sender:
                            name: string
                            email: string
                          recipient:
                            name: string
                            email: string
                          id: string
                          name: string
                          taxable: true
                          message: string
                      custom_items:
                        - quantity: 0
                          id: string
                          extended_list_price: 0
                          list_price: 0
                          sku: string
                          name: string
                          image_url: string
                    created_time: string
                    updated_time: string
                  billing_address:
                    first_name: string
                    last_name: string
                    email: string
                    company: string
                    address1: string
                    address2: string
                    city: string
                    state_or_province: string
                    state_or_province_code: string
                    country_code: string
                    postal_code: string
                    phone: '12128565555'
                    custom_fields:
                      - field_id: string
                        field_value: string
                    id: string
                  consignments:
                    - id: string
                      shippingAddress: {}
                      address:
                        first_name: string
                        last_name: string
                        email: string
                        company: string
                        address1: string
                        address2: string
                        city: string
                        state_or_province: string
                        state_or_province_code: string
                        country_code: string
                        postal_code: string
                        phone: '12125556858'
                        custom_fields:
                          - field_id: string
                            field_value: string
                        id: string
                      available_shipping_options:
                        - description: string
                          id: string
                          type: string
                          image_url: string
                          cost: 0
                          transit_time: string
                          additional_description: string
                      selected_shipping_option:
                        description: string
                        id: string
                        type: string
                        image_url: string
                        cost: 0
                        transit_time: string
                        additional_description: string
                      coupon_discounts:
                        - code: string
                          amount: 0
                      discounts:
                        - id: 0
                      shipping_cost_inc_tax: 0
                      shipping_cost_ex_tax: 0
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      line_item_ids:
                        - string
                  taxes:
                    - name: string
                      amount: 0
                  coupons:
                    - code: SHOPNOW
                      id: 1
                      coupon_type: percentage_discount
                      discounted_amount: 0.9
                  order_id: string
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 0
                  subtotal_ex_tax: 0
                  grand_total: 0
                  created_time: string
                  updated_time: string
                  customer_message: string
                  promotions:
                    - banners:
                        - id: '3'
                          type: applied
                          page:
                            - homepage
                            - cartpage
                          text: Some text
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-codegen-request-body-name: body
  '/checkouts/{checkoutId}/coupons/{couponCode}':
    delete:
      tags:
        - Checkout Coupons
      summary: Delete Checkout Coupon
      description: Deletes a coupon code from a checkout.
      operationId: CheckoutsCouponsByCheckoutIdAndCouponCodeDelete
      parameters:
        - $ref: '#/components/parameters/checkoutId'
        - $ref: '#/components/parameters/Accept'
        - name: couponCode
          in: path
          description: 'The actual coupon code value, not the coupon ID.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Checkout'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
            Available Shipping Options:
              example:
                data:
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  cart:
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    customer_id: 11
                    channel_id: 1
                    email: janedoe@example.com
                    currency:
                      code: USD
                    base_amount: 31.95
                    discount_amount: 0
                    cart_amount_inc_tax: 33.23
                    cart_amount_ex_tax: 31.95
                    coupons:
                      - id: 1
                        code: SHOP20
                        coupon_type: percentage_discount
                        discounted_amount: 0.9
                    discounts:
                      - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                          parent_id: 123
                          variant_id: 359
                          product_id: 188
                          sku: DUST1
                          name: Hello
                          url: 'https://{store_hash}/all/dustpan-brush/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35.95
                          list_price: 31.95
                          sale_price: 33.23
                          extended_list_price: 31.95
                          extended_sale_price: 33.23
                          is_require_shipping: true
                          gift_wrapping: {}
                      digital_items: []
                      gift_certificates: []
                      custom_items: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    updated_time: '2019-08-05T15:41:28+00:00'
                  billing_address:
                    id: 5d484d668e5aa
                    first_name: Jane
                    last_name: Doe
                    email: janedoe@example.com
                    company: BigCommerce
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: ''
                    phone: '12125685555'
                    custom_fields: []
                  consignments:
                    - id: 5d484e28d20a8
                      shipping_cost_inc_tax: 0
                      shipping_cost_ex_tax: 0
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      coupon_discounts: []
                      discounts: []
                      line_item_ids:
                        - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                      address:
                        first_name: BigCommerce
                        last_name: Cart/Checkout
                        email: jane2@example.com
                        company: ''
                        address1: 123 Main Street
                        address2: ''
                        city: Austin
                        state_or_province: Texas
                        state_or_province_code: TX
                        country: United States
                        country_code: US
                        postal_code: '78751'
                        phone: '688546'
                        customFields:
                          - field_id: field_25
                            field_value: Great!
                      available_shipping_options:
                        - id: 006a58a98c9a844225552ee2a9c60ca8
                          type: shipping_byweight
                          description: Ship by Weight
                          image_url: ''
                          cost: 8
                          transit_time: ''
                          additional_description: ''
                        - id: 722d78b5120de60a725e41be9bb8d999
                          type: shipping_flatrate
                          description: Flat Rate
                          image_url: ''
                          cost: 12
                          transit_time: ''
                          additional_description: ''
                        - id: 71090fa93c8985348892543c3f4887b6
                          type: shipping_upsready
                          description: UPS® (UPS Next Day Air®)
                          image_url: ''
                          cost: 43.9
                          transit_time: 1 business day
                          additional_description: ''
                  taxes:
                    - name: Tax
                      amount: 1.28
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 1.28
                  subtotal_inc_tax: 33.23
                  subtotal_ex_tax: 31.95
                  grand_total: 33.23
                  created_time: '2019-08-05T15:38:14+00:00'
                  updated_time: '2019-08-05T15:41:28+00:00'
                  customer_message: ''
                meta: {}
            Selected Shipping Options:
              example:
                data:
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  cart:
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    customer_id: 11
                    channel_id: 1
                    email: janedoe@example.com
                    currency:
                      code: USD
                    base_amount: 31.95
                    discount_amount: 0
                    cart_amount_inc_tax: 33.23
                    cart_amount_ex_tax: 31.95
                    coupons: []
                    discounts:
                      - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                          parent_id: 123
                          variant_id: 359
                          product_id: 188
                          sku: DUST1
                          name: Hello
                          url: 'https://{store_hash}/all/dustpan-brush/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35.95
                          list_price: 31.95
                          sale_price: 33.23
                          extended_list_price: 31.95
                          extended_sale_price: 33.23
                          is_require_shipping: true
                      digital_items: []
                      gift_certificates: []
                      custom_items: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    updated_time: '2019-08-05T15:41:28+00:00'
                  billing_address:
                    id: 5d484d668e5aa
                    first_name: Jane
                    last_name: Doe
                    email: janedoe@example.com
                    company: BigCommerce
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: ''
                    phone: '12125559659'
                    custom_fields: []
                  consignments:
                    - id: 5d484e28d20a8
                      shipping_cost_inc_tax: 8.32
                      shipping_cost_ex_tax: 8
                      handling_cost_inc_tax: 0
                      handling_cost_ex_tax: 0
                      coupon_discounts: []
                      discounts: []
                      line_item_ids:
                        - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                      selected_shipping_option:
                        id: 006a58a98c9a844225552ee2a9c60ca8
                        type: shipping_byweight
                        description: Ship by Weight
                        image_url: ''
                        cost: 8
                        transit_time: ''
                        additional_description: ''
                      address:
                        first_name: BigCommerce
                        last_name: Cart/Checkout
                        email: jane2@example.com
                        company: ''
                        address1: 123 Main Street
                        address2: ''
                        city: Austin
                        state_or_province: Texas
                        state_or_province_code: TX
                        country: United States
                        country_code: US
                        postal_code: '78751'
                        phone: '688546'
                        customFields:
                          - field_id: field_25
                            field_value: Great!
                  taxes:
                    - name: Tax
                      amount: 1.6
                  coupons: []
                  shipping_cost_total_inc_tax: 8.32
                  shipping_cost_total_ex_tax: 8
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 1.6
                  subtotal_inc_tax: 33.23
                  subtotal_ex_tax: 31.95
                  grand_total: 41.55
                  created_time: '2019-08-05T15:38:14+00:00'
                  updated_time: '2019-08-05T15:41:28+00:00'
                  customer_message: ''
                meta: {}
            Coupon Applied:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 25
                    channel_id: 1
                    email: customer@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 53.6
                    cart_amount_ex_tax: 53.6
                    coupons:
                      - id: 1
                        code: SHOP20
                        coupon_type: percentage_discount
                        discounted_amount: 13.4
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 7
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 6.4
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts:
                            - id: coupon
                              discounted_amount: 6.4
                          coupons: 6.4
                          discount_amount: 0
                          coupon_amount: 6.4
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts:
                            - id: coupon
                              discounted_amount: 7
                          coupons: 7
                          discount_amount: 0
                          coupon_amount: 7
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:08:01+00:00'
                  billing_address:
                    id: 618a9ce18173e
                    first_name: Jane
                    last_name: Doe
                    email: customer@example.com
                    company: ''
                    address1: 123 Main Street
                    address2: ''
                    city: ''
                    state_or_province: ''
                    state_or_province_code: ''
                    country: ''
                    country_code: ''
                    postal_code: '29681'
                    phone: '12125556895'
                    custom_fields: []
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons:
                    - id: 1
                      code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 13.4
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 53.6
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:08:01+00:00'
                  customer_message: ''
                meta: {}
            No Coupon Applied:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 0
                    channel_id: 1
                    email: example@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 67
                    cart_amount_ex_tax: 67
                    coupons: []
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 0
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:06:56+00:00'
                  billing_address: {}
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 67
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:06:56+00:00'
                  customer_message: ''
                meta: {}
            Include promotions:
              example:
                data:
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  cart:
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    customer_id: 0
                    channel_id: 1
                    email: example@example.com
                    currency:
                      code: USD
                    base_amount: 67
                    discount_amount: 0
                    cart_amount_inc_tax: 67
                    cart_amount_ex_tax: 67
                    coupons: []
                    discounts:
                      - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        discounted_amount: 0
                      - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        discounted_amount: 0
                    line_items:
                      physical_items:
                        - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                          variant_id: 528
                          product_id: 145
                          sku: htltwl-001
                          name: Hotel Towel
                          url: 'https://example.com/hotel-towel/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 32
                          list_price: 32
                          sale_price: 32
                          extended_list_price: 32
                          extended_sale_price: 32
                          is_require_shipping: true
                          is_mutable: true
                      digital_items:
                        - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                          variant_id: 182
                          product_id: 138
                          sku: ebk-001
                          name: eBook Download
                          url: 'https://example.com/digital/'
                          quantity: 1
                          is_taxable: true
                          image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                          discounts: []
                          coupons: []
                          discount_amount: 0
                          coupon_amount: 0
                          original_price: 35
                          list_price: 35
                          sale_price: 35
                          extended_list_price: 35
                          extended_sale_price: 35
                          is_require_shipping: false
                          is_mutable: true
                      gift_certificates: []
                      custom_items: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    updated_time: '2021-11-09T16:06:56+00:00'
                  billing_address: {}
                  consignments: []
                  taxes:
                    - name: Tax
                      amount: 0
                  coupons: []
                  shipping_cost_total_inc_tax: 0
                  shipping_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  handling_cost_total_ex_tax: 0
                  tax_total: 0
                  subtotal_inc_tax: 67
                  subtotal_ex_tax: 67
                  grand_total: 67
                  created_time: '2021-11-08T22:46:23+00:00'
                  updated_time: '2021-11-09T16:06:56+00:00'
                  customer_message: ''
                  promotions:
                    - banners:
                        - id: '3'
                          type: applied
                          page:
                            - homepage
                            - cartpage
                          text: Some text
                meta: {}
  '/checkouts/{checkoutId}/orders':
    post:
      tags:
        - Checkout Orders
      summary: Create an Order
      description: |-
        Creates an order.

        ## Usage notes
        * Orders created will be set to incomplete order status.
        * You can create as many orders from the same order (cart) as you want.
        * Order duplication copies the existing order, assigns a new order number, and sets the new order status to `incomplete`.
        * Once the order is paid, the cart is deleted.
        * Cart deletion occurs if you are using BigCommerce to accept payments on orders.
      operationId: createAnOrder
      parameters:
        - $ref: '#/components/parameters/checkoutId'
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Order'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
              example:
                data:
                  id: 75
                meta: {}
  '/checkouts/settings':
    parameters:     
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
        - Checkout Settings
      summary: Get Checkout Settings
      description: Get checkout settings
      operationId: GetCheckoutSettings
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CheckoutsSettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
              example:
                data:
                  custom_checkout_script_url: 'https://example.com/custom-checkout-script.js'
                  order_confirmation_use_custom_checkout_script: false
                  custom_order_confirmation_script_url: 'https://example.com/custom-order-confirmation-script.js'
                  custom_checkout_supports_uco_settings: false
                meta: {}
            WebDAV protocol:
              example:
                data:
                  custom_checkout_script_url: 'webdav:vtz-checkout/dist/auto-loader.js'
                  order_confirmation_use_custom_checkout_script: false
                  custom_order_confirmation_script_url: 'webdav:vtz-order-confirmation/dist/auto-loader.js'
                meta: {}
    put:
      tags:
        - Checkout Settings
      summary: Update Checkout Settings
      description: Update checkout settings
      operationId: UpdateCheckoutSettings
      parameters:
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutsSettingsRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CheckoutsSettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
              example:
                data:
                  custom_checkout_script_url: 'https://example.com/custom-checkout-script.js'
                  order_confirmation_use_custom_checkout_script: false
                  custom_order_confirmation_script_url: 'https://example.com/custom-order-confirmation-script.js'
                  custom_checkout_supports_uco_settings: false
                meta: {}
            WebDAV protocol:
              example:
                data:
                  custom_checkout_script_url: 'webdav:vtz-checkout/dist/auto-loader.js'
                  order_confirmation_use_custom_checkout_script: false
                  custom_order_confirmation_script_url: 'webdav:vtz-order-confirmation/dist/auto-loader.js'
                meta: {}
  '/checkouts/{checkoutId}/token':
    parameters:
      
      - $ref: '#/components/parameters/checkoutId'
      - $ref: '#/components/parameters/Accept'
    post:
      tags:
        - Checkout Token
      summary: Create Checkout Token
      operationId: checkout-token
      parameters:
        - $ref: '#/components/parameters/Content-Type'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  checkoutToken:
                    type: string
                    example: beb3590088be88f59ba980d54a68df655cd8a1052a3e9caf535f3f820146c226
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
              examples:
                example-1:
                  value:
                    data:
                      checkoutToken: beb3590088be88f59ba980d54a68df655cd8a1052a3e9caf535f3f820146c226
                      meta: {}
        '401':
          description: Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    format: int32
                    description: The HTTP status code.
                    example: 401
                  title:
                    type: string
                    description: The error title describing the particular error.
                    example: Unauthorized
                  type:
                    type: string
                    description: |
                      A link to a list of BigCommerce API status codes.
                    example: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
                  errors:
                    type: object
        '422':
          description: Invalid JSON request body - missing or invalid data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: '422'
                    description: The HTTP status code.
                    format: int32
                  title:
                    type: string
                    example: Invalid input
                    description: The error title describing the particular error.
                  type:
                    type: string
                    example: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
                    description: A link to a list of BigCommerce API status codes.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                maxUses:
                  type: number
                  example: 1
                ttl:
                  type: number
                  example: 86400
                  description: Time-to-live (TTL) is the number of seconds the token is set to exist before being discarded.
                  minimum: 1
                  maximum: 2592000
            examples:
              example-1:
                value:
                  maxUses: 1
                  ttl: 2
      description: Use the checkout token to display a confirmation page for a guest shopper.
                    
                    **Usage Notes**
                    * The response from performing this POST request is a checkout token. 
                    * The checkout token is a single-use token that is not order-dependent. You cannot create this token after finalizing an order.
                    * After completing the order, you can redirect the shopper to /order-confirmation/{orderId}?t={checkoutToken}.
                    * After token validation, the /order-confirmation/{orderId} page displays.
                    * The `ORDER_TOKEN` should match the order or the logged-in customer can access the order.
components:
  schemas:
    Checkout:
      title: Checkout
      type: object
      x-internal: false
      properties:
        id:
          type: string
          description: ''
          format: uuid
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        cart:
          title: Cart
          type: object
          properties:
            id:
              type: string
              description: 'Cart ID, provided after creating a cart with a POST request.'
              format: uuid
              example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
            customer_id:
              type: integer
              description: ID of the customer to which the cart belongs.
              example: 1
            email:
              type: string
              description: The email address of the cart. This is the same email address that is used in the billing address.
              example: user@example.com
            currency:
              title: Currency
              type: object
              properties:
                code:
                  type: string
                  description: 'ISO-4217 currency code. (See: http://en.wikipedia.org/wiki/ISO_4217.)'
                  example: USD
            base_amount:
              type: number
              description: 'Sum of cart line-item amounts before cart-level discounts, coupons, or taxes are applied.'
              format: double
              example: 5
            channel_id:
              type: number
              description: ID of channel
            discount_amount:
              type: number
              description: Order-based discounted amount only - Excludes coupon discounts and product-based discounts.
              format: double
              example: 0.5
            cart_amount_inc_tax:
              type: number
              description: Sum of cart line-item amounts minus cart-level discounts and coupons including tax.
              format: double
              example: 4.14
            cart_amount_ex_tax:
              type: number
              description: Sum of cart line-item amounts minus cart-level discounts and coupons excluding tax.
              format: double
              example: 3.6
            coupons:
              type: array
              description: ''
              items:
                title: Applied Coupon
                type: object
                properties:
                  code:
                    type: string
                    description: The coupon code.
                    example: SHOPNOW
                  id:
                    type: integer
                    description: The coupon ID.
                    example: 1
                  coupon_type:
                    type: string
                    description: Key name to identify the type of coupon.
                    example: percentage_discount
                  discounted_amount:
                    type: number
                    description: The discounted amount applied within a given context.
                    format: float
                    example: 0.9
                required:
                  - code
            discounts:
              type: array
              description: ''
              items:
                title: Applied Discount
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the applied discount.
                    example: 5eba1f1e-0ec5-40f7-8058-f7b452c7237d
                  discounted_amount:
                    type: number
                    description: The discounted amount applied within a given context.
                    format: double
                    example: 1.4
            line_items:
              title: Line Item
              type: object
              properties:
                physical_items:
                  type: array
                  description: ''
                  items:
                    title: Item Physical
                    type: object
                    properties:
                      quantity:
                        type: number
                        description: ''
                        format: double
                      id:
                        type: string
                        description: The line-item ID.
                      variant_id:
                        type: number
                        description: ''
                        format: double
                      product_id:
                        type: number
                        description: ''
                        format: double
                      sku:
                        type: string
                        description: ''
                      name:
                        type: string
                        description: The product name of the item.
                      url:
                        type: string
                        description: The product URL.
                      is_taxable:
                        type: boolean
                        description: ''
                      image_url:
                        type: string
                        description: ''
                      discounts:
                        type: array
                        description: ''
                        items:
                          title: Applied Discount
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID of the applied discount.
                            discounted_amount:
                              type: number
                              description: The discounted amount applied within a given context.
                              format: double
                      discount_amount:
                        type: number
                        description: The total value of all discounts applied to this item.
                        format: double
                      coupon_amount:
                        type: number
                        description: The total value of all coupons applied to this item.
                        format: double
                      original_price:
                        type: number
                        description: An item’s original price is the same as the default price of the product configured in the admin panel.
                      list_price:
                        type: number
                        description: 'The net item price before discounts and coupons are applied. BigCommerce derives an item’s list price from the product default price or, if applicable, the sale price configured in the admin panel.'
                        format: double
                      sale_price:
                        type: number
                        description: Price of the item after all discounts are applied. (The final price before tax calculation.)
                        format: double
                      extended_list_price:
                        type: number
                        description: List price of the item multiplied by the quantity.
                        format: double
                      extended_sale_price:
                        type: number
                        description: Sale price of the item multiplied by the quantity.
                        format: double
                      is_require_shipping:
                        type: boolean
                        description: ''
                      is_mutable:
                        type: boolean
                        description: ''
                      parent_id:
                        type: number
                        description: ''
                        nullable: true
                      gift_wrapping:
                        title: Gift Wrapping
                        type: object
                        nullable: true
                        properties:
                          name:
                            type: string
                            description: ''
                          message:
                            type: string
                            description: ''
                          amount:
                            type: number
                            description: ''
                            format: double
                          amount_as_integer:
                            type: number
                            description: ''
                            format: double
                    required:
                      - quantity
                digital_items:
                  type: array
                  description: ''
                  items:
                    title: Item Digital
                    type: object
                    properties:
                      quantity:
                        type: number
                        description: ''
                        format: double
                      id:
                        type: string
                        description: The line-item ID.
                      variant_id:
                        type: number
                        description: ''
                        format: double
                      parent_id:
                        type: number
                        description: ''
                        nullable: true
                      product_id:
                        type: number
                        description: ''
                        format: double
                      sku:
                        type: string
                        description: ''
                      name:
                        type: string
                        description: The product name of the item.
                      url:
                        type: string
                        description: The product URL.
                      is_mutable:
                        type: boolean
                        description: ''
                      is_require_shipping:
                        type: boolean
                        description: ''
                      is_taxable:
                        type: boolean
                        description: ''
                      image_url:
                        type: string
                        description: ''
                      discounts:
                        type: array
                        description: ''
                        items:
                          title: Applied Discount
                          type: object
                          properties:
                            id:
                              type: string
                              description: ID of the applied discount.
                              format: double
                            discounted_amount:
                              type: number
                              description: The discounted amount applied within a given context.
                              format: double
                      discount_amount:
                        type: number
                        description: The total value of all discounts applied to this item.
                        format: double
                      coupon_amount:
                        type: number
                        description: The total value of all coupons applied to this item.
                        format: double
                      original_price:
                        type: number
                        description: An item’s original price is the same as the product default price in the admin panel.
                      list_price:
                        type: number
                        description: 'The net item price before discounts and coupons are applied. BigCommerce derives an item’s list price from the product default price or, if applicable, the sale price configured in the admin panel.'
                        format: double
                      sale_price:
                        type: number
                        description: Price of the item after all discounts are applied. (The final price before tax calculation.)
                        format: double
                      extended_list_price:
                        type: number
                        description: List price of the item multiplied by the quantity.
                        format: double
                      extended_sale_price:
                        type: number
                        description: Sale price of the item multiplied by the quantity.
                        format: double
                    required:
                      - quantity
                gift_certificates:
                  type: array
                  description: ''
                  items:
                    title: Item Gift Certificate
                    type: object
                    properties:
                      theme:
                        type: string
                        description: 'Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.'
                      amount:
                        type: number
                        description: 'Value must be between 1.00 and 1,000.00 in the store’s default currency.'
                        format: double
                      sender:
                        title: Contact Entity
                        type: object
                        properties:
                          name:
                            type: string
                            description: ''
                          email:
                            type: string
                            description: ''
                      recipient:
                        title: Contact Entity
                        type: object
                        properties:
                          name:
                            type: string
                            description: ''
                          email:
                            type: string
                            description: ''
                      id:
                        type: string
                        description: ''
                      name:
                        type: string
                        description: GiftCertificate-provided name that will appear in the control panel.
                      taxable:
                        type: boolean
                        description: ''
                      message:
                        type: string
                        description: Limited to 200 characters.
                    required:
                      - theme
                      - amount
                      - sender
                      - recipient
                custom_items:
                  type: array
                  items:
                    type: object
                    properties:
                      quantity:
                        type: number
                      id:
                        type: string
                      extended_list_price:
                        type: number
                      list_price:
                        type: number
                      sku:
                        type: string
                      name:
                        type: string
                      image_url:
                        type: string
                    required:
                      - quantity
              required:
                - physical_items
                - digital_items
                - gift_certificates
            created_time:
              type: string
              description: Time when the cart was created.
            updated_time:
              type: string
              description: Time when the cart was last updated.
        billing_address:
          title: Address Response
          allOf:
            - title: Address Properties
              properties:
                first_name:
                  type: string
                  description: ''
                last_name:
                  type: string
                  description: ''
                email:
                  type: string
                  description: ''
                company:
                  type: string
                  description: ''
                address1:
                  type: string
                  description: ''
                address2:
                  type: string
                  description: ''
                city:
                  type: string
                  description: ''
                state_or_province:
                  type: string
                  description: Represents state or province.
                state_or_province_code:
                  type: string
                  description: ''
                country_code:
                  type: string
                  description: ''
                postal_code:
                  type: string
                  description: ''
                phone:
                  pattern: '^\+?[1-9]\d{1,14}(x\d{1-5})?$'
                  type: string
                  description: ''
                custom_fields:
                  type: array
                  description: ''
                  items:
                    title: Custom Field
                    type: object
                    properties:
                      field_id:
                        type: string
                        description: ''
                      field_value:
                        type: string
                        description: 'This can also be an array for fields that need to support a list of values (e.g., a set of check boxes.)'
            - properties:
                id:
                  type: string
                  description: ''
          type: object
        consignments:
          type: array
          description: ''
          items:
            title: Consignment
            type: object
            description: 'This allows the use of multiple addresses. When there is only one address, this array will contain only one value, with all the items.'
            properties:
              id:
                type: string
                description: ''
              shippingAddress:
                type: object
                x-deprecated: true
              address:
                title: Address Response
                allOf:
                  - title: Address Properties
                    properties:
                      first_name:
                        type: string
                        description: ''
                      last_name:
                        type: string
                        description: ''
                      email:
                        type: string
                        description: ''
                      company:
                        type: string
                        description: ''
                      address1:
                        type: string
                        description: ''
                      address2:
                        type: string
                        description: ''
                      city:
                        type: string
                        description: ''
                      state_or_province:
                        type: string
                        description: Represents state or province.
                      state_or_province_code:
                        type: string
                        description: ''
                      country_code:
                        type: string
                        description: ''
                      postal_code:
                        type: string
                        description: ''
                      phone:
                        pattern: '^\+?[1-9]\d{1,14}(x\d{1-5})?$'
                        type: string
                        description: ''
                      custom_fields:
                        type: array
                        description: ''
                        items:
                          title: Custom Field
                          type: object
                          properties:
                            field_id:
                              type: string
                              description: ''
                            field_value:
                              type: string
                              description: 'This can also be an array for fields that need to support a list of values (e.g., a set of check boxes.)'
                    required:
                      - email
                      - country_code
                  - properties:
                      id:
                        type: string
                        description: ''
                type: object
              available_shipping_options:
                type: array
                description: This is available only when "include=consignments.available_shipping_options" is presented in the URL.
                items:
                  title: Selected Shipping Option
                  type: object
                  properties:
                    description:
                      type: string
                      description: ''
                    id:
                      type: string
                      description: ''
                    type:
                      type: string
                      description: Specifies the type of shipping option, such as flat rate, UPS, etc.
                    image_url:
                      type: string
                      description: ''
                    cost:
                      type: number
                      description: ''
                      format: double
                    transit_time:
                      type: string
                      description: An estimate of the arrival time.
                    additional_description:
                      type: string
                      readOnly: true
                      description: 'Read-only field that is used for the Shipping Provider API.'
              selected_shipping_option:
                title: Selected Shipping Option
                type: object
                properties:
                  description:
                    type: string
                    description: ''
                  id:
                    type: string
                    description: ''
                  type:
                    type: string
                    description: Specifies the type of shipping option, such as flat rate, UPS, etc.
                  image_url:
                    type: string
                    description: ''
                  cost:
                    type: number
                    description: ''
                  transit_time:
                    type: string
                    description: An estimate of the arrival time.
                  additional_description:
                    type: string
                    readOnly: true
                    description: 'Read-only field that is used for the Shipping Provider API.'
              coupon_discounts:
                type: array
                description: List of consignment discounts applied through coupons.
                items:
                  title: Consignment Coupon Discount
                  type: object
                  properties:
                    code:
                      type: string
                      description: Coupon code through which this discount was applied.
                    amount:
                      type: number
                      description: ''
                      format: double
              discounts:
                type: array
                description: List of consignment discounts applied through cart-level discounts.
                items:
                  title: Consignment Discount
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Discount rule ID that applied this discount.
              shipping_cost_inc_tax:
                type: number
                description: The shipping cost for this consignment including tax.
                format: double
              shipping_cost_ex_tax:
                type: number
                description: The shipping cost for this consignment excluding tax.
                format: double
              handling_cost_inc_tax:
                type: number
                description: The handling cost of shipping for this consignment including tax.
                format: double
              handling_cost_ex_tax:
                type: number
                description: The handling cost of shipping for this consignment excluding tax.
                format: double
              line_item_ids:
                type: array
                description: Array lists only one line item. To display multiple `line_item_ids`, perform a `POST` request to add consignments to the checkout using the same address.
                items:
                  type: string
              selected_pickup_option:
                $ref: '#/components/schemas/PickupOption'
        taxes:
          type: array
          description: ''
          items:
            title: Tax
            type: object
            properties:
              name:
                type: string
                description: Name of the tax.
              amount:
                type: number
                description: ''
                format: double
        coupons:
          type: array
          description: Coupons applied at checkout level.
          items:
            $ref: '#/components/schemas/AppliedCoupon'
        order_id:
          type: string
          description: ''
          nullable: true
        shipping_cost_total_inc_tax:
          type: number
          description: Shipping cost before any discounts are applied including tax.
          format: double
        shipping_cost_total_ex_tax:
          type: number
          description: Shipping cost before any discounts are applied excluding tax.
          format: double
        handling_cost_total_inc_tax:
          type: number
          description: Handling cost for all consignments including tax.
          format: double
        handling_cost_total_ex_tax:
          type: number
          description: Handling cost for all consignments excluding tax.
          format: double
        tax_total:
          type: number
          description: ''
          format: double
        subtotal_inc_tax:
          type: number
          description: Subtotal of the checkout before applying item-level discounts including tax.
          format: double
        subtotal_ex_tax:
          type: number
          description: Subtotal of the checkout before applying item-level discounts excluding tax.
          format: double
        grand_total:
          type: number
          description: 'The total payable amount, before applying any store credit or a gift certificate.'
          format: double
        created_time:
          type: string
          description: Time when the cart was created.
        updated_time:
          type: string
          description: Time when the cart was last updated.
        customer_message:
          type: string
          description: Shopper's message provided as details for the order to be created from this checkout.
        promotions:
          type: array
          items:
            type: object
            properties:
              banners:
                title: Banner
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: ID of the promotion.
                    type:
                      type: string
                      description: Type of the banner.
                    page:
                      type: array
                      description: An array of the locations where the banner will display.
                      items:
                        type: string
                    text:
                      type: string
                      description: Text of the banner.
    Checkout_Put:
      title: Checkout_Put
      required:
        - customer_message
      type: object
      properties:
        customer_message:
          type: string
          description: ''
      x-internal: false
    AppliedCoupon:
      title: Applied Coupon
      required:
        - code
      type: object
      properties:
        code:
          type: string
          description: The coupon code.
          example: SHOPNOW
        id:
          type: integer
          description: The coupon ID.
          example: 1
        coupon_type:
          type: string
          description: Key name to identify the type of coupon.
          example: percentage_discount
        discounted_amount:
          type: number
          description: The discounted amount applied within a given context.
          format: float
          example: 0.9
      x-internal: false
    AddressProperties:
      title: Address Properties
      required:
        - country_code
        - email
      type: object
      properties:
        first_name:
          type: string
          description: ''
        last_name:
          type: string
          description: ''
        email:
          type: string
          description: ''
        company:
          type: string
          description: ''
        address1:
          type: string
          description: ''
        address2:
          type: string
          description: ''
        city:
          type: string
          description: ''
        state_or_province:
          type: string
          description: Represents state or province.
        state_or_province_code:
          type: string
          description: ''
        country_code:
          type: string
          description: ''
        postal_code:
          type: string
          description: ''
        phone:
          pattern: '^\+?[1-9]\d{1,14}(x\d{1-5})?$'
          type: string
          description: ''
        custom_fields:
          type: array
          description: 'You can retrieve custom fields from the [Get Form Fields](/docs/rest-storefront/forms#get-form-fields) endpoint.'
          items:
            title: Custom Field
            type: object
            properties:
              field_id:
                type: string
                description: ''
              field_value:
                type: string
                description: 'This can also be an array for fields that need to support a list of values (e.g., a set of check boxes.)'
      x-internal: false
    CreateConsignmentRequest:
      title: Create Consignment Request
      type: array
      items:
        type: object
        properties:
          address:
            title: Address Properties
            required:
              - country_code
              - email
            type: object
            properties:
              first_name:
                type: string
                description: ''
              last_name:
                type: string
                description: ''
              email:
                type: string
                description: ''
              company:
                type: string
                description: ''
              address1:
                type: string
                description: ''
              address2:
                type: string
                description: ''
              city:
                type: string
                description: ''
              state_or_province:
                type: string
                description: Represents state or province.
              state_or_province_code:
                type: string
                description: ''
              country_code:
                type: string
                description: ''
              postal_code:
                type: string
                description: ''
              phone:
                type: string
                description: ''
              custom_fields:
                type: array
                description: 'You can retrieve custom fields from the [Get Form Fields](/docs/rest-storefront/forms#get-form-fields) endpoint.'
                items:
                  title: Custom Field
                  type: object
                  properties:
                    field_id:
                      type: string
                      description: 'You must provide the form field ID value as the `field_id`.'
                    field_value:
                      type: string  
                      description: 'This can also be an array for fields that need to support a list of values (e.g., a set of check boxes.)'
                  required:
                    - field_id
          line_items:
            type: array
            description: ''
            items:
              title: Consignment Line Item
              required:
                - item_id
                - quantity
              type: object
              properties:
                item_id:
                  type: string
                  description: 'Corresponds to `line_items.physical_items[N].id` value from `GET`checkout response.'
                quantity:
                  type: integer
                  description: ''
                  format: int32
          pickup_option:
            type: object
            properties:
              pickup_method_id:
                type: integer
                example: 1                  
      x-internal: false
    UpdateConsignmentRequest:
      title: Update Consignment Request
      type: array
      items:
        type: object
        properties:
          address:
            title: Address Properties
            required:
              - country_code
              - email
            type: object
            properties:
              first_name:
                type: string
                description: ''
              last_name:
                type: string
                description: ''
              email:
                type: string
                description: ''
              company:
                type: string
                description: ''
              address1:
                type: string
                description: ''
              address2:
                type: string
                description: ''
              city:
                type: string
                description: ''
              state_or_province:
                type: string
                description: Represents state or province.
              state_or_province_code:
                type: string
                description: ''
              country_code:
                type: string
                description: ''
              postal_code:
                type: string
                description: ''
              phone:
                pattern: '^\+?[1-9]\d{1,14}(x\d{1-5})?$'
                type: string
                description: ''
              custom_fields:
                type: array
                description: ''
                items:
                  title: Custom Field
                  type: object
                  properties:
                    field_id:
                      type: string
                      description: ''
                    field_value:
                      type: string
                      description: 'This can also be an array for fields that need to support a list of values (e.g., a set of check boxes.)'
          line_items:
            type: array
            description: ''
            items:
              title: Consignment Line Item
              required:
                - item_id
                - quantity
              type: object
              properties:
                item_id:
                  type: string
                  description: 'Corresponds to `line_items.physical_items[N].id` value from `GET`checkout response.'
                quantity:
                  type: integer
                  description: ''
                  format: int32
          shipping_option_id:
            type: string
            description: ''
          pickup_option:
            type: object
            properties:
              pickup_method_id:
                type: integer
                example: 1
      description: One or more of these three fields are mandatory. `address` and `line_items` can be updated in one request. `shipping_option_id` has to be updated in a separate request because changing the address or line items can invalidate the previously available shipping options.
      x-internal: false
    CouponCodeRequest:
      title: Coupon Code Request
      type: object
      properties:
        coupon_code:
          type: string
          description: Coupon codes have a 50-character limit.
      x-internal: false
    Order:
      title: Order
      type: object
      properties:
        id:
          type: integer
          description: The order ID.
          example: 75
      x-internal: false
    CheckoutsSettings:
      title: Checkouts Settings
      type: object
      properties:
        custom_checkout_script_url:
          type: string
        order_confirmation_use_custom_checkout_script:
          type: boolean
        custom_order_confirmation_script_url:
          type: string
        custom_checkout_supports_uco_settings:
          type: boolean
    CheckoutsSettingsRequest:
      title: Checkouts settings request
      type: object
      properties:
        custom_checkout_script_url:
          type: string
          description: 'Custom checkout script URL to replace our default checkout. To reset a store to optimized one-page checkout, pass an empty string for `custom_checkout_script_url` and `custom_order_confirmation_script_url`.'
        order_confirmation_use_custom_checkout_script:
          type: boolean
          description: When order_confirmation_use_custom_checkout_script=true, the default custom_order_confirmation_script_url defaults to an empty string.
        custom_order_confirmation_script_url:
          type: string
          description: 'Custom order confirmation script URL to replace the default order confirmation. To reset a store to optimized one-page checkout, pass an empty string for `custom_checkout_script_url` and `custom_order_confirmation_script_url`.'
        custom_checkout_supports_uco_settings:
          type: boolean
          description: Boolean value that specifies whether this checkout supports Optimized One-Page Checkout settings.
      description: ''
    PickupOption:
      type: object
      title: Pickup Option
      properties:
        pickup_method_id:
          type: integer
    MetaOpen:
      title: Response meta
      type: object
      properties: {}
      additionalProperties: true
      description: Response metadata.
  responses:
    CheckoutResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Checkout'
        Available Shipping Options:
          example:
            data:
              id: 306d57d7-124e-4112-82cd-35e060c0d4d9
              cart:
                id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                customer_id: 11
                channel_id: 1
                email: janedoe@example.com
                currency:
                  code: USD
                base_amount: 31.95
                discount_amount: 0
                cart_amount_inc_tax: 33.23
                cart_amount_ex_tax: 31.95
                coupons:
                  - id: 1
                    code: SHOP20
                    coupon_type: percentage_discount
                    discounted_amount: 0.9
                discounts:
                  - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    discounted_amount: 0
                line_items:
                  physical_items:
                    - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                      parent_id: 123
                      variant_id: 359
                      product_id: 188
                      sku: DUST1
                      name: Hello
                      url: 'https://{store_hash}/all/dustpan-brush/'
                      quantity: 1
                      is_taxable: true
                      image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2'
                      discounts: []
                      coupons: []
                      discount_amount: 0
                      coupon_amount: 0
                      original_price: 35.95
                      list_price: 31.95
                      sale_price: 33.23
                      extended_list_price: 31.95
                      extended_sale_price: 33.23
                      is_require_shipping: true
                      gift_wrapping: {}
                  digital_items: []
                  gift_certificates: []
                  custom_items: []
                created_time: '2019-08-05T15:38:14+00:00'
                updated_time: '2019-08-05T15:41:28+00:00'
              billing_address:
                id: 5d484d668e5aa
                first_name: Jane
                last_name: Doe
                email: janedoe@example.com
                company: BigCommerce
                address1: 123 Main Street
                address2: Apt 1
                city: Austin
                state_or_province: ''
                state_or_province_code: ''
                country: ''
                country_code: ''
                postal_code: ''
                phone: '12125685555'
                custom_fields: []
              consignments:
                - id: 5d484e28d20a8
                  shipping_cost_inc_tax: 0
                  shipping_cost_ex_tax: 0
                  handling_cost_inc_tax: 0
                  handling_cost_ex_tax: 0
                  coupon_discounts: []
                  discounts: []
                  line_item_ids:
                    - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                  address:
                    first_name: BigCommerce
                    last_name: Cart/Checkout
                    email: jane2@example.com
                    company: ''
                    address1: 123 Main Street
                    address2: ''
                    city: Austin
                    state_or_province: Texas
                    state_or_province_code: TX
                    country: United States
                    country_code: US
                    postal_code: '78751'
                    phone: '688546'
                    customFields:
                      - field_id: field_25
                        field_value: Great!
                  available_shipping_options:
                    - id: 006a58a98c9a844225552ee2a9c60ca8
                      type: shipping_byweight
                      description: Ship by Weight
                      image_url: ''
                      cost: 8
                      transit_time: ''
                      additional_description: ''
                    - id: 722d78b5120de60a725e41be9bb8d999
                      type: shipping_flatrate
                      description: Flat Rate
                      image_url: ''
                      cost: 12
                      transit_time: ''
                      additional_description: ''
                    - id: 71090fa93c8985348892543c3f4887b6
                      type: shipping_upsready
                      description: UPS® (UPS Next Day Air®)
                      image_url: ''
                      cost: 43.9
                      transit_time: 1 business day
                      additional_description: ''
              taxes:
                - name: Tax
                  amount: 1.28
              coupons: []
              shipping_cost_total_inc_tax: 0
              shipping_cost_total_ex_tax: 0
              handling_cost_total_inc_tax: 0
              handling_cost_total_ex_tax: 0
              tax_total: 1.28
              subtotal_inc_tax: 33.23
              subtotal_ex_tax: 31.95
              grand_total: 33.23
              created_time: '2019-08-05T15:38:14+00:00'
              updated_time: '2019-08-05T15:41:28+00:00'
              customer_message: ''
            meta: {}
        Selected Shipping Options:
          example:
            data:
              id: 306d57d7-124e-4112-82cd-35e060c0d4d9
              cart:
                id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                customer_id: 11
                channel_id: 1
                email: janedoe@example.com
                currency:
                  code: USD
                base_amount: 31.95
                discount_amount: 0
                cart_amount_inc_tax: 33.23
                cart_amount_ex_tax: 31.95
                coupons: []
                discounts:
                  - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    discounted_amount: 0
                line_items:
                  physical_items:
                    - id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                      parent_id: 123
                      variant_id: 359
                      product_id: 188
                      sku: DUST1
                      name: Hello
                      url: 'https://{store_hash}/all/dustpan-brush/'
                      quantity: 1
                      is_taxable: true
                      image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2'
                      discounts: []
                      coupons: []
                      discount_amount: 0
                      coupon_amount: 0
                      original_price: 35.95
                      list_price: 31.95
                      sale_price: 33.23
                      extended_list_price: 31.95
                      extended_sale_price: 33.23
                      is_require_shipping: true
                  digital_items: []
                  gift_certificates: []
                  custom_items: []
                created_time: '2019-08-05T15:38:14+00:00'
                updated_time: '2019-08-05T15:41:28+00:00'
              billing_address:
                id: 5d484d668e5aa
                first_name: Jane
                last_name: Doe
                email: janedoe@example.com
                company: BigCommerce
                address1: 123 Main Street
                address2: Apt 1
                city: Austin
                state_or_province: ''
                state_or_province_code: ''
                country: ''
                country_code: ''
                postal_code: ''
                phone: '12125559659'
                custom_fields: []
              consignments:
                - id: 5d484e28d20a8
                  shipping_cost_inc_tax: 8.32
                  shipping_cost_ex_tax: 8
                  handling_cost_inc_tax: 0
                  handling_cost_ex_tax: 0
                  coupon_discounts: []
                  discounts: []
                  line_item_ids:
                    - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                  selected_shipping_option:
                    id: 006a58a98c9a844225552ee2a9c60ca8
                    type: shipping_byweight
                    description: Ship by Weight
                    image_url: ''
                    cost: 8
                    transit_time: ''
                    additional_description: ''
                  address:
                    first_name: BigCommerce
                    last_name: Cart/Checkout
                    email: jane2@example.com
                    company: ''
                    address1: 123 Main Street
                    address2: ''
                    city: Austin
                    state_or_province: Texas
                    state_or_province_code: TX
                    country: United States
                    country_code: US
                    postal_code: '78751'
                    phone: '688546'
                    customFields:
                      - field_id: field_25
                        field_value: Great!
              taxes:
                - name: Tax
                  amount: 1.6
              coupons: []
              shipping_cost_total_inc_tax: 8.32
              shipping_cost_total_ex_tax: 8
              handling_cost_total_inc_tax: 0
              handling_cost_total_ex_tax: 0
              tax_total: 1.6
              subtotal_inc_tax: 33.23
              subtotal_ex_tax: 31.95
              grand_total: 41.55
              created_time: '2019-08-05T15:38:14+00:00'
              updated_time: '2019-08-05T15:41:28+00:00'
              customer_message: ''
            meta: {}
        Coupon Applied:
          example:
            data:
              id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
              cart:
                id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                customer_id: 25
                channel_id: 1
                email: customer@example.com
                currency:
                  code: USD
                base_amount: 67
                discount_amount: 0
                cart_amount_inc_tax: 53.6
                cart_amount_ex_tax: 53.6
                coupons:
                  - id: 1
                    code: SHOP20
                    coupon_type: percentage_discount
                    discounted_amount: 13.4
                discounts:
                  - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    discounted_amount: 7
                  - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    discounted_amount: 6.4
                line_items:
                  physical_items:
                    - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                      variant_id: 528
                      product_id: 145
                      sku: htltwl-001
                      name: Hotel Towel
                      url: 'https://example.com/hotel-towel/'
                      quantity: 1
                      is_taxable: true
                      image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                      discounts:
                        - id: coupon
                          discounted_amount: 6.4
                      coupons: 6.4
                      discount_amount: 0
                      coupon_amount: 6.4
                      original_price: 32
                      list_price: 32
                      sale_price: 32
                      extended_list_price: 32
                      extended_sale_price: 32
                      is_require_shipping: true
                      is_mutable: true
                  digital_items:
                    - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                      variant_id: 182
                      product_id: 138
                      sku: ebk-001
                      name: eBook Download
                      url: 'https://example.com/digital/'
                      quantity: 1
                      is_taxable: true
                      image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                      discounts:
                        - id: coupon
                          discounted_amount: 7
                      coupons: 7
                      discount_amount: 0
                      coupon_amount: 7
                      original_price: 35
                      list_price: 35
                      sale_price: 35
                      extended_list_price: 35
                      extended_sale_price: 35
                      is_require_shipping: false
                      is_mutable: true
                  gift_certificates: []
                  custom_items: []
                created_time: '2021-11-08T22:46:23+00:00'
                updated_time: '2021-11-09T16:08:01+00:00'
              billing_address:
                id: 618a9ce18173e
                first_name: Jane
                last_name: Doe
                email: customer@example.com
                company: ''
                address1: 123 Main Street
                address2: ''
                city: ''
                state_or_province: ''
                state_or_province_code: ''
                country: ''
                country_code: ''
                postal_code: '29681'
                phone: '12125556895'
                custom_fields: []
              consignments: []
              taxes:
                - name: Tax
                  amount: 0
              coupons:
                - id: 1
                  code: SHOP20
                  coupon_type: percentage_discount
                  discounted_amount: 13.4
              shipping_cost_total_inc_tax: 0
              shipping_cost_total_ex_tax: 0
              handling_cost_total_inc_tax: 0
              handling_cost_total_ex_tax: 0
              tax_total: 0
              subtotal_inc_tax: 67
              subtotal_ex_tax: 67
              grand_total: 53.6
              created_time: '2021-11-08T22:46:23+00:00'
              updated_time: '2021-11-09T16:08:01+00:00'
              customer_message: ''
            meta: {}
        No Coupon Applied:
          example:
            data:
              id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
              cart:
                id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                customer_id: 0
                channel_id: 1
                email: example@example.com
                currency:
                  code: USD
                base_amount: 67
                discount_amount: 0
                cart_amount_inc_tax: 67
                cart_amount_ex_tax: 67
                coupons: []
                discounts:
                  - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    discounted_amount: 0
                  - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    discounted_amount: 0
                line_items:
                  physical_items:
                    - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                      variant_id: 528
                      product_id: 145
                      sku: htltwl-001
                      name: Hotel Towel
                      url: 'https://example.com/hotel-towel/'
                      quantity: 1
                      is_taxable: true
                      image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                      discounts: []
                      coupons: []
                      discount_amount: 0
                      coupon_amount: 0
                      original_price: 32
                      list_price: 32
                      sale_price: 32
                      extended_list_price: 32
                      extended_sale_price: 32
                      is_require_shipping: true
                      is_mutable: true
                  digital_items:
                    - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                      variant_id: 182
                      product_id: 138
                      sku: ebk-001
                      name: eBook Download
                      url: 'https://example.com/digital/'
                      quantity: 1
                      is_taxable: true
                      image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                      discounts: []
                      coupons: []
                      discount_amount: 0
                      coupon_amount: 0
                      original_price: 35
                      list_price: 35
                      sale_price: 35
                      extended_list_price: 35
                      extended_sale_price: 35
                      is_require_shipping: false
                      is_mutable: true
                  gift_certificates: []
                  custom_items: []
                created_time: '2021-11-08T22:46:23+00:00'
                updated_time: '2021-11-09T16:06:56+00:00'
              billing_address: {}
              consignments: []
              taxes:
                - name: Tax
                  amount: 0
              coupons: []
              shipping_cost_total_inc_tax: 0
              shipping_cost_total_ex_tax: 0
              handling_cost_total_inc_tax: 0
              handling_cost_total_ex_tax: 0
              tax_total: 0
              subtotal_inc_tax: 67
              subtotal_ex_tax: 67
              grand_total: 67
              created_time: '2021-11-08T22:46:23+00:00'
              updated_time: '2021-11-09T16:06:56+00:00'
              customer_message: ''
            meta: {}
        Include promotions:
          example:
            data:
              id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
              cart:
                id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                customer_id: 0
                channel_id: 1
                email: example@example.com
                currency:
                  code: USD
                base_amount: 67
                discount_amount: 0
                cart_amount_inc_tax: 67
                cart_amount_ex_tax: 67
                coupons: []
                discounts:
                  - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    discounted_amount: 0
                  - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    discounted_amount: 0
                line_items:
                  physical_items:
                    - id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                      variant_id: 528
                      product_id: 145
                      sku: htltwl-001
                      name: Hotel Towel
                      url: 'https://example.com/hotel-towel/'
                      quantity: 1
                      is_taxable: true
                      image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1'
                      discounts: []
                      coupons: []
                      discount_amount: 0
                      coupon_amount: 0
                      original_price: 32
                      list_price: 32
                      sale_price: 32
                      extended_list_price: 32
                      extended_sale_price: 32
                      is_require_shipping: true
                      is_mutable: true
                  digital_items:
                    - id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                      variant_id: 182
                      product_id: 138
                      sku: ebk-001
                      name: eBook Download
                      url: 'https://example.com/digital/'
                      quantity: 1
                      is_taxable: true
                      image_url: 'https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1'
                      discounts: []
                      coupons: []
                      discount_amount: 0
                      coupon_amount: 0
                      original_price: 35
                      list_price: 35
                      sale_price: 35
                      extended_list_price: 35
                      extended_sale_price: 35
                      is_require_shipping: false
                      is_mutable: true
                  gift_certificates: []
                  custom_items: []
                created_time: '2021-11-08T22:46:23+00:00'
                updated_time: '2021-11-09T16:06:56+00:00'
              billing_address: {}
              consignments: []
              taxes:
                - name: Tax
                  amount: 0
              coupons: []
              shipping_cost_total_inc_tax: 0
              shipping_cost_total_ex_tax: 0
              handling_cost_total_inc_tax: 0
              handling_cost_total_ex_tax: 0
              tax_total: 0
              subtotal_inc_tax: 67
              subtotal_ex_tax: 67
              grand_total: 67
              created_time: '2021-11-08T22:46:23+00:00'
              updated_time: '2021-11-09T16:06:56+00:00'
              customer_message: ''
              promotions:
                - banners:
                    - id: '3'
                      type: applied
                      page:
                        - homepage
                        - cartpage
                      text: Some text
            meta: {}
        example-1:
          example:
            data:
              id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
              cart:
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                customer_id: 0
                email: string@example.com
                currency:
                  code: string
                base_amount: 0
                channel_id: 0
                discount_amount: 0
                cart_amount_inc_tax: 0
                cart_amount_ex_tax: 0
                coupons:
                  - code: string
                    id: 0
                    coupon_type: string
                    discounted_amount: 0
                discounts:
                  - id: string
                    discounted_amount: 0
                line_items:
                  physical_items:
                    - quantity: 0
                      id: string
                      variant_id: 0
                      product_id: 0
                      sku: string
                      name: string
                      url: string
                      is_taxable: true
                      image_url: string
                      discounts:
                        - id: string
                          discounted_amount: 0
                      coupons: 0
                      discount_amount: 0
                      coupon_amount: 0
                      original_price: 0
                      list_price: 0
                      sale_price: 0
                      extended_list_price: 0
                      extended_sale_price: 0
                      is_require_shipping: true
                      is_mutable: true
                      parent_id: 0
                      gift_wrapping:
                        name: string
                        message: string
                        amount: 0
                        amount_as_integer: 0
                  digital_items:
                    - quantity: 0
                      id: string
                      variant_id: 0
                      parent_id: 0
                      product_id: 0
                      sku: string
                      name: string
                      url: string
                      is_mutable: true
                      is_require_shipping: true
                      is_taxable: true
                      image_url: string
                      discounts:
                        - id: string
                          discounted_amount: 0
                      coupons: 0
                      discount_amount: 0
                      coupon_amount: 0
                      original_price: 0
                      list_price: 0
                      sale_price: 0
                      extended_list_price: 0
                      extended_sale_price: 0
                  gift_certificates:
                    - theme: string
                      amount: 0
                      sender:
                        name: string
                        email: string
                      recipient:
                        name: string
                        email: string
                      id: string
                      name: string
                      taxable: true
                      message: string
                  custom_items:
                    - quantity: 0
                      id: string
                      extended_list_price: 0
                      list_price: 0
                      sku: string
                      name: string
                      image_url: string
                created_time: string
                updated_time: string
              billing_address:
                first_name: string
                last_name: string
                email: string
                company: string
                address1: string
                address2: string
                city: string
                state_or_province: string
                state_or_province_code: string
                country_code: string
                postal_code: string
                phone: '12128565555'
                custom_fields:
                  - field_id: string
                    field_value: string
                id: string
              consignments:
                - id: string
                  shippingAddress: {}
                  address:
                    first_name: string
                    last_name: string
                    email: string
                    company: string
                    address1: string
                    address2: string
                    city: string
                    state_or_province: string
                    state_or_province_code: string
                    country_code: string
                    postal_code: string
                    phone: '12125556858'
                    custom_fields:
                      - field_id: string
                        field_value: string
                    id: string
                  available_shipping_options:
                    - description: string
                      id: string
                      type: string
                      image_url: string
                      cost: 0
                      transit_time: string
                      additional_description: string
                  selected_shipping_option:
                    description: string
                    id: string
                    type: string
                    image_url: string
                    cost: 0
                    transit_time: string
                    additional_description: string
                  coupon_discounts:
                    - code: string
                      amount: 0
                  discounts:
                    - id: 0
                  shipping_cost_inc_tax: 0
                  shipping_cost_ex_tax: 0
                  handling_cost_inc_tax: 0
                  handling_cost_ex_tax: 0
                  line_item_ids:
                    - string
              taxes:
                - name: string
                  amount: 0
              coupons:
                - code: SHOPNOW
                  id: 1
                  coupon_type: percentage_discount
                  discounted_amount: 0.9
              order_id: string
              shipping_cost_total_inc_tax: 0
              shipping_cost_total_ex_tax: 0
              handling_cost_total_inc_tax: 0
              handling_cost_total_ex_tax: 0
              tax_total: 0
              subtotal_inc_tax: 0
              subtotal_ex_tax: 0
              grand_total: 0
              created_time: string
              updated_time: string
              customer_message: string
              promotions:
                - banners:
                    - id: '3'
                      type: applied
                      page:
                        - homepage
                        - cartpage
                      text: Some text
    checkout_settings_resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/CheckoutsSettings'
              meta:
                type: object
                properties: {}
          example:
            data:
              custom_checkout_script_url: 'https://example.com/custom-checkout-script.js'
              order_confirmation_use_custom_checkout_script: false
              custom_order_confirmation_script_url: 'https://example.com/custom-order-confirmation-script.js'
              custom_checkout_supports_uco_settings: false
            meta: {}
        WebDAV protocol:
          example:
            data:
              custom_checkout_script_url: 'webdav:vtz-checkout/dist/auto-loader.js'
              order_confirmation_use_custom_checkout_script: false
              custom_order_confirmation_script_url: 'webdav:vtz-order-confirmation/dist/auto-loader.js'
            meta: {}
    order_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Order'
              meta:
                type: object
                properties: {}
          example:
            data:
              id: 75
            meta: {}
  parameters:
    checkoutId:
      name: checkoutId
      in: path
      description: ID of the checkout; the same as the cart ID.
      required: true
      schema:
        type: string
    addressId:
      name: addressId
      in: path
      required: true
      schema:
        type: integer
    consignmentId:
      name: consignmentId
      in: path
      required: true
      schema:
        type: string
    couponCode:
      name: couponCode
      in: path
      description: 'The coupon code value, not the coupon ID.'
      required: true
      schema:
        type: string
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: application/json
    Content-Type:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: application/json
    includeShippingOption:
      name: include
      in: query
      schema:
        type: string
        enum:
          - consignments.available_shipping_options
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Checkouts | modify | `store_checkouts` |
        |  Checkouts | read-only | `store_checkouts_read_only` |
        |  Checkout Content | modify | `store_checkout_content` |
        |  Checkout Content | read-only | `store_checkout_content_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header

openapi: '3.0.1'
servers:
  - url: 'https://{store_domain}/api/storefront'
    variables:
      store_domain:
        default: your_store.example.com
        description: 'The [URL authority](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_URL#authority) of the storefront.'
info:
  title: Storefront Cookie Consent
  description: |-
    Specify shopper cookie consent preferences.
    
    For info about API accounts, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts).
        
    For info about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#same-origin-cors-authentication).
  version: Storefront
tags:
  - name: Consent
paths:
  /consent:
    post:
      summary: Set Cookie Consent Preferences
      tags:
        - Consent
      responses:
        '200':
          description: Consent Settings Saved
        '400':
          description: Invalid input
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentPreferences'
            examples:
              Example:
                value:
                  allow:
                    - 2
                    - 3
                  deny:
                    - 4
        description: 'Data sent to the [Update customer consent](/docs/rest-management/customers/customer-consent#update-customer-consent) endpoint when creating a customer during checkout.'
        required: true
      description: |
        Sets the status of a customer's consent to allow data collection by cookies and scripts according to the following consent categories:


          2. Analytics — These cookies provide statistical information on site usage so the store owner can improve the website over time.  
          3. Functional — These cookies enable enhanced functionality, such as videos and live chat. If a shopper does not allow these, then some or all of these functions may not work properly. 
          4. Targeting; Advertising — These cookies allow merchants to create profiles or personalize content to enhance users' shopping experience.
          
          
        This endpoint only works if the cookie consent feature is enabled. It is assumed the shopper has not consented to anything until a value is explicitly set. The request body must be populated with a complete set of allowed and denied categories.

        Once set, consent preferences will be saved as a cookie for guest shoppers. Consent preferences will be persisted to a shopper's account to be used for future sessions once they have logged in. Consent preferences can also be managed using the [Update customer consent](/docs/rest-management/customers/customer-consent#update-customer-consent) endpoint.   

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
      operationId: postConsent
    parameters: []
components:
  schemas:
    ConsentPreferences:
      type: object
      title: ConsentPreferences
      description: |-
        List of allowed and denied consent categories. Must be populated with a complete set of allowed and denied categories.

        Configurable categories are:

        2 - Functional
        3 - Analytics
        4 - Targeting; Advertising

        For further definition of these categories, see [Scripts API](/api-docs/store-management/scripts).
      properties:
        allow:
          type: array
          description: 'Explicitly allowed consent categories. Allowed values are 2, 3, 4.'
          items:
            type: integer
            enum:
              - 2
              - 3
              - 4
            example: 3
        deny:
          type: array
          description: 'Denied consent categories. Allowed values are 2, 3, 4.'
          items:
            type: integer
            enum:
              - 2
              - 3
              - 4
            example: 4
      required:
        - allow
        - deny
      x-internal: false

openapi: '3.0.1'
info:
  title: Currencies
  description: |-
    Manage alternate currency display options on the storefront.

    ## Definitions

    | Name | Description |
    | -- | -- |
    | Default Currency | Storeʼs default currency is the one from which any auto-conversion of pricing (product, tax, shipping, promotions) will happen.|
    | Display Currency | Currency that is displayed on the storefront. This might or might not mean that shopper can actually transact in that currency. Display currency is also often called "presentment currency" in the payments industry. |
    | Transactional Currency | Transactional currency is what currency and amount BigCommerce passes to the payment provider and the currency/amount that the shopper will be charged to their bank account. If thereʼs a discrepancy between the storefront display currency and the transactional currency, a shopper has to pay a conversion fee and the conversion rate that will be used will be outside of BigCommerceʼs purview. |
    | Settlement Currency | This is the currency in which the merchant gets paid out to their bank account. If thereʼs a discrepancy between the currency that shopper transacts in and the currency in which merchant settles, merchant has to pay a conversion fee and the conversion rate used will be outside of BigCommerceʼs purview. Merchant is able to set their settlement currency through their payment provider. |
    |BigCommerce Conversion Rate | Any conversion rate set on BigCommerce used to convert product’s default currency pricing into a new non-default currency. Conversion rate could be static or dynamic. |
    | Static Conversion Rate | One of the two auto-converted pricing options. If a merchant manually enters a static conversion rate, then the conversion rate will remain the same until/unless merchant updates their currency settings to use a different conversion rate. The advantage of using this method is to avoid constantly fluctuating price in non-default currencies. |
    | Dynamic Conversion Rate | One of the two auto-converted pricing options. If a merchant selects a dynamic conversion rate, theyʼve tied themselves to a currency conversion service, which will update the conversion rate at a certain frequency. This helps shopper-facing pricing remain most aligned to the storeʼs default currency and keeps non-default currency conversion rate at market rate. Merchant can either use BigCommerce Currency Service provided in the Currency setup page, or they can use API to automatically update the exchange rate from their trusted source. |
    | Bank Conversion Rate | Conversion rate used by merchant’s or shopper’s payment or credit card provider when auto-converting from store’s transactional currency. This rate might not align with the BigCommerce conversion rate and BigCommerce has no visibility into it. |
    | Multi Currency Pricing | Rather than opting for auto-converting product pricing from default currency using BigCommerce conversion rate, merchant has a choice to set price per product per currency. This will be implemented through price lists. |

    ## FAQ

    **Do Multi-Currency settings work with the Checkout SDK?**  
    The Checkout SDK works with multi-currency. There is no additional setup needed for the SDK.
    After setting up currency in the Control Panel the SDK will work as normal.

    ## Resources

    - [How Currencies Work](/api-docs/multi-currency/guide/how-currencies-work)
    - [Price List API Reference](/docs/rest-management/price-lists)
    - [Using Price Lists (Help Center)](https://support.bigcommerce.com/s/article/Price-Lists)
    - [Managing Currencies (Help Center)](https://support.bigcommerce.com/s/article/Managing-Currencies-Beta) 
    - [Tax (Help Center)](https://support.bigcommerce.com/s/article/Manual-Tax-Setup#intro1)
  version: ''
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v2'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Currencies (Single)
  - name: Currencies (Bulk)
paths:
  /currencies:
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
        - Currencies (Bulk)
      summary: Get All Currencies
      description: Returns a list of all store *Currency*.
      operationId: getAllCurrencies
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/currency_Full'
    post:
      tags:
        - Currencies (Bulk)
      summary: Create a Currency
      operationId: createACurrency
      description: |-
        Creates *Currency*.

        **Required Fields** 

        * name
        * currency_code
        * currency_exchange_rate
        * token_location
        * token
        * decimal_token
        * thousands_token
        * decimal_places

        **Read-Only Fields**
        * id
        * date_created
        * date_modified


        The `is_default` property can only be set to true. The value of `is_default` cannot be unset, only overridden. To change the storeʼs default currency in the BigCommerce control panel, please see [Managing Currencies (Help Center)](https://support.bigcommerce.com/s/article/Managing-Currencies-Beta).
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/currency_Post'
        required: false
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/currency_Full'
    delete:
      tags:
        - Currencies (Bulk)
      summary: Delete All Currencies
      operationId: deleteAllCurrencies
      description: Deletes all non-default store currencies.
      responses:
        '204':
          description: ""
          content:
            application/json:
              schema:
                type: object
  /currencies/{id}:
    parameters:
      - $ref: '#/components/parameters/Accept'
      - name: id
        in: path
        description: Currency ID
        required: true
        schema:
          type: string
    get:
      tags:
        - Currencies (Single)
      summary: Get a Currency
      description: Returns a single *Currency*.
      operationId: getACurrency
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/currency_Full'
    put:
      tags:
        - Currencies (Single)
      summary: Update a Currency
      description: |-
        Updates a *Currency*.

        **Read-Only Fields**

        * id
        * date_created
        * date_modified
        * currency_code


        The `is_default` property can only be set to true. The value of `is_default` cannot be unset, only overridden. 
      operationId: updateACurrency
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/currency_Put'
        required: false
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/currency_Full'
      x-codegen-request-body-name: body
    delete:
      tags:
        - Currencies (Single)
      summary: Delete a Currency
      description: |-
        Deletes a *Currency*.

        If a currencyʼs `is_default` property is set to true, this currency cannot be deleted. 
      operationId: deleteACurrency
      responses:
        '204':
          description: ""
          content:
            application/json:
              schema:
                type: object
components:
  schemas:
    currency_Post:
      $ref: '#/components/schemas/currency_Base'
    currency_Base:
      title: currency_Base
      required:
        - currency_code
        - currency_exchange_rate
        - decimal_places
        - decimal_token
        - name
        - thousands_token
        - token
        - token_location
      type: object
      properties:
        is_default:
          type: boolean
          description: Specifies the store’s default currency display format. For
            write operations, only true value is accepted. When set to true, it cannot
            be unset, only overridden.
          example: false
        country_iso2:
          type: string
          description: 2-letter ISO Alpha-2 code for this currency’s country.
          example: EU
        currency_code:
          type: string
          description: 3-letter ISO 4217 code for this currency.
          example: EUR
        currency_exchange_rate:
          type: string
          description: Amount of this currency that is equivalent to one U.S. dollar.(Float,
            Float as String, Integer)
          example: "0.849"
        auto_update:
          type: boolean
          description: Specifies whether to use the Open Exchange Rates service to
            update the currency conversion. A value of false specifies a static conversion
            value. auto_update only applies to non-transactional currencies.
          example: true
        token_location:
          type: string
          description: Specifies whether this currency’s symbol appears to the “left”
            or “right” of the numeric amount.
          example: left
        token:
          type: string
          description: Symbol for this currency.
          example: €
        decimal_token:
          type: string
          description: Symbol used as the decimal separator in this currency.
          example: "."
        thousands_token:
          type: string
          description: Symbol used as the thousands separator in this currency.
          example: ','
        decimal_places:
          type: integer
          description: Number of decimal places to show for this currency.
          example: 2
        name:
          type: string
          description: Name of the currency.
          example: Euro
        enabled:
          type: boolean
          description: If the currency is active on the store.
          example: false
        is_transactional:
          type: boolean
          description: Indicates if the currency is set as transactional or not. False
            means display only currency
          example: false
      description: Currency Object
      example:
        id: 2
        is_default: false
        last_updated: Tue, 12 Jun 2018 14:41:56 +0000"
        country_iso2: EU
        currency_code: EUR
        currency_exchange_rate: '0.849'
        auto_update: true
        token_location: left
        token: €
        decimal_token: "."
        thousands_token: ','
        decimal_places: 2
        name: Euro
        enabled: false
      x-examples:
        Example:
          value:
            country_iso2: EU
            currency_code: EUR
            currency_exchange_rate: "0.849"
            auto_update: true
            token_location: left
            token: €
            decimal_token: "."
            thousands_token: ','
            decimal_places: 2
            name: Euro
            is_transactional: false
            id: 2
            is_default: false
            last_updated: 2018-06-12T14:41:56.000Z
            enabled: false
      x-internal: false
    currency_Put:
      $ref: '#/components/schemas/currency_Post'
    currency_Full:
      title: currency_Full
      allOf:
      - $ref: '#/components/schemas/currency_Base'
      - type: object
        properties:
          id:
            type: integer
            description: ID of the currency. Read only.
            readOnly: true
            example: 2
          last_updated:
            type: string
            description: Date the currency was last updated, created or modified.
            format: date-time
      x-internal: false
  responses:
    currencyCollection_Resp:
      description: ""
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/currency_Full'
    currency_Resp:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/currency_Full'
  parameters:
    StoreHash:
      name: store_hash
      in: path
      required: true
      schema:
        type: string
    Accept:
      name: Accept
      in: header
      required: true
      schema:
        type: string
        default: application/json
    ContentType:
      name: Content-Type
      in: header
      required: true
      schema:
        type: string
        default: application/json
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Information & Settings | modify | `store_v2_information` |
        |  Information & Settings | read-only | `store_v2_information_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header

openapi: '3.0.1'
info:
  title: Current Customer
  description: |-
    Identify logged-in customers securely via JavaScript.

    [Learn more about the current customer API](/api-docs/customers/current-customer-api).

    For info about API accounts, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts).
        
    For info about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#client-id).

    > #### Note
    > * Substitute your storefront domain for `yourstore.example.com`. 
    > * The Send a Test Request feature is not currently supported for this endpoint.
  version: ''
servers:
  - url: 'https://{store_domain}'
    variables:
      store_domain:
        default: your_store.example.com
        description: 'The [URL authority](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_URL#authority) of the storefront.'
tags:
  - name: Current Customers
paths:
  /customer/current.jwt:
    get:
      tags:
        - Current Customers
      summary: Get Current Customer
      description: |-
        Identify logged-in customers securely via JavaScript.

        > #### Note
        > The Send a Test Request feature is not currently supported for this endpoint.
      operationId: getCurrentCustomer
      parameters:
        - name: app_client_id
          in: query
          required: true
          description: This is your applicationʼs client ID, which is obtained during application registration in the Developer Portal.
          schema:
            type: string
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  customer:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Unique numeric ID of the customer.
                        example: 4927
                      email:
                        type: string
                        description: Email address of the customer.
                        example: john.doe@gmail.com
                      group_id:
                        type: string
                        description: The group to which the customer belongs.
                        example: '"6"'
                  iss:
                    type: string
                    description: Indicates the token’s issuer.
                    example: '"bc/apps"'
                  sub:
                    type: string
                    description: The subject of the JWT - same as `store_hash`.
                    example: '"abc123"'
                  iat:
                    type: integer
                    description: 'Time when the token was issued. This is a numeric value indicating the number of seconds since the [Unix epoch](https://en.wikipedia.org/wiki/Unix_time).'
                    example: 1480831863
                  exp:
                    type: integer
                    description: 'Time when the token expires. The token usually expires after 15 minutes. This is a numeric value indicating the number of seconds since the [Unix epoch](https://en.wikipedia.org/wiki/Unix_time).'
                    example: 1480832763
                  version:
                    type: integer
                    description: Version of the Current Customer JWT
                    example: 1
                  aud:
                    type: string
                    description: 'The "aud" (audience) claim identifies the recipients that the JWT is intended for. This should match the *App Client ID* and the `application_id`.'
                    example: '"6sv16tfx3j5gsopm42ss5dd67g2srvq"'
                  application_id:
                    type: string
                    example: '"6sv16tasdgr2b5hs5dd67g2srvq"'
                    description: The client ID created when the token was generated.
                  store_hash:
                    type: string
                    description: The store’s unique identifier on the BigCommerce platform.
                  operation:
                    type: string
                    description: Must contain the string “current_customer”.
                    example: '"current_customer"'
              example:
                customer:
                  id: 4927
                  email: john.doe@gmail.com
                  group_id: '6'
                iss: bc/apps
                sub: abc123
                iat: 1480831863
                exp: 1480832763
                version: 1
                aud: 6sv16tfx3j5gsopm42ss5dd67g2srvq
                application_id: 6sv16tasdgr2b5hs5dd67g2srvq
                store_hash: abc123
                operation: current_customer
components: {}


openapi: '3.0.3'
info:
  title: Custom Template Associations
  version: ''
  description: |-
    Efficiently associate a Stencil themeʼs custom templates to products, categories, brands, and pages.

    ## Creating template associations

    To [associate custom templates to entities](/docs/rest-content/custom-template-associations#creating-template-associations), send a `PUT` request to `/v3/storefront/custom-template-associations`.

    ```http
    PUT https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/storefront/custom-template-associations
    X-Auth-Token: {{ACCESS_TOKEN}}
    Content-Type: application/json
    Accept: application/json

    [
      {
        "channel_id": 1,
        "entity_type": "product",
        "entity_id": 12,
        "file_name": "custom-template-1.html"
      }
    ]
    ```

    > #### Note
    > The allowed values for `entity_type` are `product`, `category`, `brand`, and `page`.

    ## Getting entity IDs

    Use the [Catalog API](/docs/rest-catalog/products) to get the `entity_id` for `category`, `product`, and `brand` entity types. For example, to [get all products](/docs/rest-catalog/products#get-all-products), send a `GET` request to `/v3/catalog/products`.

    ```http
    GET https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/catalog/products
    X-Auth-Token: {{ACCESS_TOKEN}}
    Content-Type: application/json
    Accept: application/json
    ```

    To [get the `entity_id` for a content page](/docs/rest-content/pages#get-pages), send a `GET` request to `/v3/pages`.

    ```http
    GET https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/content/pages
    X-Auth-Token: {{ACCESS_TOKEN}}
    Content-Type: application/json
    Accept: application/json
    ```

    ## Getting available templates

    To [get available custom templates](/docs/rest-content/themes/theme-custom-templates#get-custom-templates) for each `entity_type`, send a `GET` request to `/v3/themes/custom-templates/{version_uuid}`.

    ```http
    GET https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/themes/custom-templates/{version_uuid}
    X-Auth-Token: {{ACCESS_TOKEN}}
    Content-Type: application/json
    Accept: application/json
    ```

    **Response:**

    ```json
    {
      "data": {
        "product": [
          "custom-product-1.html"
        ],
        "category": [],
        "brand": [
          "custom-brand-1.html"
        ],
        "page": [
          "custom-page-1.html",
          "holiday-page.html"
        ]
      },
      "meta": {}
    }
    ```

    ## Getting theme UUIDs

    To [get the `version_uuid` for an active theme](/docs/rest-management/channels/channel-active-theme#get-a-channel-active-theme), send a `GET` request to `/v3/channels/{channel_id}/active-theme`.

    ```http
    GET https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/channels/{channel_id}/active-theme
    X-Auth-Token: {{ACCESS_TOKEN}}
    Content-Type: application/json
    Accept: application/json
    ```

    **Response:**

    ```json
    {
      "data": {
        "active_theme_configuration_uuid": "748c5390-0b42-0139-b008-0242ac110013",
        "active_theme_uuid": "94bd1450-b873-0137-6902-0242ac11001f",
        "active_theme_version_uuid": "94dde070-b873-0137-6902-0242ac11001f",
        "saved_theme_configuration_uuid": "748c5390-0b42-0139-b008-0242ac110013"
      },
      "meta": {}
    }
    ```

    ## Additional information

    * [Get Channel Active Theme](/docs/rest-management/channels/channel-active-theme#get-a-channel-active-theme)
    * [Get Available Custom Templates](/docs/rest-content/themes/theme-custom-templates#get-custom-templates)
    * [Catalog API](/docs/rest-management/catalog)
    * [Pages API](/docs/rest-content/pages)
    * [Channels API](/docs/rest-management/channels)
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com  
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Custom Template Associations
paths:
  '/storefront/custom-template-associations':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      summary: Get Custom Template Associations
      tags:
        - Custom Template Associations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomTemplateAssociation'
                  meta:
                    $ref: '#/components/schemas/MetaPaginationObject'
              examples:
                example-1:
                  value:
                    data:
                      - id: 1
                        channel_id: 1
                        entity_type: product
                        entity_id: 123
                        file_name: custom-product-1.html
                      - id: 2
                        channel_id: 12345
                        entity_type: page
                        entity_id: 123
                        file_name: custom-page.html
                    meta:
                      pagination:
                        total: 246
                        count: 5
                        per_page: 5
                        current_page: 1
                        total_pages: 50
                        links:
                          next: '?limit=5&page=2'
                          current: '?limit=5&page=1'
      parameters:
        - schema:
            type: integer
          in: query
          name: channel_id
          description: Channel ID to return only custom template associations for a given Channel
        - schema:
            type: string
          in: query
          name: 'entity_id:in'
          description: Filter by a list of entity IDs. Must be used together with "type" filter.
        - schema:
            type: integer
          in: query
          name: limit
          description: Number of results to return per page
        - schema:
            type: integer
          in: query
          name: page
          description: Which page number to return, based on the page size. Used to paginate large collections.
        - schema:
            type: string
            enum:
              - product
              - category
              - brand
              - page
          in: query
          name: type
          description: Filter associations by type
        - schema:
            type: boolean
          in: query
          name: is_valid
          description: Optional toggle to filter for exclusively valid or invalid associations entries. An invalid entry is one where its file name does not match up to an existing custom layout file in the currently active theme for the channel.
      description: Get a collection of the storeʼs custom template associations across all storefronts
      operationId: GetCustomTemplateAssociations
    put:
      summary: Upsert Custom Template Associations
      tags:
        - Custom Template Associations
      responses:
        '200':
          description: Success response for batch upsert of custom template associations
          content:
            application/json:
              schema:
                type: object
        '422':
          description: Error response for batch PUT of Custom template associations. Includes the errors for each reference ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              uniqueItems: true
              maxItems: 100
              minItems: 1
              items:
                $ref: '#/components/schemas/CustomTemplateAssociationUpsert'
            examples:
              example-1:
                value:
                  - id: 1
                    channel_id: 1
                    entity_type: product
                    entity_id: 123
                    file_name: custom-product-1.html
                  - id: 2
                    channel_id: 12345
                    entity_type: page
                    entity_id: 123
                    file_name: custom-page.html
        description: ''
      description: 'Upsert new custom template associations data across all storefronts. If an existing record is found for the combination of channel ID, entity ID, and type, the existing record will be overwritten with the new template.'
      operationId: UpsertCustomTemplateAssociations
    delete:
      summary: Delete Custom Template Associations
      tags:
        - Custom Template Associations
      responses:
        '204':
          description: No Content
      parameters:
        - schema:
            type: integer
          in: query
          name: 'id:in'
          description: List of Association IDs to delete explicitly.
        - schema:
            type: integer
          in: query
          name: 'entity_id:in'
          description: List of Entity IDs to delete explicitly. Must be used together with "type"
        - schema:
            type: integer
          in: query
          name: channel_id
          description: Channel ID provided to delete all custom template associations for a given Channel
        - schema:
            type: string
            enum:
              - product
              - category
              - brand
              - page
          in: query
          name: type
          description: Filter associations by type
      description: Delete custom template associations. At least one query parameter must be used.
      operationId: DeleteCustomTemplateAssociations
components:
  schemas:
    Error:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
      x-internal: false
    ErrorResponse400:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
      x-internal: false
    ErrorResponse404:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
      x-internal: false
    ErrorResponse409:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
      x-internal: false
    ErrorResponse422:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
      x-internal: false
    MetaPaginationObject:
      type: object
      properties:
        pagination:
          type: object
          properties:
            total:
              type: integer
              example: 246
              minimum: 0
            count:
              type: integer
              example: 5
              minimum: 0
            per_page:
              type: integer
              example: 5
              minimum: 0
            current_page:
              type: integer
              example: 1
              minimum: 1
            total_pages:
              type: integer
              example: 50
              minimum: 0
            links:
              type: object
              properties:
                next:
                  type: string
                  example: '?limit=5&page=2'
                current:
                  type: string
                  example: '?limit=5&page=1'
      x-internal: false
    DetailedErrors:
      type: object
      additionalProperties:
        type: string
      x-internal: false
    BaseError:
      type: object
      description: |
        Error payload for the BigCommerce API.
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
      x-internal: false
    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            errors:
              $ref: '#/components/schemas/DetailedErrors'
      x-internal: false
    CustomTemplateAssociation:
      title: CustomTemplateAssociation
      type: object
      properties:
        id:
          type: integer
        channel_id:
          type: integer
        entity_type:
          type: string
          enum:
            - product
            - category
            - brand
            - page
        entity_id:
          type: integer
        file_name:
          type: string
          example: custom-product-1.html
        is_valid:
          type: boolean
          description: An invalid file name does not match with an existing custom layout file in the currently active theme for the channel. When an association is invalid the store will fallback to using the default for that entity type.
        date_created:
          type: string
        date_modified:
          type: string
      x-internal: false
    CustomTemplateAssociationUpsert:
      title: CustomTemplateAssociation
      type: object
      properties:
        channel_id:
          type: integer
        entity_type:
          type: string
          enum:
            - product
            - category
            - brand
            - page
        entity_id:
          type: integer
        file_name:
          type: string
          example: custom-product-1.html
      required:
        - channel_id
        - entity_type
        - entity_id
        - file_name
      x-internal: false
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        | Themes |Read-only|`store_themes_read_only`|
        | Themes |Manage|`store_themes_manage`|

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header

openapi: '3.0.1'
info:
  title: Customer Login (SSO)
  description: |-
    Enable single sign-on for shoppers on BigCommerce hosted storefronts.

    [Learn more about the customer login API](/api-docs/customers/customer-login-api).
  
    For info about API accounts, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts).
        
    For info about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#user-generated-jwts).
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  version: ''
servers:
  - url: 'https://{store_domain}'
    variables:
      store_domain:
        default: your_store.example.com
        description: 'The [URL authority](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_URL#authority) of the storefront.'
tags:
- name: Login Token
paths:
  /login/token/{jwt_token}:
    get:
      tags:
      - Login Token
      summary: Login Token
      description: |-
        The customer login access point URL.

        [Learn more about the Customer Login API](/api-docs/customers/customer-login-api).

        ## Example

        ```
        https://yourstore.example.com/login/token/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJ7Y2xpZW50X2lkfSIsImlhdCI6MTUzNTM5MzExMywianRpIjoie3V1aWR9Iiwib3BlcmF0aW9uIjoiY3VzdG9tZXJfbG9naW4iLCJzdG9yZV9oYXNoIjoie3N0b3JlX2hhc2h9IiwiY3VzdG9tZXJfaWQiOjJ9.J-fAtbjRFGdLsT744DhoprFEDqIfVq72HbDzrbFy6Is
        ```
      parameters:
      - name: jwt_token
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
components:
  schemas:
    customerLoginSSO:
      title: Customer Login SSO
      type: object
      properties:
        iss:
          type: string
          description: Indicates the token’s issuer. This is your application’s client
            ID, which is obtained during application registration in Developer Portal.
          example: '"1234r5t6y7u8i9o0p"'
        iat:
          type: integer
          description: Time when the token was generated. This is a numeric value
            indicating the number of seconds since the [Unix epoch](https://en.wikipedia.org/wiki/Unix_time).
          example: 1535393113
        jti:
          type: string
          description: Request ID string that must be unique across all requests made
            by your app. A UUID or other random string would be an appropriate value.
            Most libraries contain a method for generating a uuid. For testing a [UUID
            generator](https://www.uuidgenerator.net/) can be used, but it recommended
            to use built in libraries.
          example: '"20b7c03e-00da-4d29-91bf-2aa06a57575b"'
        operation:
          type: string
          description: Must contain the string “customer_login”.
          example: '"customer_login"'
        store_hash:
          type: string
          description: |
            Store hash identifying the store you are logging into.
          example: '"abc123"'
        customer_id:
          type: integer
          description: |
            ID of the customer you are logging in, as obtained through the Customer API.
          example: 2
        redirect_to:
          type: string
          description: |
            Optional field containing a relative path for the shopper’s destination after login. Will default to `/account.php`.
          default: /account.php
        request_ip:
          type: string
          description: |
            **(Optional)** Field containing the expected IP address for the request. If provided, BigCommerce will check that it matches the browser trying to log in. If there is not a match, it will be rejected.
          example: '"111.222.333.444"'
      x-internal: false


openapi: '3.0.1'
info:
  version: Storefront
  title: Storefront Customers
  description: |-
    Manage customers and data via front-end JavaScript on BigCommerce Stencil-powered storefronts.
    
    For info about API accounts, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts).
        
    For info about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#same-origin-cors-authentication).
servers:
  - url: 'https://{store_domain}/api/storefront'
    variables:
      store_domain:
        default: your_store.example.com
        description: 'The [URL authority](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_URL#authority) of the storefront.'
tags:
  - name: Customers
paths:
  /customers:
    post:
      tags:
        - Customers
      description: |-
        Create a *Customer*.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.
      responses:
        '204':
          description: Customer successfully created.
        '400':
          description: Could not create customer.
        '409':
          description: Thereʼs already an account for the provided email. Please enter a different email address or sign in.
        '422':
          description: Missing Required Fields.
        '429':
          description: Spam Protection Failed.
      summary: Create a Customer
      operationId: createACustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerCreateData'
            examples:
              application/json:
                value:
                  firstName: Jane
                  lastName: Doe
                  email: janedoe@example.com
                  password: string
                  acceptsMarketingEmails: true
                  customFields:
                    - fieldId: '25'
                      fieldValue: Leave in backyard
        description: Data sent the the customer endpoint when creating a customer during checkout.
components:
  schemas:
    CustomerCreateData:
      title: CustomerCreateData
      type: object
      properties:
        firstName:
          type: string
          description: First name of customer.
        lastName:
          type: string
          description: Last name of customer.
        email:
          type: string
          description: Email of customer.
        password:
          type: string
          description: Password of customer.
        acceptsMarketingEmails:
          type: boolean
          description: Indicates whether customer provided consent to receive marketing emails.
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
      x-internal: false
    CustomFields:
      title: CustomFields
      type: object
      x-internal: false
      properties:
        fieldId:
          type: string
        fieldValue:
          oneOf:
            - type: string
            - type: number
            - type: array
              items:
                type: string
openapi: '3.0.1'
info:
  title: Customers V2
  description: |-
    Create and Manage Customers, Customer Addresses, and Customer Groups. Additionally, validate customer passwords. To learn more about Customers see [here](/api-docs/customers/customers-subscribers-overview). 
    
    ## Available Endpoints
    | Resource / Endpoint                     | Description                                                                   |
    |:----------------------------------------|:------------------------------------------------------------------------------|
    | Customers                               | Identity and account details for customers shopping on BigCommerce stores     |
    | Customers Addresses                     | Postal address belonging to a customer                                        |
    | Customers Groups                        | Groupings of customers who share the same level of access and discounts       |
    | Customers Validate Password             | Validate customer passwords                                                   |
    
    ## Usage Notes
    **Customer Groups**
    * Customer Groups are only available on specific plans.

    **Customers vs. Subscribers**
    * A subscriber is not always a customer. Someone can sign up for the newsletter only and not create an account.
    * A customer is not always a subscriber. Signing up for the newsletter is a separate action from creating an account and purchasing an item.
    * A customer and a subscriber can be the same. If a shopper checks out on the storefront, creates an account and opts into the newsletter, they are a customer and a subscriber.
    ## Resources
    ### Related APIs / Endpoints
    - [Customer Login API](/api-docs/customers/customer-login-api)
    - [Current Customer API](/api-docs/customers/current-customer-api)
    - [Customers API (v3)](/docs/rest-management/customers)
    - [Subscribers API](/docs/rest-management/subscribers)
    ### Webhooks
    - [Customers](/api-docs/store-management/webhooks/webhook-events#customer)
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  version: ''
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v2'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Customers
  - name: Customer Groups
  - name: Customer Addresses
  - name: Customer Passwords
paths:
  '/customers':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
        - Customers
      summary: Get All Customers
      description: Returns a list of all *Customers*. Default sorting is by `customer_ID`, from lowest to highest. Optional parameters can be passed in.
      operationId: getAllCustomers
      parameters:
        - name: first_name
          in: query
          schema:
            type: string
        - name: last_name
          in: query
          schema:
            type: string
        - name: company
          in: query
          schema:
            type: string
        - name: email
          in: query
          schema:
            type: string
        - name: phone
          in: query
          schema:
            type: string
        - name: store_credit
          in: query
          schema:
            type: string
        - name: customer_group_id
          in: query
          schema:
            type: integer
        - name: min_id
          in: query
          schema:
            type: integer
        - name: max_id
          in: query
          schema:
            type: integer
        - name: min_date_created
          in: query
          schema:
            type: string
        - name: max_date_created
          in: query
          schema:
            type: string
        - name: min_date_modified
          in: query
          schema:
            type: string
        - name: max_date_modified
          in: query
          schema:
            type: string
        - name: tax_exempt_category
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/customer_Full'
      deprecated: true
    post:
      tags:
        - Customers
      summary: Create a New Customer
      description: |-
        Creates a *Customer*.
        **Required Fields**
        *   `first_name`
        *   `last_name`
        *   `email`
        **Read Only Fields**
        *   `id`
        *   `date_created`
        *   `date_modified`
        *   `accepts_marketing`
        *   `addresses`
        *   `form_fields`
        ## Notes 
        The `_authentication` object exposes functionality associated with the customer’s ability to log in to the store. All properties of the `_authentication` object are optional.
        When the `_authentication` object is not supplied with an update request, then the existing customer password remains the same.
        ## Updating Passwords 
        To manually update a customer password in the same way as the control panel, supply a value for the password field:
        ```json
        {
            "_authentication": {
                "password": "12w69Y217PYR96J"
            }
        }
        ```
        ## Confirming Passwords 
        An additional optional `password_confirmation` field can also be sent, providing password confirmation as a service:
        ```json
        {
            "_authentication": {
               "password": "12w69Y217PYR96J",
               "password_confirmation": "12w69Y217PYR96J"
            }
        }
        ```
        ## Forcing Password Resets 
        To force a customer to reset their password upon their next login attempt, give the `force_reset` field a value of true, as shown here:
        ```js showLineNumbers copy
        {
            "_authentication": {
                "force_reset": true
            }
        }
        ```
      operationId: createANewCustomer
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                _authentication:
                  type: object
                  properties: {}
                  description: This can vary depending on the action being taken to update, validate or force a password change. See [Customers V2, Update a customer (Deprecated)](/docs/rest-management/customers-v2#update-a-customer).
                company:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                phone:
                  type: string
                date_modified:
                  type: string
                store_credit:
                  type: integer
                registration_ip_address:
                  type: string
                customer_group_id:
                  type: integer
                notes:
                  type: string
                tax_exempt_category:
                  type: string
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer_Full'
      deprecated: true
    delete:
      tags:
        - Customers
      summary: Delete Customers
      description: By default, it deletes all *Customers*. Up to 100 customers per batch can be deleted.
      operationId: deleteAllCustomers
      responses:
        '204':
          description: ''
          content: {}
      deprecated: true
      x-unitTests:
        - request:
            method: DELETE
            uri: '/customers'
            headers:
              Accept: application/json
              Content-Type: application/json
              X-Auth-Token: Your Token
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers:
              Content-Type: application/json
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Delete All Customers1
          x-testDescription: Deletes all customers
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/customers/{customer_id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/customer_id'
    get:
      tags:
        - Customers
      summary: Get a Customer
      description: Returns a single *Customer*.
      operationId: getACustomer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer_Full'
      deprecated: true
    put:
      tags:
        - Customers
      summary: Update a Customer
      description: |-
        Updates a *Customer*.

        **Read Only Fields**
        *   id
        *   date_created
        *   date_modified
        *   accepts_marketing
        *   addresses
        *   form_fields

        ## Notes 
        The `_authentication` object exposes functionality associated with the customer’s ability to log in to the store. All properties of the `_authentication` object are optional.
        When the `_authentication` object is not supplied with an update request, then the existing customer password remains the same.
        ## Updating Passwords 
        To manually update a customer password in the same way as the control panel, supply a value for the `password` field:
        
        ```js showLineNumbers copy
        {
            "_authentication": {
                "password": "12w69Y217PYR96J"
            }
        }
        
        ```
        
        #### Confirming Passwords 
        An additional optional `password_confirmation` field can also be sent, providing password confirmation as a service:
        ```js showLineNumbers copy
        {
            "_authentication": {
               "password": "12w69Y217PYR96J"
               "password_confirmation": "12w69Y217PYR96J"
            }
        }
        ```
        #### Forcing Password Resets 
        To force a customer to reset their password upon their next login attempt, give the `force_reset` field a value of true, as shown here:
        ```js showLineNumbers copy
        {
            "_authentication": {
                "force_reset": true
            }
        }
        ```
      operationId: updateACustomer
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Customers
              required:
                - email
                - first_name
                - last_name
              type: object
              properties:
                id:
                  type: integer
                  description: Unique numeric ID of this customer. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.
                  example: 1
                _authentication:
                  type: object
                  properties:
                    force_reset:
                      type: boolean
                    password:
                      type: string
                    password_confirmation:
                      type: string
                  description: Not returned in any responses, but accepts up to two fields allowing you to set the customer’s password. If a password is not supplied, it is generated automatically. For further information about using this object, please see the Customers resource documentation.
                company:
                  type: string
                  description: The name of the company for which the customer works.
                  example: BigCommerce
                first_name:
                  type: string
                  description: First name of the customer.
                  example: Jane
                last_name:
                  type: string
                  description: Last name of the customer.
                  example: Doe
                email:
                  type: string
                  description: Email address of the customer.
                  example: janedoe@example.com
                phone:
                  type: string
                  description: Phone number of the customer.
                  example: '1234567890'
                date_created:
                  type: string
                  description: Date on which the customer registered from the storefront or was created in the control panel. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.
                date_modified:
                  type: string
                  description: |
                    Date on which the customer updated their details in the storefront or was updated in the control panel. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.
                store_credit:
                  type: string
                  description: The amount of credit the customer has. (Float, Float as String, Integer)
                  example: '0'
                registration_ip_address:
                  type: string
                  description: The customer’s IP address when they signed up.
                  example: 12.345.678.910
                customer_group_id:
                  type: integer
                  description: The group to which the customer belongs.
                  example: 2
                notes:
                  type: string
                  description: Store-owner notes on the customer.
                tax_exempt_category:
                  type: string
                  description: If applicable, the tax-exempt category of the shopper’s customer account. You can apply a tax-exempt category to multiple customers. This code should match the exemption codes provided by the third-party integration.
                accepts_marketing:
                  type: boolean
                  description: Describes whether the customer accepts product review emails and abandon cart emails. Read-Only.
                  readOnly: true
                  example: true
                addresses:
                  title: Address Field Resource
                  type: object
                  properties:
                    url:
                      type: string
                      description: Full URL of where the resource is located.
                      example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/customers/5/addresses'
                    resource:
                      type: string
                      description: Resource being accessed.
                      example: /customers/5/addresses
                form_fields:
                  type: array
                  description: Array of custom fields. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.
                  items:
                    title: Form Fields
                    type: object
                    properties:
                      name:
                        type: string
                        description: Name of the form field.
                        example: License ID
                      value:
                        type: string
                        description: Value of the form field.
                        example: 123BAF
                reset_pass_on_login:
                  type: boolean
                  description: Force a password change on next login.
                  example: false
        required: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer_Base'
      deprecated: true
      x-codegen-request-body-name: body
    delete:
      tags:
        - Customers
      summary: Delete a Customer
      description: Deletes a *Customer*.
      operationId: deleteACustomer
      responses:
        '204':
          description: ''
          content: {}
      deprecated: true
  '/customers/count':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
        - Customers
      summary: Get a Count of Customers
      description: Returns a count of all *Customers*.
      operationId: getACountOfCustomers
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/count_Full'
              example:
                count: 27
      deprecated: true
      x-unitTests:
        - request:
            method: GET
            uri: '/customers/count'
            headers:
              Accept: application/json
              Content-Type: application/json
              X-Auth-Token: Your Token
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: RAW
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers:
              Content-Type: application/json
            body: '{  "count": 27}'
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Get a Count of Customers1
          x-testDescription: Gets a count of the total number of customers in the store.
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/customers/{customer_id}/validate':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/customer_id'
    post:
      tags:
        - Customer Passwords
      summary: Validate a Password
      description: |-
        **This endpoint has special rate limiting protections to protect against abuse.**

        Provided a password, will return a true/false response indicating if the provided password matches the customer’s current password. This endpoint is useful if you want to power the login of another system using BigCommerce’s stored customer accounts, or as a safe way to migrate passwords to another system (by checking them against BigCommerce’s password, and if correct, storing it in another system securely.) If the password matches what’s stored against the customer account, the response will be:

        ```js showLineNumbers copy
        {
            "success": "true"
        }
        ```
        If the password does NOT match, the response will instead be:

        ```js showLineNumbers copy
        {
            "success": "false"
        }
        ```
      operationId: validateCustomerPassword
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: String to run against customer password. Will return a true or false.
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validatePassword'
              example:
                success: false
      deprecated: true
      x-codegen-request-body-name: body
  '/customers/{customer_id}/addresses':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/customer_id'
    get:
      tags:
        - Customer Addresses
      summary: Get All Customer Addresses
      description: |-
        Returns a list of *Customer Addresses*. Returns the addresses belonging to a customer. Default sorting is by address id, from lowest to highest. 
        The maximum limit is 250. If a limit isn’t provided, up to 50 `customer_addresses` are returned by default.
      operationId: getAllCustomerAddresses
      parameters:
        - name: page
          in: query
          description: Number of pages.
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: number
        - name: limit
          in: query
          description: Count per page.
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/customerAddress_Full'
      deprecated: true
    post:
      tags:
        - Customer Addresses
      summary: Create a Customer Address
      description: |-
        Creates a new *Customer Address*. (Note: The “state” property cannot be null. As a workaround for addresses that include no state/province string, pass a space as the “state” value.)

        **Required Fields**
        *   first_name
        *   last_name
        *   phone
        *   street_1
        *   city
        *   state
        *   zip
        *   country

        **Read Only Fields**
        *   id
        *   country_iso2
      operationId: createACustomerAddress
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customerAddress_Base'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customerAddress_Full'
      deprecated: true
    delete:
      tags:
        - Customer Addresses
      summary: Delete Customer Address
      description: 'By default, it deletes all *Customer Addresses*.'
      operationId: deleteAllCustomerAddresses
      parameters:
        - name: page
          in: query
          description: Number of pages.
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: number
        - name: limit
          in: query
          description: Count per page.
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: number
      responses:
        '204':
          description: ''
          content: {}
      deprecated: true
  '/customers/{customer_id}/addresses/{customer_address_id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/customer_id'
      - $ref: '#/components/parameters/customer_address_id'
    get:
      tags:
        - Customer Addresses
      summary: Get a Customer Address
      description: Returns a *Customer Address*.
      operationId: getACustomerAddress
      parameters:
        - name: page
          in: query
          description: Number of pages.
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: number
        - name: limit
          in: query
          description: Count per page.
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customerAddress_Full'
      deprecated: true
    put:
      tags:
        - Customer Addresses
      summary: Update a Customer Address
      description: |-
        Updates a *Customer Address*. 

        **Read Only Fields**
        *   id
        *   country_iso2
      operationId: updateACustomerAddress
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Customer Address
              required:
                - city
                - country
                - first_name
                - last_name
                - phone
                - state
                - street_1
                - zip
              type: object
              properties:
                id:
                  type: integer
                  description: ID of this customer address. READ-ONLY
                  example: 3
                customer_id:
                  type: integer
                  description: ID of the associated customer.
                  example: 5
                first_name:
                  type: string
                  description: The customer’s first name.
                  example: Jane
                last_name:
                  type: string
                  description: The customer’s last name.
                  example: Doe
                company:
                  type: string
                  description: The customer’s company name.
                  example: BigCommerce
                street_1:
                  type: string
                  description: The customer’s street address, line 1.
                  example: 123 Main Street
                street_2:
                  type: string
                  description: The customer’s street address, line 2.
                city:
                  type: string
                  description: The customer’s city/town/suburb.
                  example: Austin
                state:
                  type: string
                  description: 'The customer’s state/province. Do not abbreviate the state; spell out the entire word, e.g.: California. (Cannot be null. As a workaround for addresses that include no state/province string, pass a space as the “state” value.)'
                  example: Texas
                zip:
                  type: string
                  description: The customer’s ZIP or postal code.
                  example: '78726'
                country:
                  type: string
                  description: The customer’s country. Must be the full country name.
                  example: United States
                country_iso2:
                  type: string
                  description: 2-letter ISO Alpha-2 code for the customer’s country. READ-ONLY
                  example: US
                phone:
                  type: string
                  description: The customer’s phone number.
                  example: 123-345-7890
                address_type:
                  type: string
                  example: residential
                  enum:
                    - residential
                    - commercial
              example:
                id: 3
                customer_id: 5
                first_name: Jane
                last_name: Doe
                company: BigCommerce
                street_1: 123 Main Street
                street_2: ''
                city: Austin
                state: Texas
                zip: '78726'
                country: United States
                country_iso2: US
                phone: 123-345-7890
                address_type: residential
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customerAddress_Full'
      deprecated: true
      x-codegen-request-body-name: body
    delete:
      tags:
        - Customer Addresses
      summary: Delete a Customer Address
      description: Deletes a *Customer Address*.
      operationId: deletesACustomerAddress
      responses:
        '204':
          description: ''
          content: {}
      deprecated: true
  '/customers/{customer_id}/addresses/count':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/customer_id'
    get:
      tags:
        - Customer Addresses
      summary: Get a Count of Customer Addresses
      description: Returns a count of addresses for a customer.
      operationId: getACountofCustomerAddresses
      parameters:
        - name: page
          in: query
          description: Number of pages.
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: number
        - name: limit
          in: query
          description: Count per page.
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/count_Full'
              example:
                count: 27
      deprecated: true
  '/customer_groups':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
        - Customer Groups
      summary: Get All Customer Groups
      description: Returns a list of *Customer Groups*. Default sorting is by customer-group ID, from lowest to highest.
      operationId: getAllCustomerGroups
      parameters:
        - name: page
          in: query
          description: Number of pages.
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: number
        - name: limit
          in: query
          description: Count per page.
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: number
        - name: name
          in: query
          description: Filter customer groups by exact name match. 
          schema:
            type: string
        - name: 'name:like'
          in: query
          description: Filter customer groups by name, using a fuzzy matching method.
          schema:
             type: string
        - name: is_default
          in: query
          description: Filter by customers who sign up are added to this group by default.
          schema:
            type: boolean
        - name: date_created
          in: query
          description: Filter customer groups by date_created. `date_created=2018-09-05T13:43:54`
          schema:
            type: string
            format: date-time
        - name: 'date_created:max'
          in: query
          description: Filter customer groups by maximum date_created. `date_created:max=2018-09-10`
          schema:
            type: string
        - name: 'date_created:min'
          in: query
          description: Filter customer groups by date_created. `date_created:min=2018-09-05`
          schema:
            type: string
            format: date-time
        - name: date_modified
          in: query
          description: Filter customer groups by date_modified. `date_modified=2018-09-05T13:45:03`
          schema:
            type: string
            format: date-time
        - name: '`date_modified:min`'
          in: query
          description: Filter customer groups by minimum date_modified. `date_modified:min=2019-09-04T:00:00:00` or `date_modified:min=2019-09-04`
          schema:
            type: string
            format: date-time
        - name: '`date_modified:max`'
          in:  query
          description: Filter customer groups by maximum date_modified. `date_modified:max=2018-09-05T13:45:03` or `date_modified:max=2019-09-04`
          schema:
            type: string
            format: date-time
        - name: is_group_for_guests
          in: query
          description: Filter whether the group is for guests. There can only be one customer group for guests at a time.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/customerGroup_Full'
    post:
      tags:
        - Customer Groups
      summary: Create a Customer Group
      description: |-
        Creates a *Customer Group*. 

        **Required Fields**
        * name
      operationId: createACustomerGroup
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customerGroup_Post'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customerGroup_Full'
        '207':
          description: The customer group was created, but the sitewide discount update failed. You may retry the request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    minLength: 1
                    type: string
                description: ''
    delete:
      tags:
        - Customer Groups
      summary: Delete Customer Groups
      description: |-
        By default, it deletes all *Customer Groups*. 
        All existing customers are unassigned from the group when it is deleted.
      operationId: deleteAllCustomerGroups
      responses:
        '204':
          description: ''
          content: {}
  '/customer_groups/{customer_group_id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/customer_group_id'
    get:
      tags:
        - Customer Groups
      summary: Get a Customer Group
      description: Returns a *Customer Group*.
      operationId: getACustomerGroup
      parameters:
        - name: page
          in: query
          description: Number of pages.
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: number
        - name: limit
          in: query
          description: Count per page.
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: number
        - name: name
          in: query
          description: Name of the customer groups.
          schema:
            type: string
        - name: date_created
          in: query
          description: 'Filter items by date_created. `date_created=2018-09-05T13:43:54`'
          schema:
            type: string
            format: date-time
        - name: 'date_created:max'
          in: query
          description: 'Filter items by maximum date_created. `date_created:max=2018-09-10`'
          schema:
            type: string
        - name: 'date_created:min'
          in: query
          description: 'Filter items by date_created. `date_created:min=2018-09-05`'
          schema:
            type: string
            format: date-time
        - name: date_modified
          in: query
          description: 'Filter items by date_modified. `date_modified=2018-09-05T13:45:03`'
          schema:
            type: string
            format: date-time
        - name: 'date_modified:min'
          in: query
          description: 'Filter items by minimum date_modified. `date_modified:min=2019-09-04T:00:00:00` or `date_modified:min=2019-09-04`'
          schema:
            type: string
        - name: 'date_modified:max'
          in: query
          description: 'Filter items by maximum date_modified. `date_modified:max=2018-09-05T13:45:03` or `date_modified:max=2019-09-04`'
          schema:
            type: string
            format: date-time
        - name: is_default
          in: query
          description: Whether customers who sign up are added to this group by default.
          schema:
            type: boolean
      responses:
        '200':
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customerGroup_Full'
        '400':
          description: |-
            Bad Request. The requested resource could not be downloaded and may be invalid. Possible reasons include malformed request syntax or the file host blocking requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
    put:
      tags:
        - Customer Groups
      summary: Update a Customer Group
      description: |-
        Updates a *Customer Group*.

        **Notes**

        Any combination of fields can be updated at once. Discount rules are treated in bulk. The entire set of rules is overwritten when a request is sent.
      operationId: updateACustomerGroup
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customerGroup_Full'
        required: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customerGroup_Full'
        '207':
          description: The customer group was updated, but the sitewide discount update failed. You may retry the request.
          content:
            application/json:
              schema:
                required:
                  - message
                  - status
                type: object
                properties:
                  status:
                    type: number
                  message:
                    minLength: 1
                    type: string
                description: ''
      x-codegen-request-body-name: body
    delete:
      tags:
        - Customer Groups
      summary: Delete a Customer Group
      description: |-
        Deletes a *Customer Group*. 

        **Notes**
        All existing customers are unassigned from the group when it is deleted.
      operationId: deleteACustomerGroup
      responses:
        '204':
          description: No content. Request was successful but produced no response.
          content: {}
        '400':
          description: |-
            Bad Request. The requested resource could not be downloaded and may be invalid. Possible reasons include malformed request syntax or the file host blocking requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
  '/customer_groups/count':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
        - Customer Groups
      summary: Get a Count of Customer Groups
      description: Returns a count of all *Customer Groups*.
      operationId: getACountOfCustomerGroups
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/count_Full'
              example:
                count: 27
components:
  schemas:
    billingAddress_Full:
      title: billingAddress_Full
      type: object
      properties:
        first_name:
          type: string
          description: ''
          example: Jane
        last_name:
          type: string
          description: ''
          example: Doe
        company:
          type: string
          description: ''
        street_1:
          type: string
          description: ''
          example: 123 Main Street
        street_2:
          type: string
          description: ''
        city:
          type: string
          description: ''
          example: Austin
        state:
          type: string
          description: ''
          example: TX
        zip:
          type: string
          description: ''
          example: '12345'
        country:
          type: string
          description: ''
          example: United States
        country_iso2:
          type: string
          description: ''
          example: US
        phone:
          type: string
          description: ''
        email:
          type: string
          description: ''
          example: janedoe@example.com
        form_fields:
          type: array
          description: ''
          items:
            title: Form Fields
            type: object
            properties:
              name:
                type: string
                description: Name of the form field.
                example: License ID
              value:
                type: string
                description: Value of the form field.
                example: 123BAF
      x-internal: false
    customerFormFields:
      title: customerFormFields
      type: object
      properties:
        name:
          type: string
          description: Name of the form field.
          example: License ID
        value:
          type: string
          description: Value of the form field.
          example: 123BAF
      x-internal: false
    shippingAddress_Full:
      title: shippingAddress_Full
      type: object
      properties:
        url:
          type: string
          description: URL of the shipping address for API requests.
          example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/shippingaddresses'
        resource:
          type: string
          description: ''
          example: /orders/129/shippingaddresses
      x-internal: false
    customer_Full:
      title: customer_Full
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: Unique numeric ID of this customer. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.
              example: 1
            date_created:
              type: string
              description: Date on which the customer registered from the storefront or was created in the control panel. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.
            date_modified:
              type: string
              description: |
                Date on which the customer updated their details in the storefront or was updated in the control panel. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.
        - $ref: '#/components/schemas/customer_Base'
      x-internal: false
      x-examples: {}
    categoryAccessLevel_Full:
      title: categoryAccessLevel_Full
      type: object
      properties:
        type:
          type: string
          description: |-
            + `all` - Customers can access all categories
             + `specific`  - Customers can access a specific list of categories
            + `none` - Customers are prevented from viewing any of the categories in this group.
          enum:
            - all
            - specific
            - none
        categories:
          type: array
          description: Is an array of category IDs and should be supplied only if `type` is specific.
          example:
            - 18
            - 19
            - 23
            - 34
          items:
            type: integer
      x-internal: false
    count_Full:
      title: count_Full
      type: object
      properties:
        count:
          type: number
          description: ''
          example: 27
      example:
        count: 27
      x-internal: false
    customerAddress_Full:
      title: customerAddress_Full
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: ID of this customer address. READ-ONLY
              example: 3
            country_iso2:
              type: string
              description: 2-letter ISO Alpha-2 code for the customer’s country. READ-ONLY
              example: US
        - $ref: '#/components/schemas/customerAddress_Base'
      x-internal: false
    customerGroup_Full:
      title: customerGroup_Full
      type: object
      properties:
        id:
          type: integer
          description: ID of the customer group.
          example: 1     
        name:
          type: string
          description: Name of the group.
          example: Wholesale
        is_default:
          type: boolean
          description: Determines whether new customers are assigned to this group by default.
          example: false
        category_access:
          $ref: '#/components/schemas/categoryAccessLevel_Full'
        discount_rules:
          type: array
          description: A collection of discount rules that are automatically applied to customers who are members of the group.
          items:
            type: object
            properties:
              type:
                type: string
                enum:
                  - price_list
                  - all
                  - category
                  - product
              method:
                type: string
                enum:
                  - percent
                  - fixed
                  - price
              amount:
                type: string
                description: A float that specifies the value applied to the price modified. (Float, Float as String, Integer)
                example: '"5.0000"'
              price_list_id:
                type: integer
                description: If a customer group is assigned to a price list,`method` and `amount` are not shown. `type` and `price_list_id` are returned.
                example: 3
        date_created:
          type: string
          description: Date on which the customer group was created.
          example: 2023-07-17 06:30:41
        date_modified:
          type: string
          description: Date on which the customer group was last modified.
          example: 2023-07-25 01:15:19
        is_group_for_guests:
          type: boolean
          description: Describes whether the group is for guests. There can only be one customer group for guests at a time.
      description: When creating a customer group category discount using the API it defaults to "products in this category and its subcategories". In the [store control panel](https://support.bigcommerce.com/s/article/Customer-Groups#pricing), this can be changed to either "products in this category only" or "products in this category and its subcategories". There are currently no settings to change this behavior with the API.
      x-internal: false
    country_Full:
      title: country_Full
      type: object
      properties:
        id:
          type: integer
          description: ID of the country.
          example: 13
        country:
          type: string
          description: Country name.
          example: Australia
        country_iso2:
          type: string
          description: 2-letter country code.
          example: AU
        country_iso3:
          type: string
          description: 3-letter country code.
          example: AUS
        states:
          title: States Resource
          type: object
          properties:
            url:
              type: string
              description: ''
              example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/countries/13/states'
            resource:
              type: string
              description: ''
              example: /countries/13/states
      example:
        id: 13
        country: Australia
        country_iso2: AU
        country_iso3: AUS
        states:
          url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/countries/13/states'
          resource: /countries/13/states
      x-internal: false
    statesResource_Full:
      title: statesResource_Full
      type: object
      properties:
        url:
          type: string
          description: ''
          example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/countries/13/states'
        resource:
          type: string
          description: ''
          example: /countries/13/states
      x-internal: false
    state_Full:
      title: state_Full
      type: object
      properties:
        id:
          type: integer
          description: Numeric ID of the state/province.
          example: 208
        state:
          type: string
          description: Name of the state/province.
          example: Australian Capital Territory
        state_abbreviation:
          type: string
          description: Abbreviation for the state/province.
          example: ACT
        country_id:
          type: integer
          description: Numeric ID of the state’s/province’s associated country.
          example: 13
      x-internal: false
    customerGroup_Post:
      title: customerGroup_Post
      type: object
      properties:
        name:
          type: string
          description: Name of the group.
          example: Wholesale
        is_default:
          type: boolean
          description: Determines whether new customers are assigned to this group by default.
          example: false
        category_access:
          $ref: '#/components/schemas/categoryAccessLevel_Full'
        discount_rules:
          type: array
          description: A collection of discount rules that are automatically applied to customers who are members of the group.
          items:
            type: object
            properties:
              type:
                type: string
                enum:
                  - price_list
                  - all
                  - category
                  - product
              method:
                type: string
                enum:
                  - percent
                  - fixed
                  - price
              amount:
                type: string
                description: A float that specifies the value applied to the price modified. (Float, Float as String, Integer)
                example: '"5.0000"'
              price_list_id:
                type: integer
                description: If a customer group is assigned to a price list,`method` and `amount` are not shown. `type` and `price_list_id` are returned.
                example: 3
        date_created:
          type: string
          description: Date on which the customer group was created.
          example: 2023-07-17 06:30:41
        date_modified:
          type: string
          description: Date on which the customer group was last modified.
          example: 2023-07-25 01:15:19
        is_group_for_guests:
          type: boolean
          description: Describes whether the group is for guests. There can only be one customer group for guests at a time.
      description: When creating a customer group category discount using the API it defaults to "products in this category and its subcategories". In the [store control panel](https://support.bigcommerce.com/s/article/Customer-Groups#pricing), this can be changed to either "products in this category only" or "products in this category and its subcategories". There are currently no settings to change this behavior with the API.
      x-internal: false
    validatePassword:
      type: object
      properties:
        success:
          type: boolean
          description: Will return `true` or `false`.
      x-internal: false
    customer_Base:
      title: customer_Base
      type: object
      x-internal: false
      properties:
        _authentication:
          type: object
          description: Not returned in any responses, but accepts up to two fields allowing you to set the customer’s password. If a password is not supplied, it is generated automatically. For further information about using this object, please see the Customers resource documentation.
          properties:
            force_reset:
              type: boolean
            password:
              type: string
            password_confirmation:
              type: string
        company:
          type: string
          description: The name of the company for which the customer works.
          example: BigCommerce
        first_name:
          type: string
          description: First name of the customer.
          example: Jane
        last_name:
          type: string
          description: Last name of the customer.
          example: Doe
        email:
          type: string
          description: Email address of the customer.
          example: janedoe@example.com
        phone:
          type: string
          description: Phone number of the customer.
          example: '1234567890'
        store_credit:
          type: string
          description: The amount of credit the customer has. (Float, Float as String, Integer)
          example: '0'
        registration_ip_address:
          type: string
          description: The customer’s IP address when they signed up.
          example: 12.345.678.910
        customer_group_id:
          type: integer
          description: The group to which the customer belongs.
          example: 2
        notes:
          type: string
          description: Store-owner notes on the customer.
        
        tax_exempt_category:
          type: string
          description: If applicable, the tax-exempt category of the shopper’s customer account. You can apply a tax-exempt category to multiple customers. This code should match the exemption codes provided by the third-party integration.
        accepts_marketing:
          type: boolean
          description: Describes whether the customer accepts product review emails or abandon cart emails. Read-Only.
          example: true
          readOnly: true
        addresses:
          title: Address Field Resource
          type: object
          properties:
            url:
              type: string
              description: Full URL of where the resource is located.
              example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/customers/5/addresses'
            resource:
              type: string
              description: Resource being accessed.
              example: /customers/5/addresses
        form_fields:
          type: array
          description: Array of custom fields. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.
          nullable: true
          items:
            title: Form Fields
            type: object
            properties:
              name:
                type: string
                description: Name of the form field.
                example: License ID
              value:
                type: string
                description: Value of the form field.
                nullable: true
        reset_pass_on_login:
          type: boolean
          description: Force a password change on next login.
          example: false
      required:
        - first_name
        - last_name
        - email
    ErrorRequest:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorBasic'
    ErrorBasic:
      type: object
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
      x-tags:
        - Models   
    customerAddress_Base:
      title: customerAddress_Base
      required:
        - city
        - country
        - first_name
        - last_name
        - phone
        - state
        - street_1
        - zip
      type: object
      properties:
        customer_id:
          type: integer
          description: ID of the associated customer.
          example: 5
        first_name:
          type: string
          description: The customer’s first name.
          example: Jane
        last_name:
          type: string
          description: The customer’s last name.
          example: Doe
        company:
          type: string
          description: The customer’s company name.
          example: BigCommerce
        street_1:
          type: string
          description: 'The customer’s street address, line 1.'
          example: 123 Main Street
        street_2:
          type: string
          description: 'The customer’s street address, line 2.'
        city:
          type: string
          description: The customer’s city/town/suburb.
          example: Austin
        state:
          type: string
          description: 'The customer’s state/province. Do not abbreviate the state; spell out the entire word, e.g.: California. (Cannot be null. As a workaround for addresses that include no state/province string, pass a space as the “state” value.)'
          example: Texas
        zip:
          type: string
          description: The customer’s ZIP or postal code.
          example: '78726'
        country:
          type: string
          description: The customer’s country. Must be the full country name.
          example: United States
        phone:
          type: string
          description: The customer’s phone number.
          example: 123-345-7890
        address_type:
          type: string
          example: residential
          enum:
            - residential
            - commercial
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
    customer_id:
      name: customer_id
      in: path
      description: Unique numeric ID of the customer.
      required: true
      schema:
        exclusiveMaximum: false
        exclusiveMinimum: false
        type: integer
    customer_group_id:
      name: customer_group_id
      in: path
      description: The ID of the customer group.
      required: true
      schema:
        exclusiveMaximum: false
        exclusiveMinimum: false
        type: integer
    customer_address_id:
      name: customer_address_id
      in: path
      description: ID of the customer address.
      required: true
      schema:
        exclusiveMaximum: false
        exclusiveMinimum: false
        type: integer
    is_group_for_guests:
      name: is_group_for_guests
      in: query
      description: Describes whether the group is for guests. There can only be one customer group for guests at a time.
      schema:
        type: boolean
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Customers | modify | `store_v2_customers` |
        |  Customers | read-only | `store_v2_customers_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header


openapi: '3.0.0'
info:
  version: ''
  title: Customers V3
  description: |-
    Create and manage customers.

    ## Resources
    * [Customer and Subscribers Overview](/api-docs/store-management/customers).
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Customers
    description: BigCommerce Customers API Definition.
  - name: Customer Addresses
  - name: Customer Attributes
  - name: Customer Attribute Values
  - name: Customer Form Field Values
  - name: Customer Consent
  - name: Customer Form Fields
  - name: Customer Stored Instruments
  - name: Customer Settings
  - name: Customer Settings Channel
  - name: Customer Validate Credentials
paths:
  '/customers':
    get:
      description: |-
        Returns a list of Customers. Optional filter parameters can be passed in.

        **Notes**

        Attribute names are not available on the customer object.
      summary: Get All Customers
      tags:
        - Customers
      operationId: CustomersGet
      deprecated: false
      parameters:
        - name: page
          in: query
          description: Page number. `page=1`
          schema:
            type: integer
        - in: query
          name: limit
          description: Items count per page. `limit=50`
          schema:
            type: number
        - name: 'id:in'
          in: query
          description: |-
            Filter items by ID.
            `id:in=4,5,6`
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'company:in'
          in: query
          description: 'Filter items by company. `company:in=bigcommerce,commongood`'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: 'customer_group_id:in'
          in: query
          description: 'Filter items by customer_group_id. `customer_group_id:in=5,6`'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: date_created
          in: query
          description: 'Filter items by date_created. `date_created=2018-09-05T13:43:54`'
          schema:
            type: string
            format: date-time
        - name: 'date_created:max'
          in: query
          description: 'Filter items by maximum date_created. `date_created:max=2018-09-10`'
          schema:
            type: string
        - name: 'date_created:min'
          in: query
          description: 'Filter items by date_created. `date_created:min=2018-09-05`'
          schema:
            type: string
            format: date-time
        - name: date_modified
          in: query
          description: 'Filter items by date_modified. `date_modified=2018-09-05T13:45:03`'
          schema:
            type: string
            format: date-time
        - name: 'date_modified:min'
          in: query
          description: 'Filter items by minimum date_modified. `date_modified:min=2019-09-04T:00:00:00` or `date_modified:min=2019-09-04`'
          schema:
            type: string
        - name: 'date_modified:max'
          in: query
          description: 'Filter items by maximum date_modified. `date_modified:max=2018-09-05T13:45:03` or `date_modified:max=2019-09-04`'
          schema:
            type: string
            format: date-time
        - name: 'email:in'
          in: query
          description: 'Filter items by email. `email:in=janedoe@example.com`'
          schema:
            type: string
        - name: 'name:in'
          in: query
          description: Filter items by first_name and last_name. `name=james moriarty`
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: 'name:like'
          in: query
          description: |-
            Filter items by substring in first_name and last_name.
            `name:like=moriarty, sherlock`
            Concatenates the first_name and last_name fields.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: 'registration_ip_address:in'
          in: query
          description: |-
            Filter items by registration_ip_address. If the customer was created using the API, then registration address is blank.
            `registration_ip_address:in=12.345.6.789`
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: include
          in: query
          description: |-
            Indicates whether to include customer sub-resources:
             * `addresses` - customer addresses
             * `storecredit` - store credit
             * `attributes` - customer attributes and address attributes
             * `formfields` - customer and address form fields
             * `shopper_profile_id` - the ID of the shopper profile associated with the customer (Beta)
             * `segment_ids`- segments the customer belongs to (Beta)

             `include=addresses,storecredit,attributes,formfields,shopper_profile_id,segment_ids`
          schema:
            type: string
            enum:
              - addresses
              - storecredit
              - attributes
              - formfields
        - in: query
          name: sort
          description: 'Sort items by date_created, date_modified, or last_name:* `date_created:asc` - date created, ascending* `date_created:desc` - date created, descending* `last_name:asc` - last name, ascending* `last_name:desc` - last name, descending * `date_modified:asc` - date modified, ascending* `date_modified:desc`- date modified, descending  Example: `sort=last_name:asc`'
          schema:
            type: string
            enum:
              - 'date_created:asc'
              - 'date_created:desc'
              - 'last_name:asc'
              - 'last_name:desc'
              - 'date_modified:asc'
              - 'date_modified:desc'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCollectionResponse'
    post:
      description: |-
        Creates Customers. Create up to 10 customers in one call.

        **Required Fields**
        * last_name
        * first_name
        * email

        **Required Fields Customer Address**
        * first_name
        * city
        * country_code
        * last_name
        * address1

        **Required Fields Attributes**
        * Attributes must be [created](/docs/rest-management/customers/customer-attributes#create-a-customer-attribute) **BEFORE** creating a customer.
        * attribute_id
        * attribute_value -- This is input as a string, regardless of the [Type](/docs/rest-management/customers/customer-attributes#create-a-customer-attribute).

        **Limits**
        * Limit of 10 concurrent requests 
        
        **Notes**

        A customer can be created with global access or channel-specific access.
        * **Global access:**
          * Make sure the channel has `allow_global_logins` enabled. This is on by default only for the default storefront. Find more info at [Customer Settings > Channel](/docs/rest-management/customers/customer-settings-channel).
          * Omit `channel_ids` field, or provide `channel_ids: null`.
        * **Channel-specific access:**
          * Provide a `channel_ids` array containing the channels accessible by the customer. This array cannot be empty.
      summary: Create Customers
      tags:
        - Customers
      operationId: CustomersPost
      deprecated: false
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/customer_Post'
            examples:
              example-1:
                value:
                  - email: string@example.com
                    first_name: string
                    last_name: string
                    company: string
                    phone: string
                    notes: string
                    tax_exempt_category: string
                    customer_group_id: 0
                    addresses:
                      - address1: Addr 1
                        address2: ''
                        address_type: residential
                        city: San Francisco
                        company: History
                        country_code: US
                        first_name: Ronald
                        last_name: Swimmer
                        phone: '707070707'
                        postal_code: '33333'
                        state_or_province: California
                        form_fields: 
                        - name: "test"
                          value: "test"
                    authentication:
                      force_password_reset: true
                      new_password: string123
                    accepts_product_review_abandoned_cart_emails: true
                    store_credit_amounts:
                      - amount: 43.15
                    origin_channel_id: 1
                    channel_ids:
                      - 1
                    form_fields: 
                      - name: "test"
                        value: "test"
        required: true
        x-examples: {}
        description: ''
      responses:
        '200':
          $ref: '#/components/responses/CustomerCollectionResponse'
        '413':
          description: The request payload is too large. The maximum number of items allowed in the array is 10.
        '422':
          description: The *Customer* was not valid. This is the result of missing required fields or trying to edit a read only field. See the response for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    status: 422
                    title: Create customers failed.
                    type: /api-docs/getting-started/api-status-codes
                    errors:
                      .customer_create: Error creating customers
    put:
      description: |-
        Updates Customers. Subresource updates are not supported. Up to 10 customers can be updated in one call.

        **Required Fields**
        * id -- ID of the *Customer* This must be included in the request body

        **Read Only Fields**
        * id
        * registration_ip_address
        * date_created
        * date_modified


        **Notes**

        * Attributes Values can not be updated using Update a Customer. Use the [Update customer attribute values](/docs/rest-management/customers/customer-attribute-values#upsert-customer-attribute-values) endpoint.
        * channel_ids -- Updating the list of channels a customer can access may create some side effects in a multi-storefront situation. This list determines which customer account we will use to authenticate a shopper given a channel.
      summary: Update Customers
      tags:
        - Customers
      operationId: CustomersPut
      deprecated: false
      responses:
        '200':
          $ref: '#/components/responses/CustomerCollectionResponse'
        '413':
          description: The request payload is too large. The maximum number of items allowed in the array is 10.
        '422':
          description: |
            The `Customer` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/customer_Put'
            examples:
              example-1:
                value: 
                  - email: string
                    first_name: string
                    last_name: string
                    company: string
                    phone: string
                    registration_ip_address: string
                    notes: string
                    tax_exempt_category: string
                    customer_group_id: 0
                    id: 1
                    authentication:
                      force_password_reset: true
                      new_password: string123
                    accepts_product_review_abandoned_cart_emails: true
                    store_credit_amounts:
                      - amount: 43.15
                    origin_channel_id: 1
                    channel_ids:
                      - 1
                    form_fields: 
                      - name: "test"
                        value: "test"  
              example-2-form-fields:
                value:
                  - id: 1
                    form_fields: 
                      - name: "test"
                        value: "test"  
    delete:
      description: |-
        Deletes Customers.

        **Required Query**
        * id:in -- ID of the customer

        **Notes**

        A query is required to delete customers. If not provided, a 204 is returned, with no changes to the data.
      summary: Delete Customers
      tags:
        - Customers
      operationId: CustomersDelete
      deprecated: false
      parameters:
        - in: query
          name: 'id:in'
          description: |-
            Filter items by ID.
            `id:in=4,5,6`
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
      responses:
        '204':
          description: ''
          headers: {}
  '/customers/addresses':
    get:
      description: Returns a list of Customer Addresses. Optional filter parameters can be passed in.
      summary: Get All Customer Addresses
      operationId: CustomersAddressesGet
      deprecated: false
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
        - name: page
          in: query
          description: Page number. `page=1`
          schema:
            type: integer
        - in: query
          name: limit
          description: Items count per page. `limit=50`
          schema:
            type: number
        - name: 'company:in'
          in: query
          description: 'Filter items by company. `company:in=bigcommerce,commongood`'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: 'name:in'
          in: query
          description: 'Filter items by first_name and last_name. `name:in=James+Moriarty`'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: 'customer_id:in'
          description: 'Filter by the ID of the customer. Also accepts comma-separated IDs to filter for multiple customers. `customer_id:in=23,24,55`'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: include
          in: query
          description: |-
            Indicates whether to include customer address sub-resources:
            * `formfields` - address form fields
            `include=formfields`
          schema:
            type: string
            enum:
              - formfields
        - name: 'id:in'
          in: query
          description: |-
            Filter items by ID.
            `id:in=4,5,6`
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          $ref: '#/components/responses/AddressCollectionResponse'
      tags:
        - Customer Addresses
    post:
      description: |-
        Creates a Customer Address. Multiple customer addresses can be created in one call.

        **Required Fields**
        * **customer_id**
        * **first_name**
        * **last_name**
        * **city**
        * **country_code**
        * **address1**

        **Notes**
        * A unique customer address is a combination of the following core address fields:
          * **customer_id**
          * **first_name**
          * **last_name**
          * **company**
          * **phone**
          * **address_type**
          * **address1**
          * **address2**
          * **city**
          * **country_code**
          * **state_or_province**
          * **postal_code**
        * An attempt to create an address that already exists will result in no change to the address or custom form field values, an HTTP 200 return code, and the address will be absent from the response body.
      summary: Create a Customer Address
      operationId: CustomersAddressesPost
      deprecated: false
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/address_Post'
            examples: 
              example-1:
                value:
                  - first_name: John
                    last_name: Doe
                    address1: 111 E West Street
                    address2: '654'
                    city: Akron
                    state_or_province: Ohio
                    postal_code: '44325'
                    country_code: US
                    phone: '1234567890'
                    address_type: residential
                    customer_id: 11
                    form_fields: 
                      - name: "test"
                        value: "test"
        required: true
        x-examples:
          application/json:
            - first_name: John
              last_name: Doe
              address1: 111 E West Street
              address2: '654'
              city: Akron
              state_or_province: Ohio
              postal_code: '44325'
              country_code: US
              phone: '1234567890'
              address_type: residential
              customer_id: 11
              form_fields: 
                - name: "test"
                  value: "test"
      responses:
        '200':
          $ref: '#/components/responses/AddressCollectionResponsePostPut'
        '422':
          description: |
            The `Address` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Customer Addresses
    put:
      description: |-
        Updates a Customer Address. Multiple customer addresses can be updated in one call.

        **Required Fields**
        * **id** -- ID of the *Customer Address*

        **Limits**
        * Limit of **3** concurrent requests.

        **Notes**
        * A unique customer address is a combination of the following core address fields:
          * **first_name**
          * **last_name**
          * **company**
          * **phone**
          * **address_type**
          * **address1**
          * **address2**
          * **city**
          * **country_code**
          * **state_or_province**
          * **postal_code**
        * An attempt to update an address such that it becomes identical to another address that already exists will result in no change to the target address or custom form field values. The response will have an HTTP 200 return code, and the address will be absent from the response body.
      summary: Update a Customer Address
      operationId: CustomersAddressesPut
      deprecated: false
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/address_Put'
            examples:
              example-1:
                value:
                  - id: 11
                    first_name: John
                    last_name: Doe
                    address1: 111 E West Street
                    address2: '654'
                    city: Akron
                    state_or_province: Ohio
                    postal_code: '44325'
                    country_code: US
                    phone: '1234567890'
                    address_type: residential
                    form_fields: 
                      - name: "test"
                        value: "test"
              example-2-form-fields:
                value:
                  - id: 11
                    form_fields: 
                      - name: "test"
                        value: "test"
        required: true
        x-examples:
          application/json:
            - first_name: John
              last_name: Doe
              id: 38
              address1: 111 E West Street
              address2: '654'
              city: Akron
              state_or_province: Ohio
              postal_code: '44325'
              country_code: US
              phone: '1234567890'
              address_type: residential
      responses:
        '200':
          $ref: '#/components/responses/AddressCollectionResponsePostPut'
        '422':
          description: |
            The `Address` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Customer Addresses
    delete:
      description: |-
        Deletes a Customer Address.

        **Required Query**
        * id:in -- ID of the *Customer Address*
      summary: Delete a Customer Address
      operationId: CustomersAddressesDelete
      deprecated: false
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
        - in: query
          name: 'id:in'
          required: true
          description: |-
            Filter items by ID.
            `id:in=4,5,6`
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
      responses:
        '204':
          description: ''
          headers: {}
      tags:
        - Customer Addresses
  '/customers/validate-credentials':
    post:
      tags:
        - Customer Validate Credentials
      description: Validate a customer credentials - This endpoint has special rate limiting protections to protect against abuse.
      summary: Validate a customer credentials
      operationId: CustomerValidateCredentials
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateCustomerCredentialsObject'
            examples:
              data:
                value:
                  email: foo@bar.com
                  password: password
                  channel_id: 1
      responses:
        '200':
          description: Returns if the customer credentials provided are valid or not.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateCustomerCredentialsResponseObject'
              examples:
                data:
                  value:
                    is_valid: true
                    customer_id: 1
        '422':
          description: This is the result of missing required fields. See the response for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: |
            Allowed number of requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    status: 429
                    title: Too many requests
                    type: /api-docs/getting-started/api-status-codes
                    errors: {}
  '/customers/settings':
    get:
      tags:
        - Customer Settings
      description: Returns the global-level customer settings.
      summary: Get Customer Settings
      operationId: CustomerSettingsGet
      responses:
        '200':
          description: Returns customer settings values for global level.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSettingsObject'
              examples:
                data:
                  value:
                    privacy_settings:
                      ask_shopper_for_tracking_consent: true
                      policy_url: 'https://bigcommmerce.com/policy'
                    customer_group_settings:
                      guest_customer_group_id: 1
                      default_customer_group_id: 1
    put:
      tags:
        - Customer Settings
      description: Updates the customer settings on the global level.
      summary: Update Customer Settings
      operationId: CustomerSettingsPut
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerSettingsObject'
            examples:
              example-1:
                value:
                  privacy_settings:
                    ask_shopper_for_tracking_consent: true
                    policy_url: 'https://bigcommmerce.com/policy'
                  customer_group_settings:
                    guest_customer_group_id: 0
                    default_customer_group_id: 0
        required: true
      responses:
        '200':
          description: Customer settings are returned on a global level.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSettingsObject'
              examples:
                data:
                  value:
                    privacy_settings:
                      ask_shopper_for_tracking_consent: true
                      policy_url: 'https://bigcommerce.com/policy'
                      ask_shopper_for_tracking_consent_on_checkout: false
                    customer_group_settings:
                      guest_customer_group_id: 0
                      default_customer_group_id: 0
  '/customers/settings/channels/{channel_id}':
    get:
      tags:
        - Customer Settings Channel
      description: |-
        Returns the customer settings per channel.

        **Notes**

         * `null` indicates that there is no override per given channel and values are inherited from the global level.
      summary: Get Customer Settings per Channel
      operationId: CustomerSettingsChannelGet
      parameters:
        - in: path
          name: channel_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Customer settings for this channel are returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerChannelSettingsObject'
              examples:
                data:
                  value:
                    privacy_settings:
                      ask_shopper_for_tracking_consent: true
                      policy_url: 'https://bigcommmerce.com/policy'
                    customer_group_settings:
                      guest_customer_group_id: 1
                      allow_global_logins: true
    put:
      tags:
        - Customer Settings Channel
      description: |-
        Update the customer settings per channel

        **Required Fields**

        * `channel_id`: Provide a `channel_id` array containing one or more channel IDs. Customers will have access to these channels and no others. This array cannot be empty.

        **Notes**

        * Setting `null` will delete override per given channel, and values will be inherited from the global level. Make sure the channel has `allow_global_logins` enabled.
      summary: Update Customer Settings per Channel
      operationId: CustomerSettingsChannelPut
      parameters:
        - in: path
          name: channel_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerChannelSettingsObject'
            examples:
              example-1:
                value:
                  privacy_settings:
                    ask_shopper_for_tracking_consent: true
                    policy_url: 'https://bigcommmerce.com/policy'
                  customer_group_settings:
                    guest_customer_group_id: 0
                    default_customer_group_id: 0
                  allow_global_logins: true
        required: true
      responses:
        '200':
          description: Customer settings are returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSettingsObject'
              examples:
                example:
                  value:
                    privacy_settings:
                      ask_shopper_for_tracking_consent: true
                      policy_url: 'https://bigcommmerce.com/policy'
                      ask_shopper_for_tracking_consent_on_checkout: null
                    customer_group_settings:
                      guest_customer_group_id: 0
                      default_customer_group_id: 0
                    allow_global_logins: true
    parameters:
      - schema:
          type: string
        name: channel_id
        in: path
        required: true
  '/customers/attributes':
    get:
      description: Returns a list of Customer Attributes. You can pass in optional filter parameters.
      summary: Get All Customer Attributes
      operationId: CustomersAttributesGet
      deprecated: false
      parameters:
        - name: page
          in: query
          description: Page number. `page=1`
          schema:
            type: integer
        - in: query
          name: limit
          description: Items count per page. `limit=50`
          schema:
            type: number
        - name: name
          in: query
          required: false
          description: Filter items by customer attribute name. `name=Date+Joined`
          schema:
            type: string
        - name: 'name:like'
          in: query
          required: false
          description: 'Filter items by substring in customer attribute name. `name:like=join`'
          schema:
            type: string
        - name: type
          in: query
          required: false
          description: The type of the customer attribute.
          schema:
            type: string
        - name: date_created
          in: query
          required: false
          description: 'Filter items by `date_created`. `date_created=2021-01-07T20:28:16Z`'
          schema:
            type: string
            format: date-time
        - name: 'date_created:max'
          in: query
          required: false
          description: 'Filter items by maximum `date_created`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`'
          schema:
            type: string
            format: date-time
        - name: 'date_created:min'
          in: query
          required: false
          description: 'Filter items by minimum `date_created`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`'
          schema:
            type: string
            format: date-time
        - name: date_modified
          in: query
          required: false
          description: Filter items by `date_modified`.
          schema:
            type: string
            format: date-time
        - name: 'date_modified:max'
          in: query
          required: false
          description: 'Filter items by maximum `date_modified`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`'
          schema:
            type: string
            format: date-time
        - name: 'date_modified:min'
          in: query
          required: false
          description: 'Filter items by minimum `date_modified`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`'
          schema:
            type: string
            format: date-time
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
      responses:
        '200':
          $ref: '#/components/responses/CustomerAttributesResponse'
      tags:
        - Customer Attributes
    post:
      description: |-
        Creates a Customer Attribute. Multiple customer attributes can be created in one call.

        **Required Fields**
        * name
        * type

        **Limits**
        * Limit of 3 concurrent requests.

        **Notes**

        Once the data type is set, it cannot be changed. The attribute will need to be deleted then created again with the new data type. This will also delete it from the customer.

        Customer attributes are created separately from the customer. After the name and type are created, then the attributes can be added to the customer.

        A store cannot have more than 50 customer attributes.
      summary: Create a Customer Attribute
      operationId: CustomersAttributesPost
      deprecated: false
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/attribute_Post'
        required: true
        x-examples:
          application/json:
            - name: Date Joined
              type: date
      responses:
        '200':
          $ref: '#/components/responses/CustomerAttributesResponse'
        '422':
          description: |
            The `Attribute` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Customer Attributes
    put:
      description: |-
        Updates a Customer Attribute. Multiple customer attributes can be updated in one call.

        **Required Fields**
        * id -- ID of the *Customer Attribute*

        Once the data type is set, it can not be changed. The attribute will need to be deleted then created again with the new data type. This will also delete it from the customer.

        **Limits**
        * Limit of 3 concurrent requests.
      summary: Update a Customer Attribute
      operationId: CustomersAttributesPut
      deprecated: false
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/attribute_Put'
        required: true
        x-examples:
          application/json:
            - name: Date Joined
              id: 1
      responses:
        '200':
          $ref: '#/components/responses/CustomerAttributesResponse'
        '422':
          description: |
            The `Attribute` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Customer Attributes
    delete:
      description: |-
        Deletes Customer Attributes from the store.

        **Required Query**
        * id:in -- ID of the *Customer Attribute*
      summary: Delete Customer Attributes
      operationId: CustomersAttributesDelete
      deprecated: false
      parameters:
        - name: 'id:in'
          in: query
          required: true
          description: Filter items by ID.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
      responses:
        '204':
          description: ''
          headers: {}
      tags:
        - Customer Attributes
  '/customers/attribute-values':
    get:
      description: Returns a list of Customer Attribute Values. Optional filter parameters can be passed in.
      summary: Get All Customer Attribute Values
      operationId: CustomersAttributeValuesGet
      deprecated: false
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
        - name: page
          in: query
          description: Page number. `page=1`
          schema:
            type: integer
        - in: query
          name: limit
          description: Items count per page. `limit=50`
          schema:
            type: number
        - in: query
          name: 'customer_id:in'
          description: 'Filter items by the customer ID. `customer_id:in=23,24,55`'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'attribute_id:in'
          in: query
          description: 'Filter items by the attribute ID. `attribute_id:in=1,2`'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: name
          in: query
          description: Filter items by the attribute name. `name=age`
          schema:
            type: string
        - name: date_created
          in: query
          description: 'Filter items by `date_created`. `date_created=2018-09-05T13:43:54`'
          schema:
            type: string
            format: date-time
        - name: 'date_created:max'
          in: query
          description: 'Filter items by maximum `date_created`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`'
          schema:
            type: string
        - name: 'date_created:min'
          in: query
          description: 'Filter items by minimum `date_created`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`'
          schema:
            type: string
            format: date-time
        - name: date_modified
          in: query
          description: 'Filter items by `date_modified`. `date_modified=2018-09-05T13:45:03`'
          schema:
            type: string
            format: date-time
        - name: 'date_modified:max'
          in: query
          description: 'Filter items by maximum `date_modified`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`'
          schema:
            type: string
            format: date-time
        - name: 'date_modified:min'
          in: query
          description: 'Filter items by minimum `date_modified`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`'
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/CustomerAttributeValueCollectionResponse'
      tags:
        - Customer Attribute Values
    put:
      description: |-
        Upserts Customer Attribute Values. Updates the attribute values on the Customer. Multiple customer attribute values can be updated in one call.

        Upsert checks for an existing record. If there is none, it creates the record, if there is a matching record, it updates that record.

        **Limits**
        * 10 per call limit.
      summary: Upsert Customer Attribute Values
      operationId: CustomersAttributeValuesPut
      deprecated: false
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/attributeValue_Base'
            examples:
              Example:
                value:
                  - attribute_id: 1
                    value: 'No'
                    customer_id: 2
        required: true
        x-examples:
          application/json:
            - attribute_id: 52528392
              value: aliqua
              customer_id: 12990306
              id: 47143304
            - attribute_id: 8263909
              value: 'n'
              customer_id: 1122433
              id: 34305734
            - attribute_id: 62186196
              value: ''
              customer_id: 10906989
              id: 21175547
            - attribute_id: 68742149
              value: l
              customer_id: 74084818
              id: 99359610
        description: ''
      responses:
        '200':
          $ref: '#/components/responses/CustomerAttributeValueCollectionResponse'
        '422':
          description: |
            The `CustomerAttributeValue` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Customer Attribute Values
    delete:
      description: |-
        Deletes Customer Attribute Values. Deletes the attribute value from the customer.

        **Required Query**
        * id:in - ID of the *Customer Attribute Value*
      summary: Delete Customer Attribute Values
      operationId: CustomersAttributeValuesDelete
      deprecated: false
      parameters:
        - name: 'id:in'
          in: query
          required: true
          description: |-
            Filter items by ID.
            `id:in=4,5,6`
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
      responses:
        '204':
          description: ''
          headers: {}
      tags:
        - Customer Attribute Values
  '/customers/form-field-values':
    get:
      responses:
        '200':
          $ref: '#/components/responses/FormFieldValueCollectionResponse'
        '422':
          description: 'The form field value was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      summary: Get Customer Form Field Values
      description: |-
        Returns a list of form field values for the Customer or Customer Address object.

        To learn about adding and managing form fields, see [Adding and Editing Fields in the Account Signup Form](https://support.bigcommerce.com/s/article/Editing-Form-Fields).
      operationId: CustomerFormFieldsGet
      tags:
        - Customer Form Field Values
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
        - name: page
          in: query
          description: Page number. `page=1`
          schema:
            type: integer
        - in: query
          name: limit
          description: Items count per page. `limit=50`
          schema:
            type: number
        - in: query
          name: customer_id
          description: Filter by the customer ID.
          schema:
            type: integer
        - name: address_id
          in: query
          description: Filter by the ID of the customer address.
          schema:
            type: integer
        - name: field_name
          in: query
          description: Filter by the field name.
          schema:
            type: string
        - name: field_type
          in: query
          description: |-
            Filter by the field type.
             * `checkboxes` - checkboxes field
             * `date` - date field
             * `multiline` - multiline text field
             * `numbers` - numbers only field
             * `password` - password field
             * `radiobuttons` - radio buttons field
             * `text` - text field
             * `picklist` - pick list field
          schema:
            type: string
            enum:
              - checkboxes
              - date
              - multiline
              - numbers
              - password
              - radiobuttons
              - text
              - picklist
    put:
      responses:
        '200':
          $ref: '#/components/responses/FormFieldValuesResponse'
        '422':
          description: 'The form field value was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      summary: Upsert Customer Form Field Values
      description: |-
        Updates form field values on the Customer or Customer Address objects. Multiple form field values can be updated in one call.

        Upsert checks for an existing record, if there is none it creates the record, if there is a matching record it updates that record.

        To learn more about editing form fields, see [Adding and Editing Fields in the Account Signup Form](https://support.bigcommerce.com/s/article/Editing-Form-Fields).

        **Limits**
        * Limit of 10 concurrent requests.
      operationId: CustomerFormFieldValuePUT
      tags:
        - Customer Form Field Values
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/formFieldValue_Full'
            examples:
              Example:
                value:
                  - customer_id: 12
                    name: Sales Rep
                    value: Miss Moneypenny
                  - customer_id: 12
                    name: How did you hear about us?
                    value: Other
                  - customer_id: 12
                    name: What is your favorite pizza topping?
                    value: Mushrooms
  '/customers/{customerId}/consent':
    get:
      description: Gets the status of a customer's consent to allow data collection by cookies and scripts while shopping on a storefront.
      summary: Get Customer Consent
      tags:
        - Customer Consent
      operationId: CustomersConsentByCustomerId_GET
      deprecated: false
      parameters:
        - $ref: '#/components/parameters/customerId'
      responses:
        '200':
          $ref: '#/components/responses/consent_Resp'
        '401':
          description: Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Missing scope - the v3 Auth token is valid but does not have proper permissions to access this endpoint.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Invalid JSON request body - missing or invalid data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Updates the status of a customer's consent to allow data collection by cookies and scripts while shopping on a storefront.
      summary: Update Customer Consent
      tags:
        - Customer Consent
      operationId: CustomersConsentByCustomerId_PUT
      deprecated: false
      parameters:
        - name: Content-Type
          in: header
          required: false
          description: ''
          schema:
            type: string
            default: application/json
        - $ref: '#/components/parameters/customerId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeclareCustomerConsentRequest'
        x-examples:
          application/json:
            allow:
              - essential
            deny: []
      responses:
        '200':
          $ref: '#/components/responses/consent_Resp'
        '401':
          description: Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Missing scope - the v3 Auth token is valid but does not have proper permissions to access this endpoint.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Invalid JSON request body - missing or invalid data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    parameters:
      - schema:
          type: string
        name: customerId
        in: path
        required: true
  '/customers/{customerId}/stored-instruments':
    get:
      summary: Get Stored Instruments
      tags:
        - Customer Stored Instruments
      description: |-
        Lists all available stored instruments for a customer. This list will include all types of stored instruments namely card, account and bank_account instruments

      operationId: liststoredinstruments
      parameters:
        - $ref: '#/components/parameters/customerId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/CardInstrument'
                    - $ref: '#/components/schemas/PayPalAccountInstrument'
                    - $ref: '#/components/schemas/BankAccountInstrument'
                  discriminator:
                    propertyName: type
                    mapping:
                      stored_card: '#/components/schemas/CardInstrument'
                      stored_paypal_account: '#/components/schemas/PaypalAccountInstrument'
                      stored_bank_account: '#/components/schemas/BankAccountInstrument'
              examples:
                example-1:
                  value:
                    - type: stored_card
                      token: 84596bea275fa254da820056bdc3e495bdf01fd11c51b0336347d447ee16200c
                      is_default: true
                      brand: VISA
                      expiry_month: 1
                      expiry_year: 0
                      issuer_identification_number: '411111'
                      last_4: '1111'
                      billing_address:
                        first_name: Tester
                        last_name: Tester
                        email: example@email.com
                        company: Test Company
                        address1: 1 Sample Street
                        address2: Apt 1
                        city: Las Vegas
                        postal_code: '90854'
                        state_or_province: Nevada
                        state_or_province_code: NV
                        country_code: US
                        phone: 101-192-0293
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 401
                message: Unauthorized
        '403':
          description: Missing scope - the v3 Auth token is valid but does not have proper permissions to access this endpoint.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 403
                message: Missing scope
    parameters:
      - schema:
          type: string
        name: customerId
        in: path
        required: true
components:
  parameters:
    customerId:
      name: customerId
      in: path
      required: true
      description: ''
      schema:
        type: string
  responses:
    CustomerCollectionResponse:
      description: Customer Collection Response
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/customer_Full'
              meta:
                $ref: '#/components/schemas/_metaCollection'
          examples:
            example-1:
              value:
                data:
                  - email: string@example.com
                    first_name: string
                    last_name: string
                    company: string
                    phone: string
                    notes: string
                    tax_exempt_category: string
                    customer_group_id: 0
                    addresses: 
                      - first_name: string
                        last_name: string
                        address1: Addr1
                        address2: ''
                        city: string
                        state_or_province: string
                        postal_code: string
                        country_code: st
                        phone: string
                        address_type: residential
                        customer_id: 0
                        id: 0
                        country: string 
                    store_credit_amounts:
                      - amount: 43.15
                    accepts_product_review_abandoned_cart_emails: true
                    channel_ids:
                      - 1
                    shopper_profile_id: "82511e54-4040-40fe-b742-2b25655f205b"
                    segment_ids: ["5bb733a9-5491-47b3-9451-9ae8d6a6bc6b"]
                meta:
                  pagination:
                    total: 0
                    count: 0
                    per_page: 0
                    current_page: 0
                    total_pages: 0
                    links:
                      previous: string
                      current: string
                      next: string
    AddressCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            title: AddressCollectionResponse
            description: Response payload for the BigCommerce API.
            type: object
            properties:
              data:
                type: array
                items:
                  title: Address
                  type: object
                  properties:
                    address1:
                      description: The address 1 line.
                      type: string
                    address2:
                      description: The address 2 line.
                      type: string
                    address_type:
                      title: Address Type
                      description: The address type. Residential or Commercial.
                      example: residential
                      type: string
                      enum:
                        - residential
                        - commercial
                    city:
                      description: The city of the customer address.
                      type: string
                      minLength: 0
                      maxLength: 100
                    company:
                      description: The company of the customer address.
                      type: string
                      minLength: 0
                      maxLength: 255
                    country:
                      description: The country name of the customer address.
                      type: string
                    country_code:
                      description: The country code of the customer address.
                      type: string
                      minLength: 2
                      maxLength: 2
                    customer_id:
                      description: The customer ID.
                      type: integer
                      format: int32
                    first_name:
                      description: The first name of the customer address.
                      type: string
                      minLength: 1
                      maxLength: 255
                    id:
                      description: The unique numeric ID of the address.
                      type: integer
                      format: int32
                    last_name:
                      description: The last name of the customer address.
                      type: string
                      minLength: 1
                      maxLength: 255
                    phone:
                      description: The phone number of the customer address.
                      type: string
                      minLength: 0
                      maxLength: 50
                    postal_code:
                      description: The postal code of the customer address.
                      type: string
                      minLength: 0
                      maxLength: 30
                    state_or_province:
                      description: The state or province name
                      type: string
                      minLength: 0
                      maxLength: 100
                    form_fields:
                      description: Array of form fields. Controlled by `formfields` parameter.
                      type: array
                      items:
                        allOf:
                          - $ref: "#/components/schemas/formFieldValue_Address"
                        title: 'Customer Address Form Field Value'
                  required:
                    - address1
                    - city
                    - country_code
                    - customer_id
                    - first_name
                    - id
                    - last_name
                    - postal_code
                    - state_or_province
              meta:
                $ref: '#/components/schemas/_metaCollection'
          examples:
            response:
              value:
                data:
                  - address1: 123 Example Street
                    address2: Building 4
                    address_type: residential
                    city: Austin
                    company: BigCommerce
                    country: United States
                    country_code: US
                    customer_id: 1
                    first_name: John
                    id: 18
                    last_name: Doe
                    phone: '15551234567'
                    postal_code: '78759'
                    state_or_province: Texas
                meta:
                  pagination:
                    total: 1
                    count: 1
                    per_page: 50
                    current_page: 1
                    total_pages: 1
    AddressCollectionResponsePostPut:
      description: ''
      content:
        application/json:
          schema:
            anyOf:
              - title: AddressCollectionResponse
                description: Response payload for the BigCommerce API.
                example:
                  data:
                    - address1: 123 Example Street
                      address2: Building 4
                      address_type: residential
                      city: Austin
                      company: BigCommerce
                      country: United States
                      country_code: US
                      customer_id: 1
                      first_name: John
                      id: 18
                      last_name: Doe
                      phone: '15551234567'
                      postal_code: '78759'
                      state_or_province: Texas
                  meta: {}
                properties:
                  data:
                    type: array
                    items:
                      title: Address
                      type: object
                      properties:
                        address1:
                          description: The address 1 line.
                          type: string
                        address2:
                          description: The address 2 line.
                          type: string
                        address_type:
                          title: Address Type
                          description: The address type. Residential or Commercial.
                          example: residential
                          type: string
                          enum:
                            - residential
                            - commercial
                        city:
                          description: The city of the customer address.
                          type: string
                          minLength: 0
                          maxLength: 100
                        company:
                          description: The company of the customer address.
                          type: string
                          minLength: 0
                          maxLength: 255
                        country:
                          description: The country name of the customer address.
                          type: string
                        country_code:
                          description: The country code of the customer address.
                          type: string
                          minLength: 2
                          maxLength: 2
                        customer_id:
                          description: The customer ID.
                          type: integer
                          format: int32
                        first_name:
                          description: The first name of the customer address.
                          type: string
                          minLength: 1
                          maxLength: 255
                        id:
                          description: The unique numeric ID of the address.
                          type: integer
                          format: int32
                        last_name:
                          description: The last name of the customer address.
                          type: string
                          minLength: 1
                          maxLength: 255
                        phone:
                          description: The phone number of the customer address.
                          type: string
                          minLength: 0
                          maxLength: 50
                        postal_code:
                          description: The postal code of the customer address.
                          type: string
                          minLength: 0
                          maxLength: 30
                        state_or_province:
                          description: The state or province name
                          type: string
                          minLength: 0
                          maxLength: 100
                        form_fields:
                          description: Array of form fields. Controlled by `formfields` parameter.
                          type: array
                          items:
                            $ref: '#/components/schemas/formFieldValue_Full'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
              - title: DuplicateAddressCollectionResponse
                example: {}
            type: object
            properties:
              data:
                type: array
                items:
                  title: Address
                  type: object
                  properties:
                    address1:
                      description: The address 1 line.
                      type: string
                    address2:
                      description: The address 2 line.
                      type: string
                    address_type:
                      title: Address Type
                      description: The address type. Residential or Commercial
                      example: residential
                      type: string
                      enum:
                        - residential
                        - commercial
                    city:
                      description: The city of the customer address.
                      type: string
                      minLength: 0
                      maxLength: 100
                    company:
                      description: The company of the customer address.
                      type: string
                      minLength: 0
                      maxLength: 255
                    country:
                      description: The country name of the customer address.
                      type: string
                    country_code:
                      description: The country code of the customer address.
                      type: string
                      minLength: 2
                      maxLength: 2
                    customer_id:
                      description: The customer ID.
                      type: integer
                      format: int32
                    first_name:
                      description: The first name of the customer address.
                      type: string
                      minLength: 1
                      maxLength: 255
                    id:
                      description: The unique numeric ID of the address.
                      type: integer
                      format: int32
                    last_name:
                      description: The last name of the customer address.
                      type: string
                      minLength: 1
                      maxLength: 255
                    phone:
                      description: The phone number of the customer address.
                      type: string
                      minLength: 0
                      maxLength: 50
                    postal_code:
                      description: The postal code of the customer address.
                      type: string
                      minLength: 0
                      maxLength: 30
                    state_or_province:
                      description: The state or province name.
                      type: string
                      minLength: 0
                      maxLength: 100
                    form_fields:
                      description: Array of form fields. Controlled by `formfields` parameter.
                      type: array
                      items:
                        allOf:
                          - $ref: "#/components/schemas/formFieldValue_Address"
                        title: 'Customer Address Form Field Value'
              meta:
                $ref: '#/components/schemas/MetaOpen'
          examples:
            application/json:
              value:
                address1: 123 Example Street
                address2: Building 4
                address_type: residential
                city: Austin
                company: BigCommerce
                country: United States
                country_code: US
                customer_id: 1
                first_name: John
                id: 18
                last_name: Doe
                phone: '15551234567'
                postal_code: '78759'
                state_or_province: Texas
                meta: {}
            duplicate:
              value: {}
    CustomerAttributeValueCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            title: CustomerAttributeValueCollectionResponse
            description: Response payload for the BigCommerce API.
            type: object
            properties:
              data:
                type: array
                items:
                  title: Customer Attribute Value
                  type: object
                  properties:
                    attribute_id:
                      description: Attribute ID.
                      type: integer
                      format: int32
                    attribute_value:
                      description: |-
                        Attribute value. This will always be a string, regardless of the attributes type. 

                        Corresponds to `value` used in customer attribute values `PUT` requests.
                      type: string
                      minLength: 0
                      maxLength: 255
                    id:
                      description: Attribute value ID.
                      type: integer
                      format: int32
                    customer_id:
                      description: Customer ID.
                      type: integer
                      format: int32
                    date_modified:
                      description: The date on which the customer attribute value was modified.
                      type: string
                      format: date-time
                    date_created:
                      description: The date of which the customer attribute value was created.
                      type: string
                      format: date-time
                  required:
                    - attribute_id
                    - attribute_value
                    - customer_id
              meta:
                title: Collection Meta
                description: 'Data about the response, including pagination and collection totals.'
                type: object
                properties:
                  pagination:
                    title: Pagination
                    description: 'Data about the response, including pagination and collection totals.'
                    type: object
                    properties:
                      total:
                        description: Total number of items in the result set.
                        type: integer
                        format: int32
                      count:
                        description: Total number of items in the collection response.
                        type: integer
                        format: int32
                      per_page:
                        description: 'The amount of items returned in the collection per page, controlled by the limit parameter.'
                        type: integer
                        format: int32
                      current_page:
                        description: The page you are currently on within the collection.
                        type: integer
                        format: int32
                      total_pages:
                        description: The total number of pages in the collection.
                        type: integer
                        format: int32
                      links:
                        title: Links
                        description: Pagination links for the previous and next parts of the whole collection.
                        type: object
                        properties:
                          previous:
                            description: Link to the previous page returned in the response.
                            type: string
                          current:
                            description: Link to the current page returned in the response.
                            type: string
                          next:
                            description: Link to the next page returned in the response.
                            type: string
    CustomerAttributesResponse:
      description: ''
      content:
        application/json:
          schema:
            title: CustomerAttributesResponse
            description: Response payload for the BigCommerce API.
            type: object
            properties:
              data:
                type: array
                items:
                  title: Customer Attribute
                  type: object
                  properties:
                    name:
                      description: Attribute name.
                      type: string
                      minLength: 1
                      maxLength: 255
                    type:
                      title: Type
                      description: 'Attribute type should match one of: string, number, date.'
                      example: string
                      type: string
                      enum:
                        - string
                        - number
                        - date
                    id:
                      description: Attribute ID.
                      type: integer
                      format: int32
                    date_modified:
                      description: The date on which the customer attribute was modified.
                      type: string
                      format: date-time
                    date_created:
                      description: The date of which the customer attribute was created.
                      type: string
                      format: date-time
                  required:
                    - name
                    - type
                    - id
              meta:
                $ref: '#/components/schemas/MetaOpen'
          examples:
            response:
              value:
                data:
                  - id: 1
                    name: Age
                    type: string
                    date_created: '2018-11-13T21:42:06Z'
                    date_modified: '2018-11-14T16:46:23Z'
                meta: {}
    FormFieldValueCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  oneOf:
                    - allOf:
                        - type: object
                          title: Form Field Value Base
                          required:
                            - name
                            - value
                          properties:
                            name:
                              type: string
                              description: The form field name.
                              example: color
                            value:
                              oneOf:
                                - type: string
                                  example: blue
                                - type: number
                                  format: double
                                  example: 12.345
                                - type: array
                                  example:
                                    - red
                                    - green
                                    - black
                                  items:
                                    type: string
                        - type: object
                          properties:
                            customer_id:
                              type: integer
                          required:
                            - customer_id
                      title: Customer Form Field Value
                    - allOf:
                        - type: object
                          title: Form Field Value Base
                          required:
                            - name
                            - value
                          properties:
                            name:
                              type: string
                              description: The form field name.
                              example: color
                            value:
                              oneOf:
                                - type: string
                                  example: blue
                                - type: number
                                  format: double
                                  example: 12.345
                                - type: array
                                  example:
                                    - red
                                    - green
                                    - black
                                  items:
                                    type: string
                        - type: object
                          properties:
                            address_id:
                              type: integer
                              description: The Customer Address ID.
                          required:
                            - address_id
                      title: Customer Address Form Field Value
                  title: 'Form Field Value '
              meta:
                title: Collection Meta
                description: 'Data about the response, including pagination and collection totals.'
                type: object
                properties:
                  pagination:
                    title: Pagination
                    description: 'Data about the response, including pagination and collection totals.'
                    type: object
                    properties:
                      total:
                        description: Total number of items in the result set.
                        type: integer
                        format: int32
                      count:
                        description: Total number of items in the collection response.
                        type: integer
                        format: int32
                      per_page:
                        description: 'The amount of items returned in the collection per page, controlled by the limit parameter.'
                        type: integer
                        format: int32
                      current_page:
                        description: The page you are currently on within the collection.
                        type: integer
                        format: int32
                      total_pages:
                        description: The total number of pages in the collection.
                        type: integer
                        format: int32
                      links:
                        title: Links
                        description: Pagination links for the previous and next parts of the whole collection.
                        type: object
                        properties:
                          previous:
                            description: Link to the previous page returned in the response.
                            type: string
                          current:
                            description: Link to the current page returned in the response.
                            type: string
                          next:
                            description: Link to the next page returned in the response.
                            type: string
          examples:
            Customer and Customer Address Form Fields example:
              value:
                data:
                  - customer_id: 11
                    name: Sales Rep
                    value: James Bond
                  - customer_id: 11
                    name: How did you hear about us?
                    value: Friend
                  - customer_id: 11
                    name: What is your favorite pizza topping?
                    value: Black olives
                  - customer_id: 12
                    name: Sales Rep
                    value: None
                  - customer_id: 12
                    name: How did you hear about us?
                    value: Friend
                  - customer_id: 12
                    name: What is your favorite pizza topping?
                    value: Mushrooms
                  - customer_id: 13
                    name: Sales Rep
                    value: Felix Leiter
                  - customer_id: 13
                    name: How did you hear about us?
                    value: Email
                  - customer_id: 13
                    name: What is your favorite pizza topping?
                    value: Green pepper
                  - customer_id: 13
                    name: Occupation
                    value: Housekeeper
                  - address_id: 12
                    name: Special Delivery Instructions
                    value: Leave the package at the front door
                  - customer_id: 14
                    name: Sales Rep
                    value: General Gogol
                  - customer_id: 14
                    name: How did you hear about us?
                    value: Friend
                  - customer_id: 14
                    name: What is your favorite pizza topping?
                    value: Extra cheese
                  - address_id: 13
                    name: Special Delivery Instructions
                    value: Put the package in the mailbox
                meta:
                  pagination:
                    count: 15
                    current_page: 1
                    per_page: 50
                    total: 15
                    total_pages: 1
            Customer Form Fields example:
              value:
                data:
                  - customer_id: 11
                    name: Sales Rep
                    value: James Bond
                  - customer_id: 11
                    name: How did you hear about us?
                    value: Friend
                  - customer_id: 11
                    name: What is your favorite pizza topping?
                    value: Black olives
                meta:
                  pagination:
                    count: 3
                    current_page: 1
                    per_page: 50
                    total: 3
                    total_pages: 1
            Customer Address Form Fields example:
              value:
                data:
                  - address_id: 12
                    name: Special Delivery Instructions
                    value: Leave the package at the front door
                meta:
                  pagination:
                    count: 1
                    current_page: 1
                    per_page: 50
                    total: 1
                    total_pages: 1
    FormFieldValuesResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  oneOf:
                    - allOf:
                        - type: object
                          title: Form Field Value Base
                          required:
                            - name
                            - value
                          properties:
                            name:
                              type: string
                              description: The form field name.
                              example: color
                            value:
                              oneOf:
                                - type: string
                                  example: blue
                                - type: number
                                  format: double
                                  example: 12.345
                                - type: array
                                  example:
                                    - red
                                    - green
                                    - black
                                  items:
                                    type: string
                        - type: object
                          properties:
                            customer_id:
                              type: integer
                          required:
                            - customer_id
                      title: Customer Form Field Value
                    - allOf:
                        - type: object
                          title: Form Field Value Base
                          required:
                            - name
                            - value
                          properties:
                            name:
                              type: string
                              description: The form field name.
                              example: color
                            value:
                              oneOf:
                                - type: string
                                  example: blue
                                - type: number
                                  format: double
                                  example: 12.345
                                - type: array
                                  example:
                                    - red
                                    - green
                                    - black
                                  items:
                                    type: string
                        - type: object
                          properties:
                            address_id:
                              type: integer
                              description: The Customer Address ID.
                          required:
                            - address_id
                      title: Customer Address Form Field Value
                  title: Form Field Value
              meta:
                $ref: '#/components/schemas/MetaOpen'
          examples:
            response:
              value:
                data:
                  - customer_id: 12
                    name: Sales Rep
                    value: Miss Moneypenny
                  - customer_id: 12
                    name: How did you hear about us?
                    value: Other
                  - customer_id: 12
                    name: What is your favorite pizza topping?
                    value: Mushrooms
                meta: {}
    consent_Resp:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/consent_Full'
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        | Customers | modify | `store_v2_customers` |
        | Customers | read-only | `store_v2_customers_read_only` |
        | Stored Payment Instruments | modify | `store_stored_payment_instruments` |
        | Stored Payment Instruments | read-only | `store_stored_payment_instruments_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header
  schemas:
    Pagination:
      title: Pagination
      description: 'Data about the response, including pagination and collection totals.'
      type: object
      properties:
        total:
          description: Total number of items in the result set.
          type: integer
          format: int32
        count:
          description: Total number of items in the collection response.
          type: integer
          format: int32
        per_page:
          description: 'The amount of items returned in the collection per page, controlled by the limit parameter.'
          type: integer
          format: int32
        current_page:
          description: The page you are currently on within the collection.
          type: integer
          format: int32
        total_pages:
          description: The total number of pages in the collection.
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/Links'
      x-internal: false
    _metaCollection:
      title: _metaCollection
      description: 'Data about the response, including pagination and collection totals.'
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
      x-internal: false
    MetaOpen:
      title: Response meta
      type: object
      properties: {}
      additionalProperties: true
      description: Response metadata.
    ErrorResponse:
      title: Error Response
      type: object
      properties:
        status:
          description: The HTTP status code.
          type: integer
          format: int32
        title:
          description: The error title describing the particular error.
          type: string
        type:
          description: A link to a list of BigCommerce API status codes.
          type: string
        instance:
          type: string
        errors:
          type: object
          additionalProperties:
            type: string
      x-internal: false
    customer_Full:
      title: customer_Full
      type: object
      properties:
        email:
          description: The email of the customer. Must be unique.
          type: string
          minLength: 3
          maxLength: 255
        first_name:
          description: The first name of the customer.
          type: string
          minLength: 1
          maxLength: 100
        last_name:
          description: The last name of the customer.
          type: string
          minLength: 1
          maxLength: 100
        company:
          description: The company of the customer.
          type: string
          minLength: 0
          maxLength: 255
        phone:
          description: The phone number of the customer.
          type: string
          minLength: 0
          maxLength: 50
        registration_ip_address:
          description: The IP address from which this customer was registered.
          type: string
          minLength: 0
          maxLength: 30
        notes:
          description: The customer notes.
          type: string
        tax_exempt_category:
          description: The tax exempt category code for the customer.
          type: string
          minLength: 0
          maxLength: 255
        customer_group_id:
          description: ID of the group which this customer belongs to.
          type: integer
          format: int32
        id:
          description: The unique numeric ID of the customer.
          type: integer
          format: int32
        date_modified:
          description: The date on which the customer was modified.
          type: string
          format: date-time
        date_created:
          description: The date of which the customer was created.
          type: string
          format: date-time
        address_count:
          description: Total number of customer addresses.
          type: integer
          format: int32
        attribute_count:
          description: Total number of customer attributes.
          type: integer
          format: int32
        authentication:
          title: Customer Authentication Base
          example:
            force_password_reset: true
          type: object
          properties:
            force_password_reset:
              description: 'If `true`, this customer will be forced to change password on next login.'
              type: boolean
        addresses:
          description: Array of customer addresses. Limited to 10.
          type: array
          maxItems: 10
          items:
            $ref: '#/components/schemas/address_Full'
        attributes:
          description: Array of customer attributes. Limited to 10.
          type: array
          maxItems: 10
          items:
            $ref: '#/components/schemas/attribute_Full'
        form_fields:
          description: Array of form fields. Controlled by `formfields` parameter.
          type: array
          items:
            $ref: '#/components/schemas/formFieldValue_Customer'
        store_credit_amounts:
          $ref: '#/components/schemas/CustomerStoredCreditAmounts'
        accepts_product_review_abandoned_cart_emails:
          type: boolean
          description: Determines if the customer is signed up to receive either product review or abandoned cart emails or receive both emails.
        origin_channel_id: 
          type: integer
          description: Channel ID of the customer that has created the form.
        channel_ids:
          $ref: '#/components/schemas/customerChannelIds'
      x-internal: false
    customer_Post:
      title: customer_Post
      type: object
      properties:
        email:
          description: The email of the customer. Must be unique.
          type: string
          minLength: 3
          maxLength: 255
        first_name:
          description: The first name of the customer.
          type: string
          minLength: 1
          maxLength: 100
        last_name:
          description: The last name of the customer.
          type: string
          minLength: 1
          maxLength: 100
        company:
          description: The company of the customer.
          type: string
          minLength: 0
          maxLength: 255
        phone:
          description: The phone number of the customer.
          type: string
          minLength: 0
          maxLength: 50
        notes:
          description: The customer notes.
          type: string
        tax_exempt_category:
          description: The tax exempt category code for the customer.
          type: string
          minLength: 0
          maxLength: 255
        customer_group_id:
          description: ID of the group which this customer belongs to.
          type: integer
          format: int32
        addresses:
          description: Array of customer addresses. Limited to 10.
          type: array
          maxItems: 10
          items:
            $ref: '#/components/schemas/customerAddresses_CustomerPost'
        attributes:
          description: Array of customer attributes. Limited to 10.
          type: array
          maxItems: 10
          items:
            $ref: '#/components/schemas/customerAttributes_Base'
        authentication:
          $ref: '#/components/schemas/customerAuthentication_PostPut'
        accepts_product_review_abandoned_cart_emails:
          type: boolean
          description: It determines if the customer is signed up to receive either product review or abandoned cart emails or receive both emails.
        store_credit_amounts:
          $ref: '#/components/schemas/CustomerStoredCreditAmounts'
        origin_channel_id: 
          type: integer
          description: Channel ID of the customer that has created the form.
        channel_ids:
          description: Array of channels the customer can access.
          type: array
          example: [1,2]
          items:
            type: integer
        form_fields:
          type: array
          description: |
            Array of form fields. Controlled by formfields parameter.
          items:
            $ref: "#/components/schemas/formFieldValue"    
      required:
        - email
        - first_name
        - last_name
      x-internal: false
    customer_Put:
      title: customer_Put
      type: object
      properties:
        email:
          description: The email of the customer. Must be unique.
          type: string
          minLength: 3
          maxLength: 255
        first_name:
          description: The first name of the customer.
          type: string
          minLength: 1
          maxLength: 100
        last_name:
          description: The last name of the customer.
          type: string
          minLength: 1
          maxLength: 100
        company:
          description: The company of the customer.
          type: string
          minLength: 0
          maxLength: 255
        phone:
          description: The phone number of the customer.
          type: string
          minLength: 0
          maxLength: 50
        registration_ip_address:
          description: The IP address from which this customer was registered.
          type: string
          minLength: 0
          maxLength: 30
        notes:
          description: The customer notes.
          type: string
        tax_exempt_category:
          description: The tax exempt category code for the customer.
          type: string
          minLength: 0
          maxLength: 255
        customer_group_id:
          description: ID of the group which this customer belongs to.
          type: integer
          format: int32
        id:
          description: The unique numeric ID of the customer.
          type: integer
          format: int32
        authentication:
          $ref: '#/components/schemas/customerAuthentication_PostPut'
        accepts_product_review_abandoned_cart_emails:
          type: boolean
          description: It determines if the customer is signed up to receive either product review or abandoned cart emails or receive both emails.
        store_credit_amounts:
          $ref: '#/components/schemas/CustomerStoredCreditAmounts'
        origin_channel_id: 
          type: integer
          description: Channel ID of the customer that has created the form.
        channel_ids:
          description: Arrays of channels the customer can access.
          type: array
          items:
            type: integer
        form_fields:
          type: array
          description: |
            Array of form fields. Controlled by formfields parameter.
          items:
            $ref: "#/components/schemas/formFieldValue"    
      required:
        - id
      x-internal: false
    attributeValue_Base:
      title: attributeValue_Base
      type: object
      properties:
        id:
          description: Attribute value ID.
          type: integer
          format: int32
        attribute_id:
          description: Attribute ID.
          type: integer
          format: int32
        value:
          description: |-
            Attribute value. This will always be a string, regardless of the attribute's type. 

            Corresponds to `attribute_value` used in customer attribute values `GET` requests.
          type: string
          minLength: 0
          maxLength: 255
          example: string
        customer_id:
          type: integer
          description: Customer ID.
          format: int32
          example: 8504
      required:
        - attribute_id
        - value
        - customer_id
      x-internal: false
    attribute_Full:
      description: ''
      type: object
      x-examples:
        Example:
          attribute_id: 2
          attribute_value: 'Yes'
          customer_id: 1
          date_created: '2021-07-28T19:00:38Z'
          date_modified: '2021-07-28T19:00:38Z'
          id: 2
      properties:
        attribute_id:
          type: integer
          description: Attribute ID.
          format: int32
          example: 2
        attribute_value:
          type: string
          minLength: 1
          description: Attribute value.
          example: 'Yes'
        customer_id:
          type: integer
          description: Customer ID.
          example: 1
          format: int32
        date_created:
          type: string
          minLength: 1
          description: The date the customer attribute was created.
          format: date-time
        date_modified:
          type: string
          minLength: 1
          description: The date the customer attribute was modified.
          format: date-time
        id:
          type: integer
          description: Attribute value ID.
          format: int32
          example: 2
      x-internal: false
    attribute_Put:
      title: attribute_Put
      type: object
      properties:
        name:
          description: Attribute name.
          type: string
          minLength: 1
          maxLength: 255
        id:
          description: Attribute ID.
          type: integer
          format: int32
      required:
        - name
        - id
      description: 'Once the data type is set, it can not be changed. The attribute will need to be deleted then created again with the new data type. This will also delete it from the customer.'
      x-internal: false
    attribute_Post:
      title: attribute_Post
      example:
        name: attribute_string 01
        type: string
      type: object
      properties:
        name:
          description: Attribute name.
          type: string
          minLength: 1
          maxLength: 255
        type:
          title: Type
          description: 'Attribute type should match one of: string, number, date.'
          example: string
          type: string
          enum:
            - string
            - number
            - date
      required:
        - name
        - type
      x-internal: false
    address_Full:
      title: address_Full
      type: object
      properties:
        first_name:
          description: The first name of the customer address.
          type: string
          minLength: 1
          maxLength: 255
        last_name:
          description: The last name of the customer address.
          type: string
          minLength: 1
          maxLength: 255
        company:
          description: The company of the customer address.
          type: string
          minLength: 0
          maxLength: 255
        address1:
          description: The address 1 line.
          type: string
        address2:
          description: The address 2 line.
          type: string
        city:
          description: The city of the customer address.
          type: string
          minLength: 0
          maxLength: 100
        state_or_province:
          description: The state or province name.
          type: string
          minLength: 0
          maxLength: 100
        postal_code:
          description: The postal code of the customer address.
          type: string
          minLength: 0
          maxLength: 30
        country_code:
          description: The country code of the customer address.
          type: string
          minLength: 2
          maxLength: 2
        phone:
          description: The phone number of the customer address.
          type: string
          minLength: 0
          maxLength: 50
        address_type:
          title: Address Type
          description: The address type. Residential or Commercial.
          example: residential
          type: string
          enum:
            - residential
            - commercial
        customer_id:
          description: The customer ID.
          type: integer
          format: int32
        id:
          description: The unique numeric ID of the address.
          type: integer
          format: int32
        country:
          description: The country name of the customer address.
          type: string
        form_fields:
                description: Array of form fields. Controlled by `formfields` parameter.
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/formFieldValue"
                  title: 'Customer Address Form Field Value'
      required:
        - first_name
        - last_name
        - address1
        - city
        - state_or_province
        - postal_code
        - country_code
        - customer_id
        - id
      x-internal: false
    address_Put:
      title: address_Put
      type: object
      properties:
        first_name:
          description: The first name of the customer address.
          type: string
          minLength: 1
          maxLength: 255
        last_name:
          description: The last name of the customer address.
          type: string
          minLength: 1
          maxLength: 255
        company:
          description: The company of the customer address.
          type: string
          minLength: 0
          maxLength: 255
        address1:
          description: The address 1 line.
          type: string
        address2:
          description: The address 2 line.
          type: string
        city:
          description: The city of the customer address.
          type: string
          minLength: 0
          maxLength: 100
        state_or_province:
          description: The state or province name.
          type: string
          minLength: 0
          maxLength: 100
          example: California
        postal_code:
          description: The postal code of the customer address.
          type: string
          minLength: 0
          maxLength: 30
        country_code:
          description: The country code of the customer address.
          type: string
          minLength: 2
          maxLength: 2
          example: US
        phone:
          description: The phone number of the customer address.
          type: string
          minLength: 0
          maxLength: 50
        address_type:
          title: Address Type
          description: The address type. Residential or Commercial.
          example: residential
          type: string
          enum:
            - residential
            - commercial
        id:
          description: The unique numeric ID of the address.
          type: integer
          format: int32
          example: 1
        form_fields:
          type: array
          description: |
            Array of form fields. Controlled by formfields parameter.
          items:
            $ref: "#/components/schemas/formFieldValue"  
      required:
        - id
      x-examples:
        example-1:
          value:
            - id: 18
              first_name: sam
      x-internal: false
    address_Post:
      title: address_Post
      type: object
      properties:
        first_name:
          type: string
          description: The first name of the customer address.
          minLength: 1
          maxLength: 255
          example: John
        last_name:
          type: string
          description: The last name of the customer address.
          minLength: 1
          maxLength: 255
          example: Doe
        company:
          type: string
          description: The company of the customer address.
          minLength: 0
          maxLength: 255
          example: BigCommerce
        address1:
          type: string
          description: The address 1 line.
          example: 123 Example Street
        address2:
          type: string
          description: The address 2 line.
          example: Building 4
        city:
          type: string
          description: The city of the customer address.
          minLength: 0
          maxLength: 100
          example: Austin
        state_or_province:
          type: string
          description: The state or province name spelled out in full. It is required for countries that need a state/province to complete an address. State or province codes not accepted.
          example: Texas
          minLength: 0
          maxLength: 100
        postal_code:
          type: string
          description: The postal code of the customer address. It is required for countries that need postal codes to complete an address.
          minLength: 0
          maxLength: 30
          example: '78759'
        country_code:
          type: string
          description: The country code of the customer address.
          example: US
          minLength: 2
          maxLength: 2
        phone:
          type: string
          description: The phone number of the customer address.
          minLength: 0
          maxLength: 50
          example: '15551234567'
        address_type:
          title: Address Type
          description: The address type. Residential or Commercial.
          example: residential
          type: string
          enum:
            - residential
            - commercial
        customer_id:
          description: The customer ID.
          type: integer
          format: int32
          example: 1
        form_fields:
          type: array
          description: |
            The address custom form field values
          items:
            $ref: "#/components/schemas/formFieldValue"
      required:
        - first_name
        - last_name
        - address1
        - city
        - country_code
        - customer_id
      x-examples:
        Example:
          value:
            first_name: John
            last_name: Doe
            company: BigCommerce
            address1: 123 Example Street
            address2: Building 4
            city: Austin
            state_or_province: Texas
            postal_code: '78759'
            country_code: US
            phone: '15551234567'
            address_type: residential
            customer_id: 1
      x-internal: false
    customerAddresses_Base:
      title: customerAddresses_Base
      example:
        address1: Addr 1
        address2: ''
        address_type: residential
        city: San Francisco
        company: History
        country_code: US
        first_name: Ronald
        last_name: Swimmer
        phone: '707070707'
        postal_code: '33333'
        state_or_province: California
      type: object
      properties:
        first_name:
          description: The first name of the customer address.
          type: string
          minLength: 1
          maxLength: 255
        last_name:
          description: The last name of the customer address.
          type: string
          minLength: 1
          maxLength: 255
        company:
          description: The company of the customer address.
          type: string
          minLength: 0
          maxLength: 255
        address1:
          description: The address 1 line.
          type: string
        address2:
          description: The address 2 line.
          type: string
        city:
          description: The city of the customer address.
          type: string
          minLength: 0
          maxLength: 100
        state_or_province:
          description: The state or province name. It is required for countries that need a state/province to complete an address.
          type: string
          minLength: 0
          maxLength: 100
        postal_code:
          description: The postal code of the customer address. It is required for countries that need postal codes to complete an address.
          type: string
          minLength: 0
          maxLength: 30
        country_code:
          description: The country code of the customer address.
          type: string
          minLength: 2
          maxLength: 2
        phone:
          description: The phone number of the customer address.
          type: string
          minLength: 0
          maxLength: 50
        address_type:
          title: Address Type
          description: The address type. Residential or Commercial.
          example: residential
          type: string
          enum:
            - residential
            - commercial
      required:
        - first_name
        - last_name
        - address1
        - city
        - country_code
      description: The `address` object for the `customer` object's `addresses` array.
      x-internal: false
    customerAddresses_CustomerPost:
      title: customerAddresses_CustomerPost
      example:
        address1: Addr 1
        address2: ''
        address_type: residential
        city: San Francisco
        company: History
        country_code: US
        first_name: Ronald
        last_name: Swimmer
        phone: '707070707'
        postal_code: '33333'
        state_or_province: California
        form_fields: 
          - name: "test"
            value: "test"
      type: object
      properties:
        first_name:
          description: The first name associated with the customer address.
          type: string
          minLength: 1
          maxLength: 255
        last_name:
          description: The last name of the customer address.
          type: string
          minLength: 1
          maxLength: 255
        company:
          description: The company of the customer address.
          type: string
          minLength: 0
          maxLength: 255
        address1:
          description: The address 1 line.
          type: string
        address2:
          description: The address 2 line.
          type: string
        city:
          description: The city of the customer address.
          type: string
          minLength: 0
          maxLength: 100
        state_or_province:
          description: The state or province name. Required for countries in which valid addresses must contain a state/province.
          type: string
          minLength: 0
          maxLength: 100
        postal_code:
          description: The postal code of the customer address. Required for countries in which valid addresses must have postal codes.
          type: string
          minLength: 0
          maxLength: 30
        country_code:
          description: The country code of the customer address.
          type: string
          minLength: 2
          maxLength: 2
        phone:
          description: The phone number of the customer address.
          type: string
          minLength: 0
          maxLength: 50
        address_type:
          title: Address Type
          description: The address type. Residential or Commercial.
          example: residential
          type: string
          enum:
            - residential
            - commercial
        form_fields:
          description: Array of form fields. Controlled by `formfields` parameter.
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/formFieldValue"
            title: 'Customer Address Form Field Value'    
      required:
        - first_name
        - last_name
        - address1
        - city
        - country_code
      description: The `address` object for the `customer` object's `addresses` array.
      x-internal: false  
    customerAuthentication_PostPut:
      title: customerAuthentication_PostPut
      allOf:
        - properties:
            force_password_reset:
              description: 'If `true`, this customer will be forced to change password on next login.'
              type: boolean
        - properties:
            new_password:
              description: New password for customer. Write only field.
              type: string
      type: object
      x-internal: false
    Links:
      title: Links
      description: Pagination links for the previous and next parts of the whole collection.
      type: object
      properties:
        previous:
          description: Link to the previous page returned in the response.
          type: string
        current:
          description: Link to the current page returned in the response.
          type: string
        next:
          description: Link to the next page returned in the response.
          type: string
    formFieldValue:
      title: Generic Form Field Value
      type: object
      required:
        - name
        - value
      properties:
        name:
          type: string
          description: The form field name.
          example: color
        value:
          oneOf:
            - type: string
              example: blue
            - type: number
              format: double
              example: 12.345
            - type: array
              example:
                - red
                - green
                - black
              items:
                type: string      
    formFieldValue_Customer:
      title: Customer Form Field Value
      type: object
      required:
        - customer_id
        - name
        - value
      properties:
        name:
          type: string
          description: The form field name.
          example: color
        value:
          oneOf:
            - type: string
              example: blue
            - type: number
              format: double
              example: 12.345
            - type: array
              example:
                - red
                - green
                - black
              items:
                type: string
        customer_id:
          type: integer      
    formFieldValue_Address:
      title: Customer Address Form Field Value
      type: object
      required:
        - address_id
        - name
        - value
      properties:
        name:
          type: string
          description: The form field name.
          example: color
        value:
          oneOf:
            - type: string
              example: blue
            - type: number
              format: double
              example: 12.345
            - type: array
              example:
                - red
                - green
                - black
              items:
                type: string
        address_id:
          type: integer
          description: The Customer Address ID.
          example: 1
      x-internal: false
    formFieldValue_Full:
      oneOf:
        - $ref: "#/components/schemas/formFieldValue_Customer"
        - $ref: "#/components/schemas/formFieldValue_Address"
      title: formFieldValue_Full
      x-internal: false
    consent_Full:
      title: consent_Full
      description: Response payload for the BigCommerce API.
      type: object
      properties:
        allow:
          $ref: '#/components/schemas/consentAllow'
        deny:
          $ref: '#/components/schemas/Deny'
        updated_at:
          description: The date of which the customer consent was last updated.
          type: string
          format: date-time
      x-internal: false
    consentAllow:
      title: consentAllow
      type: array
      uniqueItems: true
      minItems: 0
      example:
        - essential
        - targeting
        - functional
      items:
        type: string
        enum:
          - essential
          - functional
          - analytics
          - targeting
      x-internal: false
    Deny:
      title: Deny
      type: array
      uniqueItems: true
      minItems: 0
      example:
        - analytics
      items:
        type: string
        enum:
          - essential
          - functional
          - analytics
          - targeting
      x-internal: false
    DeclareCustomerConsentRequest:
      title: DeclareCustomerConsentRequest
      description: Request payload for the BigCommerce API.
      type: object
      properties:
        allow:
          $ref: '#/components/schemas/consentAllow'
        deny:
          $ref: '#/components/schemas/Deny'
      x-internal: false
    customerAttributes_Base:
      description: ''
      title: customerAttributes_Base
      type: object
      properties:
        attribute_id:
          type: integer
          format: int32
          example: 55
          description: Attribute ID.
        attribute_value:
          type: string
          example: string
          minLength: 0
          maxLength: 255
          description: 'Attribute value. This will always be a string, regardless of the attribute’s type.'
      x-internal: false
    customerChannelIds:
      type: array
      title: customerChannelIds
      description: Array of channel ids the Customer has access to.
      items:
        example:
          - 1
          - 2
      x-internal: false
    CardInstrument:
      type: object
      title: Card Instrument
      properties:
        type:
          type: string
          description: Type of instrument.
          enum:
            - stored_card
        token:
          type: string
          description: An identifier representing this stored instrument.
          example: 84596bea275fa254da820056bdc3e495bdf01fd11c51b0336347d447ee16200c
        is_default:
          type: boolean
          description: Identifies whether this stored instrument is default for the customer.
        brand:
          type: string
          description: Card brand.
          example: VISA
        expiry_month:
          maximum: 12
          minimum: 1
          type: integer
          description: Expiry month for this card.
        expiry_year:
          type: integer
          description: Expiry year for this card.
        issuer_identification_number:
          type: string
          description: Issuer identification number for this card.
          example: '411111'
        last_4:
          type: string
          description: Last four digits of this card.
          example: '1111'
        billing_address:
          $ref: '#/components/schemas/BillingAddress'
      description: 'Details about a stored card instrument which includes details around billing, last 4 digits, issuer, etc.'
      x-internal: false
    PayPalAccountInstrument:
      type: object
      title: PayPal Account Instrument
      properties:
        type:
          type: string
          description: Instrument type.
          enum:
            - stored_paypal_account
        token:
          type: string
          description: An identifier representing this stored instrument.
          example: 84596bea275fa254da820056bdc3e495bdf01fd11c51b0336347d447ee16200c
        is_default:
          type: boolean
          description: Identifies whether this stored instrument is default for the customer.
        email:
          type: string
          description: PayPal email address.
          example: bc-buyer-paypal-express@example.com
      description: A PayPal account stored instrument.
      x-internal: false
    BankAccountInstrument:
      type: object
      title: Bank Account Instrument
      properties:
        type:
          type: string
          description: Instrument type.
          enum:
            - stored_bank_account
        token:
          type: string
          description: An identifier representing this stored instrument.
          example: 84596bea275fa254da820056bdc3e495bdf01fd11c51b0336347d447ee16200c
        is_default:
          type: boolean
          description: Identifies whether this stored instrument is default for the customer.
        masked_account_number:
          type: string
          description: A masked bank account number.
          example: 12XXX56
        issuer:
          type: string
          description: Issuer identifier for the account.
          example: DE001
      description: A stored bank account instrument.
      x-internal: false
    BillingAddress:
      type: object
      properties:
        first_name:
          type: string
          description: First name of the card holder.
          example: Tester
        last_name:
          type: string
          description: Last name of the card holder.
          example: Tester
        email:
          type: string
          example: example@example.com
        company:
          type: string
          description: Company of the card holder.
          example: Test Company
        address1:
          type: string
          example: 1 Sample Street
        address2:
          type: string
          example: Apt 1
        city:
          type: string
          example: Las Vegas
        postal_code:
          type: string
          example: '90854'
        state_or_province:
          type: string
          description: Represents state or province.
          example: Nevada
        state_or_province_code:
          type: string
          example: NV
        country_code:
          type: string
          description: ISO-3166-1 2 letter country code.
          example: US
        phone:
          type: string
          example: 101-192-0293
      x-internal: false
    CustomerStoredCreditAmounts:
      description: 'Store credit. '
      type: array
      format: double
      items:
        type: object
        properties:
          amount:
            type: number
            format: float
            example: 43.15
      x-internal: false
    CustomerSettingsObject:
      title: CustomerSettingsObject
      type: object
      description: Customer Settings.
      properties:
        privacy_settings:
          type: object
          description: Controls the privacy settings.
          properties:
            ask_shopper_for_tracking_consent:
              type: boolean
              description: Determines if a customer requires consent for tracking privacy.
            policy_url:
              type: string
              example: 'https://bigcommmerce.com/policy'
              description: The URL for a website's privacy policy.
        customer_group_settings:
          type: object
          description: The settings for a collection of customers.
          properties:
            guest_customer_group_id:
              type: integer
              example: 0
              description: The ID for a guest customer group.
            default_customer_group_id:
              type: integer
              example: 0
              description: The ID for a default customer group.
      x-examples:
        example-1:
          value:
            privacy_settings:
              ask_shopper_for_tracking_consent: true
              policy_url: 'https://bigcommmerce.com/policy'
            customer_group_settings:
              guest_customer_group_id: 0
              default_customer_group_id: 0
      x-internal: false
    CustomerChannelSettingsObject:
      title: CustomerChannelSettingsObject
      type: object
      properties:
        privacy_settings:
          type: object
          description: Controls the privacy settings.
          properties:
            ask_shopper_for_tracking_consent:
              type: boolean
              description: Determines if a customer requires consent for tracking privacy.
            policy_url:
              type: string
              example: 'https://bigcommmerce.com/policy'
              description: The URL for a website's privacy policy.
        customer_group_settings:
          type: object
          description: The settings for a collection of customers.
          properties:
            guest_customer_group_id:
              type: integer
              example: 0
              description: The ID for a guest customer group.
            default_customer_group_id:
              type: integer
              example: 0
              description: The ID for a default customer group.
        allow_global_logins:
          type: boolean
          description: |-
            * Determines if a channel allows global customer to login
            * Determines if customers created on this channel will get global access/login
      x-examples:
        example-1:
          value:
            privacy_settings:
              ask_shopper_for_tracking_consent: true
              policy_url: 'https://bigcommmerce.com/policy'
            customer_group_settings:
              guest_customer_group_id: 0
              default_customer_group_id: 0
            allow_global_logins: true
      x-internal: false
    ValidateCustomerCredentialsObject:
      title: ValidateCustomerCredentialsObject
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          description: Customer email address.
        password:
          type: string
          description: Customer password.
        channel_id:
          type: integer
          description: ChannelId to check the customer credentials against - If this field is empty we will use channel 1.
      x-internal: false
    ValidateCustomerCredentialsResponseObject:
      title: ValidateCustomerCredentialsResponseObject
      type: object
      properties:
        customer_id:
          type: integer
          nullable: true
          description: Returns the customer ID.
        is_valid:
          type: boolean
          description: indicates if the provided credentials are valid.
      x-internal: false

openapi: '3.0.3'
info:
  title: Email Templates
  description: Manage Handlebars-based email templates globally and create channel-specific overrides.
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  version: '1.0.0'
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Email Templates
paths:
  '/marketing/email-templates':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      summary: Get Email Templates
      description: |-
        Get a list of email templates.

        > #### Note
        > The `/marketing/email-templates` endpoints only work after opting into the new email management experience from your storeʼs control panel. You can opt-in by visiting Email Templates. If you have already opted in, visiting the Email Templates page will return a `404` error, and you will be able to access the new Transactional Emails page.
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/EmailTemplatesCollection'
                  meta:
                    type: object
                    properties: {}
                    additionalProperties: true
                    description: Response metadata.
              examples:
                Example:
                  value:
                    data:
                      - type_id: account_reset_password_email
                        body: '<!DOCTYPE html> <html lang="en"> <head>     <meta charset="UTF-8">     <title>Title</title> </head> <body> <p>     {{lang "reset_password" name=store.name}} </p> <br/> <br/> <a href="{{account.reset_password_link}}">     {{account.reset_password_link}} </a>  </body> </html>'
                        translations:
                          - locale: en
                            keys:
                              reset_password: 'To change your customer account password at {{name}} please click this link or copy and paste it into your browser:'
                        subject: 'Reset your password at {{store.name}}'
                    meta: {}
          description: |
            An array of email templates on the store
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      operationId: getEmailTemplates
      tags:
        - Email Templates
  '/marketing/email-templates/{template-name}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - schema:
          type: string
        name: template-name
        in: path
        required: true
    get:
      summary: Get an Email Template
      description: |-
        Get a single global email template or a channel-specific email template override.

        > #### Note
        > The `/marketing/email-templates` endpoints only work after opting into the new email management experience from your storeʼs control panel. You can opt-in by visiting [Email Templates](https://login.bigcommerce.com/deep-links/manage/marketing/email-templates). If you have already opted in, visiting the [Email Templates](https://login.bigcommerce.com/deep-links/manage/marketing/email-templates) page will return a `404` error, and you will be able to access the new [Transactional Emails](https://login.bigcommerce.com/deep-links/manage/transactional-emails) page.
      tags:
        - Email Templates
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/EmailTemplate'
                  meta:
                    type: object
                    properties: {}
                    additionalProperties: true
                    description: Response metadata.
              examples:
                Example:
                  value:
                    data:
                      type_id: account_reset_password_email
                      body: '<!DOCTYPE html> <html lang="en"> <head>     <meta charset="UTF-8">     <title>Title</title> </head> <body> <p>     {{lang "reset_password" name=store.name}} </p> <br/> <br/> <a href="{{account.reset_password_link}}">     {{account.reset_password_link}} </a>  </body> </html>'
                      translations:
                        - locale: en
                          keys:
                            reset_password: 'To change your customer account password at {{name}} please click this link or copy and paste it into your browser:'
                      subject: 'Reset your password at {{store.name}}'
                    meta: {}
      operationId: getEmailTemplate
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
    put:
      summary: Update a Template
      description: Update a global template or create a channel-specific email template override.
      tags:
        - Email Templates
      operationId: updateEmailTemplate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/EmailTemplate'
                  meta:
                    type: object
                    properties: {}
                    additionalProperties: true
                    description: Response metadata.
              examples:
                Example:
                  value:
                    data:
                      type_id: account_reset_password_email
                      body: '<!DOCTYPE html> <html lang="en"> <head>     <meta charset="UTF-8">     <title>Title</title> </head> <body> <p>     {{lang "reset_password" name=store.name}} </p> <br/> <br/> <a href="{{account.reset_password_link}}">     {{account.reset_password_link}} </a>  </body> </html>'
                      translations:
                        - locale: en
                          keys:
                            reset_password: 'To change your customer account password at {{name}} please click this link or copy and paste it into your browser:'
                      subject: 'Reset your password at {{store.name}}'
                    meta: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailTemplate'
            examples:
              Example:
                value:
                  type_id: account_reset_password_email
                  body: '<!DOCTYPE html> <html lang="en"> <head>     <meta charset="UTF-8">     <title>Title</title> </head> <body> <p>     {{lang "reset_password" name=store.name}} </p> <br/> <br/> <a href="{{account.reset_password_link}}">     {{account.reset_password_link}} </a>  </body> </html>'
                  translations:
                    - locale: en
                      keys:
                        reset_password: 'To change your customer account password at {{name}} please click this link or copy and paste it into your browser:'
                  subject: 'Reset your password at {{store.name}}'
        description: ''
    delete:
      summary: Delete Email Template Override
      description: Removes a channel-specific email template override.
      tags:
        - Email Templates
      operationId: deleteEmailTemplateOverride
      responses:
        '200':
          description: OK
      parameters:
        - $ref: '#/components/parameters/RequiredChannelIdParamForDelete'
components:
  schemas:
    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            errors:
              $ref: '#/components/schemas/DetailedErrors'
      x-internal: false
    BaseError:
      type: object
      description: |
        Error payload for the BigCommerce API.
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
      x-internal: false
    DetailedErrors:
      type: object
      additionalProperties:
        type: string
      x-internal: false
    EmailTemplatesCollection:
      title: EmailTemplatesCollection
      type: array
      items:
        $ref: '#/components/schemas/EmailTemplate'
      description: A collection of all email templates.
      x-internal: false
    EmailTemplate:
      title: EmailTemplate
      type: object
      description: Data for a particular email template
      properties:
        type_id:
          type: string
          enum:
            - abandoned_cart_email
            - account_details_changed_email
            - combined_order_status_email
            - createaccount_email
            - createguestaccount_email
            - giftcertificate_email
            - invoice_email
            - ordermessage_notification
            - return_confirmation_email
            - return_statuschange_email
            - product_review_email
            - account_reset_password_email
          example: account_reset_password_email
        body:
          type: string
          example: '<!DOCTYPE html> <html lang="en"> <head>     <meta charset="UTF-8">     <title>Title</title> </head> <body> <p>     {{lang "reset_password" name=store.name}} </p> <br/> <br/> <a href="{{account.reset_password_link}}">     {{account.reset_password_link}} </a>  </body> </html>'
        translations:
          $ref: '#/components/schemas/LocaleCollection'
        subject:
          type: string
          example: 'Reset your password at {{store.name}}'
      x-internal: false
    LocaleObject:
      title: LocaleObject
      type: object
      properties:
        locale:
          type: string
          example: en
          description: 'Locale code for this language, such as "en", "en-us", "fr-ca".'
        keys:
          type: object
          example:
            reset_password: 'To change your customer account password at {{name}} please click this link or copy and paste it into your browser:'
          description: Language keys for the template. User-defined. Should match any lang keys used in the template.
      description: A particular localeʼs translations.
      x-internal: false
    LocaleCollection:
      title: LocaleCollection
      type: array
      items:
        $ref: '#/components/schemas/LocaleObject'
      description: A collection of locale translations for the static language.
      x-internal: false
    EmailTemplateUpdate:
      title: EmailTemplateUpdate
      type: object
      description: Data for updated template
      properties:
        body:
          type: string
          example: '<!DOCTYPE html> <html lang="en"> <head>     <meta charset="UTF-8">     <title>Title</title> </head> <body> <p>     {{lang "reset_password" name=store.name}} </p> <br/> <br/> <a href="{{account.reset_password_link}}">     {{account.reset_password_link}} </a>  </body> </html>'
        translations:
          $ref: '#/components/schemas/LocaleCollection'
        subject:
          type: string
          example: 'Reset your password at {{store.name}}'
      required:
        - body
        - lang
        - subject
      x-internal: false
    scratch:
      title: scratch
      type: object
      properties:
        id:
          type: string
      x-internal: false
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
    ChannelIdParam:
      in: query
      name: channel_id
      schema:
        type: integer
      description: 'Channel ID to use for channel-specific setting. If omitted, you will interact with the global setting only.'
    RequiredChannelIdParamForDelete:
      in: query
      name: channel_id
      schema:
        type: integer
      description: 'Required Channel ID. This delete operation will delete overridden settings for this channel, thus restoring them to the global defaults.'
      required: true
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Information & Settings | modify | `store_v2_information` |
        |  Information & Settings | read-only | `store_v2_information_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header


openapi: '3.0.1'
info:
  title: Storefront Form Fields (Beta)
  description: |-
    Read form fields on a BigCommerce hosted storefront.

    For info about API accounts, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts).
        
    For info about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#same-origin-cors-authentication).

    > #### Warning
    > Breaking changes may be introduced to this endpoint while in beta.
  version: ''
servers:
  - url: 'https://{store_domain}/api/storefront'
    variables:
      store_domain:
        default: your_store.example.com
        description: 'The [URL authority](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_URL#authority) of the storefront.'
tags:
  - name: Form Fields
paths:
  /form-fields:
    get:
      tags:
        - Form Fields
      summary: Get Form Fields
      operationId: getFormFields
      description: |-
        Gets form fields.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.
      parameters:
        - name: filter
          in: query
          schema:
            type: string
            enum:
              - customerAccount
              - shippingAddress
              - billingAddress
      responses:
        '200':
          description: Returns an object with form fields groups.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormFieldGroups'
components:
  schemas:
    FormFieldGroups:
      type: object
      description: Group of form field groups
      x-internal: false
      x-examples: {}
      properties:
        customerAccount:
          $ref: '#/components/schemas/FormFields'
        shippingAddress:
          $ref: '#/components/schemas/FormFields'
        billingAddress:
          $ref: '#/components/schemas/FormFields'
    FormFields:
      type: array
      description: List of form fields for the group
      items:
        $ref: '#/components/schemas/FormField'
      x-internal: false
    FormField:
      type: object
      properties:
        id:
          type: string
          description: Field unique ID
        name:
          type: string
          description: Field name
        custom:
          type: boolean
          description: Wether is a custom field or system built-in field.
        label:
          type: string
          description: User-friendly label
        required:
          type: boolean
          description: Wether this field is required or not
        default:
          type: string
          description: The field unique ID
        type:
          type: string
          description: Type of the value hold by the field
          enum:
            - integer
            - string
            - array
            - date
        fieldType:
          type: string
          description: Type of the field
          enum:
            - checkbox
            - text
            - date
            - multiline
            - radio
            - dropdown
        min:
          type: string
          description: The minimun valid value for the field (integer and date type only)
        max:
          type: string
          description: The minimun valid value for the field (integer and date type only)
        maxLength:
          type: integer
          description: The maximum length for the value (string type only)
        secret:
          type: boolean
          description: Whether the field represents a password field
        options:
          type: object
          properties:
            helperLabel:
              type: string
              description: Placeholder text for dropdown field type.
            items:
              type: array
              description: List of possible values for this field.
              items:
                type: object
                properties:
                  label:
                    type: string
                  value:
                    type: string
          description: 'Extra data for radio, dropdown and checkbox field types.'
      description: Form Field
      x-internal: false

openapi: '3.0.0'
info:
  version: 1.0.0-oas3
  title: Geography
  description: |-
    Get countries, states, and provinces.
    
paths:
  '/countries':
    get:
      description: 'Get a list of all countries available. A country or territory, identifiable by an ISO 3166 country code.'
      summary: Get All Countries
      parameters:
        - name: Accept
          in: header
          required: true
          description: ''
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          description: ''
          schema:
            type: string
            default: application/json
        - name: page
          in: query
          required: false
          description: Number of pages
          schema:
            type: number
            exclusiveMinimum: false
            exclusiveMaximum: false
        - name: limit
          in: query
          required: false
          description: Count per page
          schema:
            type: number
            exclusiveMinimum: false
            exclusiveMaximum: false
        - in: query
          name: country
          schema:
            type: string
        - in: query
          name: country_iso2
          schema:
            type: string
        - in: query
          name: country_iso3
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/countryCollection_Resp'
      tags:
        - Countries
  '/countries/{id}':
    get:
      description: 'Returns a single *Country*.  Gets a country. A country or territory, identifiable by an ISO 3166 country code.'
      summary: Get a Country
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the country.
          schema:
            type: integer
            exclusiveMinimum: false
            exclusiveMaximum: false
        - name: Accept
          in: header
          required: true
          description: ''
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          description: ''
          schema:
            type: string
            default: application/json
      responses:
        '200':
          $ref: '#/components/responses/countriesResponse'
      tags:
        - Countries
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string

  '/countries/{country_id}/states':
    get:
      description: |-
        Returns a list of *States* belonging to a *Country*. 
        A state or province, identifiable by an ISO 3166 subdivision code.
      summary: Get All Country's States
      parameters:
        - name: country_id
          in: path
          required: true
          description: Id of the country
          schema:
            type: integer
            exclusiveMinimum: false
            exclusiveMaximum: false
        - name: Accept
          in: header
          required: true
          description: ''
          schema:
            type: string
        - name: Content-Type
          in: header
          required: true
          description: ''
          schema:
            type: string
        - name: state
          in: query
          required: false
          description: Name of the state/province.
          schema:
            type: string
        - name: state_abbreviation
          in: query
          required: false
          description: Abbreviation for the state/province.
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: Number of pages
          schema:
            type: number
            exclusiveMinimum: false
            exclusiveMaximum: false
        - name: limit
          in: query
          required: false
          description: Count per page
          schema:
            type: number
            exclusiveMinimum: false
            exclusiveMaximum: false
      responses:
        '200':
          $ref: '#/components/responses/countriesStatesCollectionResponse'
      tags:
        - States
    parameters:
      - name: country_id
        in: path
        required: true
        schema:
          type: string

  '/countries/{country_id}/states/{id}':
    get:
      description: |-
        Returns a *State*. 
        A state or province, identifiable by an ISO 3166 subdivision code.
      summary: Get a Country's State
      parameters:
        - name: country_id
          in: path
          required: true
          description: Id of the country
          schema:
            type: integer
            exclusiveMinimum: false
            exclusiveMaximum: false
        - name: id
          in: path
          required: true
          description: Id of the states
          schema:
            type: integer
            exclusiveMinimum: false
            exclusiveMaximum: false
        - name: Accept
          in: header
          required: true
          description: ''
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          description: ''
          schema:
            type: string
            default: application/json
      responses:
        '200':
          $ref: '#/components/responses/countriesStatesResponse'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - States
    parameters:
      - name: country_id
        in: path
        required: true
        schema:
          type: string

      - schema:
          type: string
        name: id
        in: path
        required: true
  '/countries/count':
    get:
      responses:
        '200':
          $ref: '#/components/responses/countResponse'
      summary: Get a Count of All Countries
      tags:
        - Countries
      operationId: countriesCount
      description: Returns a count of all countries.
  '/countries/states/count':
    get:
      responses:
        '200':
          $ref: '#/components/responses/countResponse'
      summary: Get a Count of All States
      tags:
        - States
      description: Returns a count of all states.
  '/countries/states':
    get:
      responses:
        '200':
          $ref: '#/components/responses/countriesStatesCollectionResponse'
      summary: Get All States
      tags:
        - States
      description: Returns a list of all states.
      parameters:
        - schema:
            type: integer
          in: query
          name: limit
          description: The number of results to return per request.
        - schema:
            type: integer
          in: query
          name: page
          description: The ordered grouping of results to return.
  '/countries/{country_id}/states/count':
    get:
      responses:
        '200':
          $ref: '#/components/responses/countResponse'
      summary: 'Get a Count of Country’s States '
      tags:
        - States
      description: Returns a count of a country's states.
    parameters:
      - name: country_id
        in: path
        required: true
        schema:
          type: string

security:
  - X-Auth-Token: []
tags:
  - name: Countries
  - name: States

servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v2'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
components:
  responses:
    countriesResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/country_Full'
          examples:
            response:
              value:
                id: 1
                country: Afghanistan
                country_iso2: AF
                country_iso3: AFG
                states:
                  url: 'https://api.bigcommerce.com/stores/h10wocxy6s/v2/countries/1/states'
                  resource: /countries/1/states
    countriesStatesResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/countriesState_Full'
    countryCollection_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/country_Full'
          example:
            - id: 1
              country: Afghanistan
              country_iso2: AF
              country_iso3: AFG
              states:
                url: 'https://api.bigcommerce.com/stores/store_hash/v2/countries/1/states'
                resource: /countries/1/states
            - id: 2
              country: Albania
              country_iso2: AL
              country_iso3: ALB
              states:
                url: 'https://api.bigcommerce.com/stores/store_hash/v2/countries/2/states'
                resource: /countries/2/states
    countriesStatesCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/countriesState_Full'
    countResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/count_Full'
          examples:
            response:
              value:
                count: 241
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Information & Settings | modify | `store_v2_information` | 
        |  Information & Settings | read-only | `store_v2_information_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header
  schemas:
    country_Full:
      title: country_Full
      example:
        id: 13
        country: Australia
        country_iso2: AU
        country_iso3: AUS
        states:
          url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/countries/13/states'
          resource: /countries/13/states
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: Id of the country.
              example: 13
        - $ref: '#/components/schemas/country_Base'
        - type: object
          properties:
            states:
              $ref: '#/components/schemas/countriesStates_Full'
      x-internal: false
    countriesStates_Full:
      title: countriesStates_Full
      type: object
      properties:
        url:
          description: ''
          example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/countries/13/states'
          type: string
        resource:
          description: ''
          example: /countries/13/states
          type: string
      description: Refers to the `states` object return in `GET` countries requests.
      x-internal: false
    countriesState_Full:
      title: countriesState_Full
      example:
        id: 208
        state: Australian Capital Territory
        state_abbreviation: ACT
        country_id: 13
      type: object
      properties:
        id:
          description: Numeric ID of the state/province.
          example: 208
          type: integer
        state:
          description: Name of the state/province.
          example: Australian Capital Territory
          type: string
        state_abbreviation:
          description: Abbreviation for the state/province.
          example: ACT
          type: string
        country_id:
          description: Numeric ID of the state’s/province’s associated country.
          example: 13
          type: integer
      description: 'Refers to the state returned in `GET` states requests. '
      x-internal: false
    country_Base:
      type: object
      title: country_Base
      properties:
        country:
          type: string
          example: Australia
          description: Country name.
        country_iso2:
          type: string
          description: 2-letter country code.
          example: AU
        country_iso3:
          type: string
          description: 3-letter country code.
          example: AUS
      x-internal: false
    count_Full:
      type: object
      properties:
        count:
          type: integer
          minimum: 1
      x-internal: false

openapi: '3.0.0'
info:
  title: global_refs.yml
  version: '1.0'
  description: 'non-empty string'
servers:
  - url: 'http://localhost:3000'
tags:
  - name: Experiment
paths:
  '/users/{userId}':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: Id of an existing user.
    get:
      summary: Get User Info by User ID
      tags:
        - Experiment
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    firstName: Alice
                    lastName: Smith
                    email: alice.smith@gmail.com
                    dateOfBirth: '1997-10-31'
                    emailVerified: true
                    signUpDate: '2019-08-24'
        '404':
          description: User Not Found
      operationId: get-users-userId
      description: Retrieve the information of the user with the matching user ID.
    patch:
      summary: Update User Information
      operationId: patch-users-userId
      tags:
        - Experiment
      responses:
        '200':
          description: User Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Updated User Rebecca Baker:
                  value:
                    id: 13
                    firstName: Rebecca
                    lastName: Baker
                    email: rebecca@gmail.com
                    dateOfBirth: '1985-10-02'
                    emailVerified: false
                    createDate: '2019-08-24'
        '404':
          description: User Not Found
        '409':
          description: Email Already Taken
      description: Update the information of an existing user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  description: 'If a new email is given, the userʼs email verified property will be set to false.'
                dateOfBirth:
                  type: string
            examples:
              Update First Name:
                value:
                  firstName: Rebecca
              Update Email:
                value:
                  email: rebecca@gmail.com
              Update Last Name & Date of Birth:
                value:
                  lastName: Baker
                  dateOfBirth: '1985-10-02'
        description: Patch user properties to update.
  '/user':
    post:
      summary: Create New User
      operationId: post-user
      tags:
        - Experiment
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
              required:
                - firstName
                - lastName
                - email
                - dateOfBirth
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      example:
        id: 142
        firstName: Alice
        lastName: Smith
        email: alice.smith@gmail.com
        dateOfBirth: '1997-10-31'
        emailVerified: true
        signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
    meta_Empty:
      title: meta_Empty
      type: object
      properties: {}
      additionalProperties: true
      description: Response metadata.
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'

openapi: '3.0.1'
info:
  title: Marketing
  description: |-
    Manage coupons, banners, and gift certificates.

    ## Subresources

    ### Coupons
    Category or product discounts that can be applied to orders for customers who enter a given code.

    ### Banners
    Banners available to display on a store.

    ### Gift Certificates
    Gift certificates available to offer to a store’s customers.
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  version: ''
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v2'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
- X-Auth-Token: []
tags:
- name: Banners
- name: Coupons
- name: Gift Certificates
paths:
  '/coupons':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
      - Coupons
      summary: Get All Coupons
      description: |-
        Returns a list of *Coupons*. Default sorting is by coupon/discount id, from lowest to highest. Optional filter parameters can be passed in.

        ## Usage Notes

        Available types for `type` and `exclude_type` filters:

        |Type|
        |-|
        |`per_item_discount`|
        |`percentage_discount`|
        |`per_total_discount`|
        |`shipping_discount`|
        |`free_shipping`|
        |`promotion`|

        Coupons with `type=promotion` will not populate usable data for the following fields but instead be set to the following default values:

        ```json
        ...
        amount : 0.0000
        min_purchase: 0.0000
        applies_to
        restricted_to: []
        shipping_methods : null
        ...
        ```
      operationId: getAllCoupons
      parameters:
      - name: id
        in: query
        description: Optional filter param. `/api/v2/coupons?id={value}`
        schema:
          type: string
      - name: code
        in: query
        description: Optional filter param `/api/v2/coupons?code={value}`
        schema:
          type: string
      - name: name
        in: query
        description: Optional filter param `/api/v2/coupons?name={value}`
        schema:
          type: string
      - name: type
        in: query
        description: |-
          |Type|
          |-|
          |`per_item_discount`|
          |`percentage_discount`|
          |`per_total_discount`|
          |`shipping_discount`|
          |`free_shipping`|
          |`promotion`|
        schema:
          type: string
      - name: min_id
        in: query
        description: Optional filter param `/api/v2/coupons?min_id={value}`
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          type: integer
      - name: max_id
        in: query
        description: Optional filter param`/api/v2/coupons?max_id={value}`
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          type: integer
      - name: page
        in: query
        description: Number of pages `/api/v2/coupons?page={number}`
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          type: number
      - name: limit
        in: query
        description: Count per page `/api/v2/coupons?limit={count}`
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          type: number
      - name: exclude_type
        in: query
        description: |-
          |Type|
          |-|
          |`per_item_discount`|
          |`percentage_discount`|
          |`per_total_discount`|
          |`shipping_discount`|
          |`free_shipping`|
          |`promotion`|
        schema:
          type: string
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/coupon_Full'
              example:
              - id: 1
                name: $5 off
                type: per_total_discount
                amount: "5.0000"
                min_purchase: "0.0000"
                expires: ""
                enabled: true
                code: S2549JM0Y
                applies_to:
                  entity: categories
                  ids:
                  - 0
                num_uses: 2
                max_uses: 0
                max_uses_per_customer: 0
                restricted_to: {}
                shipping_methods: []
                date_created: Tue, 13 Mar 2018 16:18:59 +0000
              - id: 2
                name: Limit by Location
                type: per_total_discount
                amount: "5.0000"
                min_purchase: "25.0000"
                expires: ""
                enabled: true
                code: E3JC79S0I
                applies_to:
                  entity: categories
                  ids:
                  - 0
                num_uses: 0
                max_uses: 25
                max_uses_per_customer: 0
                restricted_to:
                  countries: 'AU'
                shipping_methods:
                - shipping_endicia
                date_created: Tue, 12 Jun 2018 20:22:19 +0000
    post:
      tags:
      - Coupons
      summary: Create a New Coupon
      operationId: createANewCoupon
      description: |-
        Creates a *Coupon*.

        **Required Fields**
        *   `name`
        *   `code`
        *   `type`
        *   `amount`
        *   `applies_to`

        **Read Only Fields**
        *   `id`
        *   `num_uses`

        **Notes**

        The coupon type can be one of the following:

        *   `per_item_discount`
        *   `per_total_discount`
        *   `shipping_discount`
        *   `free_shipping`
        *   `percentage_discount`

        Legacy coupon codes only work with the store's default currency. Applying a coupon with any other currency other than the store's default will result in the error: "Coupons only apply to default currency."
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/coupon_Base'
        required: true
      responses:
        '201':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coupon_Full'
              example:
                id: 1
                name: $5 off
                type: per_total_discount
                amount: "5.0000"
                min_purchase: "0.0000"
                expires: ""
                enabled: true
                code: S2549JM0Y
                applies_to:
                  entity: categories
                  ids:
                  - 0
                num_uses: 2
                max_uses: 0
                max_uses_per_customer: 0
                restricted_to: {}
                shipping_methods: []
                date_created: Tue, 13 Mar 2018 16:18:59 +0000
      x-codegen-request-body-name: body
    delete:
      tags:
      - Coupons
      summary: Delete All Coupons
      description: |
        ## Usage Notes
        * Deleting a coupon via this endpoint will delete the coupon but not the promotion it is attached to
      operationId: deleteAllCoupons
      parameters:
      - name: id:in
        in: query
        description: Optional param to identify a comma separated list of ids for
          coupons to delete in a batch. `/api/v2/coupons?id:in=1,2,3`
        schema:
          type: string
      responses:
        '204':
          description: ""
          content: {}
  '/coupons/count':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
      - Coupons
      summary: Get a Count of Coupons
      description: Returns a count of all *Coupons* in the store.
      operationId: getACountOfCoupons
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    minimum: 0
                    type: integer
              example:
                count: 27
  '/coupons/{id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - name: id
        in: path
        description: ID of the coupon.
        required: true
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          type: number
    put:
      tags:
      - Coupons
      summary: Update a Coupon
      description: |-
        Updates a *Coupon*.


        **Read Only Fields**

        * `id`
        * `num_uses`
        * `date_created`

        **Notes**

        If the `applies_to` value is cleared, you can restore it to the coupon by reapplying the `applies_to` value in a new `PUT` request.
      operationId: updateACoupon
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/coupon_Base'
        required: true
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coupon_Full'
              example:
                id: 1
                name: $5 off
                type: per_total_discount
                amount: "5.0000"
                min_purchase: "0.0000"
                expires: ""
                enabled: true
                code: S2549JM0Y
                applies_to:
                  entity: categories
                  ids:
                  - 0
                num_uses: 2
                max_uses: 0
                max_uses_per_customer: 0
                restricted_to: {}
                shipping_methods: []
                date_created: Tue, 13 Mar 2018 16:18:59 +0000
      x-codegen-request-body-name: body
    delete:
      tags:
      - Coupons
      summary: Delete a Coupon
      description: Deletes a *Coupon*.
      operationId: deleteACoupon
      responses:
        '204':
          description: ""
          content: {}
  '/banners':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
      - Banners
      summary: Get All Banners
      description: Returns a list of *Banners*. Default sorting is by banner id, from
        lowest to highest.
      operationId: getAllBanners
      parameters:
      - name: min_id
        in: query
        description: Optional filter param `/api/v2/banners?min_id={value}`
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          type: integer
      - name: max_id
        in: query
        description: Optional filter param `/api/v2/banners?max_id={value}`
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          type: integer
      - name: page
        in: query
        description: Optional filter param `/api/v2/banners?page={number}`
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          type: number
      - name: limit
        in: query
        description: Optional filter param `/api/v2/banners?limit={count}`
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          type: number
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/banner_Full'
              example:
              - id: 1
                name: This is a banner
                content: <p>This is a banner</p>
                page: home_page
                item_id: "0"
                location: top
                date_created: "1522169082"
                date_type: always
                date_from: "0"
                date_to: "0"
                visible: "1"
              - id: 2
                name: 'Banner #2'
                content: '<p>Banner # 2</p>'
                page: category_page
                item_id: "23"
                location: top
                date_created: "1522169169"
                date_type: always
                date_from: "0"
                date_to: "0"
                visible: "1"
    post:
      tags:
      - Banners
      summary: Create a Banner
      description: |-
        Creates a *Banner*.

        **Required Fields**
        * name
        * content
        * page
        * location
        * date_type

        **Read Only Fields**
        * date_created
        * id
      operationId: createABanner
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/banner_Base'
        required: true
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/banner_Full'
              example:
                id: 1
                name: Sale Banner
                content: <p> Sale! Tuesday at 9am! </p>
                page: home_page
                item_id: "0"
                location: top
                date_created: "1522169082"
                date_type: always
                date_from: "0"
                date_to: "0"
                visible: "1"
      x-codegen-request-body-name: body
    delete:
      tags:
      - Banners
      summary: Delete All Banners
      description: By default, it deletes all *Banners*.
      operationId: deleteAllBanners
      responses:
        '204':
          description: ""
          content: {}
  '/banners/{id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - name: id
        in: path
        description: ID of the banner.
        required: true
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          type: integer
    get:
      tags:
      - Banners
      summary: Get a Banner
      description: Returns a single *Banner*
      operationId: getABanner
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/banner_Full'
              example:
                id: 1
                name: Sale Banner
                content: <p> Sale! Tuesday at 9am! </p>
                page: home_page
                item_id: "0"
                location: top
                date_created: "1522169082"
                date_type: always
                date_from: "0"
                date_to: "0"
                visible: "1"
    put:
      tags:
      - Banners
      summary: Update a Banner
      description: |-
        Updates a *Banner*.

        **Read Only Fields**
        * date_created
        * id
      operationId: updateABanner
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/banner_Put'
        required: true
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/banner_Full'
              example:
                id: 1
                name: Sale Banner
                content: <p> Sale! Tuesday at 9am! </p>
                page: home_page
                item_id: "0"
                location: top
                date_created: Tue, 13 Mar 2018 16:18:59 +0000
                date_type: always
                date_from: "0"
                date_to: "0"
                visible: "1"
      x-codegen-request-body-name: body
    delete:
      tags:
      - Banners
      summary: Delete a Banner
      description: Deletes a *Banner*.
      operationId: deleteABanner
      responses:
        '204':
          description: ""
          content: {}
  '/banners/count':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
      - Banners
      summary: Get a Count of Store Banners
      description: Returns a count of *Banners*.
      operationId: getACountOfBanners
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    minimum: 0
                    type: integer
              example:
                count: 27
  '/gift_certificates/{id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - name: id
        in: path
        description: ID of the gift certificate.
        required: true
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          type: integer
    get:
      tags:
      - Gift Certificates
      summary: Get a Gift Certificate
      description: Returns a single *Gift Certificate*.
      operationId: getAGiftCertificate
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/giftCertificate_Full'
              example:
                id: 1
                customer_id: 5
                order_id: 116
                code: FFZ-5N4-C7M-S78
                to_name: John Doe
                to_email: johndoe@example.com
                from_name: Jane Doe
                from_email: janedoe@example.com
                amount: "10"
                balance: "0"
                status: active
                template: "Birthday"
                message: Happy Birthday!
                purchase_date: "Tue, 20 Jan 1970 08:45:38 CST"
                expiry_date: "Mon, 2 Jan 2023 08:45:38 CST"
    put:
      tags:
      - Gift Certificates
      summary: Update a Gift Certificate
      description: |-
        Updates a *Gift Certificate*.

        **Read Only Fields**
        * id
        * order_id
      operationId: updateAGiftCertificate
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/giftCertificate_Put'
        required: false
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/giftCertificate_Full'
              example:
                id: 1
                customer_id: 5
                order_id: 116
                code: FFZ-5N4-C7M-S78
                to_name: John Doe
                to_email: johndoe@example.com
                from_name: Jane Doe
                from_email: janedoe@example.com
                amount: "10"
                balance: "0"
                status: active
                template: "Birthday"
                message: Happy Birthday!
                purchase_date: "Tue, 20 Jan 1970 08:45:38 CST"
                expiry_date: "Mon, 2 Jan 2023 08:45:38 CST"
      x-codegen-request-body-name: body
    delete:
      tags:
      - Gift Certificates
      summary: Delete a Gift Certificate
      description: Deletes a *Gift Certificate*.
      operationId: deleteAGiftCertificate
      responses:
        '204':
          description: ""
          content: {}
  '/gift_certificates':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
      - Gift Certificates
      summary: Get All Gift Certificates
      description: |-
        Returns a list of *Gift Certificates*. Optional filter parameters can be passed in.

        Default sorting is by gift-certificate id, from lowest to highest.

        The maximum limit is 250. If a limit isn’t provided, up to 50 gift_certificates are returned by default.
      operationId: getAllGiftCertificates
      parameters:
      - name: min_id
        in: query
        schema:
          type: integer
      - name: max_id
        in: query
        schema:
          type: integer
      - name: code
        in: query
        schema:
          type: string
      - name: order_id
        in: query
        schema:
          type: integer
      - name: to_name
        in: query
        schema:
          type: string
      - name: to_email
        in: query
        schema:
          type: string
      - name: from_name
        in: query
        schema:
          type: string
      - name: from_email
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: number
      - name: limit
        in: query
        schema:
          type: number
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/giftCertificate_Full'
              example:
              - id: 24
                code: 10R-5E2-BO4-RWT
                amount: "1000.0000"
                status: active
                balance: "500.0000"
                to_name: Alyss
                order_id: 1281
                template: "Celebration"
                message: "Celebrate"
                to_email: test@test.com
                from_name: Noland
                from_email: test1@test.com
                customer_id: 0
                expiry_date: "Mon, 2 Jan 2023 08:45:38 CST"
                purchase_date: "Tue, 20 Jan 1970 08:45:38 CST"
                currency_code: "USD"
              - id: 25
                code: 10R-6E3-AO4-RST
                amount: "700.0000"
                status: active
                balance: "700.0000"
                to_name: Alyss
                order_id: 0
                template: "General"
                message: "Test"
                to_email: test@test.com
                from_name: Noland
                from_email: test1@test.com
                customer_id: 0
                expiry_date: "Mon, 2 Jan 2023 08:45:38 CST"
                purchase_date: "Tue, 20 Jan 1970 08:45:38 CST"
                currency_code: "USD"
              - id: 27
                code: 15R-6E3-AO4-RST
                amount: "50.0000"
                status: active
                balance: "50.0000"
                to_name: Lyss
                order_id: 0
                template: "Celebration"
                message: "Celebrate"
                to_email: test5@test.com
                from_name: Somethingelse
                from_email: test15@test.com
                customer_id: 0
                expiry_date: "Mon, 2 Jan 2023 08:45:38 CST"
                purchase_date: "Tue, 20 Jan 1970 08:45:38 CST"
                currency_code: "USD"
    post:
      tags:
      - Gift Certificates
      summary: Create a Gift Certificate
      description: |-
        Creates a *Gift Certificate*.


        **Required Fields**
        * to_name
        * to_email
        * from_name
        * from_email
        * amount

        **Read Only Fields**
        * id
        * order_id

        **Notes**

        When a gift certificate is created through the API, no email notification is triggered to the specified recipient.
      operationId: createAGiftCertificate
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/giftCertificate_Post'
        required: false
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/giftCertificate_Full'
              example:
                id: 1
                customer_id: 5
                order_id: 116
                code: FFZ-5N4-C7M-S78
                to_name: John Doe
                to_email: johndoe@example.com
                from_name: Jane Doe
                from_email: janedoe@example.com
                amount: "10"
                balance: "0"
                status: active
                template: "Birthday"
                message: Happy Birthday!
                purchase_date: "Tue, 20 Jan 1970 08:45:38 CST"
                expiry_date: "Mon, 2 Jan 2023 08:45:38 CST"
                currency_code: "USD"
      x-codegen-request-body-name: body
    delete:
      tags:
      - Gift Certificates
      summary: Delete All Gift Certificates
      description: By default, it deletes all *Gift Certificates*.
      operationId: deleteAllGiftCertificates
      responses:
        '204':
          description: ""
          content:
            application/json:
              schema:
                type: object
components:
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
  schemas:
    CouponsResource:
      title: Coupon Resource
      type: object
      properties:
        url:
          type: string
          description: URL of the coupons for api requests
          example: https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/coupons
        resource:
          type: string
          description: resource of the coupons
          example: /orders/129/coupons
      x-internal: false
    coupon_Full:
      title: coupon_Full
      allOf:
      - required:
        - id
        type: object
        properties:
          id:
            type: integer
            description: The coupon's ID. This is a read-only field; do not set or
              modify its value in a POST or PUT request.
            example: 2
          date_created:
            type: string
            description: Date Created
            example: Tue, 13 Mar 2018 16:18:59 +0000
          num_uses:
            type: integer
            description: Number of times this coupon has been used. This is a read-only
              field; do not set or modify its value in a POST or PUT request.
            example: 0
      - $ref: '#/components/schemas/coupon_Base'
      x-internal: false
    coupon_Base:
      title: coupon_Base
      required:
      - amount
      - applies_to
      - code
      - name
      - type
      type: object
      properties:
        name:
          type: string
          description: The name of the coupon.
          example: Australia Customers Discount
          maxLength: 100
        type:
          type: string
          enum:
          - per_item_discount
          - per_total_discount
          - shipping_discount
          - free_shipping
          - percentage_discount
          - promotion
        amount:
          type: string
          description: The discount to apply to an order, as either an amount or a
            percentage. This field’s usage is determined by the coupon `type`. For
            example, a `type` of + `percentage_discount` would determine a percentage
            here.
          example: "5"
        min_purchase:
          type: string
          description: Specifies a minimum value that an order must have before the
            coupon can be applied to it.
          example: "25"
        expires:
          type: string
          description: Specifies when a coupon expires. Coupons need not have an expiry
            date – you can also control expiry via + `max_uses` or `max_uses_per_customer`.
            If you do use this date field, the value must be in <a href="http://tools.ietf.org/html/rfc2822#section-3.3"
            target="_blank">RFC 2822</a> format.
        enabled:
          type: boolean
          description: If the coupon is enabled, this field’s value is `true`; otherwise,
            `false`.
          example: true
        code:
          pattern: '[a-zA-Z0-9_\ -]'
          type: string
          description: The coupon code that customers will use to receive their discounts.
            Value must be unique. Only letters, numbers, white space, underscores,
            and hyphens are allowed.
          example: S2549JM0Y
          maxLength: 50
        applies_to:
          type: object
          properties:
            ids:
              type: array
              description: ID of either the products or categories
              items:
                type: integer
            entity:
              type: string
              description: What the discount applies to. Can be products or categories.
          description: If it is not included in the PUT request, its existing value
            on the coupon will be cleared. Also required to be set on the POST request
        max_uses:
          type: integer
          description: Maximum number of times this coupon can be used.
          example: 25
        max_uses_per_customer:
          type: integer
          description: Maximum number of times each customer can use this coupon.
          example: 0
        restricted_to:
          type: object
          properties:
            countries:
              type: string
        shipping_methods:
          type: array
          description: This is a list of shipping-method names. A shipping method
            must be enabled on the store to use it with a coupon. To check which shipping
            methods are enabled, please use the [List Shipping Methods](/api/v2#list-shipping-methods)
            endpoint.
          items:
            type: string
      example:
        id: 2
        name: Australia Customers Discount
        type: per_item_discount
        amount: "5"
        min_purchase: "25"
        expires: ""
        enabled: true
        code: S2549JM0Y
        applies_to:
          entity: categories
          ids: [0,3]
        num_uses: 0
        max_uses: 25
        max_uses_per_customer: 0
        restricted_to:
          countries: "AU"
        shipping_methods:
        - shipping_endicia
        date_created: Tue, 13 Mar 2018 16:18:59 +0000
      x-internal: false
    banner_Base:
      title: banner_Base
      required:
      - content
      - date_type
      - location
      - name
      - page
      type: object
      properties:
        name:
          type: string
          description: Name of the banner.
          example: Sale Banner
        content:
          type: string
          description: Contains the banner content. Returned as a string and includes
            HTML formatting.
          example: <p> Sale! Tuesday at 9am! </p>
        page:
          type: string
          description: Page the Banner is located on.
          enum:
          - home_page
          - category_page
          - brand_page
          - search_page
        location:
          type: string
          description: Location on the page.
          example: top
          enum:
          - top
          - bottom
        date_type:
          type: string
          description: This specifies whether the banner should be visible during
            a specific date range.
          enum:
          - always
          - custom
        date_from:
          type: string
          description: If the datetype is set as 'custom’, this field specifies the
            date when the banner should become visible on the storefront.
          example: "0"
        date_to:
          type: string
          description: If the datetype is set as 'custom’, this field specifies the
            date when the banner should stop being visible on the storefront.
          example: "0"
        visible:
          type: string
          description: 'Integer value denoting whether or not the banner is visible
            on the storefront: 1 = visible; 0 = not visible'
          example: "1"
        item_id:
          type: string
          description: If the banner is on a specific category or brand page, then the item_id will correspond the category or brand ID.
          example: "35"
      x-internal: false
    banner_Full:
      title: banner_Full
      allOf:
      - type: object
        properties:
          id:
            type: integer
            description: |
              Id of the banner.
              This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.
            example: 1
          date_created:
            type: string
            description: Date the banner is created.
      - $ref: '#/components/schemas/banner_Base'
      x-internal: false
    banner_Put:
      title: banner_Put
      allOf:
      - type: object
      - $ref: '#/components/schemas/banner_Base'
      x-internal: false
    giftCertificate_Base:
      title: giftCertificate_Base
      required:
      - amount
      - from_email
      - from_name
      - to_email
      - to_name
      type: object
      properties:
        to_name:
          type: string
          description: Name of the recipient.
          example: John Doe
        to_email:
          type: string
          description: Email of the recipient.
          example: johndoe@example.com
        from_name:
          type: string
          description: Name of the customer who purchased the gift certificate.
          example: Jane Doe
        from_email:
          type: string
          description: Email of the customer who purchased the gift certificate.
          example: janedoe@example.com
        amount:
          type: string
          description: Value of the gift certificate.
          example: "10"
      x-internal: false
    giftCertificate_Full:
      title: giftCertificate_Full
      description: ""
      allOf:
      - $ref: '#/components/schemas/giftCertificate_Base'
      - type: object
        properties:
          id:
            type: integer
            description: The ID of the gift certificate. This is a READ-ONLY field;
              do not set or modify its value in a POST or PUT request.
            example: 1
          customer_id:
            type: integer
            description: The ID of the customer placing the order.
            example: 5
          order_id:
            type: integer
            description: The ID of the order.
            example: 116
          balance:
            type: string
            description: Remaining value of the gift certificate. If not set, will
              default to the amount.
            example: "0"
          purchase_date:
            type: string
            description: Date the gift certificate was purchased. If not assigned, this will be set to today’s date. Date displays in the [RFC 2822](https://www.rfc-editor.org/rfc/rfc2822#section-3.3) timestamp format.
            example: "Tue, 20 Jan 1970 08:45:38 CST"
          expiry_date:
            type: string
            description: Date on which the gift certificate is set to expire. Date displays in the [RFC 2822](https://www.rfc-editor.org/rfc/rfc2822#section-3.3) timestamp format.
            example: Mon, 2 Jan 2023 08:45:38 CST
          template:
            type: string
            description: The email theme to use in the message sent to the recipient.
            example: Celebration
            enum:
            - Birthday
            - Girl
            - Boy
            - Celebration
            - Christmas
            - General
          message:
            type: string
            description: Text that will be sent to the recipient, such as “Congratulations.”
            example: Congratulations!
          code:
            maxLength: 255
            type: string
            description: |-
              A unique string that a customer can input to redeem a gift certificate. Values greater than 20 characters will be trimmed down to the first 20 characters and returned in the response.
              If this field is not set, a value will be autogenerated.
            example: FFZ-5N4-C7M-S78
          status:
            type: string
            example: active
            enum:
            - active
            - pending
            - disabled
            - expired
          currency_code:
            type: string
            description: |-
              A currency code, following the ISO 4217 standard. The currency has to exist in the store first.

              Gift Certificates can only be used if the transactional currency of the cart is the same as the one defined in the gift certificate. If this value is not provided, the gift certificate is created using the store's default transactional currency.
            example: USD
      x-internal: false
    giftCertificate_Put:
      title: giftCertificate_Put
      allOf:
      - $ref: '#/components/schemas/giftCertificate_Base'
      - type: object
        properties:
          balance:
            type: string
            description: The remaining value of the gift certificate. If not set, will
              default to the amount.
            example: "0"
          purchase_date:
            type: string
            description: Date the gift certificate was purchased. If not assigned,
              this will be set to today’s date. Enter date in RFC-2822 format.
            example: Mon, 19 Jan 1970 07:21:46 CST
          expiry_date:
            type: string
            description: Date on which the gift certificate is set to expire.
            example: "Mon, 02 Jan 2023 08:45:38 CST"
          customer_id:
            type: integer
            description: The ID of the customer placing the order.
            example: 5
          template:
            type: string
            description: The email theme to use in the message sent to the recipient.
            example: Celebration
            enum:
            - Birthday
            - Boy
            - Girl
            - Celebration
            - Christmas
            - General
          message:
            type: string
            description: Text that will be sent to the recipient, such as “Congratulations.”
            example: Congratulations!
          code:
            maxLength: 255
            type: string
            description: |-
              A unique string that a customer can input to redeem a gift certificate. Values greater than 20 characters will be trimmed down to the first 20 characters and returned in the response.
              If this field is not set, a value will be autogenerated.
            example: FFZ-5N4-C7M-S78
          status:
            type: string
            example: active
            enum:
            - active
            - pending
            - expired
            - disabled
          currency_code:
            type: string
            description: |-
              A currency code, following the ISO 4217 standard. The currency has to exist in the store first.

              Gift Certificates can only be used if the transactional currency of the cart is the same as the one defined in the gift certificate. If this value is not provided, the gift certificate is created using the store's default transactional currency.
            example: USD
      x-internal: false
    giftCertificate_Post:
      title: giftCertificate_Post
      description: ""
      allOf:
      - $ref: '#/components/schemas/giftCertificate_Base'
      - type: object
        properties:
          balance:
            type: string
            description: Remaining value of the gift certificate. If not set, will
              default to the amount.
            example: "0"
          purchase_date:
            type: string
            description: Date the gift certificate was purchased. If not assigned,
              this will be set to today’s date. Enter date in RFC-2822 format.
            example: Mon, 19 Jan 1970 07:21:46 CST
          expiry_date:
            type: string
            description: Date on which the gift certificate is set to expire. The date must be in [RFC 2822](https://www.rfc-editor.org/rfc/rfc2822#section-3.3) format.
            example: "Tue, 20 Jan 1970 08:45:38 CST"
          customer_id:
            type: integer
            description: The ID of the customer placing the order.
            example: 5
          template:
            type: string
            description: The email theme to use in the message sent to the recipient.
            example: Celebration
            enum:
            - Birthday
            - Boy
            - Girl
            - Celebration
            - Christmas
            - General
          message:
            maxLength: 250
            type: string
            description: Text that will be sent to the recipient, such as “Congratulations.”
            example: Congratulations!
          code:
            maxLength: 255
            type: string
            description: |-
              A unique string that a customer can input to redeem a gift certificate. Values greater than 20 characters will be trimmed down to the first 20 characters and returned in the response.
              If this field is not set, a value will be autogenerated.
            example: FFZ-5N4-C7M-S78
          status:
            type: string
            example: active
            enum:
            - active
            - pending
            - expired
            - disabled
          currency_code:
            type: string
            description: |-
              A currency code, following the ISO 4217 standard. The currency has to exist in the store first.

              Gift Certificates can only be used if the transactional currency of the cart is the same as the one defined in the gift certificate. If this value is not provided, the gift certificate is created using the store's default transactional currency.
            example: USD
      x-internal: false
  responses:
    bannerCollection_Resp:
      description: ""
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/banner_Full'
          example:
          - id: 1
            name: This is a banner
            content: <p>This is a banner</p>
            page: home_page
            item_id: "0"
            location: top
            date_created: "1522169082"
            date_type: always
            date_from: "0"
            date_to: "0"
            visible: "1"
          - id: 2
            name: 'Banner #2'
            content: '<p>Banner # 2</p>'
            page: category_page
            item_id: "23"
            location: top
            date_created: "1522169169"
            date_type: always
            date_from: "0"
            date_to: "0"
            visible: "1"
    banner_Resp:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/banner_Full'
          example:
            id: 1
            name: Sale Banner
            content: <p> Sale! Tuesday at 9am! </p>
            page: home_page
            item_id: "0"
            location: top
            date_created: '1522169082'
            date_type: always
            date_from: "0"
            date_to: "0"
            visible: "1"
    count_Resp:
      description: ""
      content:
        application/json:
          schema:
            type: object
            properties:
              count:
                minimum: 0
                type: integer
          example:
            count: 27
    coupon_Resp:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/coupon_Full'
          example:
            id: 1
            name: $5 off
            type: per_total_discount
            amount: "5.0000"
            min_purchase: "0.0000"
            expires: ""
            enabled: true
            code: S2549JM0Y
            applies_to:
              entity: categories
              ids:
              - 0
            num_uses: 2
            max_uses: 0
            max_uses_per_customer: 0
            restricted_to: {}
            shipping_methods: []
            date_created: Tue, 13 Mar 2018 16:18:59 +0000
    coupon_Resp_Collection:
      description: ""
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/coupon_Full'
          example:
          - id: 1
            name: $5 off
            type: per_total_discount
            amount: "5.0000"
            min_purchase: "0.0000"
            expires: ""
            enabled: true
            code: S2549JM0Y
            applies_to:
              entity: categories
              ids:
              - 0
            num_uses: 2
            max_uses: 0
            max_uses_per_customer: 0
            restricted_to: {}
            shipping_methods: []
            date_created: Tue, 13 Mar 2018 16:18:59 +0000
          - id: 2
            name: Limit by Location
            type: per_total_discount
            amount: "5.0000"
            min_purchase: "25.0000"
            expires: ""
            enabled: true
            code: E3JC79S0I
            applies_to:
              entity: categories
              ids:
              - 0
            num_uses: 0
            max_uses: 25
            max_uses_per_customer: 0
            restricted_to:
              countries: AU
            shipping_methods:
            - shipping_endicia
            date_created: Tue, 12 Jun 2018 20:22:19 +0000
    giftCertificateCollection_Resp:
      description: ""
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/giftCertificate_Full'
          example:
          - id: 24
            code: 10R-5E2-BO4-RWT
            amount: "1000.0000"
            status: active
            balance: "500.0000"
            to_name: Alyss
            order_id:  1281
            template: "Girl"
            to_email: test@test.com
            from_name: Noland
            from_email: test1@test.com
            customer_id: 5
            expiry_date: "Mon, 2 Jan 2023 08:45:38 CST"
            purchase_date: "Tue, 20 Jan 1970 08:45:38 CST"
          - id: 25
            code: 10R-6E3-AO4-RST
            amount: "700.0000"
            status: active
            balance: "700.0000"
            to_name: Alyss
            order_id: 0
            template: "Boy"
            to_email: test@test.com
            from_name: Noland
            from_email: test1@test.com
            customer_id: 0
            expiry_date: "Mon, 2 Jan 2023 08:45:38 CST"
            purchase_date: "Tue, 20 Jan 1970 08:45:38 CST"
          - id: 27
            code: 15R-6E3-AO4-RST
            amount: "50.0000"
            status: active
            balance: "50.0000"
            to_name: Lyss
            order_id: 0
            template: "Christmas"
            to_email: test5@test.com
            from_name: Somethingelse
            from_email: test15@test.com
            customer_id: 0
            expiry_date: "Mon, 2 Jan 2023 08:45:38 CST"
            purchase_date: "Tue, 20 Jan 1970 08:45:38 CST"
    giftCertificate_Resp:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/giftCertificate_Full'
          example:
            id: 1
            customer_id: 5
            order_id: 116
            code: FFZ-5N4-C7M-S78
            to_name: John Doe
            to_email: johndoe@example.com
            from_name: Jane Doe
            from_email: janedoe@example.com
            amount: "10"
            balance: "0"
            status: active
            template: "Birthday"
            message: Happy Birthday!
            purchase_date: "Tue, 20 Jan 1970 08:45:38 CST"
            expiry_date: "Mon, 2 Jan 2023 08:45:38 CST"
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Marketing | modify | `store_v2_marketing` |
        |  Marketing | read-only | `store_v2_marketing_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header


openapi: '3.0.1'
info:
  title: Storefront Orders
  description: |- 
    Get order data immediately after an order is placed on the storefront.

    For info about API accounts, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts).
        
    For info about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#same-origin-cors-authentication).
  version: ''
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
servers:
  - url: 'https://{store_domain}/api/storefront'
    variables:
      store_domain:
        default: your_store.example.com
        description: 'The [URL authority](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_URL#authority) of the storefront.'
tags:
  - name: Order
paths:
  '/orders/{orderId}':
    get:
      tags:
        - Order
      summary: Get Order
      description: |-
        Returns *Order* data. This will return order data immediately after an order is placed on the storefront.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.
      operationId: OrdersByOrderIdGet
      parameters:
        - name: orderId
          in: path
          description: ID of an Order.
          required: true
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: integer
            format: int32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
components:
  schemas:
    Data:
      title: Data
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Order'
      description: 'Response data container for Order endpoints (`POST /order` and `POST /order/{orderId}`).'
      x-internal: false
    Order:
      title: Order
      type: object
      properties:
        orderId:
          multipleOf: 1
          minimum: 1
          type: number
          description: ''
          format: double
        cartId:
          type: string
          description: The ID of cart that was converted to order.
          format: uuid
        currency:
          $ref: '#/components/schemas/Currency'
        isTaxIncluded:
          type: boolean
          description: Whether this item is taxable.
        baseAmount:
          type: number
          description: Cost of cartʼs contents before applying discounts.
          format: double
        discountAmount:
          type: number
          description: Discounted amount.
          format: float
        giftWrappingCostTotal:
          type: number
          description: Gift wrapping for all items, including or excluding tax.
        orderAmount:
          type: number
          description: Sum of line-items amounts, minus cart-level discounts and coupons. This amount includes taxes where applicable.
          format: double
        orderAmountAsInteger:
          type: number
          description: Order amount represented in integer. Eg. 1234 for $12.34
          format: double
        coupons:
          type: array
          description: Array of `AppliedCoupon` objects applied to this cart.
          items:
            $ref: '#/components/schemas/AppliedCoupon'
        lineItems:
          type: array
          description: Array of `LineItem` objects.
          items:
            $ref: '#/components/schemas/OrderLineItem'
        customerId:
          type: string
          description: ''
        billingAddress:
          $ref: '#/components/schemas/AddressProperties'
        status:
          $ref: '#/components/schemas/Status'
        hasDigitalItems:
          type: boolean
          description: Specifies whether this order has at least one digital item.
        isDownloadable:
          type: boolean
          description: Specifies whether this order is fully paid, so that digital items can be downloaded.
        isComplete:
          type: boolean
          description: Specifies whether this order is complete and ready to be taken to the order confirmation page.
        customerMessage:
          type: string
          description: Shopperʼs provided message for the order.
        shippingCostTotal:
          type: integer
        shippingCostBeforeDiscount:
          type: integer
        handlingCostTotal:
          type: integer
        customerCanBeCreated:
          type: boolean
        taxes:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              amount:
                type: integer
        taxTotal:
          type: integer
        channelId:
          type: number
          description: ID of the channel which the order belongs to.
        consignments:
          $ref: '#/components/schemas/Consignments'
      x-internal: false
    Currency:
      title: Currency
      type: object
      properties:
        name:
          type: string
          description: The currency name.
        code:
          type: string
          description: 'ISO-4217 currency code. (See: http://en.wikipedia.org/wiki/ISO_4217.)'
        symbol:
          type: string
          description: The currency symbol.
        decimalPlaces:
          type: number
          description: Number of decimal places for the currency. For example, USD currency has two decimal places.
          format: double
      description: This will always be the same between cart and checkout.
      x-internal: false
    AppliedCoupon:
      title: Applied Coupon
      required:
        - code
      type: object
      properties:
        id:
          type: string
          description: The coupon ID.
        code:
          type: string
          description: the coupon code
        displayName:
          type: string
          description: The coupon title based on different types provided in control panel section.
        couponType:
          type: string
          description: Key name to identify the type of coupon.
        discountedAmount:
          type: number
          description: The discounted amount applied within a given context.
          format: double
      x-internal: false
    AppliedDiscount:
      title: Applied Discount
      type: object
      properties:
        coupon:
          type: number
          description: Property key is discount ID; property value is discount amount.
          example: 8.28
      x-internal: false
    OrderLineItem:
      title: Order Line Item
      required:
        - digitalItems
        - giftCertificate
        - physicalItems
      type: object
      properties:
        physicalItems:
          type: array
          description: Array of `ItemPhysical` objects.
          items:
            $ref: '#/components/schemas/ItemPhysical'
        digitalItems:
          type: array
          description: Array of `ItemDigital` objects.
          items:
            $ref: '#/components/schemas/OrderItemDigital'
        giftCertificate:
          type: array
          description: Array of `ItemGiftCertificate` objects.
          items:
            $ref: '#/components/schemas/OrderItemGiftCertificate'
      x-internal: false
    ItemPhysical:
      title: Item Physical
      required:
        - quantity
      type: object
      properties:
        id:
          type: string
          description: The line-item ID.
        parentId:
          type: string
          description: Bundled items will have their parentʼs item ID.
        variantId:
          type: number
          description: ID of the variant.
          format: double
        productId:
          type: number
          description: ID of the product.
          format: double
        sku:
          type: string
          description: SKU of the variant.
        name:
          type: string
          description: The itemʼs product name.
        url:
          type: string
          description: The product URL.
        quantity:
          type: number
          description: Quantity of this item.
          format: double
        brand:
          type: string
          description: The product's brand.
        isTaxable:
          type: boolean
          description: Whether the item is taxable.
        imageUrl:
          type: string
          description: A publicly-accessible URL for an image of this item.
        discounts:
          type: object
          properties: {}
          description: List of discounts applied to this item. If no discount applied, empty array is returned. If discount has been applied, discount object returned.
        discountAmount:
          type: number
          description: The total value of all discounts applied to this item (excluding coupon).
          format: double
        couponAmount:
          type: number
          description: The total value of all coupons applied to this item.
          format: double
        listPrice:
          type: number
          description: The itemʼs list price, as quoted by the manufacturer/distributor.
          format: double
        salePrice:
          type: number
          description: The itemʼs price after all discounts are applied. (The final price before tax calculation.)
          format: double
        extendedListPrice:
          type: number
          description: The itemʼs list price multiplied by the quantity.
          format: double
        extendedSalePrice:
          type: number
          description: The itemʼs sale price multiplied by the quantity.
          format: double
        type:
          type: string
          description: the product type - physical or digital.
        addedByPromotion:
          type: boolean
          description: Whether this item has been added automatically by a promotion.
        isShippingRequired:
          type: boolean
          description: Whether this item requires shipping to a physical address.
        giftWrapping:
          $ref: '#/components/schemas/GiftWrapping'
        categories:
          type: array
          description: Categories the item belongs to.
          items:
            type: object
      x-internal: false
    GiftWrapping:
      title: Gift Wrapping
      type: object
      properties:
        name:
          type: string
          description: ''
        message:
          type: string
          description: ''
        amount:
          type: number
          description: ''
          format: double
      x-internal: false
    OrderItemDigital:
      title: Order Item Digital
      required:
        - quantity
      type: object
      properties:
        id:
          type: string
          description: The line-item ID.
        parentId:
          type: string
          description: Bundled items will have their parentʼs item ID.
        variantId:
          type: number
          description: ID of the variant.
          format: double
        productId:
          type: number
          description: ID of the product.
          format: double
        sku:
          type: string
          description: SKU of the variant.
        name:
          type: string
          description: The itemʼs product name.
        url:
          type: string
          description: The product URL.
        quantity:
          type: number
          description: Quantity of this item.
          format: double
        brand:
          type: string
          description: The item's brand.
        isTaxable:
          type: boolean
          description: Whether the item is taxable.
        imageUrl:
          type: string
          description: A publicly-accessible URL for an image of this item.
        discounts:
          type: array
          description: A list of discounts applied to this item, as an array of AppliedDiscount objects.
          items:
            $ref: '#/components/schemas/AppliedDiscount'
        discountAmount:
          type: number
          description: The total value of all discounts applied to this item (excluding coupon).
          format: double
        couponAmount:
          type: number
          description: The total value of all coupons applied to this item.
          format: double
        listPrice:
          type: number
          description: The itemʼs list price, as quoted by the manufacturer/distributor.
          format: double
        salePrice:
          type: number
          description: The itemʼs price after all discounts are applied. (The final price before tax calculation.)
          format: double
        extendedListPrice:
          type: number
          description: The itemʼs list price multiplied by the quantity.
          format: double
        extendedSalePrice:
          type: number
          description: The itemʼs sale price multiplied by the quantity.
          format: double
        type:
          type: string
          description: the product type - physical or digital
        downloadFileUrls:
          type: array
          description: URLs to download all product files.
          items:
            type: string
        downloadPageUrl:
          type: string
          description: The URL for the combined downloads page.
        downloadSize:
          type: string
          description: 'Specifies the combined download size in human-readable style; for example, `30MB`.'
        categories:
          type: array
          description: Categories the item belongs to.
          items:
            type: object
      x-internal: false
    OrderItemGiftCertificate:
      title: Order Item Gift Certificate
      type: object
      properties:
        name:
          type: string
          description: The itemʼs product name.
        quantity:
          type: number
          description: Quantity of this item.
          format: double
        isTaxable:
          type: boolean
          description: Whether the item is taxable.
        amount:
          type: number
          description: Price of the item
          format: double
        type:
          type: string
          description: Explicitly specifying the gift certificate type
      x-internal: false
    AddressResponse:
      title: Address Response
      allOf:
        - $ref: '#/components/schemas/AddressProperties'
        - type: object
          properties:
            id:
              type: string
              description: ''
      x-internal: false
    AddressProperties:
      title: Address Properties
      required:
        - countryCode
      type: object
      properties:
        firstName:
          type: string
          description: ''
        lastName:
          type: string
          description: ''
        email:
          type: string
          description: ''
        company:
          type: string
          description: ''
        address1:
          type: string
          description: ''
        address2:
          type: string
          description: ''
        city:
          type: string
          description: ''
        stateOrProvince:
          type: string
          description: Represents state or province.
        stateOrProvinceCode:
          type: string
          description: ''
        country:
          type: string
          description: ''
        countryCode:
          type: string
          description: 'ISO 3166-1 alpha-2 country code. (See: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).'
        postalCode:
          type: string
          description: ''
        phone:
          pattern: '^\+?[1-9]\d{1,14}(x\d{1-5})?$'
          type: string
          description: ''
        customFields:
          type: array
          description: ''
          items:
            $ref: '#/components/schemas/CustomField'
      x-internal: false
    CustomField:
      title: Custom Field
      type: object
      properties:
        fieldId:
          type: string
          description: ''
        fieldValue:
          type: string
          description: This can also be an array for fields that need to support list of values; for example, a set of checkboxes.
      x-internal: false
    Status:
      title: Status
      type: string
      description: Order status.
      example: INCOMPLETE
      enum:
        - INCOMPLETE
        - PENDING
        - SHIPPED
        - PARTIALLY_SHIPPED
        - REFUNDED
        - CANCELLED
        - DECLINED
        - AWAITING_PAYMENT
        - AWAITING_PICKUP
        - AWAITING_SHIPMENT
        - COMPLETED
        - AWAITING_FULFILLMENT
        - MANUAL_VERIFICATION_REQUIRED
        - DISPUTED
        - PARTIALLY_REFUNDED
      x-internal: false
    BaseItem:
      title: Base Item
      required:
        - quantity
      type: object
      properties:
        id:
          type: string
          description: The line-item ID.
        parentId:
          type: string
          description: Bundled items will have their parentʼs item ID.
        variantId:
          type: number
          description: ID of the variant.
          format: double
        productId:
          type: number
          description: ID of the product.
          format: double
        sku:
          type: string
          description: SKU of the variant.
        name:
          type: string
          description: The itemʼs product name.
        url:
          type: string
          description: The product URL.
        quantity:
          type: number
          description: Quantity of this item.
          format: double
        isTaxable:
          type: boolean
          description: Whether the item is taxable.
        imageUrl:
          type: string
          description: A publicly-accessible URL for an image of this item.
        discounts:
          type: array
          description: A list of discounts applied to this item, as an array of AppliedDiscount objects.
          items:
            $ref: '#/components/schemas/AppliedDiscount'
        discountAmount:
          type: number
          description: The total value of all discounts applied to this item (excluding coupon).
          format: double
        couponAmount:
          type: number
          description: The total value of all coupons applied to this item.
          format: double
        listPrice:
          type: number
          description: The itemʼs list price, as quoted by the manufacturer/distributor.
          format: double
        salePrice:
          type: number
          description: The itemʼs price after all discounts are applied. (The final price before tax calculation.)
          format: double
        extendedListPrice:
          type: number
          description: The itemʼs list price multiplied by the quantity.
          format: double
        extendedSalePrice:
          type: number
          description: The itemʼs sale price multiplied by the quantity.
          format: double
        type:
          type: string
          description: the product type - physical or digital
      x-internal: false
    order_Nate:
      type: object
      properties:
        orderId:
          type: integer
        cartId:
          type: string
        currency:
          type: object
          properties:
            name:
              type: string
            code:
              type: string
            symbol:
              type: string
            decimalPlaces:
              type: integer
        isTaxIncluded:
          type: boolean
        baseAmount:
          type: number
        discountAmount:
          type: integer
        orderAmount:
          type: number
        orderAmountAsInteger:
          type: integer
        shippingCostTotal:
          type: integer
        shippingCostBeforeDiscount:
          type: integer
        handlingCostTotal:
          type: integer
        coupons:
          type: array
          items:
            type: object
            properties: {}
        lineItems:
          type: object
          properties:
            physicalItems:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  productId:
                    type: integer
                  name:
                    type: string
                  sku:
                    type: string
                  quantity:
                    type: integer
                  isTaxable:
                    type: boolean
                  imageUrl:
                    type: string
                  discounts:
                    type: array
                    items:
                      type: object
                      properties: {}
                  discountAmount:
                    type: integer
                  brand:
                    type: string
                    description: The product's brand.
                  listPrice:
                    type: number
                  salePrice:
                    type: number
                  extendedListPrice:
                    type: number
                  extendedSalePrice:
                    type: number
                  extendedComparisonPrice:
                    type: number
                  categories:
                    type: array
                    items:
                      type: object
                      properties: {}
                  type:
                    type: string
                  variantId:
                    type: integer
            digitalItems:
              type: array
              items:
                type: object
                properties: {}
            giftCertificates:
              type: array
              items:
                type: object
                properties: {}
        customerId:
          type: integer
        billingAddress:
          type: object
          properties:
            firstName:
              type: string
            lastName:
              type: string
            email:
              type: string
            company:
              type: string
            address1:
              type: string
            address2:
              type: string
            city:
              type: string
            stateOrProvince:
              type: string
            stateOrProvinceCode:
              type: string
            country:
              type: string
            countryCode:
              type: string
            postalCode:
              type: string
            phone:
              type: string
            customFields:
              type: array
              items:
                type: object
                properties: {}
        status:
          type: string
        customerCanBeCreated:
          type: boolean
        hasDigitalItems:
          type: boolean
        isDownloadable:
          type: boolean
        isComplete:
          type: boolean
        customerMessage:
          type: string
        taxes:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              amount:
                type: integer
        taxTotal:
          type: integer
      x-internal: false
    Consignments:
      title: Consignments
      type: object
      properties:
        shipping:
          type: array
          description: List of shipping consignments
          items:
            $ref: '#/components/schemas/ShippingConsignment'
      description: All the consignments of the order.
      x-examples:
        example-1:
          shipping:
            - lineItems:
                - id: 8
              shippingAddressId: 1
              firstName: first1
              lastName: last1
              company: company1
              address1: 2802 Skyway Cir
              address2: Balcony
              city: Austin
              stateOrProvince: Texas
              postalCode: '78704'
              country: United States
              countryCode: US
              email: first1@bigcommerce.com
              phone: '0410123452'
              itemsTotal: 1
              itemsShipped: 0
              shippingMethod: Flat Rate
              baseCost: 15.5
              costExTax: 15.5
              costIncTax: 16.7
              costTax: 1.2
              costTaxClassId: 2
              baseHandlingCost: 0
              handlingCostExTax: 0
              handlingCostIncTax: 0
              handlingCostTax: 0
              handlingCostTaxClassId: 2
              shippingZoneId: 1
              shippingZoneName: United States
              customFields:
                - name: special note
                  value: super rare
      x-internal: false
    ShippingConsignment:
      title: ShippingConsignment
      type: object
      properties:
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/ConsignmentLineItem'
        shippingAddressId:
          type: integer
          example: 1
        firstName:
          type: string
          example: first1
        lastName:
          type: string
          example: last1
        company:
          type: string
          example: company1
        address1:
          type: string
          example: 2802 Skyway Cir
        address2:
          type: string
          example: Balcony
        city:
          type: string
          example: Austin
        stateOrProvince:
          type: string
          example: Texas
        postalCode:
          type: string
          example: '78704'
        country:
          type: string
          example: United States
        countryCode:
          type: string
          example: US
        email:
          type: string
          example: first1@bigcommerce.com
        phone:
          type: string
          example: '0410123452'
        itemsTotal:
          type: integer
          example: 1
        itemsShipped:
          type: integer
          example: 0
        shippingMethod:
          type: string
          example: Flat Rate
        baseCost:
          type: number
          example: 15.5
        costExTax:
          type: number
          example: 15.5
        costIncTax:
          type: number
          example: 16.7
        costTax:
          type: number
          example: 1.2
        costTaxClassId:
          type: integer
          example: 2
        baseHandlingCost:
          type: number
          example: 0.00
        handlingCostExTax:
          type: number
          example: 0.00
        handlingCostIncTax:
          type: number
          example: 0.00
        handlingCostTax:
          type: number
          example: 0.00
        handlingCostTaxClassId:
          type: integer
          example: 2
        shippingZoneId:
          type: number
          example: 1
        shippingZoneName:
          type: string
          example: United States
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/ConsignmentFormField'
      description: Shipping consignment
      x-examples:
        example-1:
          lineItems:
            - id: 4
          shippingAddressId: 1
          firstName: first1
          lastName: last1
          company: company1
          address1: 2802 Skyway Cir
          address2: Balcony
          city: Austin
          stateOrProvince: Texas
          postalCode: '78704'
          country: United States
          countryCode: US
          email: first1@bigcommerce.com
          phone: '0410123452'
          itemsTotal: 1
          itemsShipped: 0
          shippingMethod: Flat Rate
          baseCost: 15.5
          costExTax: 15.5
          costIncTax: 16.7
          costTax: 1.2
          costTaxClassId: 2
          baseHandlingCost: 0
          handlingCostExTax: 0
          handlingCostIncTax: 0
          handlingCostTax: 0
          handlingCostTaxClassId: 2
          shippingZoneId: 1
          shippingZoneName: United States
          customFields:
            - name: special note
              value: super rare
      x-internal: false
    ConsignmentLineItem:
      title: ConsignmentLineItem
      type: object
      properties:
        id:
          type: integer
          example: 4
      description: ''
      x-internal: false
    ConsignmentFormField:
      title: ConsignmentFormField
      type: object
      properties:
        name:
          type: string
          example: special note
        value:
          type: string
          nullable: true
          example: super rare
      x-internal: false
    PickupConsignment:
      title: PickupConsignment
      type: object
      properties:
        id:
          type: integer
          example: 3
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/ConsignmentLineItem'
        pickupMethodId:
          type: integer
          example: 10
        pickupMethodDisplayName:
          type: string
          example: 'Pickup Method 10: Pickup at Location 1'
        collectionInstructions:
          type: string
          example: Pickup Method 10 Collection Instructions
        collectionTimeDescription:
          type: string
          example: Pickup Method 10 Collection Time Description
        location:
          $ref: '#/components/schemas/PickupConsignmentLocation'
      description: Pickup consignment
      x-examples:
        example-1:
          id: 3
          lineItems:
            - id: 4
          pickupMethodId: 10
          pickupMethodDisplayName: 'Pickup Method 10: Pickup at Location 1'
          collectionInstructions: Pickup Method 10 Collection Instructions
          collectionTimeDescription: Pickup Method 10 Collection Time Description
          location:
            id: 1
            name: Location 1
            address1: 2802 Skyway Cir
            address2: string
            city: Austin
            stateOrProvince: Texas
            postalCode: '78704'
            country: United States
            countryCode: US
            email: loc1@bigcommerce.com
            phone: '0410123452'
      x-internal: false
    PickupConsignmentLocation:
      title: PickupConsignmentLocation
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Location 1
        address1:
          type: string
          example: 2802 Skyway Cir
        address2:
          type: string
        city:
          type: string
          example: Austin
        stateOrProvince:
          type: string
          example: Texas
        postalCode:
          type: string
          example: '78704'
        country:
          type: string
          example: United States
        countryCode:
          type: string
          example: US
        email:
          type: string
          example: loc1@bigcommerce.com
        phone:
          type: string
          example: '0410123452'
      x-examples:
        example-1:
          id: 1
          name: Location 1
          address1: 2802 Skyway Cir
          address2: string
          city: Austin
          stateOrProvince: Texas
          postalCode: '78704'
          country: United States
          countryCode: US
          email: loc1@bigcommerce.com
          phone: '0410123452'
      x-internal: false
  responses:
    order_Resp:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Order'


openapi: '3.0.0'
info:
  version: ''
  title: Orders V2
  description: |-
    Manage order coupons, messages, products, shipping addresses, statuses, taxes, shipments, and shipping address quotes.
    
    ## Order
    
    The Order object contains a record of the purchase agreement between a shopper and a merchant. To learn more about creating orders, see [Orders API Guide](/api-docs/orders/orders-api-overview).
    
    ### Currency Fields
    
    The **default** currency refers to the transactional currency which is the currency the shopper pays in.
    
    The **display** currency refers to the presentational currency used to present prices to the shopper on the storefront.
    
    * `currency_id` - the display currency ID. Depending on the currency selected, the value may be different from the transactional currency.
    * `currency_code` - the currency code of the display currency used to present prices to the shopper on the storefront. Depending on the currency selected, the value may be different from the transactional currency.
    * `currency_exchange_rate` - the exchange rate between the store’s default currency and the display currency. For orders created using the V2 endpoints, this value is always 1 (only in the storefront this value can be different to 1).
    * `default_currency_id` - the transactional currency ID.
    * `default_currency_code` - the currency code of the transactional currency the shopper pays in.
    
    The following additional fields are returned on orders when Multi-Currency is enabled on the store:
    
    * `store_default_currency_code` - the currency code of the store’s default currency.
    * `store_default_to_transactional_exchange_rate` - the exchange rate between the store’s default currency and the transactional currency used in the order.
    
    **Example:**
    
    ```json
    {
      ...
      "currency_id": 4,
      "currency_code": "EUR",
      "currency_exchange_rate": 1,
      "default_currency_id": 4,
      "default_currency_code": "EUR",
      "store_default_currency_code": "USD",
      "store_default_to_transactional_exchange_rate": "100.0000000000"
      ...
    }
    ```
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
security:
  - X-Auth-Token: []
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v2'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
tags:
  - name: Orders
  - name: Order Coupons
  - name: Order Products
  - name: Order Taxes
  - name: Order Status
  - name: Order Shipments
  - name: Order Shipping Addresses
  - name: Order Messages
  - name: Order Shipping Addresses Quotes
  - name: Order Consignments
paths:
  '/orders/{order_id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/order_id_path'
    get:
      description: Gets an *Order*. To learn more about creating or updating orders, see [Orders Overview](/api-docs/orders/orders-api-overview).
      summary: Get an Order
      tags:
        - Orders
      parameters:
        - $ref: '#/components/parameters/order_includes'
      responses:
        '200':
          $ref: '#/components/responses/order_Resp'
        '404':
          description: "The requested resource was not found."
          content:
            application/json:
              schema: {}
      operationId: getAnOrder
    put:
      description: |-
        Updates an *Order*. 
        
        To add a product to an existing order, don't include `id` in the body. Include `product_options` if adding a product with variants.
        
        To update a product in an order, include `id` in the body. The body should only contain the fields that need to be updated. Those fields that are omitted will not be changed.
        
        To remove a product from an order, set that product’s `quantity` to `0`.
        
        To learn more about creating or updating orders, see [Orders Overview](/api-docs/orders/orders-api-overview).
      summary: Update an Order
      tags:
        - Orders
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order_Put'
            examples:
              application/json:
                value:
                  status_id: 0
                  customer_id: 11
                  billing_address:
                    first_name: Jane
                    last_name: Doe
                    street_1: 123 Main Street
                    city: Austin
                    state: Texas
                    zip: '78751'
                    country: United States
                    country_iso2: US
                    email: janedoe@example.com
                  shipping_addresses:
                    - first_name: Trish
                      last_name: Test
                      company: Acme Pty Ltd
                      street_1: 666 Sussex St
                      city: Austin
                      state: Texas
                      zip: '78751'
                      country: United States
                      country_iso2: US
                      email: elsie@example.com
                  products:
                    - name: BigCommerce Poster
                      quantity: 1
                      price_inc_tax: 10.98
                      price_ex_tax: 10
                    - name: BigCommerce Coffee Mug
                      quantity: 1
                      price_inc_tax: 50
                      price_ex_tax: 45
                    - product_id: 184
                      product_options:
                        - id: 200
                          value: '180'
                        - id: 230
                          value: '192'
                  customer_locale: en
              Adding an existing product to order:
                value:
                  products:
                    - product_id: 123
                      quantity: 5
                      product_options:
                        id: 56
                        value: 12
                      price_inc_tax: 12.45
                      price_ex_tax: 10.12
              Adding a new product to order:
                value:
                  products:
                    - name: BigCommerce Coffee Mug
                      quantity: 1
                      price_inc_tax: 12.45
                      price_ex_tax: 10.12
                      sku: MUG-GRY
              Removing a product from an order:
                value:
                  products:
                    - id: 117
                      product_id: 123
                      quantity: 1
                      product_options:
                        id: 56
                        value: 12
                      price_inc_tax: 12.45
                      price_ex_tax: 10.12
        required: true
      responses:
        '200':
          $ref: '#/components/responses/order_Resp'
      operationId: updateAnOrder
    delete:
      description: Archives an order. To remove a single product from an order, see `PUT /orders/{order_id}`.
      summary: Archive an Order
      tags:
        - Orders
      responses:
        '204':
          description: ''
      operationId: deleteAnOrder
  '/orders/count':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      description: Gets an array of orders in the store organized by order status.
      summary: Get a Count of Orders
      tags:
        - Orders
      responses:
        '200':
          $ref: '#/components/responses/ordersCount_Resp'
      operationId: getCountOrder
  '/orders':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      description: |-
        Gets a list of orders using the filter query.
        
        **Notes**
        
        * The default sort is by order id, from lowest to highest.
        * By default, requests sent without parameters will only return 50 orders. 

      tags:
        - Orders
      parameters:
        - $ref: '#/components/parameters/min_id'
        - $ref: '#/components/parameters/max_id'
        - $ref: '#/components/parameters/min_total'
        - $ref: '#/components/parameters/max_total'
        - $ref: '#/components/parameters/customer_id'
        - $ref: '#/components/parameters/email'
        - $ref: '#/components/parameters/status_id'
        - $ref: '#/components/parameters/cart_id'
        - $ref: '#/components/parameters/payment_method'
        - $ref: '#/components/parameters/min_date_created'
        - $ref: '#/components/parameters/max_date_created'
        - $ref: '#/components/parameters/min_date_modified'
        - $ref: '#/components/parameters/max_date_modified'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/is_deleted'
        - $ref: '#/components/parameters/channel_id'
        - $ref: '#/components/parameters/order_includes'
      responses:
        '200':
          $ref: '#/components/responses/orderCollection_Resp'
      summary: Get All Orders
      operationId: getAllOrders
    post:
      description: |-
        Creates an *Order*. To learn more about creating or updating orders, see [Orders Overview](/api-docs/orders/orders-api-overview).

        Create an order with an existing catalog product or a custom product.

        **Required Fields**

        * `products` or `consignments`
        * `billing_address`

        When you create an order, the `consignment(s)` array allows you to create pickup consignments.
        - An order can have either a pickup or a shipping fulfillment method, but not both.
        - An order can have only one pickup consignment.

        Choose from one of the following:
        1. Create order with a shipping fulfillment method using `shipping_addresses` and `products`, i.e. legacy mode
        2. Create order with a pickup fulfillment method using `consignments`, i.e. Consignment mode

        You can fulfill an order with shipping or pickup, but not both.
        
        This means that if the `consignments` array is present in the request, then _none_ of the following may be present and vice-versa:
        - `shipping_addresses`
        - `products`
      summary: Create an Order
      tags:
        - Orders
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/order_includes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order_Post'
            examples:
              Product with Variants:
                value:
                  status_id: 0
                  customer_id: 1
                  billing_address:
                    first_name: Jane
                    last_name: Doe
                    street_1: 123 Main Street
                    city: Austin
                    state: Texas
                    zip: 78751
                    country: United States
                    country_iso2: US
                    email: janedoe@example.com
                  products:
                    - product_id: 118
                      quantity: 1
                      variant_id: 93
              Custom Product:
                value:
                  status_id: 0
                  customer_id: 1
                  billing_address:
                    first_name: Jane
                    last_name: Doe
                    street_1: 123 Main Street
                    city: Austin
                    state: Texas
                    zip: '78751'
                    country: United States
                    country_iso2: US
                    email: janedoe@email.com
                  products:
                    - name: BigCommerce Coffee Mug
                      quantity: 1
                      price_inc_tax: 50
                      price_ex_tax: 45
              Product with Options:
                value:
                  status_id: 0
                  customer_id: 11
                  billing_address:
                    first_name: Jane
                    last_name: Doe
                    street_1: 123 Main Street
                    city: Austin
                    state: Texas
                    zip: '78751'
                    country: United States
                    country_iso2: US
                    email: janedoe@example.com
                  shipping_addresses:
                    - first_name: Trish
                      last_name: Test
                      company: Acme Pty Ltd
                      street_1: 666 Sussex St
                      city: Austin
                      state: Texas
                      zip: '78751'
                      country: United States
                      country_iso2: US
                      email: elsie@example.com
                  products:
                    - product_id: 184
                      quantity: 5
                      product_options:
                        - id: 200
                          value: '180'
                        - id: 230
                          value: '192'
              Product with a Drop Down and a Text Field Modifier:
                value:
                  status_id: 0
                  customer_id: 11
                  billing_address:
                    first_name: Jane
                    last_name: Doe
                    street_1: 123 Main Street
                    city: Austin
                    state: Texas
                    zip: '78751'
                    country: United States
                    country_iso2: US
                    email: janedoe@example.com
                  shipping_addresses:
                    - first_name: Trish
                      last_name: Test
                      company: Acme Pty Ltd
                      street_1: 666 Sussex St
                      city: Austin
                      state: Texas
                      zip: '78751'
                      country: United States
                      country_iso2: US
                      email: elsie@example.com
                  products:
                    - product_id: 184
                      quantity: 5
                      product_options:
                        - id: 200
                          value: '180'
                        - id: 230
                          value: Custom Message
              Multiple Products:
                value:
                  status_id: 0
                  customer_id: 11
                  billing_address:
                    first_name: Jane
                    last_name: Doe
                    street_1: 123 Main Street
                    city: Austin
                    state: Texas
                    zip: '78751'
                    country: United States
                    country_iso2: US
                    email: janedoe@example.com
                  shipping_addresses:
                    - first_name: Trish
                      last_name: Test
                      company: Acme Pty Ltd
                      street_1: 666 Sussex St
                      city: Austin
                      state: Texas
                      zip: '78751'
                      country: United States
                      country_iso2: US
                      email: elsie@example.com
                  products:
                    - name: BigCommerce Poster
                      quantity: 1
                      price_inc_tax: 10.98
                      price_ex_tax: 10
                    - name: BigCommerce Coffee Mug
                      quantity: 1
                      price_inc_tax: 50
                      price_ex_tax: 45
                    - product_id: 184
                      product_options:
                        - id: 200
                          value: '180'
                        - id: 230
                          value: '192'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/order_Resp'
      operationId: createAnOrder
    delete:
      description: Archives all orders.
      summary: Delete All Orders
      tags:
        - Orders
      parameters:
        - $ref: '#/components/parameters/limit'
      responses:
        '204':
          description: ''
      operationId: deleteAllOrders
  '/orders/{order_id}/coupons':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/order_id_path'
    get:
      description: |-
        Lists all order coupons. Optional parameters can be passed in.
        
        |Type `int`|Type Name|
        |-|-|
        |`0`|`per_item_discount`|
        |`1`|`percentage_discount`|
        |`2`|`per_total_discount`|
        |`3`|`shipping_discount`|
        |`4`|`free_shipping`|
        |`5`|`promotion`|
      summary: List Order Coupons
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/orderCouponsCollection_Resp'
      tags:
        - Order Coupons
      operationId: getAllOrderCoupons
  '/orders/{order_id}/products':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/order_id_path'
    get:
      description: Lists 50 order products on an order using `order_id`. By default, items sort from lowest to highest according to a newly created ID, separate from the `order_id` and the `product_id`.
      summary: List Order Products
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/orderProductsCollection_Resp'
      tags:
        - Order Products
      operationId: getAllOrderProducts
  '/orders/{order_id}/shipping_addresses':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/order_id_path'
    get:
      description: |-
        Get all shipping addresses on an order using the `order_id`.
        
        Returned in the response is shipping_quotes object. Please use the Get Shipping Quotes Endpoint. Using the response will return a 204 for the shipping quote.
      summary: Get Order Shipping Addresses
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/orderShippingAddressCollection_Resp'
      tags:
        - Order Shipping Addresses
      operationId: getAllShippingAddresses
  '/order_statuses':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      description: |-
        Returns a Collection of All Order Statuses.
        
        **Order Status Descriptions:**
        |Status ID | Name  | Description |
        |--|--|--|
        | 0 | Incomplete  | An incomplete order happens when a shopper reached the payment page, but did not complete the transaction. |
        | 1 | Pending |Customer started the checkout process, but did not complete it. |
        | 2 | Shipped | Order has been shipped, but receipt has not been confirmed; seller has used the Ship Items action. |
        | 3 | Partially Shipped | Only some items in the order have been shipped, due to some products being pre-order only or other reasons. |
        | 4 | Refunded | Seller has used the Refund action. |
        | 5 | Cancelled | Seller has cancelled an order, due to a stock inconsistency or other reasons. |
        | 6 |Declined | Seller has marked the order as declined for lack of manual payment, or other reasons. |
        | 7 | Awaiting Payment | Customer has completed checkout process, but payment has yet to be confirmed. |
        | 8 | Awaiting Pickup | Order has been pulled, and is awaiting customer pickup from a seller-specified location. |
        | 9 | Awaiting Shipment | Order has been pulled and packaged, and is awaiting collection from a shipping provider. |
        | 10 | Completed | Client has paid for their digital product and their file(s) are available for download. |
        | 11 | Awaiting Fulfillment | Customer has completed the checkout process and payment has been confirmed. |
        | 12 | Manual Verification Required | Order is on hold while some aspect needs to be manually confirmed. |
        | 13 | Disputed | Customer has initiated a dispute resolution process for the PayPal transaction that paid for the order. |
        | 14 | Partially Refunded | Seller has partially refunded the order. |
      summary: Get All Order Statuses
      responses:
        '200':
          $ref: '#/components/responses/orderStatusCollection_Resp'
      tags:
        - Order Status
      operationId: getOrderStatus
  '/order_statuses/{status_id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/status_id_path'
    get:
      description: |-
        Returns a single order status.
        
        **Order Status Descriptions**
        |Status ID | Name  | Description |
        |:--|:--|:--|
        | 0 | Incomplete  | An incomplete order happens when a shopper reached the payment page, but did not complete the transaction. |
        | 1 | Pending |Customer started the checkout process, but did not complete it. |
        | 2 | Shipped | Order has been shipped, but receipt has not been confirmed; seller has used the Ship Items action. |
        | 3 | Partially Shipped | Only some items in the order have been shipped, due to some products being pre-order only or other reasons. |
        | 4 | Refunded | Seller has used the Refund action. |
        | 5 | Cancelled | Seller has cancelled an order, due to a stock inconsistency or other reasons. |
        | 6 |Declined | Seller has marked the order as declined for lack of manual payment, or other reasons. |
        | 7 | Awaiting Payment | Customer has completed checkout process, but payment has yet to be confirmed. |
        | 8 | Awaiting Pickup | Order has been pulled, and is awaiting customer pickup from a seller-specified location. |
        | 9 | Awaiting Shipment | Order has been pulled and packaged, and is awaiting collection from a shipping provider. |
        | 10 | Completed | Client has paid for their digital product and their file(s) are available for download. |
        | 11 | Awaiting Fulfillment | Customer has completed the checkout process and payment has been confirmed. |
        | 12 | Manual Verification Required | Order is on hold while some aspect needs to be manually confirmed. |
        | 13 | Disputed | Customer has initiated a dispute resolution process for the PayPal transaction that paid for the order. |
        | 14 | Partially Refunded | Seller has partially refunded the order. |
      summary: Get a Single Order Status by ID
      responses:
        '200':
          $ref: '#/components/responses/orderStatus_Resp'
      tags:
        - Order Status
      operationId: getAOrderStatus
  '/orders/{order_id}/taxes':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/order_id_path'
    get:
      description: |-
        Gets all order taxes using `order_id`.
        Each tax applied to an order. This information can be useful for reporting purposes.
        Pass in the query parameter `?details=true` to return extra details about order taxes.
        `order_product_id` and `line_item_type` are also returned.
        
        All values are read-only.
      summary: Get All Order Taxes
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
        - in: query
          name: details
          description: To return detailed tax information, pass in the details query.
          schema:
            type: string
            default: 'true'
      responses:
        '200':
          $ref: '#/components/responses/orderTaxes_Resp'
      tags:
        - Order Taxes
      operationId: getOrderTaxes
  '/orders/{order_id}/shipments':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/order_id_path'
    get:
      description: Gets a list of all shipments on an order.
      summary: Get Order Shipments
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/orderShipmentCollection_Resp'
      tags:
        - Order Shipments
      operationId: getAllOrderShipments
    post:
      description: |
        Creates an *Order Shipment*. For more details, see [Shipping an Order](/api-docs/orders/orders-api-overview#creating-order-shipments).
        
        **Required Fields**
        *   order_address_id
        *   items
        
        **Usage notes**

        There are three methods for generating a tracking link for a shipment:

        1. Use `shipping_provider` and `tracking_number`: This generates an automatic tracking link that you can click from the BigCommerce control panel and customer-facing emails. However, the `tracking_link` property in the API response will remain empty.

        2. Use `tracking_carrier` and `tracking_number`: This also creates an automatic tracking link that you can click in both the BigCommerce control panel and customer-facing emails. Like the previous method, the `tracking_link` property in the API response will be empty.

        3. Supply a custom `tracking_link`: By providing a value for the `tracking_link` property, you can use your own tracking link within the BigCommerce control panel and in customer-facing emails. The API response will return your supplied `tracking_link` as part of the response. 
        
        Acceptable values for `shipping_provider` include an empty string (`""`), `auspost`, `carrier_{your_carrier_id}` (only used if the carrier is a [third-party Shipping Provider](/api-docs/providers/shipping)), `canadapost`, `endicia`, `usps`, `fedex`, `royalmail`, `ups`, `upsready`, `upsonline`, or `shipperhq`.
        
        Acceptable values for `tracking_carrier` include an empty string (`""`) or one of the valid [tracking-carrier values](https://github.com/bigcommerce/dev-docs/blob/master/assets/csv/tracking_carrier_values.csv).
      summary: Create Order Shipment
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orderShipment_Post'
            examples: {}
        required: true
      responses:
        '201':
          $ref: '#/components/responses/orderShipment_Resp'
      tags:
        - Order Shipments
      operationId: createOrderShipments
    delete:
      description: Deletes all shipments associated with an order.
      summary: Delete Order Shipments
      responses:
        '204':
          description: ''
      tags:
        - Order Shipments
      operationId: deleteAllOrderShipments
  '/orders/{order_id}/shipments/count':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/order_id_path'
    get:
      description: Gets a count of the number of shipments that have been made for a single order.
      summary: Get Count of Order Shipments
      responses:
        '200':
          $ref: '#/components/responses/orderCount_Resp'
      tags:
        - Order Shipments
      operationId: getCountShipments
  '/orders/{order_id}/shipments/{shipment_id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/order_id_path'
      - $ref: '#/components/parameters/shipment_id_path'
    get:
      tags:
        - Order Shipments
      responses:
        '200':
          $ref: '#/components/responses/orderShipment_Resp'
      operationId: getOrderShipment
      summary: Get a Shipment
      description: Gets an order shipment.
    put:
      description: Updates an existing shipment associated with an order.
      summary: Update a Shipment
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orderShipment_Put'
            examples:
              application/json:
                value:
                  tracking_number: EJ958083578US
                  order_address_id: 1
                  shipping_provider: ''
                  items:
                    - order_product_id: 15
                      quantity: 2
        required: true
      responses:
        '200':
          $ref: '#/components/responses/orderShipment_Resp'
      tags:
        - Order Shipments
      operationId: updateOrderShipment
    delete:
      description: Deletes a shipment associated with an order.
      summary: Delete an Order Shipment
      responses:
        '204':
          description: ''
      tags:
        - Order Shipments
      operationId: deleteOrderShipment
  '/orders/{order_id}/messages':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/order_id_path'
    get:
      responses:
        '200':
          $ref: '#/components/responses/orderMessagesCollection_Resp'
      summary: Get Order Messages
      description: Gets the messages associated with an order.
      tags:
        - Order Messages
      parameters:
        - $ref: '#/components/parameters/min_id'
        - $ref: '#/components/parameters/max_id'
        - $ref: '#/components/parameters/customer_id'
        - $ref: '#/components/parameters/min_date_created'
        - $ref: '#/components/parameters/max_date_created'
        - $ref: '#/components/parameters/is_flagged'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
      operationId: getOrderMessages
  '/orders/{order_id}/products/{product_id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/order_id_path'
      - $ref: '#/components/parameters/product_id_path'
    get:
      responses:
        '200':
          $ref: '#/components/responses/orderProductLineItem_Resp'
      summary: Get an Order Product
      description: Gets a product line item associated with the order.
      tags:
        - Order Products
      operationId: getAnOrderProduct
  '/orders/{order_id}/shipping_addresses/{id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/order_id_path'
      - name: id
        in: path
        description: Shipping address ID.
        required: true
        schema:
          type: string
    get:
      responses:
        '200':
          $ref: '#/components/responses/orderShippingAddress_Resp'
      summary: Get a Shipping Address
      description: |-
        Gets a shipping address associated with an order.
        
        Returned in the response is shipping_quotes object. Please use the Get Shipping Quotes Endpoint. Using the response will return a 204 for the shipping quote.
      tags:
        - Order Shipping Addresses
      operationId: getAShippingAddress
    put:
      summary: Update a Shipping Address
      operationId: updateAShippingAddress
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderShippingAddress'
              examples:
                response:
                  value:
                    id: 1
                    order_id: 100
                    first_name: first
                    last_name: last
                    company: company
                    street_1: street 1
                    street_2: street 2
                    city: Sydney
                    zip: '2000'
                    country: Australia
                    country_iso2: AU
                    state: New South Wales
                    email: email@bigcommerce.com
                    phone: phone
                    items_total: 1
                    items_shipped: 0
                    shipping_method: Flat Rate
                    base_cost: '15.0000'
                    cost_ex_tax: '15.0000'
                    cost_inc_tax: '15.0000'
                    cost_tax: '0.0000'
                    cost_tax_class_id: 2
                    base_handling_cost: '0.0000'
                    handling_cost_ex_tax: '0.0000'
                    handling_cost_inc_tax: '0.0000'
                    handling_cost_tax: '0.0000'
                    handling_cost_tax_class_id: 2
                    shipping_zone_id: 1
                    shipping_zone_name: United States
                    shipping_quotes:
                      url: 'https://api-proxy.service.bcdev/stores/17hoqh4ddx/v2/orders/100/shipping_addresses/1/shipping_quotes'
                      resource: /orders/100/shipping_addresses/1/shipping_quotes
                    form_fields: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    status:
                      type: integer
                    message:
                      type: string
              examples:
                response:
                  value:
                    - status: 404
                      message: The field 'item_total' cannot be written to. Please remove it from your request before trying again.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    status:
                      type: integer
                    message:
                      type: string
              examples:
                response:
                  value:
                    - status: 404
                      message: The requested resource was not found.
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shippingAddress_Put'
            examples:
              application/json:
                value:
                  first_name: first
                  last_name: last
                  company: company
                  street_1: street 1
                  street_2: street 2
                  city: Sydney
                  zip: '2000'
                  country: Australia
                  country_iso2: AU
                  state: New South Wales
                  email: email2@bigcommerce.com
                  phone: '468444123'
      description: |-
        Update a shipping address associated with an order.
        
        **Note**: Updating a shipping address will NOT trigger the recalculation of shipping cost and tax
      tags:
        - Order Shipping Addresses
  '/orders/{order_id}/shipping_addresses/{shipping_address_id}/shipping_quotes':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/order_id_path'
      - $ref: '#/components/parameters/shipping_address_id_path'
    get:
      responses:
        '200':
          $ref: '#/components/responses/shippingQuotes_Resp'
      summary: Get Order Shipping Quotes
      description: |-
        Gets all shipping quotes persisted on an order.
        
        This is a read-only endpoint and the output can vary based on the shipping quote. A shipping quote can only be generated using the storefront at this time. Orders that are created in the control panel or using the API return a 204 for this endpoint since a shipping quote is not generated during that process.
      tags:
        - Order Shipping Addresses Quotes
      operationId: getShippingQuotes
  '/orders/{order_id}/consignments':
    parameters:
      - schema:
          type: string
        name: order_id
        in: path
        required: true
      - name: include
        in: query
        description: |-
          * `consignments.line_items` - include the response returned from the request to the `/orders/{order_id}/products` endpoint in consignments.
        schema:
          type: string
          enum:
            - consignments.line_items
    get:
      summary: Get Consignments
      tags:
        - Order Consignments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderConsignment_Get'
              examples:
                Pickup Consignments:
                  value:
                    pickups:
                      - id: 99
                        pickup_method_id: 1
                        pickup_method_display_name: Pick Up
                        collection_instructions: Bring your ID
                        collection_time_description: 9am - 6pm
                        location:
                          id: 1
                          name: Location 1
                          code: LOCATION-1
                          address_line_1: 123 Main Street
                          address_line_2: Suite 101
                          city: Austin
                          state: Texas
                          postal_code: '78726'
                          country_alpha2: US
                          email: location1@example.com
                          phone: +1 111-111-1111
                        line_items:
                          - url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products/12'
                            resource: /orders/129/products/12
        '404':
          $ref: '#/components/responses/404_Resp'
      operationId: get-orders-orderId-consignments
      description: 'Get all consignments for an order. '
      parameters:
        - $ref: '#/components/parameters/order_id_path'
  '/orders/{order_id}/consignments/shipping/{shipping_consignment_id}/shipping_quotes':
    get:
      summary: Get Consignment Shipping Quotes
      tags:
        - Order Consignments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shippingQuotes_Base'
              examples:
                Fixed Shipping:
                  value:
                    id: '42'
                    uuid: 7c65e0a0-cf46-4438-934e-c7b4edb31e18
                    timestamp: 'Fri, 24 Jun 2022 01:45:27 +0000'
                    shipping_provider_id: bcstatic
                    shipping_provider_quote: []
                    provider_code: peritem
                    carrier_code: ''
                    rate_code: ''
                    rate_id: ''
                    method_id: 2
                Fedex:
                  value:
                    id: '43'
                    uuid: 551404b9-beeb-4e49-922b-3b8d85002863
                    timestamp: 'Fri, 24 Jun 2022 03:52:03 +0000'
                    shipping_provider_id: bcrealtime
                    shipping_provider_quote:
                      rate:
                        value: '107.32'
                        unit: USD
                      transitTime: '1'
                      name: Priority Overnight
                      signatureConfirmationFee: {}
                      carrierName: ''
                      carrierCode: {}
                      code: {}
                      deliveryMessage: ''
                      labelSizes: []
                      insuredMailFee: {}
                      dates: []
                      rateId: {}
                      description: ''
                      additionalInfo: {}
                    provider_code: fedex
                    carrier_code: ''
                    rate_code: ''
                    rate_id: ''
                    method_id: 5
        '404':
          $ref: '#/components/responses/404_Resp'
      operationId: get-orders-orderId-consignments-shipping-shippingId-shippingQuotes
      description: |-
        Get all shipping quotes persisted on an order for a shipping consignment.
        This is a read-only endpoint whose response depends on the shipping quote. You can only generate a shipping quote using the storefront at this time. Orders that are created in the control panel, or using the API, return a 204 status response since you can't generate a shipping quote during that process.
      parameters:
        - $ref: '#/components/parameters/order_id_path'
        - $ref: '#/components/parameters/shipping_consignment_id'
components:
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.
      schema:
        type: string
        default: 'application/json'
    min_id:
      name: min_id
      in: query
      description: The minimum order ID.
      schema:
        type: integer
    max_id:
      name: max_id
      in: query
      description: The maximum order ID.
      schema:
        type: integer
    min_total:
      name: min_total
      in: query
      description: The minimum order total in floating point format. eg. 12.50
      schema:
        type: number
        format: float
    max_total:
      name: max_total
      in: query
      description: The maximum order total in floating point format. eg. 12.50
      schema:
        type: number
    customer_id:
      name: customer_id
      in: query
      description: Customer ID.
      schema:
        type: integer
    email:
      name: email
      in: query
      description: The email of the customer.
      schema:
        type: string
    status_id:
      name: status_id
      in: query
      description: The status ID of the order. You can get the status id from the `/orders` endpoints.
      schema:
        type: integer
    status_id_path:
      name: status_id
      in: path
      description: The status ID of the order. You can get the status id from the `/orders` endpoints.
      required: true
      schema:
        type: integer
        format: int32
    cart_id:
      name: cart_id
      in: query
      description: The cart ID of the order.
      schema:
        type: string
    is_deleted:
      name: is_deleted
      in: query
      description: If the order was deleted or archived.
      schema:
        type: boolean
    payment_method:
      name: payment_method
      in: query
      description: The display name of the payment method used on the order.
      schema:
        type: string
        enum:
          - Manual
          - Cash on Delivery
          - Credit Card
          - Test Payment Gateway
          - Pay In Store
    min_date_created:
      name: min_date_created
      in: query
      description: |-
        Minimum date the order was created in RFC-2822 or ISO-8601.
        
        RFC-2822: `Thu, 20 Apr 2017 11:32:00 -0400`
        
        ISO-8601: `2017-04-20T11:32:00.000-04:00`
      schema:
        type: string
    max_date_created:
      name: max_date_created
      in: query
      description: |-
        Maximum date the order was created in RFC-2822 or ISO-8601.
        
        RFC-2822: `Thu, 20 Apr 2017 11:32:00 -0400`
        
        ISO-8601: `2017-04-20T11:32:00.000-04:00`
      schema:
        type: string
    min_date_modified:
      name: min_date_modified
      in: query
      description: |-
        Minimum date the order was modified in RFC-2822 or ISO-8601.
        
        RFC-2822: `Thu, 20 Apr 2017 11:32:00 -0400`
        
        ISO-8601: `2017-04-20T11:32:00.000-04:00`
      schema:
        type: string
    max_date_modified:
      name: max_date_modified
      in: query
      description: |-
        Maximum date the order was modified in RFC-2822 or ISO-8601.
        
        RFC-2822: `Thu, 20 Apr 2017 11:32:00 -0400`
        
        ISO-8601: `2017-04-20T11:32:00.000-04:00`
      schema:
        type: string
    page:
      name: page
      in: query
      description: The page to return in the response.
      schema:
        type: number
    limit:
      name: limit
      in: query
      description: Number of results to return.
      schema:
        type: number
    sort:
      in: query
      name: sort
      description: Field and direction to sort orders. To specify the direction, add `:asc` or `:desc` to the end of the query parameter. e.g., `sort=date_created:desc`.
      schema:
        type: string
        enum:
          - id
          - customer_id
          - date_created
          - date_modified
          - status_id
          - channel_id
          - external_id
    status:
      name: status
      in: query
      description: Status of the order message.
      schema:
        type: string
        enum:
          - read
          - unread
    is_flagged:
      name: is_flagged
      in: query
      description: 'If the message is [flagged](https://support.bigcommerce.com/s/article/Communicating-with-Customers#Messages).'
      schema:
        type: boolean
    order_id_path:
      name: order_id
      in: path
      description: ID of the order.
      required: true
      schema:
        type: integer
    product_id_path:
      name: product_id
      in: path
      required: true
      description: ID of the product.
      schema:
        type: integer
    shipping_address_id_path:
      name: shipping_address_id
      in: path
      required: true
      description: Shipping address ID.
      schema:
        type: integer
    shipment_id_path:
      name: shipment_id
      in: path
      required: true
      description: Shipment ID.
      schema:
        type: integer
    channel_id:
      name: channel_id
      in: query
      description: The Channel ID of the Order.
      schema:
        type: integer
    shipping_consignment_id:
      name: shipping_consignment_id
      in: path
      required: true
      description: Shipping consignment ID.
      schema:
        type: integer
    order_includes:
      name: include
      in: query
      description: |-
        * `consignments` - include the response returned from the request to the `/orders/{order_id}/consignments` endpoint.
        
        * `consignments.line_items` - include the response returned from the request to the `/orders/{order_id}/products` endpoint in consignments. This implies `include=consignments`.
      schema:
        type: string
        enum:
          - consignments
          - consignments.line_items
  responses:
    orderStatusCollection_Resp:
      description: Get All Order Status Collection Response.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/orderStatus_Base'
          examples:
            response:
              value:
                - id: 0
                  name: Incomplete
                  system_label: Incomplete
                  custom_label: Incomplete - Testing
                  system_description: An incomplete order happens when a shopper reached the payment page, but did not complete the transaction.
                  order: 0
                - id: 1
                  name: Pending
                  system_label: Pending
                  custom_label: Pending
                  system_description: Customer started the checkout process, but did not complete it.
                  order: 1
                - id: 2
                  name: Shipped
                  system_label: Shipped
                  custom_label: Shipped
                  system_description: Order has been shipped, but receipt has not been confirmed; seller has used the Ship Items action.
                  order: 8
                - id: 3
                  name: Partially Shipped
                  system_label: Partially Shipped
                  custom_label: Partially Shipped
                  system_description: Only some items in the order have been shipped, due to some products being pre-order only or other reasons.
                  order: 6
                - id: 4
                  name: Refunded
                  system_label: Refunded
                  custom_label: Refunded
                  system_description: Seller has used the Refund action.
                  order: 11
                - id: 5
                  name: Cancelled
                  system_label: Cancelled
                  custom_label: Cancelled
                  system_description: Seller has cancelled an order, due to a stock inconsistency or other reasons.
                  order: 9
                - id: 6
                  name: Declined
                  system_label: Declined
                  custom_label: Declined
                  system_description: Seller has marked the order as declined for lack of manual payment, or other reasons.
                  order: 10
                - id: 7
                  name: Awaiting Payment
                  system_label: Awaiting Payment
                  custom_label: Awaiting Payment
                  system_description: Customer has completed checkout process, but payment has yet to be confirmed.
                  order: 2
                - id: 8
                  name: Awaiting Pickup
                  system_label: Awaiting Pickup
                  custom_label: Awaiting Pickup
                  system_description: Order has been pulled, and is awaiting customer pickup from a seller-specified location.
                  order: 5
                - id: 9
                  name: Awaiting Shipment
                  system_label: Awaiting Shipment
                  custom_label: Awaiting Shipment
                  system_description: Order has been pulled and packaged, and is awaiting collection from a shipping provider.
                  order: 4
                - id: 10
                  name: Completed
                  system_label: Completed
                  custom_label: Completed - Testing
                  system_description: Client has paid for their digital product and their file(s) are available for download.
                  order: 7
                - id: 11
                  name: Awaiting Fulfillment
                  system_label: Awaiting Fulfillment
                  custom_label: Awaiting Fulfillment
                  system_description: Customer has completed the checkout process and payment has been confirmed.
                  order: 3
                - id: 12
                  name: Manual Verification Required
                  system_label: Manual Verification Required
                  custom_label: Manual Verification Required
                  system_description: Order is on hold while some aspect needs to be manually confirmed.
                  order: 13
                - id: 13
                  name: Disputed
                  system_label: Disputed
                  custom_label: Disputed
                  system_description: Customer has initiated a dispute resolution process for the PayPal transaction that paid for the order.
                  order: 12
                - id: 14
                  name: Partially Refunded
                  system_label: Partially Refunded
                  custom_label: Partially Refunded
                  system_description: Seller has partially refunded the order.
                  order: 14
    orderStatus_Resp:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/orderStatus_Base'
          examples:
            response:
              value:
                id: 11
                name: Awaiting Fulfillment
                system_label: Awaiting Fulfillment
                custom_label: Awaiting Fulfillment
                system_description: Customer has completed the checkout process and payment has been confirmed.
                order: 3
    orderCollection_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/order_Resp'
          examples:
            response:
              value:
                - id: 100
                  customer_id: 20
                  date_created: 'Wed, 10 Jan 2018 21:05:30 +0000'
                  date_modified: 'Wed, 05 Dec 2018 20:16:55 +0000'
                  date_shipped: ''
                  status_id: 11
                  status: Awaiting Fulfillment
                  subtotal_ex_tax: '336.3200'
                  subtotal_inc_tax: '361.9500'
                  subtotal_tax: '25.6300'
                  base_shipping_cost: '0.0000'
                  shipping_cost_ex_tax: '0.0000'
                  shipping_cost_inc_tax: '0.0000'
                  shipping_cost_tax: '0.0000'
                  shipping_cost_tax_class_id: 2
                  base_handling_cost: '0.0000'
                  handling_cost_ex_tax: '0.0000'
                  handling_cost_inc_tax: '0.0000'
                  handling_cost_tax: '0.0000'
                  handling_cost_tax_class_id: 2
                  base_wrapping_cost: '0.0000'
                  wrapping_cost_ex_tax: '0.0000'
                  wrapping_cost_inc_tax: '0.0000'
                  wrapping_cost_tax: '0.0000'
                  wrapping_cost_tax_class_id: 3
                  total_ex_tax: '361.9500'
                  total_inc_tax: '361.9500'
                  total_tax: '0.0000'
                  items_total: 17
                  items_shipped: 0
                  payment_method: Credit Card
                  payment_provider_id: ''
                  payment_status: authorized
                  refunded_amount: '0.0000'
                  order_is_digital: false
                  store_credit_amount: '0.0000'
                  gift_certificate_amount: '0.0000'
                  ip_address: 00.000.000.000
                  ip_address_v6: ''
                  geoip_country: United States
                  geoip_country_iso2: US
                  currency_id: 1
                  currency_code: USD
                  currency_exchange_rate: '1.0000000000'
                  default_currency_id: 1
                  default_currency_code: USD
                  staff_notes: ''
                  customer_message: ''
                  discount_amount: '0.0000'
                  coupon_discount: '0.0000'
                  shipping_address_count: 1
                  is_deleted: false
                  ebay_order_id: '0'
                  cart_id: a8458391-ef68-4fe5-9ec1-442e6a767364
                  billing_address:
                    first_name: Jane
                    last_name: Doe
                    company: ''
                    street_1: 455 Main Street
                    street_2: ''
                    city: Austin
                    state: Texas
                    zip: '78751'
                    country: United States
                    country_iso2: US
                    phone: ''
                    email: janedoe@example.com
                    form_fields: []
                  is_email_opt_in: false
                  credit_card_type: null
                  order_source: manual
                  channel_id: 1
                  external_source: POS
                  products:
                    url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/100/products'
                    resource: /orders/100/products
                  shipping_addresses:
                    url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/100/shippingaddresses'
                    resource: /orders/100/shippingaddresses
                  coupons:
                    url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/100/coupons'
                    resource: /orders/100/coupons
                  external_id: null
                  external_merchant_id: {}
                  tax_provider_id: BasicTaxProvider
                  store_default_currency_code: ''
                  store_default_to_transactional_exchange_rate: '1.0000000000'
                  custom_status: Awaiting Fulfillment
                  customer_locale: en
                  external_order_id: external-order-id
    ordersCount_Resp:
      description: Order Counter response collection.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ordersCount_Full'
          examples:
            response:
              value:
                statuses:
                  - id: 0
                    name: Incomplete
                    system_label: Incomplete
                    custom_label: Incomplete - Testing
                    system_description: An incomplete order happens when a shopper reached the payment page, but did not complete the transaction.
                    count: 15
                    sort_order: 0
                  - id: 1
                    name: Pending
                    system_label: Pending
                    custom_label: Pending
                    system_description: Customer started the checkout process, but did not complete it.
                    count: 4
                    sort_order: 1
                  - id: 7
                    name: Awaiting Payment
                    system_label: Awaiting Payment
                    custom_label: Awaiting Payment
                    system_description: Customer has completed checkout process, but payment has yet to be confirmed.
                    count: 48
                    sort_order: 2
                  - id: 11
                    name: Awaiting Fulfillment
                    system_label: Awaiting Fulfillment
                    custom_label: Awaiting Fulfillment
                    system_description: Customer has completed the checkout process and payment has been confirmed.
                    count: 31
                    sort_order: 3
                  - id: 9
                    name: Awaiting Shipment
                    system_label: Awaiting Shipment
                    custom_label: Awaiting Shipment
                    system_description: Order has been pulled and packaged, and is awaiting collection from a shipping provider.
                    count: 1
                    sort_order: 4
                  - id: 8
                    name: Awaiting Pickup
                    system_label: Awaiting Pickup
                    custom_label: Awaiting Pickup
                    system_description: Order has been pulled, and is awaiting customer pickup from a seller-specified location.
                    count: 0
                    sort_order: 5
                  - id: 3
                    name: Partially Shipped
                    system_label: Partially Shipped
                    custom_label: Partially Shipped
                    system_description: Only some items in the order have been shipped, due to some products being pre-order only or other reasons.
                    count: 1
                    sort_order: 6
                  - id: 10
                    name: Completed
                    system_label: Completed
                    custom_label: Completed - Testing
                    system_description: Client has paid for their digital product and their file(s) are available for download.
                    count: 11
                    sort_order: 7
                  - id: 2
                    name: Shipped
                    system_label: Shipped
                    custom_label: Shipped
                    system_description: Order has been shipped, but receipt has not been confirmed; seller has used the Ship Items action.
                    count: 14
                    sort_order: 8
                  - id: 5
                    name: Cancelled
                    system_label: Cancelled
                    custom_label: Cancelled
                    system_description: Seller has cancelled an order, due to a stock inconsistency or other reasons.
                    count: 5
                    sort_order: 9
                  - id: 6
                    name: Declined
                    system_label: Declined
                    custom_label: Declined
                    system_description: Seller has marked the order as declined for lack of manual payment, or other reasons.
                    count: 0
                    sort_order: 10
                  - id: 4
                    name: Refunded
                    system_label: Refunded
                    custom_label: Refunded
                    system_description: Seller has used the Refund action.
                    count: 2
                    sort_order: 11
                  - id: 13
                    name: Disputed
                    system_label: Disputed
                    custom_label: Disputed
                    system_description: Customer has initiated a dispute resolution process for the PayPal transaction that paid for the order.
                    count: 0
                    sort_order: 12
                  - id: 12
                    name: Manual Verification Required
                    system_label: Manual Verification Required
                    custom_label: Manual Verification Required
                    system_description: Order is on hold while some aspect needs to be manually confirmed.
                    count: 0
                    sort_order: 13
                  - id: 14
                    name: Partially Refunded
                    system_label: Partially Refunded
                    custom_label: Partially Refunded
                    system_description: Seller has partially refunded the order.
                    count: 1
                    sort_order: 14
                count: 133
    order_Resp:
      description: Order Response.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/order_Resp'
          examples:
            response:
              value:
                id: 218
                customer_id: 11
                date_created: 'Tue, 05 Mar 2019 21:40:11 +0000'
                date_modified: 'Mon, 11 Mar 2019 15:17:25 +0000'
                date_shipped: ''
                status_id: 7
                status: Awaiting Payment
                subtotal_ex_tax: '62.6793'
                subtotal_inc_tax: '67.8400'
                subtotal_tax: '4.4000'
                base_shipping_cost: '12.0000'
                shipping_cost_ex_tax: '11.0900'
                shipping_cost_inc_tax: '12.0000'
                shipping_cost_tax: '0.9100'
                shipping_cost_tax_class_id: 0
                base_handling_cost: '0.0000'
                handling_cost_ex_tax: '0.0000'
                handling_cost_inc_tax: '0.0000'
                handling_cost_tax: '0.0000'
                handling_cost_tax_class_id: 0
                base_wrapping_cost: '0.0000'
                wrapping_cost_ex_tax: '0.0000'
                wrapping_cost_inc_tax: '0.0000'
                wrapping_cost_tax: '0.0000'
                wrapping_cost_tax_class_id: 0
                total_ex_tax: '64.5300'
                total_inc_tax: '69.8400'
                total_tax: '5.3100'
                items_total: 4
                items_shipped: 0
                payment_method: Cash
                payment_provider_id: ''
                payment_status: authorized
                refunded_amount: '0.0000'
                order_is_digital: false
                store_credit_amount: '0.0000'
                gift_certificate_amount: '0.0000'
                ip_address: ''
                ip_address_v6: ''
                geoip_country: ''
                geoip_country_iso2: ''
                currency_id: 1
                currency_code: USD
                currency_exchange_rate: '1.0000000000'
                default_currency_id: 1
                default_currency_code: USD
                staff_notes: ''
                customer_message: ''
                discount_amount: '5.0000'
                coupon_discount: '5.0000'
                shipping_address_count: 1
                is_deleted: false
                ebay_order_id: '0'
                cart_id: 7e48f7ef-2e88-4817-aea4-b0ed01490114
                billing_address:
                  first_name: Jane
                  last_name: Doe
                  company: ''
                  street_1: 555 East Street
                  street_2: ''
                  city: Austin
                  state: Texas
                  zip: 78108
                  country: United States
                  country_iso2: US
                  phone: 1234567890
                  email: janedoe@example.com
                  form_fields:
                    - name: Delivery Instructions
                      value: Leave in backyard
                is_email_opt_in: false
                credit_card_type: null
                order_source: external
                channel_id: 1
                external_source: null
                products:
                  url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/218/products'
                  resource: /orders/218/products
                shipping_addresses:
                  url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/218/shippingaddresses'
                  resource: /orders/218/shippingaddresses
                coupons:
                  url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/218/coupons'
                  resource: /orders/218/coupons
                external_id: null
                external_merchant_id: null
                tax_provider_id: BasicTaxProvider
                store_default_currency_code: ''
                store_default_to_transactional_exchange_rate: '1.0000000000'
                custom_status: Awaiting Payment
                customer_locale: en
                external_order_id: external-order-id
            'Multiple Items':
              value:
                id: 247
                customer_id: 11
                date_created: 'Thu, 20 Jun 2019 16:07:08 +0000'
                date_modified: 'Thu, 20 Jun 2019 16:07:08 +0000'
                date_shipped: ''
                status_id: 11
                status: Awaiting Fulfillment
                subtotal_ex_tax: 924.47
                subtotal_inc_tax: 1000.74
                subtotal_tax: 76.27
                base_shipping_cost: 8
                shipping_cost_ex_tax: 7.39
                shipping_cost_inc_tax: 8
                shipping_cost_tax: 0.61
                shipping_cost_tax_class_id: 0
                base_handling_cost: 0
                handling_cost_ex_tax: 0
                handling_cost_inc_tax: 0
                handling_cost_tax: 0
                handling_cost_tax_class_id: 0
                base_wrapping_cost: 0
                wrapping_cost_ex_tax: 0
                wrapping_cost_inc_tax: 0
                wrapping_cost_tax: 0
                wrapping_cost_tax_class_id: 0
                total_ex_tax: 931.86
                total_inc_tax: 1008.74
                total_tax: 76.88
                items_total: 11
                items_shipped: 0
                payment_method: Test Payment Gateway
                payment_provider_id: ''
                payment_status: captured
                refunded_amount: 0
                order_is_digital: false
                store_credit_amount: 0
                gift_certificate_amount: 0
                ip_address: 70.112.53.67
                geoip_country: United States
                geoip_country_iso2: US
                currency_id: 1
                currency_code": USD
                currency_exchange_rate: 1
                default_currency_id: 1
                default_currency_code: USD
                staff_notes: BIN-45
                customer_message: Custom Journal Added
                discount_amount: 0
                coupon_discount": 0
                shipping_address_count: 1
                is_deleted: false
                ebay_order_id: 0
                cart_id: 8b84f622-faf1-4c10-887b-f5dff2f9eaf4
                billing_address:
                  first_name: Jane
                  last_name: Doe
                  company: ''
                  street_1: 555 East Street
                  street_2: ''
                  city: Austin
                  state: Texas
                  zip: '78108'
                  country: United States
                  country_iso2: US
                  phone: '1234567890'
                  email: janedoe@email.com
                  form_fields:
                    name: Delivery Instructions
                    value: Leave in backyard
                is_email_opt_in: false
                credit_card_type: {}
                order_source: manual
                channel_id: 1
                external_source: {}
                products:
                  url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/247/products'
                  resource: /orders/247/products
                shipping_addresses:
                  url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/247/shippingaddresses'
                  resource: /orders/247/shippingaddresses
                coupons:
                  url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/247/coupons'
                  resource: /orders/247/coupons
                external_id: {}
                external_merchant_id: {}
                tax_provider_id: BasicTaxProvider
                store_default_currency_code: USD
                store_default_to_transactional_exchange_rate: 1
                custom_status: Awaiting Fulfillment
                customer_locale: en
                external_order_id: external-order-id
    orderCouponsCollection_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/orderCoupons_Base'
          examples:
            response:
              value:
                - id: 3
                  coupon_id: 1
                  order_id: 120
                  code: S2549JM0Y
                  amount: 5
                  type: 2
                  discount: 5
    orderMessagesCollection_Resp:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/orderMessages'
          examples:
            response:
              value:
                - id: 2
                  order_id: 181
                  staff_id: 1
                  customer_id: 11
                  type: admin
                  subject: 'Re: Order #181'
                  message: Thank you again!
                  status: unread
                  is_flagged: false
                  date_created: 'Wed, 26 Sep 2018 15:52:03 +0000'
                  customer: {}
    orderProductsCollection_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/orderProducts'
          examples:
            response:
              value:
                - id: 65
                  order_id: 149
                  product_id: 77
                  order_address_id: 51
                  name: Fog Linen Chambray Towel - Beige Stripe
                  name_customer: Fog Linen Chambray Towel - Beige Stripe
                  name_merchant: Fog Linen Chambray Towel - Beige Stripe
                  sku: S-ORAN
                  upc: '1234567891112'
                  type: physical
                  base_price: '55.9900'
                  price_ex_tax: '55.9900'
                  price_inc_tax: '65.2300'
                  price_tax: '9.2400'
                  base_total: '55.9900'
                  total_ex_tax: '55.9900'
                  total_inc_tax: '65.2300'
                  total_tax: '9.2400'
                  weight: '1.0000'
                  quantity: 1
                  base_cost_price: '0.0000'
                  cost_price_inc_tax: '0.0000'
                  cost_price_ex_tax: '0.0000'
                  cost_price_tax: '0.0000'
                  is_refunded: false
                  quantity_refunded: 0
                  refund_amount: '0.0000'
                  return_id: 0
                  wrapping_name: ''
                  base_wrapping_cost: '0.0000'
                  wrapping_cost_ex_tax: '0.0000'
                  wrapping_cost_inc_tax: '0.0000'
                  wrapping_cost_tax: '0.0000'
                  wrapping_message: ''
                  quantity_shipped: 0
                  fixed_shipping_cost: '5.0000'
                  ebay_item_id: ''
                  ebay_transaction_id: ''
                  option_set_id: 19
                  parent_order_product_id: null
                  is_bundled_product: false
                  bin_picking_number: ''
                  external_id: null
                  fulfillment_source: ''
                  brand: BigCommerce
                  applied_discounts:
                    - id: manual-discount
                      amount: '1.5900'
                      name: Manual Discount
                      code: null
                      target: order
                  product_options:
                    - id: 45
                      option_id: 18
                      order_product_id: 65
                      product_option_id: 120
                      display_name: Size
                      display_name_customer: Size
                      display_name_merchant: Size
                      display_value: S
                      display_value_customer: S
                      display_value_merchant: S
                      value: '69'
                      type: Multiple choice
                      name: Apparel sizes
                      display_style: Rectangle
                    - id: 46
                      option_id: 3
                      order_product_id: 65
                      product_option_id: 121
                      display_name: Color
                      display_value: Orange
                      display_value_customer: S
                      display_value_merchant: S
                      value: '112'
                      type: Swatch
                      name: Colors
                      display_style: ''
                    - id: 47
                      option_id: 37
                      order_product_id: 65
                      product_option_id: 122
                      display_name: Add Letters
                      display_value: Text Field
                      value: Text Field
                      type: Text field
                      name: Add Letters
                      display_style: ''
                    - id: 48
                      option_id: 38
                      order_product_id: 65
                      product_option_id: 123
                      display_name: Is this a gift?
                      display_value: 'Yes'
                      value: '104'
                      type: Checkbox
                      name: Gift Wrapping $5
                      display_style: ''
                    - id: 49
                      option_id: 39
                      order_product_id: 65
                      product_option_id: 124
                      display_name: PickList
                      display_value: Able Brewing System
                      value: '106'
                      type: Product Pick List
                      name: PickList
                      display_style: Pick list
                  configurable_fields: []
                  gift_certificate_id: null
                - id: 66
                  order_id: 149
                  product_id: 86
                  order_address_id: 51
                  name: Able Brewing System
                  sku: ABS
                  type: physical
                  base_price: '0.0000'
                  price_ex_tax: '0.0000'
                  price_inc_tax: '0.0000'
                  price_tax: '0.0000'
                  base_total: '0.0000'
                  total_ex_tax: '0.0000'
                  total_inc_tax: '0.0000'
                  total_tax: '0.0000'
                  weight: '0.0000'
                  quantity: 1
                  base_cost_price: '0.0000'
                  cost_price_inc_tax: '0.0000'
                  cost_price_ex_tax: '0.0000'
                  cost_price_tax: '0.0000'
                  is_refunded: false
                  quantity_refunded: 0
                  refund_amount: '0.0000'
                  return_id: 0
                  wrapping_name: ''
                  base_wrapping_cost: '0.0000'
                  wrapping_cost_ex_tax: '0.0000'
                  wrapping_cost_inc_tax: '0.0000'
                  wrapping_cost_tax: '0.0000'
                  wrapping_message: ''
                  quantity_shipped: 0
                  event_name: null
                  event_date: null
                  fixed_shipping_cost: '0.0000'
                  ebay_item_id: ''
                  ebay_transaction_id: ''
                  option_set_id: null
                  parent_order_product_id: 65
                  is_bundled_product: true
                  bin_picking_number: BIN
                  external_id: null
                  fulfillment_source: ''
                  brand: BigCommerce
                  applied_discounts: []
                  product_options: []
                  configurable_fields: []
                  gift_certificate_id: null
    orderProductLineItem_Resp:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/orderProducts'
          examples:
            Product:
              value:
                id: 116
                order_id: 181
                product_id: 188
                order_address_id: 81
                name: Dustpan & Brush
                name_customer: Dustpan & Brush
                name_merchant: Dustpan & Brush
                sku: DUST1
                upc: '1234567891112'
                type: physical
                base_price: '31.9500'
                price_ex_tax: '31.9500'
                price_inc_tax: '37.2300'
                price_tax: '5.2800'
                base_total: '31.9500'
                total_ex_tax: '31.9500'
                total_inc_tax: '37.2300'
                total_tax: '5.2800'
                weight: '2.0000'
                quantity: 1
                base_cost_price: '0.0000'
                cost_price_inc_tax: '0.0000'
                cost_price_ex_tax: '0.0000'
                cost_price_tax: '0.0000'
                is_refunded: false
                quantity_refunded: 0
                refund_amount: '0.0000'
                return_id: 0
                wrapping_name: ''
                base_wrapping_cost: '0.0000'
                wrapping_cost_ex_tax: '0.0000'
                wrapping_cost_inc_tax: '0.0000'
                wrapping_cost_tax: '0.0000'
                wrapping_message: ''
                quantity_shipped: 0
                event_name: null
                event_date: null
                fixed_shipping_cost: '0.0000'
                ebay_item_id: ''
                ebay_transaction_id: ''
                option_set_id: null
                parent_order_product_id: null
                is_bundled_product: false
                bin_picking_number: ''
                external_id: null
                fulfillment_source: ''
                brand: BigCommerce
                applied_discounts: []
                product_options: []
            Product with file upload:
              value:
                - id: 35
                  order_id: 125
                  product_id: 127
                  variant_id: 99
                  order_address_id: 18
                  name: Journal
                  name_customer: Journal
                  name_merchant: Journal
                  sku: Jour-BLK
                  upc: ''
                  type: physical
                  base_price: '45.0000'
                  price_ex_tax: '41.5700'
                  price_inc_tax: '45.0000'
                  price_tax: '3.4300'
                  base_total: '45.0000'
                  total_ex_tax: '41.5700'
                  total_inc_tax: '45.0000'
                  total_tax: '3.4300'
                  weight: '0.0000'
                  width: '0.0000'
                  height: '0.0000'
                  depth: '0.0000'
                  quantity: 1
                  base_cost_price: '0.0000'
                  cost_price_inc_tax: '0.0000'
                  cost_price_ex_tax: '0.0000'
                  cost_price_tax: '0.0000'
                  is_refunded: false
                  quantity_refunded: 0
                  refund_amount: '0.0000'
                  return_id: 0
                  wrapping_name: ''
                  base_wrapping_cost: '0.0000'
                  wrapping_cost_ex_tax: '0.0000'
                  wrapping_cost_inc_tax: '0.0000'
                  wrapping_cost_tax: '0.0000'
                  wrapping_message: ''
                  quantity_shipped: 0
                  event_name: null
                  event_date: ''
                  fixed_shipping_cost: '0.0000'
                  ebay_item_id: ''
                  ebay_transaction_id: ''
                  option_set_id: null
                  parent_order_product_id: null
                  is_bundled_product: false
                  bin_picking_number: ''
                  external_id: null
                  fulfillment_source: ''
                  brand: BigCommerce
                  applied_discounts: []
                  product_options:
                    - id: 18
                      option id: 38
                      order_product_id: 35
                      product_option_id: 121
                      display_name: Custom Logo Engraving
                      display_name_customer: Custom Logo Engraving
                      display_name_merchant: Custom Logo Engraving
                      display_value: BigCommerceLogo.jpeg
                      display_value_customer: BigCommerceLogo.jpeg
                      display_value_merchant: BigCommerceLogo.jpeg
                      value: {\"originalName\":\"BigCommerceLogo.jpeg\",\"temporaryPath\":\"121_fbfb71dfc5a5d911f62d8e35dedd6e45.jpeg\",\"path\":\"f606efcae7e179970b19c3658142c5d0.jpeg\"}
                      type: File upload field
                      name: Custom Logo Engraving
                      display_style: ""
                  configurable_fields: []
                  gift_certificate_id: null
            Custom Product:
              value:
                id: 238
                order_id: 247
                product_id: 0
                variant_id: 0
                order_address_id: 151
                name: Journal
                name_customer: Journal
                name_merchant: Journal
                sku: Jour-BLK
                upc: ''
                type: physical
                base_price: '45.0000'
                price_ex_tax: '41.5700'
                price_inc_tax: '45.0000'
                price_tax: '3.4300'
                base_total: '45.0000'
                total_ex_tax: '41.5700'
                total_inc_tax: '45.0000'
                total_tax: '3.4300'
                weight: '0.0000'
                width: '0.0000'
                height: '0.0000'
                depth: '0.0000'
                quantity: 1
                base_cost_price: '0.0000'
                cost_price_inc_tax: '0.0000'
                cost_price_ex_tax: '0.0000'
                cost_price_tax: '0.0000'
                is_refunded: false
                quantity_refunded: 0
                refund_amount: '0.0000'
                return_id: 0
                wrapping_name: ''
                base_wrapping_cost: '0.0000'
                wrapping_cost_ex_tax: '0.0000'
                wrapping_cost_inc_tax: '0.0000'
                wrapping_cost_tax: '0.0000'
                wrapping_message: ''
                quantity_shipped: 0
                event_name: null
                event_date: ''
                fixed_shipping_cost: '0.0000'
                ebay_item_id: ''
                ebay_transaction_id: ''
                option_set_id: null
                parent_order_product_id: null
                is_bundled_product: false
                bin_picking_number: ''
                external_id: null
                fulfillment_source: ''
                brand: BigCommerce
                applied_discounts: []
                product_options: []
                configurable_fields: []
                gift_certificate_id: null
            Product with Variants:
              value:
                id: 240
                order_id: 247
                product_id: 201
                variant_id: 477
                order_address_id: 151
                name: BigCommerce T-Shirt
                name_customer: BigCommerce T-Shirt
                name_merchant: BigCommerce T-Shirt
                sku: SKU-201-Red-Small T-Shirt-Able Brewing System
                upc: ''
                type: physical
                base_price: '235.0000'
                price_ex_tax: '217.0900'
                price_inc_tax: '235.0000'
                price_tax: '17.9100'
                base_total: '940.0000'
                total_ex_tax: '868.3600'
                total_inc_tax: '940.0000'
                total_tax: '71.6400'
                weight: '3.0000'
                width: '3.0000'
                height: '3.0000'
                depth: '3.0000'
                quantity: 4
                base_cost_price: '0.0000'
                cost_price_inc_tax: '0.0000'
                cost_price_ex_tax: '0.0000'
                cost_price_tax: '0.0000'
                is_refunded: false
                quantity_refunded: 0
                refund_amount: '0.0000'
                return_id: 0
                wrapping_name: ''
                base_wrapping_cost: '0.0000'
                wrapping_cost_ex_tax: '0.0000'
                wrapping_cost_inc_tax: '0.0000'
                wrapping_cost_tax: '0.0000'
                wrapping_message: ''
                quantity_shipped: 0
                event_name: {}
                event_date: ''
                fixed_shipping_cost: '0.0000'
                ebay_item_id: ''
                ebay_transaction_id: ''
                option_set_id: 68
                parent_order_product_id: {}
                is_bundled_product: false
                bin_picking_number: ''
                external_id: {}
                fulfillment_source: ''
                brand: BigCommerce
                applied_discounts: []
            Product with custom message:
              value:
                - id: 143
                  option_id: 96
                  order_product_id: 240
                  product_option_id: 242
                  display_name: Color
                  display_name_customer: Color
                  display_name_merchant: Color
                  display_value: Red
                  display_value_customer: Red
                  display_value_merchant: Red
                  value: '211'
                  type: Swatch
                  name: Color1549572910-201
                  display_style: ''
                - id: 144
                  option_id: 114
                  order_product_id: 240
                  product_option_id: 263
                  display_name: PickList PriceList
                  display_name_customer: PickList PriceList
                  display_name_merchant: PickList PriceList
                  display_value: Able Brewing System
                  display_value_customer: Able Brewing System
                  display_value_merchant: Able Brewing System
                  value: '237'
                  type: Product Pick List
                  name: PickList-PriceList1549572910-201
                  display_style: Pick list with photos
                - id: 145
                  option_id: 97
                  order_product_id: 240
                  product_option_id: 243
                  display_name: T-Shirt Size
                  display_name_customer: T-Shirt Size
                  display_name_merchant: T-Shirt Size
                  display_value: Small T-Shirt
                  display_value_customer: Small T-Shirt
                  display_value_merchant: Small T-Shirt
                  value: '214'
                  type: Multiple choice
                  name: T-Shirt-Size1545071633-201
                  display_style: Rectangle
                - id: 146
                  option_id: 105
                  order_product_id: 240
                  product_option_id: 254
                  display_name: Custom Message
                  display_name_customer: Custom Message
                  display_name_merchant: Custom Message
                  display_value: BigCommerce
                  display_value_customer: BigCommerce
                  display_value_merchant: BigCommerce
                  value: BigCommerce
                  type: Text field
                  name: Custom-Message1549572912-201
                  display_style: ''
                  configurable_fields:
            product_options:
              value:
                - id: 143
                  option_id: 96
                  order_product_id: 240
                  product_option_id: 242
                  display_name: Color
                  display_name_customer: Color
                  display_name_merchant: Color
                  display_value: Red
                  display_value_customer: Red
                  display_value_merchant: Red
                  value: '211'
                  type: Swatch
                  name: Color1549572910-201
                  display_style: ''
                - id: 144
                  option_id: 114
                  order_product_id: 240
                  product_option_id: 263
                  display_name: PickList PriceList
                  display_name_customer: PickList PriceList
                  display_name_merchant: PickList PriceList
                  display_value: Able Brewing System
                  display_value_customer: Able Brewing System
                  display_value_merchant: Able Brewing System
                  value: '237'
                  type: Product Pick List
                  name: PickList-PriceList1549572910-201
                  display_style: Pick list with photos
                - id: 145
                  option_id: 97
                  order_product_id: 240
                  product_option_id: 243
                  display_name: T-Shirt Size
                  display_name_customer: T-Shirt Size
                  display_name_merchant: T-Shirt Size
                  display_value: Small T-Shirt
                  display_value_customer: Small T-Shirt
                  display_value_merchant: Small T-Shirt
                  value: '214'
                  type: Multiple choice
                  name: T-Shirt-Size1545071633-201
                  display_style: Rectangle
                - id: 146
                  option_id: 105
                  order_product_id: 240
                  product_option_id: 254
                  display_name: Custom Message
                  display_name_customer: Custom Message
                  display_name_merchant: Custom Message
                  display_value: BigCommerce
                  display_value_customer: BigCommerce
                  display_value_merchant: BigCommerce
                  value: BigCommerce
                  type: Text field
                  name: Custom-Message1549572912-201
                  display_style: ''
                  configurable_fields: []
    orderShipmentCollection_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/orderShipment'
          examples:
            application/json:
              value:
                - id: 6
                  order_id: 225
                  customer_id: 11
                  order_address_id: 127
                  date_created: 'Mon, 11 Mar 2019 17:22:08 +0000'
                  tracking_number: EJ958083578US
                  merchant_shipping_cost: '0.0000'
                  shipping_method: None
                  comments: Ready to go...
                  shipping_provider: usps
                  tracking_carrier: ''
                  tracking_link: ''
                  billing_address:
                    first_name: Jane
                    last_name: Does
                    company: ''
                    street_1: 123 Main Street
                    street_2: ''
                    city: Austin
                    state: Texas
                    zip: '78751'
                    country: United States
                    country_iso2: US
                    phone: ''
                    email: janedoe@example.com
                  shipping_address:
                    first_name: Trishy
                    last_name: Test
                    company: Acme Pty Ltd
                    street_1: 666 Sussex St
                    street_2: ''
                    city: Anywhere
                    state: Some State
                    zip: '12345'
                    country: United States
                    country_iso2: US
                    phone: ''
                    email: elsie@example.com
                  items:
                    - order_product_id: 188
                      product_id: 0
                      quantity: 1
                - id: 7
                  order_id: 225
                  customer_id: 11
                  order_address_id: 128
                  date_created: 'Mon, 11 Mar 2019 17:22:31 +0000'
                  tracking_number: EJ958083578UK
                  merchant_shipping_cost: '0.0000'
                  shipping_method: None
                  comments: Janes Order
                  shipping_provider: usps
                  tracking_carrier: ''
                  tracking_link: ''
                  billing_address:
                    first_name: Jane
                    last_name: Does
                    company: ''
                    street_1: 123 Main Street
                    street_2: ''
                    city: Austin
                    state: Texas
                    zip: '78751'
                    country: United States
                    country_iso2: US
                    phone: ''
                    email: janedoe@example.com
                  shipping_address:
                    first_name: Jane
                    last_name: Doe
                    company: ''
                    street_1: 555 Main Street
                    street_2: ''
                    city: Austin
                    state: Texas
                    zip: '78751'
                    country: United States
                    country_iso2: US
                    phone: ''
                    email: janedoe@example.com
                  items:
                    - order_product_id: 189
                      product_id: 0
                      quantity: 1
    orderShipment_Resp:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/orderShipment'
          examples:
            application/json:
              value:
                id: 11
                order_id: 228
                customer_id: 11
                order_address_id: 131
                date_created: 'Wed, 13 Mar 2019 16:35:37 +0000'
                tracking_number: EJ958083578US
                merchant_shipping_cost: '0.0000'
                shipping_method: None
                comments: Ready to go...
                shipping_provider: usps
                tracking_carrier: ''
                billing_address:
                  first_name: Jane
                  last_name: Doe
                  company: ''
                  street_1: 123 Main Street
                  street_2: ''
                  city: Austin
                  state: Texas
                  zip: '78751'
                  country: United States
                  country_iso2: US
                  phone: ''
                  email: janedoe@example.com
                shipping_address:
                  first_name: Trishy
                  last_name: Test
                  company: Acme Pty Ltd
                  street_1: 666 Sussex St
                  street_2: ''
                  city: Anywhere
                  state: Some State
                  zip: '12345'
                  country: United States
                  country_iso2: US
                  phone: ''
                  email: elsie@example.com
                items:
                  - order_product_id: 194
                    product_id: 0
                    quantity: 1
                  - order_product_id: 195
                    product_id: 0
                    quantity: 1
    orderCount_Resp:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/orderCount'
          examples:
            response:
              value:
                count: 27
    orderShippingAddressCollection_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/orderShippingAddress'
          examples:
            response:
              value:
                - id: 132
                  order_id: 229
                  first_name: Trishy
                  last_name: Test
                  company: Acme Pty Ltd
                  street_1: 666 Sussex St
                  street_2: ''
                  city: San Antonio
                  zip: '78251'
                  country: United States
                  country_iso2: US
                  state: Texas
                  email: janedoe@example.com
                  phone: ''
                  items_total: 2
                  items_shipped: 2
                  shipping_method: None
                  base_cost: '12.9900'
                  cost_ex_tax: '12.0000'
                  cost_inc_tax: '12.9900'
                  cost_tax: '0.9900'
                  cost_tax_class_id: 0
                  base_handling_cost: '0.0000'
                  handling_cost_ex_tax: '0.0000'
                  handling_cost_inc_tax: '0.0000'
                  handling_cost_tax: '0.0000'
                  handling_cost_tax_class_id: 0
                  shipping_zone_id: 1
                  shipping_zone_name: United States -1
                  shipping_quotes:
                    url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/229/shippingaddresses/132/shippingquotes'
                    resource: /orders/229/shippingaddresses/132/shippingquotes
                  form_fields: []
                - id: 133
                  order_id: 229
                  first_name: Jane
                  last_name: Doe
                  company: ''
                  street_1: 555 Main Street
                  street_2: ''
                  city: Austin
                  zip: '78751'
                  country: United States
                  country_iso2: US
                  state: Texas
                  email: janedoe@example.com
                  phone: ''
                  items_total: 0
                  items_shipped: 0
                  shipping_method: None
                  base_cost: '12.9900'
                  cost_ex_tax: '12.0000'
                  cost_inc_tax: '12.9900'
                  cost_tax: '0.9900'
                  cost_tax_class_id: 0
                  base_handling_cost: '0.0000'
                  handling_cost_ex_tax: '0.0000'
                  handling_cost_inc_tax: '0.0000'
                  handling_cost_tax: '0.0000'
                  handling_cost_tax_class_id: 0
                  shipping_zone_id: 1
                  shipping_zone_name: United States -1
                  shipping_quotes:
                    url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/229/shippingaddresses/133/shippingquotes'
                    resource: /orders/229/shippingaddresses/133/shippingquotes
                  form_fields: []
    orderShippingAddress_Resp:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/orderShippingAddress'
          examples:
            response:
              value:
                id: 42
                order_id: 140
                first_name: Jane
                last_name: Doe
                company: ''
                street_1: 123 MainStreet
                street_2: ''
                city: Austin
                zip: '78751'
                country: United States
                country_iso2: US
                state: Texas
                email: jane@example.com
                phone: '1234567890'
                items_total: 2
                items_shipped: 0
                shipping_method: Fixed Shipping
                base_cost: '5.0000'
                cost_ex_tax: '4.0000'
                cost_inc_tax: '4.3200'
                cost_tax: '0.3200'
                cost_tax_class_id: 2
                base_handling_cost: '0.0000'
                handling_cost_ex_tax: '0.0000'
                handling_cost_inc_tax: '0.0000'
                handling_cost_tax: '0.0000'
                handling_cost_tax_class_id: 2
                shipping_zone_id: 1
                shipping_zone_name: United States
                shipping_quotes:
                  url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/140/shippingaddresses/42/shippingquotes'
                  resource: /orders/140/shippingaddresses/42/shippingquotes
                form_fields:
                  - name: Wholesale ID
                    value: '12345566'
    shippingQuotes_Resp:
      description: This response can vary depending on the shipping provider.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/shippingQuotes_Base'
        Fixed Shipping:
          examples:
            response:
              value:
                id: '16'
                uuid: 18aaa5eb-3c7a-4bf8-bfaa-d14d155606f1
                timestamp: 'Mon, 30 Jul 2018 15:32:35 +0000'
                shipping_provider_id: bcproductbased
                shipping_provider_quote: []
                provider_code: productfixedshipping
                carrier_code: ''
                rate_code: ''
                rate_id: ''
        UPS Example:
          examples:
            response:
              value:
                id: '19'
                uuid: 6c21e6ba-3080-4def-991b-ae79ace4dfac
                timestamp: 'Mon, 20 Aug 2018 14:47:13 +0000'
                shipping_provider_id: bcrealtime
                shipping_provider_quote:
                  rate:
                    value: '44.11'
                    unit: USD
                  transitTime: 1 business day
                  name: UPS Next Day Air®
                  signatureConfirmationFee: {}
                  carrierName: ''
                  carrierCode: {}
                  code: {}
                  deliveryMessage: ''
                  labelSizes: []
                  insuredMailFee: {}
                  dates: []
                  rateId: {}
                provider_code: upsready
                carrier_code: ''
                rate_code: ''
                rate_id: ''
    orderTaxes_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/orderTaxes_Base'
          examples:
            response:
              value:
                - id: 13
                  order_id: 138
                  order_address_id: 39
                  tax_rate_id: 1
                  tax_class_id: 0
                  name: Tax
                  class: Default Tax Class
                  rate: '8.0000'
                  priority: 0
                  priority_amount: '17.6400'
                  line_amount: '17.6400'
                - id: 14
                  order_id: 138
                  order_address_id: 40
                  tax_rate_id: 1
                  tax_class_id: 0
                  name: Tax
                  class: Default Tax Class
                  rate: '8.0000'
                  priority: 0
                  priority_amount: '4.4000'
                  line_amount: '4.4000'
    actual-order-response:
      description: ''
      content:
        application/json:
          schema:
            title: Order
            example:
              id: 113
              customer_id: 1
              date_created: 'Wed, 17 Jan 2018 20:11:21 +0000'
              date_modified: 'Wed, 25 Apr 2018 20:20:25 +0000'
              date_shipped: ''
              status_id: 7
              status: Awaiting Payment
              subtotal_ex_tax: '143.9500'
              subtotal_inc_tax: '143.9500'
              subtotal_tax: '0.0000'
              base_shipping_cost: '0.0000'
              shipping_cost_ex_tax: '0.0000'
              shipping_cost_inc_tax: '0.0000'
              shipping_cost_tax: '0.0000'
              shipping_cost_tax_class_id: 2
              base_handling_cost: '0.0000'
              handling_cost_ex_tax: '0.0000'
              handling_cost_inc_tax: '0.0000'
              handling_cost_tax: '0.0000'
              handling_cost_tax_class_id: 2
              base_wrapping_cost: '0.0000'
              wrapping_cost_ex_tax: '0.0000'
              wrapping_cost_inc_tax: '0.0000'
              wrapping_cost_tax: '0.0000'
              wrapping_cost_tax_class_id: 3
              total_ex_tax: '138.9500'
              total_inc_tax: '138.9500'
              total_tax: '0.0000'
              items_total: 2
              items_shipped: 0
              payment_method: Cash on Delivery
              payment_provider_id: null
              payment_status: ''
              refunded_amount: '0.0000'
              order_is_digital: false
              store_credit_amount: '0.0000'
              gift_certificate_amount: '0.0000'
              ip_address: 64.183.182.114
              geoip_country: United States
              geoip_country_iso2: US
              currency_id: 1
              currency_code: USD
              currency_exchange_rate: '1.0000000000'
              default_currency_id: 1
              default_currency_code: USD
              staff_notes: ''
              customer_message: ''
              discount_amount: '0.0000'
              coupon_discount: '5.0000'
              shipping_address_count: 1
              is_deleted: false
              ebay_order_id: '0'
              cart_id: 1cf3da59-1c90-42a9-82fb-2a954743a390
              billing_address:
                first_name: Jane
                last_name: Does
                company: ''
                street_1: 123 MainStreet
                street_2: ''
                city: Austin
                state: Texas
                zip: '78751'
                country: United States
                country_iso2: US
                phone: ''
                email: jane@example.com
                form_fields: []
              is_email_opt_in: false
              credit_card_type: null
              order_source: www
              external_source: null
              products:
                url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/113/products'
                resource: /orders/113/products
              shipping_addresses:
                url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/113/shippingaddresses'
                resource: /orders/113/shippingaddresses
              coupons:
                url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/113/coupons'
                resource: /orders/113/coupons
              external_id: null
              external_merchant_id: null
              custom_status: Awaiting Payment
              external_order_id: external-order-id
            type: object
            properties:
              id:
                description: The ID of the order, a read-only value. Do not pass in PUT or POST request.
                example: 118
                type: integer
              customer_id:
                description: The ID of the customer placing the order; or 0 if it was a guest order.
                example: 6
                type: number
              date_created:
                type: string
                description: The date the order was created, formatted in the RFC-2822 standard. You set this attribute on Order creation (POST request) to support the migration of historical orders. If you do not provide a value, then it will default to the current date/time. e.g., `Tue, 20 Nov 2012 00:00:00 +0000`
              date_modified:
                type: string
                description: A read-only value representing the last modification of the order. Do not attempt to modify or set this value in a POST or PUT request. RFC-2822
              date_shipped:
                type: string
                description: A read-only value representing the date of shipment. Do not attempt to modify or set this value in a POST or PUT request. RFC-2822
              status_id:
                description: The status ID of the order.
                example: 11
                type: integer
              cart_id:
                description: The cart ID from which this order originated, if applicable. Correlates with the Cart API. This is a read-only field; do not set or modify its value in a POST or PUT request.
                example: a8458391-ef68-4fe5-9ec1-442e6a767364
                type: string
              status:
                description: The status will include one of the (string, optional) - values defined under Order Statuses. This is a read-only value. Do not attempt to modify or set this value in a POST or PUT request.
                example: Awaiting Fulfillment
                type: string
              custom_status:
                description: Contains the same (string, optional) - value as the `custom_label` property of the Order Statuses object.
                example: Awaiting Fulfillment
                type: string
              subtotal_ex_tax:
                description: Override value for subtotal excluding tax. If specified, the field `subtotal_inc_tax` is also required. (Float, Float-As-String, Integer)
                example: '225.0000'
                type: string
              subtotal_inc_tax:
                description: Override value for subtotal including tax. If specified, the field `subtotal_ex_tax` is also required. (Float, Float-As-String, Integer)
                example: '225.0000'
                type: string
              subtotal_tax:
                description: A read-only value. Do not attempt to set or modify this value in a POST or PUT request. (Float, Float-As-String, Integer)
                example: '0.0000'
                type: string
              base_shipping_cost:
                description: The value of the base shipping cost. (Float, Float-As-String, Integer)
                example: '0.0000'
                type: string
              shipping_cost_ex_tax:
                description: The value of shipping cost, excluding tax. (Float, Float-As-String, Integer)
                example: '0.0000'
                type: string
              shipping_cost_inc_tax:
                description: The value of shipping cost, including tax. (Float, Float-As-String, Integer)
                example: '0.0000'
                type: string
              shipping_cost_tax:
                description: A read-only value. Do not attempt to modify or set this value in a POST or PUT request. (Float, Float-As-String, Integer)
                example: '0.0000'
                type: string
              shipping_cost_tax_class_id:
                description: |-
                  Shipping-cost tax class. A read-only value. Do not attempt to modify or set this value in a POST or PUT request. (NOTE: Value ignored if automatic tax is enabled on the store.)
                example: 2
                type: integer
              base_handling_cost:
                description: The value of the base handling cost. (Float, Float-As-String, Integer)
                example: '0.0000'
                type: string
              handling_cost_ex_tax:
                description: The value of the handling cost, excluding tax. (Float, Float-As-String, Integer)
                example: '0.0000'
                type: string
              handling_cost_inc_tax:
                description: The value of the handling cost, including tax. (Float, Float-As-String, Integer)
                oneOf:
                  - type: number
                  - type: string
              handling_cost_tax:
                description: A read-only value. Do not attempt to modify or set this value in a POST or PUT request. (Float, Float-As-String, Integer)
                example: '0.0000'
                type: string
              handling_cost_tax_class_id:
                description: |-
                  A read-only value. Do not attempt to set or modify this value in a POST or PUT request. (NOTE: Value ignored if automatic tax is enabled on the store.)
                example: 2
                type: integer
              base_wrapping_cost:
                description: The value of the base wrapping cost.
                example: 0
                oneOf:
                  - type: string
                  - type: number
              wrapping_cost_ex_tax:
                description: The value of the wrapping cost, excluding tax. (Float, Float-As-String, Integer)
                example: '0.0000'
                type: string
              wrapping_cost_inc_tax:
                description: The value of the wrapping cost, including tax. (Float, Float-As-String, Integer)
                example: '0.0000'
                type: string
              wrapping_cost_tax:
                description: A read-only value. Do not attempt to modify or set this value in a POST or PUT request. (Float, Float-As-String, Integer)
                example: '0.0000'
                type: string
              wrapping_cost_tax_class_id:
                description: |-
                  A read-only value. Do not attempt to set or modify this value in a POST or PUT request. (NOTE: Value ignored if automatic tax is enabled on the store.)
                example: 3
                type: integer
              total_ex_tax:
                description: Override value for the total, excluding tax. If specified, the field `total_inc_tax` is also required. (Float, Float-As-String, Integer)
                example: '225.0000'
                type: string
              total_inc_tax:
                description: Override value for the total, including tax. If specified, the field `total_ex_tax` is also required. (Float, Float-As-String, Integer)
                example: '225.0000'
                type: string
              total_tax:
                description: A read-only value. Do not attempt to set or modify this value in a POST or PUT request. (Float, Float-As-String, Integer)
                example: '0.0000'
                type: string
              items_total:
                description: The total number of items in the order.
                example: 1
                type: number
              items_shipped:
                description: The number of items that have been shipped.
                example: 0
                type: number
              payment_method:
                description: The display name of the payment method for this order.
                example: Cash on Delivery
                type: string
              payment_provider_id:
                description: The external Transaction ID/Payment ID within this order’s payment provider (if a payment provider was used).
                example: null
                type: string
                nullable: true
              payment_status:
                description: A read-only value. Do not attempt to set or modify this value in a POST or PUT request.
                type: string
              refunded_amount:
                description: The amount refunded from this transaction; always returns `0`. (Float, Float-As-String, Integer)
                example: '0.0000'
                type: string
              order_is_digital:
                description: Whether this is an order for digital products.
                example: false
                type: boolean
              store_credit_amount:
                description: Represents the store credit that the shopper has redeemed on this individual order. This is a read-only value. Do not pass in a POST or PUT request. (Float, Float-As-String, Integer)
                example: '0.0000'
                type: string
              gift_certificate_amount:
                description: A read-only value. Do not pass in a POST or PUT request. (Float, Float-As-String, Integer)
                example: '0.0000'
                type: string
              ip_address:
                description: IP Address of the customer, if known.
                example: 12.345.678.910
                type: string
              geoip_country:
                description: The full name of the country where the customer made the purchase, based on the IP.
                example: United States
                type: string
              geoip_country_iso2:
                description: The country where the customer made the purchase, in ISO2 format, based on the IP.
                example: US
                type: string
              currency_id:
                description: The display currency ID. May be different from transactional currency. A read-only value. Do not pass in a POST or PUT request.
                example: 1
                type: integer
              currency_code:
                description: The currency code of the display currency used to present prices on the storefront. May be different from transactional currency. A read-only value. Do not pass in a POST or PUT request.
                example: USD
                type: string
              currency_exchange_rate:
                description: A read-only value. Do not pass in a POST or PUT request. (Float, Float-As-String, Integer)
                example: '1.0000000000'
                type: string
              default_currency_id:
                description: The transactional currency ID. A read-only value. Do not pass in a POST or PUT request.
                example: 1
                type: integer
              default_currency_code:
                description: The currency code of the transactional currency the shopper pays in. A read-only value. Do not pass in a POST or PUT request.
                type: string
                example: USD
              staff_notes:
                type: string
                description: Any additional notes for staff.
                example: Send Saturday
                maxLength: 65535
              customer_message:
                description: Message that the customer entered (number, optional) -o the `Order Comments` box during checkout.
                example: Thank you
                type: string
              discount_amount:
                description: Amount of discount for this transaction. (Float, Float-As-String, Integer)
                example: '0.0000'
                type: string
              coupon_discount:
                description: A read-only value. Do not pass in a POST or PUT request. (Float, Float-As-String, Integer)
                example: '5.0000'
                type: string
              shipping_address_count:
                type: number
                description: The number of shipping addresses associated with this transaction. A read-only value. Do not pass in a POST or PUT request.
              is_deleted:
                description: Boolean value indicates whether the order was deleted (archived). Set to to true to archive an order.
                example: false
                type: boolean
              is_email_opt_in:
                description: Boolean value indicates whether the shopper has selected an opt-in check box (on the checkout page) to receive emails. A read-only value. Do not pass in a POST or PUT request.
                example: false
                type: boolean
              credit_card_type:
                description: Credit card type
                example: 0
                type: integer
                nullable: true
              ebay_order_id:
                description: If the order was placed through eBay, the eBay order number will be included. Otherwise, the value will be `0`.
                example: '0'
                type: string
              billing_address:
                title: Billing Address
                type: object
                description: Required to create an order.
                properties:
                  first_name:
                    description: ''
                    example: Jane
                    type: string
                  last_name:
                    description: ''
                    example: Doe
                    type: string
                  company:
                    description: ''
                    type: string
                  street_1:
                    description: ''
                    example: 123 Main Street
                    type: string
                  street_2:
                    description: ''
                    type: string
                  city:
                    description: ''
                    example: Austin
                    type: string
                  state:
                    description: ''
                    example: TX
                    type: string
                  zip:
                    description: ''
                    example: '12345'
                    type: number
                  country:
                    description: ''
                    example: United States
                    type: string
                  country_iso2:
                    description: ''
                    example: US
                    type: string
                  phone:
                    description: ''
                    type: string
                  email:
                    description: ''
                    example: janedoe@example.com
                    type: string
                  form_fields:
                    description: ''
                    type: array
                    items:
                      title: Form Fields
                      type: object
                      description: Read-Only. If you have required address form fields they will need to be set as optional before creating an order with the API.
                      properties:
                        name:
                          description: Name of the form field.
                          type: string
                          example: License Id
                          readOnly: true
                        value:
                          description: Value of the form field.
                          type: string
                          example: 123BAF
                          readOnly: true
                      readOnly: true
              order_source:
                description: Orders submitted from the store's website will include a `www` value. Orders submitted with the Checkout API will be set to `checkout_api`.
                example: www, iPhone, Android, mobile, manual
                type: string
              external_source:
                description: |-
                  This value identifies an external system that generated the order and submitted it to BigCommerce using the Orders API.
                  * When supplying the value, we recommend combining the type of system and vendor, e.g., ERP (Acumatica) or POS (Square).
                  * If you are migrating historical orders processed on another eCommerce platform to BigCommerce, supply the following code as the value: M-MIG. This code will exclude historical orders from the store’s GMV/order count, which factors into pricing.
                  * If you do not provide a value, then it will default to null..
                example: null
                nullable: true
                type: string
              products:
                $ref: '#/components/schemas/products_Resource'
              shipping_addresses:
                $ref: '#/components/schemas/shippingAddresses_Resource'
              coupons:
                $ref: '#/components/schemas/coupons_Resource'
              external_id:
                description: (Read-only) ID of the order in another system. For example, the Amazon order ID if this is an Amazon order.
                example: null
                type: string
                nullable: true
                readOnly: true
              external_merchant_id:
                description: ID of the merchant.
                example: null
                type: string
                nullable: true
              channel_id:
                type: integer
                example: 1
                description: Shows where the order originated. The channel_id will default to 1. Read-Only.
              tax_provider_id:
                type: string
                description: |
                  BasicTaxProvider - Tax is set to manual and order is created in the store.
                  
                  AvaTaxProvider - Tax is set to automatic and order is created in the store. Used for Avalara.
                  
                  "" (empty string) - The order is created with the API, or the tax provider is unknown.
    404_Resp:
      description: Not Found
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                status:
                  type: integer
                message:
                  type: string
          examples:
            response:
              value:
                - status: 404
                  message: The requested resource was not found.
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Orders | modify | `store_v2_orders` |
        |  Orders | read-only | `store_v2_orders_read_only` |
        
        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header
  schemas:
    order_Resp:
      title: order_Resp
      description: Order object returned in responses.
      allOf:
        - $ref: '#/components/schemas/order_RespOnly'
        - $ref: '#/components/schemas/order_Shared'
      x-internal: false
    ordersCount_Full:
      title: ordersCount_Full
      type: object
      properties:
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/ordersCountStatus'
        count:
          description: Total number of orders in the store.
          example: 45
          type: number
      x-internal: false
    orderCoupons_Base:
      title: orderCoupons_Base
      type: object
      properties:
        id:
          description: Numeric ID of the coupon code.
          example: 3
          type: integer
        coupon_id:
          description: Numeric ID of the associated coupon.
          example: 1
          type: integer
        order_id:
          description: Numeric ID of the associated order.
          example: 120
          type: integer
        code:
          description: Coupon code, as a string.
          example: S2549JM0Y
          nullable: true
          type: string
        amount:
          description: Amount of the discount. This information is returned as in integer. Dollar and percentage discounts will return the same. For example, $3 returns as ''3'' while 5% will return as 5. Check the discount type to see what type of discount is available.
          example: 5
          oneOf:
            - type: string
            - type: number
            - type: integer
          format: float
        type:
          type: integer
          title: Order Coupon Discount Type
          description: |-
            0: per_item_discount
            1: percentage_discount
            2: per_total_discount
            3: shipping_discount
            4: free_shipping
            5: promotions
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
        discount:
          description: |-
            The amount off the order the discount is worth. For example, if an order subtotal is $90 and the discount is $3 then it will return as 3.000. If the discount is
            3% then will return as 2.7000 or the amount of the order. (Float, Float-As-String, Integer)
          example: 2.7
          type: number
      x-internal: false
    orderProducts:
      title: orderProducts
      type: object
      description: ''
      x-internal: false
      properties:
        id:
          description: Numeric ID of this product within this order.
          example: 25
          type: integer
        order_id:
          description: Numeric ID of the associated order.
          example: 120
          type: integer
        product_id:
          description: Numeric ID of the product.
          example: 20
          type: integer
        order_pickup_method_id:
          type: integer
          example: 0
          description: ID of the pickup fulfillment method for this item. Default value is 0 when the item is not fulfilled by pickup method.
        order_address_id:
          description: Numeric ID of the associated order address. Value is `0` for items that are not fulfilled by a pickup method.
          example: 20
          type: integer
        name:
          description: Alias for name_customer - The product name that is shown to customer in storefront.
          example: Fog Linen Chambray Towel - Beige Stripe
          type: string
          minLength: 1
        sku:
          description: User-defined product code/stock keeping unit (SKU).
          example: S-GREE
          type: string
        type:
          type: string
          enum:
            - physical
            - digital
          example: physical
          description: Type of product.
        base_price:
          description: The product’s base price. (Float, Float-As-String, Integer)
          example: '54.0000'
          type: string
        price_ex_tax:
          description: 'The product’s price excluding tax. (Float, Float-As-String, Integer)'
          example: '54.0000'
          type: string
        price_inc_tax:
          description: The product’s price including tax. (Float, Float-As-String, Integer)
          example: '54.0000'
          type: string
        price_tax:
          description: |-
            Amount of tax applied to a single product.
            
            Price tax is calculated as:
            `price_tax = price_inc_tax - price_ex_tax`
            
            (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        base_total:
          description: |-
            Total base price. (Float, Float-As-String, Integer)

            **Note**: The `base_total` is affected by the tax options set up in the control panel and is altered on tax-free orders. See more details on how `base_total` is affected by visiting the [Responsive Tax Display Settings](https://support.bigcommerce.com/s/article/Manual-Tax-Setup) overview. If the `base_total` is `$0`, it's due to the store's tax settings. To learn more about tax settings in the control panel, check out this [Tax Settings](https://support.bigcommerce.com/s/article/Tax-Overview?language=en_US#tax-settings) support article.
          example: '54.0000'
          type: string
        total_ex_tax:
          description: Total base price excluding tax. (Float, Float-As-String, Integer)
          example: '54.0000'
          type: string
        total_inc_tax:
          description: Total base price including tax. (Float, Float-As-String, Integer)
          example: '54.0000'
          type: string
        total_tax:
          description: |-
            Total tax applied to products.
            For example, if quantity if 2, base price is 5 and tax rate is 10%. price_tax will be $.50 and total_tax will be $1.00.

            If there is a manual discount applied total_tax is calculated as the following:
            `(price_ex_tax - discount)*tax_rate=total_tax`.
            (Float, Float-As-String, Integer)
          example: '0.5200'
          type: string
        quantity:
          description: Quantity of the product ordered.
          example: 1
          type: integer
        base_cost_price:
          description: The product’s cost price.  This can be set using the Catalog API. (Float, Float-As-String, Integer) Read Only
          example: '0.0000'
          type: string
        cost_price_inc_tax:
          description: |-
            The product’s cost price including tax. (Float, Float-As-String, Integer)
            The cost of your products to you; this is never shown to customers, but can be used for accounting purposes. Read Only
          example: '0.0000'
          type: string
        cost_price_ex_tax:
          description: |-
            The products cost price excluding tax. (Float, Float-As-String, Integer)
            The cost of your products to you; this is never shown to customers, but can be used for accounting purposes. Read Only
          example: '0.0000'
          type: string
        weight:
          description: Weight of the product. (Float, Float-As-String, Integer)
          example: 1
          oneOf:
            - type: number
            - type: string
        cost_price_tax:
          description: |-
            Tax applied to the product’s cost price. (Float, Float-As-String, Integer)
            The cost of your products to you; this is never shown to customers, but can be used for accounting purposes. Read Only
          example: '54.0000'
          type: string
        is_refunded:
          type: boolean
          description: Whether the product has been refunded.
          example: false
        quantity_refunded:
          type: number
          description: The total quantity of product refunded from this transaction.
          example: 0
        refunded_amount:
          type: string
          description: The amount refunded from this transaction; always returns `0`. (Float, Float-As-String, Integer)
          example: '0.0000'
          deprecated: true
        return_id:
          description: Numeric ID for the refund.
          example: 0
          type: number
        wrapping_name:
          description: Name of gift-wrapping option.
          example: null
          type: string
        base_wrapping_cost:
          description: The value of the base wrapping cost. (Float, Float-As-String, Integer)
          example: '0.0000'
          oneOf:
            - type: string
            - type: number
        wrapping_cost_ex_tax:
          description: The value of the wrapping cost, excluding tax. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        wrapping_cost_inc_tax:
          description: The value of the wrapping cost, including tax. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        wrapping_cost_tax:
          description: Tax applied to gift-wrapping option. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        wrapping_message:
          description: Message to accompany gift-wrapping option.
          type: string
        quantity_shipped:
          description: Quantity of this item shipped.
          example: 0
          type: number
        event_name:
          description: Name of promotional event/delivery date.
          example: null
          type: string
          nullable: true
        event_date:
          description: Date of the promotional event/scheduled delivery.
          type: string
          format: date
          nullable: true
        fixed_shipping_cost:
          description: Fixed shipping cost for this product. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        ebay_item_id:
          description: Item ID for this product on eBay.
          type: string
        ebay_transaction_id:
          description: Transaction ID for this product on eBay.
          type: string
        option_set_id:
          description: Numeric ID of the option set applied to the product.
          example: 5
          type: integer
          nullable: true
        parent_order_product_id:
          description: ID of a parent product.
          type: integer
          nullable: true
        is_bundled_product:
          description: Whether this product is bundled with other products.
          example: false
          type: boolean
        bin_picking_number:
          description: Bin picking number for the physical product.
          type: string
        applied_discounts:
          description: Array of objects containing discounts applied to the product.
          type: array
          items:
            $ref: '#/components/schemas/orderProductAppliedDiscounts'
        product_options:
          description: Array of product option objects.
          type: array
          items:
            $ref: '#/components/schemas/orderProductOptions'
        external_id:
          description: (Read-only) ID of the order in another system. For example, the Amazon order ID if this is an Amazon order.
          type: string
          nullable: true
          readOnly: true
        upc:
          type: string
          maxLength: 255
          description: Universal Product Code. Can be written to for custom products and catalog products.
        variant_id:
          type: integer
          description: Products `variant_id`. PUT or POST. This field is not available for custom products.
        name_customer:
          type: string
          example: Fog Linen Chambray Towel - Beige Stripe
          description: The product name that is shown to customer in storefront.
        name_merchant:
          type: string
          example: Towel Type 1
          description: The product name that is shown to merchant in Control Panel.
        gift_certificate_id:
          type: integer
          example: 52
          description: ID of the associated gift certificate.
          nullable: true
    orderCount:
      title: orderCount
      example:
        count: 27
      type: object
      properties:
        count:
          description: ''
          example: 27
          type: number
      x-internal: false
    orderShippingAddress:
      title: orderShippingAddress
      allOf:
        - type: object
          properties:
            id:
              type: integer
              example: 1
              description: ID of this shipping address.
            order_id:
              type: integer
              description: ID of the order.
              example: 100
            items_total:
              type: number
              example: 1
              description: The total number of items in the order.
            items_shipped:
              type: number
              description: The number of items that have been shipped.
              example: 0
            base_cost:
              type: string
              description: The base value of the order’s items. (Float, Float-As-String, Integer)
              example: '5.0000'
            cost_ex_tax:
              type: string
              example: '0.0000'
              description: The value of the order’s items, excluding tax. (Float, Float-As-String, Integer)
            cost_inc_tax:
              type: string
              description: The value of the order’s items, including tax. (Float, Float-As-String, Integer)
              example: '0.0000'
            cost_tax:
              type: string
              description: The tax amount on the order. (Float, Float-As-String, Integer)
              example: '0.0000'
            cost_tax_class_id:
              type: integer
              description: |-
                The ID of the tax class applied to the product. (NOTE: Value ignored if automatic tax is enabled.)
              example: 2
            base_handling_cost:
              type: string
              description: The base handling charge. (Float, Float-As-String, Integer)
              example: '0.0000'
            handling_cost_ex_tax:
              type: string
              description: The handling charge, excluding tax. (Float, Float-As-String, Integer)
              example: '0.0000'
            handling_cost_inc_tax:
              type: string
              description: The handling charge, including tax. (Float, Float-As-String, Integer)
              example: '0.0000'
            handling_cost_tax:
              type: string
              example: '0.0000'
            handling_cost_tax_class_id:
              type: integer
              description: |-
                A read-only value. Do not attempt to set or modify this value in a POST or PUT operation. (NOTE: Value ignored if automatic tax is enabled on the store.)
              example: 2
            shipping_zone_id:
              type: number
              description: Numeric ID of the shipping zone.
              example: 1
            shipping_zone_name:
              type: string
              description: Name of the shipping zone.
              example: United States
            form_fields:
              type: array
              items:
                $ref: '#/components/schemas/formFields'
            shipping_quotes:
              $ref: '#/components/schemas/shippingQuotes_Resource'
        - $ref: '#/components/schemas/shippingAddress_Base'
      x-internal: false
    orderTaxes_Base:
      title: orderTaxes_Base
      type: object
      properties:
        id:
          description: The unique numeric identifier of the taxes object.
          example: 1
          type: integer
        order_id:
          description: |-
            The unique numeric identifier of the order to which the tax was applied. NOTE: Not included if the store was using the automatic tax feature.
          example: 129
          type: integer
        order_address_id:
          description: |-
            The unique numeric identifier of the order address object associated with the order. NOTE: Not included if the store was using the automatic tax feature.
          example: 29
          type: integer
        tax_rate_id:
          description: The unique numeric identifier of the tax rate.
          example: 1
          type: integer
        tax_class_id:
          description: |-
            The unique numeric identifier of the tax class object. NOTE: Will be 0 if automatic tax was enabled, or if the default tax class was used.
          example: 0
          type: integer
        name:
          description: The name of the tax class object.
          example: "State Tax"
          type: string
        class:
          description: |-
            The name of the type of tax that was applied. NOTE: It will be "Automatic Tax" if automatic tax was enabled. It will be "API Tax Override" if the order was created with V2 Orders API.
          example: Gift Wrapping
          type: string
        rate:
          description: The tax rate.  The priority order in which the tax is applied (Float, Float-As-String, Integer)
          example: '8.0000'
          type: string
        priority:
          description: The order in which the tax is applied.
          example: 0
          type: number
        priority_amount:
          description: The amount of tax calculated on the order. (Float, Float-As-String, Integer)
          example: '1.5200'
          type: string
        line_amount:
          description: (Float, Float-As-String, Integer)
          example: '1.5200'
          type: string
        order_product_id:
          type: string
          description: If the `line_item_type` is `item` or `handling` then this field will be the order product id. Otherwise the field will return as null.
        line_item_type:
          type: string
          enum:
            - item
            - shipping
            - handling
            - gift-wrapping
          description: Type of tax on item.
      x-internal: false
    orderShipment:
      title: orderShipment
      type: object
      description: ''
      properties:
        id:
          description: Shipment ID.
          example: 1
          type: integer
        order_id:
          description: ID of the order associated with this shipment.
          example: 120
          type: integer
        customer_id:
          description: ID of this order’s customer.
          example: 5
          type: integer
        order_address_id:
          description: ID of the desired `shipping_address` associated with the shipment.
          example: 20
          type: integer
        date_created:
          type: string
          description: Creation date for the shipment.
        tracking_number:
          description: Tracking number of the shipment.
          example: w4se4b6ASFEW4T
          type: string
        shipping_method:
          description: |-
            Additional information to describe the method of shipment (ex. Standard, Ship by Weight, Custom Shipment). Can be used for live quotes from certain shipping providers.
            If different from `shipping_provider`, `shipping_method` should correspond to `tracking_carrier`.
          example: Ship by Weight
          type: string
        shipping_provider:
          type: string
          description: Enum of the BigCommerce shipping-carrier integration/module.
          enum:
            - auspost
            - canadapost
            - carrier_{your_carrier_id} (only used if the carrier is a [third-party Shipping Provider](/api-docs/providers/shipping))
            - endicia
            - usps
            - fedex
            - ups
            - upsready
            - upsonline
            - shipperhq
            - ''
        tracking_carrier:
          type: string
          title: Tracking Carrier
          description: |-
            Tracking carrier for the shipment.
            Acceptable values for `tracking_carrier` include an empty string (`""`) or one of the valid [tracking-carrier values](https://github.com/bigcommerce/dev-docs/blob/master/assets/csv/tracking_carrier_values.csv).
        tracking_link:
          type: string
          description: Returns a tracking link from the shipping service.
        comments:
          type: string
          description: Comments the shipper wishes to add.
          maxLength: 65535
        billing_address:
          $ref: '#/components/schemas/billingAddress_Base'
        shipping_address:
          $ref: '#/components/schemas/shippingAddress_Base'
        items:
          description: |-
            The items in the shipment. This object has the following members, all integer: order_product_id (required), quantity (required), product_id (read-only). A sample items value might be: [ {"order_product_id":16,"product_id": 0,"quantity":2} ]
          type: array
          items:
            type: object
            properties:
              order_product_id:
                type: integer
                example: 5
              product_id:
                type: integer
                example: 87
              quantity:
                type: integer
                example: 2
      x-internal: false
    orderConsignments_Resource:
      title: orderConsignments_Resource
      type: object
      readOnly: true
      properties:
        url:
          description: URL where you can use a GET request to get the order consignments.
          readOnly: true
          example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/101/consignments'
          type: string
        resource:
          description: Path where you can use a GET request to get the order consignments.
          readOnly: true
          example: /orders/101/consignments
          type: string
    products_Resource:
      title: products_Resource
      type: object
      readOnly: true
      properties:
        url:
          description: ''
          readOnly: true
          example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products'
          type: string
        resource:
          description: ''
          readOnly: true
          example: /orders/129/products
          type: string
      x-internal: false
    shippingAddresses_Resource:
      title: shippingAddress_Resource
      type: object
      readOnly: true
      properties:
        url:
          description: URL of the shipping address for API requests.
          readOnly: true
          example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/shippingaddresses'
          type: string
        resource:
          description: ''
          readOnly: true
          example: /orders/129/shippingaddresses
          type: string
      x-internal: false
    coupons_Resource:
      title: coupons_Resource
      type: object
      readOnly: true
      properties:
        url:
          description: URL of the coupons for API requests.
          readOnly: true
          example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/coupons'
          type: string
        resource:
          description: Resource of the coupons.
          readOnly: true
          example: /orders/129/coupons
          type: string
      x-internal: false
    orderProductAppliedDiscounts:
      title: orderProductAppliedDiscounts
      type: object
      description: |-
        When applying a manual discount to an order (not a product level discount), the discount is distributed across products in proportion to the products price.
        `(total_manual_discount*price_ex_tax)/subtotal_ex_tax`
      properties:
        id:
          description: Name of the coupon applied to order.
          example: total-coupon
          type: string
        amount:
          description: Amount of the discount.(Float, Float-As-String, Integer)
          example: '1.2100'
          type: string
        name:
          description: |-
            Name of the coupon.
            `Manual Discount` when creating a manual discount.
          example: $5 off
          type: string
        code:
          description: |-
            Coupon Code.
            There is no code when creating a manual discount.
          example: S2549JM0Y
          nullable: true
          type: string
        target:
          type: string
          enum:
            - order
            - product
          description: Determines if the discount if discount was applied at the Order or Product level. Read Only.
      x-internal: false
    orderProductOptions:
      title: orderProductOptions
      type: object
      properties:
        id:
          description: The unique numerical ID of the option; increments sequentially.
          example: 16
          type: integer
        option_id:
          description: Numeric ID of the associated option.
          example: 18
          type: integer
        order_product_id:
          description: ''
          example: 53
          type: integer
        product_option_id:
          description: Numeric ID of an option applied to the product from a list of options available to the product.
          example: 120
          type: integer
        display_name:
          description: Alias for display_name_customer. The product option name that is shown to customer in the storefront.
          example: Size
          type: string
        display_value:
          description: Alias for display_value_customer. The product option value that is shown to customer in storefront.
          example: S
          type: string
        value:
          description: For file-upload type, it's a unique string describing the properties of the file upload. For other types, it's the value of the property.
          example: "{\"originalName\":\"BigCommerceLogo.jpeg\",\"temporaryPath\":\"121_fbfb71dfc5a5d911f62d8e35dedd6e45.jpeg\",\"path\":\"f606efcae7e179970b19c3658142c5d0.jpeg\"}"
          type: string
        type:
          enum:
            - Checkbox
            - Date field
            - File Upload
            - Multi-line text field
            - Multiple choice
            - Product Pick List
            - Swatch
            - Text field
          example: Checkbox
          description: Option Type
        name:
          description: The option’s name, as used internally. Must be unique.
          example: Apparel sizes
          type: string
        display_style:
          description: 'How it is displayed on the storefront. Examples include Drop-down, radio buttons, or rectangles.'
          example: Rectangle
          type: string
        display_name_customer:
          type: string
          example: couleur
          description: The product option name that is shown to customer in storefront.
        display_name_merchant:
          type: string
          example: color
          description: The product option name that is shown to merchant in Control Panel.
        display_value_customer:
          type: string
          example: bleu
          description: The product option value that is shown to customer in storefront.
        display_value_merchant:
          type: string
          example: blue
          description: The product option value that is shown to merchant in Control Panel.
      x-internal: false
    formFields:
      title: formFields
      type: object
      x-internal: false
      properties:
        name:
          type: string
          example: License ID
          description: The form field name.
        value:
          description: The form field value.
          oneOf:
            - type: number
            - type: string
            - type: array
          example: 123BAF
          items:
            type: string
      x-examples:
        Example 1:
          name: License ID
          value: 123BAF
        Example 2:
          name: Borrowing Amount
          value: 12.2
        Example 3:
          name: Acceptable Sizes
          value:
            - Small
            - Medium
        Capture Custom Billing Address Form Fields:
          data:
            billing_address:
              form_fields:
                - name: picklist1
                  value: picklist-value-2
                - name: textfield1
                  value: text2
                - name: radiobutton1
                  value: radio-value-2
                - name: checkbox1
                  value: checkbox-value-2
                - name: multilinetextfield
                  value: line1\line2
                - name: numberonlyfield
                  value: 123.2
                - name: passwordfield1
                  value: password2
        Capture Custom Shipping Address Form Fields:
          data:
            shipping_address:
              id: 23
              form_fields:
                - name:  picklist1
                  value: picklist-value-3
        Capture Custom Consignment Shipping Form Fields:
          data:
            consignments:
              Shipping:
                id: 23
                form_fields:
                  - name: picklist1
                    value: picklist-value-2
    orderMessages:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          order_id:
            type: integer
          staff_id:
            type: integer
          customer_id:
            type: integer
          type:
            type: string
          subject:
            type: string
          message:
            type: string
          status:
            type: string
          is_flagged:
            type: boolean
          date_created:
            type: string
          customer:
            type: object
      title: orderMessages
      x-internal: false
    shippingQuotes_Resource:
      type: object
      title: shippingQuotes_Resource
      readOnly: true
      properties:
        url:
          type: string
          readOnly: true
          description: |-
            This URL will return a 204 for shipping quotes. To return shipping quotes:
            `/shipping_addresses/shipping_address_id/shipping_quotes`
          example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/163/shippingaddresses/64/shippingquotes'
        resource:
          type: string
          readOnly: true
          example: orders/163/shippingaddresses/64/shippingquotes
          description: |-
            This URL will return a 204 for shipping quotes. To return shipping quotes:
            `/shipping_addresses/shipping_address_id/shipping_quotes`
      x-internal: false
    shippingQuotes_Base:
      type: object
      title: shippingQuotes_Base
      properties:
        id:
          type: string
          description: ID of the shipping quote.
          example: '24'
        uuid:
          type: string
          description: UUID of the shipping quote.
          example: a72acc8d-504b-4a40-8534-7c54d997ed59
        timestamp:
          type: string
          description: Time the order was created in RFC 2822 format.
          format: date-time
        shipping_provider_id:
          type: string
          example: bcstatic
          description: ID of the shipping provider.
        shipping_provider_quote:
          type: array
          description: This can vary based on the shipping provider. Manual shipping methods such as fixed will return an empty array. Shipping providers such as UPS will return an object with the shipping information. Since the shipping quote is tied to a shipping address only one quote will return in the response.
          items: {}
        provider_code:
          type: string
          example: shipping_byweight
          description: Code of the shipping provider.
        carrier_code:
          type: string
          description: Code of the shipping carrier.
        rate_code:
          type: string
          description: Type of delivery. This can vary based on shipping quote.
        rate_id:
          type: string
          description: This can vary based on shipping quote.
        method_id:
          type: integer
          description: Shipping method ID
      x-internal: false
    orderShipment_Post:
      type: object
      title: orderShipment_Post
      x-internal: false
      properties:
        order_address_id:
          description: ID of the desired `shipping_address` associated with the shipment.
          example: 20
          type: integer
        tracking_number:
          type: string
          description: Tracking number of the shipment.
          example: w4se4b6ASFEW4T
          maxLength: 50
        tracking_link:
          type: string
          description: Tracking link that is associated with your shipment.
          example: https://www.mycustomtrackinglink.com/tracking
          maxLength: 500
        shipping_method:
          description: |
            Additional information to describe the method of shipment (ex. Standard, Ship by Weight, Custom Shipment). Can be used for live quotes from certain shipping providers.
            If different from `shipping_provider`, `shipping_method` should correspond to `tracking_carrier`.
          example: Ship by Weight
          type: string
        shipping_provider:
          type: string
          description: Enum of the BigCommerce shipping-carrier integration/module.
          enum:
            - auspost
            - canadapost
            - carrier_{your_carrier_id} (only used if the carrier is a [third-party Shipping Provider](/api-docs/providers/shipping))
            - endicia
            - usps
            - fedex
            - ups
            - upsready
            - upsonline
            - shipperhq
        tracking_carrier:
          type: string
          title: Tracking Carrier
          description: |-
            Tracking carrier for the shipment.
            Acceptable values for `tracking_carrier` include an empty string (`""`) or one of the valid [tracking-carrier values](https://github.com/bigcommerce/dev-docs/blob/master/assets/csv/tracking_carrier_values.csv).
        comments:
          type: string
          description: Comments the shipper wishes to add.
          maxLength: 65535
        items:
          description: |-
            The items in the shipment. This object has the following members, all integer: order_product_id (required), quantity (required), product_id (read-only). A sample items value might be: [ {"order_product_id":16,"product_id": 0,"quantity":2} ]
          type: array
          items:
            type: object
            properties:
              order_product_id:
                type: integer
                example: 5
              quantity:
                type: integer
                example: 2
    orderShipment_Put:
      type: object
      title: orderShipment_Put
      properties:
        order_address_id:
          description: ID of the desired `shipping_address` associated with the shipment.
          example: 20
          type: integer
        tracking_number:
          description: Tracking number of the shipment.
          example: w4se4b6ASFEW4T
          type: string
        shipping_method:
          description: |
            Additional information to describe the method of shipment (ex. Standard, Ship by Weight, Custom Shipment). Can be used for live quotes from certain shipping providers.
            If different from `shipping_provider`, `shipping_method` should correspond to `tracking_carrier`.
          example: Ship by Weight
          type: string
        shipping_provider:
          type: string
          description: Enum of the BigCommerce shipping-carrier integration/module.
          enum:
            - auspost
            - canadapost
            - carrier_{your_carrier_id} (only used if the carrier is a [third-party Shipping Provider](/api-docs/providers/shipping))
            - endicia
            - usps
            - fedex
            - ups
            - upsready
            - upsonline
            - shipperhq
        tracking_carrier:
          type: string
          title: Tracking Carrier
          description: |-
            Tracking carrier for the shipment.
            Acceptable values for `tracking_carrier` include an empty string (`""`) or one of the valid [tracking-carrier values](https://github.com/bigcommerce/dev-docs/blob/master/assets/csv/tracking_carrier_values.csv).
        tracking_link:
          type: string
          description: Tracking link that is associated with your shipment.
          example: https://www.mycustomtrackinglink.com/tracking
          maxLength: 500
        comments:
          type: string
          description: Comments the shipper wishes to add.
          maxLength: 65535
      x-internal: false
    orderStatus_Base:
      title: orderStatus_Base
      type: object
      properties:
        id:
          description: The ID of the type of order status.
          example: 0
          type: integer
        name:
          description: Name of the type of order status.
          example: Incomplete
          type: string
        system_label:
          description: System name of the type of order status.
          example: Incomplete
          type: string
        custom_label:
          description: Custom order status label given in the Control Panel.
          example: Incomplete- Waiting on Shipment
          type: string
        system_description:
          description: System description of the order status.
          example: An incomplete order happens when a shopper reached the payment page, but did not complete the transaction.
          type: string
      x-internal: false
    ordersCountStatus:
      title: ordersCountStatus
      type: object
      allOf:
        - $ref: '#/components/schemas/orderStatus_Base'
        - type: object
          properties:
            count:
              description: Number of orders that exist with this status.
              example: 6
              type: integer
            sort_order:
              description: The sort order of the order status from the Control Panel.
              example: 0
              type: integer
      x-internal: false
    order_Shared:
      title: order_Shared
      description: Order properties used in `PUT` and `POST` requests and responses.
      type: object
      x-internal: false
      properties:
        base_handling_cost:
          description: The value of the base handling cost. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        base_shipping_cost:
          description: The value of the base shipping cost. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        base_wrapping_cost:
          description: The value of the base wrapping cost expressed as a floating point number to four decimal places in string format.
          example: '0.0000'
          type: string
        billing_address:
          $ref: '#/components/schemas/billingAddress_Base'
        channel_id:
          description: Shows where the order originated. The channel_id will default to 1.
          example: 1
          type: integer
        customer_id:
          type: number
        customer_message:
          description: Message that the customer entered (number, options) -o the `Order Comments` box during checkout.
          example: Thank you
          type: string
        date_created:
          description: The date the order was created, formatted in the RFC-2822 standard. You set this attribute on Order creation (POST) to support the migration of historical orders. If you do not provide a value, then it will default to the current date/time. e.g., `Tue, 20 Nov 2012 00:00:00 +0000`.
          type: string
        default_currency_code:
          description: The currency code of the transactional currency the shopper pays in; writeable when multi-currency is enabled.
          type: string
        discount_amount:
          description: Amount of discount for this transaction. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        ebay_order_id:
          description: If the order was placed through eBay, the eBay order number will be included. Otherwise, the value will be `0`.
          example: '0'
          type: string
        external_id:
          description: (Read-only) The order ID in another system, such as the Amazon order ID if this is an Amazon order.
          example: null
          type: string
          nullable: true
          readOnly: true
        external_merchant_id:
          description: The merchant ID represents an upstream order from an external system. It is the source of truth for orders. After setting it, you cannot write to or update the `external_merchant_id`. For example, you can update the Facebook by Meta page ID in a POST request, but a PUT request to update the order will return a 400 error. Please remove it from your request before trying again.
          example: null
          oneOf:
            - type: string
          nullable: true
        external_source:
          description: |-
            This value identifies an external system that generated the order and submitted it to BigCommerce with the Orders API.
            * When supplying the value, we recommend combining the type of system and vendor, e.g., ERP (Acumatica) or POS (Square).
            * If you are migrating historical orders processed on another eCommerce platform to BigCommerce, supply the following code as the value: M-MIG. This code will exclude historical orders from the store’s GMV/order count, which factors into pricing.
            * If you do not provide a value, then it will default to null.
          example: null
          type: string
          nullable: true
        geoip_country:
          description: The full name of the country where the customer made the purchase, based on the IP.
          example: United States
          type: string
        geoip_country_iso2:
          description: The country where the customer made the purchase, in ISO2 format, based on the IP.
          example: US
          type: string
        handling_cost_ex_tax:
          description: The value of the handling cost, excluding tax. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        handling_cost_inc_tax:
          description: The value of the handling cost, including tax. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        ip_address:
          type: string
          description: |-
            IPv4 Address of the customer, if known.

            Note: You can set either `ip_address` or `ip_address_v6`. Setting the `ip_address` value will reset the `ip_address_v6` value and vice versa.
          example: 12.345.678.910
          maxLength: 30
        ip_address_v6:
          type: string
          description: |-
            IPv6 Address of the customer, if known.

            Note: You can set either `ip_address` or `ip_address_v6`. Setting the `ip_address_v6` value will reset the `ip_address` value and vice versa.
          example: '2001:db8:3333:4444:5555:6666:7777:8888'
          maxLength: 39
        is_deleted:
          description: Indicates whether the order was deleted (archived). Set to to true, to archive an order.
          example: false
          type: boolean
        items_shipped:
          description: The number of items that have been shipped.
          example: 0
          type: number
        items_total:
          description: The total number of items in the order.
          example: 1
          type: number
        order_is_digital:
          description: Whether this is an order for digital products.
          example: false
          type: boolean
        payment_method:
          description: |-
            The payment method for this order. Can be one of the following: `Manual`, `Credit Card`, `cash`, `Test Payment Gateway`, etc.
          enum:
            - Credit Card
            - Cash
            - Test Payment Gateway
            - Manual
          type: string
        payment_provider_id:
          description: The external Transaction ID/Payment ID within this order’s payment provider (if a payment provider was used).
          example: ''
          oneOf:
            - type: string
            - type: number
        refunded_amount:
          description: The amount refunded from this transaction; always returns `0`. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        shipping_cost_ex_tax:
          description: The value of shipping cost, excluding tax. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        shipping_cost_inc_tax:
          description: The value of shipping cost, including tax. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        staff_notes:
          type: string
          description: Any additional notes for staff.
          example: Send Saturday
          maxLength: 65535
        status_id:
          description: The status ID of the order.
          type: integer
        subtotal_ex_tax:
          description: Override value for subtotal excluding tax. If specified, the field `subtotal_inc_tax` is also required. (Float, Float-As-String, Integer)
          example: '225.0000'
          type: string
        subtotal_inc_tax:
          description: Override value for subtotal including tax. If specified, the field `subtotal_ex_tax` is also required. (Float, Float-As-String, Integer)
          example: '225.0000'
          type: string
        tax_provider_id:
          description: |
            BasicTaxProvider - Tax is set to manual and order is created in the store.
            
            AvaTaxProvider - Tax is set to automatic and order is created in the store. Used for Avalara.
            
            "" (empty string) - The order is created with the API, or the tax provider is unknown.
          enum:
            - BasicTaxProvider
            - AvaTaxProvider
            - ''
          type: string
        customer_locale:
          type: string
          example: en
          description: The customer’s locale.
        external_order_id:
          type: string
          example: external-order-id
          description: The order ID in another system, such as the Amazon Order ID if this is an Amazon order. After setting it, you can update this field using a POST or PUT request.
        total_ex_tax:
          description: Override value for the total, excluding tax. If specified, the field `total_inc_tax` is also required. (Float, Float-As-String, Integer)
          example: '225.0000'
          type: string
        total_inc_tax:
          description: Override value for the total, including tax. If specified, the field `total_ex_tax` is also required. (Float, Float-As-String, Integer)
          example: '225.0000'
          type: string
        wrapping_cost_ex_tax:
          description: The value of the wrapping cost, excluding tax. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        wrapping_cost_inc_tax:
          description: The value of the wrapping cost, including tax. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
    billingAddress_Base:
      type: object
      title: billingAddress_Base
      properties:
        first_name:
          type: string
          example: Jane
        last_name:
          type: string
          example: Doe
        company:
          type: string
        street_1:
          type: string
          example: 123 Main Street
        street_2:
          type: string
        city:
          type: string
          example: Austin
        state:
          type: string
          example: TX
        zip:
          type: string
          example: '12345'
          description: The billing address must include the ZIP code. The ZIP code must be two or more characters.
        country:
          type: string
          example: United States
        country_iso2:
          type: string
          example: US
        phone:
          type: string
        email:
          type: string
          example: janedoe@example.com
      required:
        - zip
      x-internal: false
    shippingAddress_Base:
      type: object
      title: shippingAddress_Base
      description: Shipping Address properties common to all requests and responses.
      properties:
        first_name:
          type: string
          example: Jane
        last_name:
          type: string
          example: Doe
        company:
          type: string
        street_1:
          type: string
          example: 123 Main Street
          description: Street address (first line).
        street_2:
          type: string
          description: Street address (second line).
        city:
          type: string
          example: Austin
        state:
          type: string
          example: Texas
        zip:
          type: string
          example: '12345'
          description: Zip or postal code, as a string.
        country:
          type: string
          example: United States
        country_iso2:
          type: string
          example: US
          description: 2-letter ISO Alpha-2 code for the country.
        phone:
          type: string
          description: Recipient’s telephone number.
        email:
          type: string
          example: janedoe@example.com
          description: 'Recipient’s email address. '
        shipping_method:
          type: string
          description: Text code identifying the BigCommerce shipping module selected by the customer.
          example: Free Shipping
      x-internal: false
    order_RespOnly:
      title: order_RespOnly
      type: object
      description: Properties that are only for order response bodies.
      properties:
        id:
          type: integer
          description: Read-only. The ID of the order.
          example: 118
        date_modified:
          type: string
          description: A read-only value representing the last modification of the order. Do not attempt to modify or set this value in a POST or PUT request. RFC-2822
        date_shipped:
          type: string
          description: A read-only value representing the date of shipment. Do not attempt to modify or set this value in a POST or PUT request. RFC-2822
        cart_id:
          description: The cart ID from which this order originated, if applicable. Correlates with the Cart API. This is a read-only field; do not set or modify its value in a POST or PUT request.
          example: a8458391-ef68-4fe5-9ec1-442e6a767364
          type: string
        status:
          type: string
          description: The status will include one of the (string, options) - values defined under Order Statuses. This value is read-only. Do not attempt to modify or set this value in a POST or PUT operation.
          example: Awaiting Fulfillment
        subtotal_tax:
          description: A read-only value. Do not attempt to set or modify this value in a POST or PUT request. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        shipping_cost_tax:
          description: A read-only value. Do not attempt to modify or set this value in a POST or PUT request. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        shipping_cost_tax_class_id:
          description: |-
            Shipping-cost tax class. A read-only value. Do not attempt to modify or set this value in a POST or PUT request. (NOTE: Value ignored if automatic tax is enabled on the store.)
          example: 2
          type: integer
        handling_cost_tax:
          description: A read-only value. Do not attempt to modify or set this value in a POST or PUT request. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        handling_cost_tax_class_id:
          description: |-
            A read-only value. Do not attempt to set or modify this value in a POST or PUT request. 

            (NOTE: Value ignored if automatic tax is enabled on the store.)
          example: 2
          type: integer
        wrapping_cost_tax:
          description: A read-only value. Do not attempt to modify or set this value in a POST or PUT request. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        wrapping_cost_tax_class_id:
          description: |-
            A read-only value. Do not attempt to set or modify this value in a POST or PUT request.  

            NOTE: Value ignored if automatic tax is enabled on the store.
          example: 3
          type: integer
        payment_status:
          type: string
          description: A read-only value. Do not attempt to set or modify this value in a POST or PUT request.
          enum:
            - authorized
            - captured
            - capture pending
            - declined
            - held for review
            - paid
            - partially refunded
            - pending
            - refunded
            - void
            - void pending
        store_credit_amount:
          description: Represents the store credit that the shopper has redeemed on this individual order. This is a read-only value. Do not pass in a POST or PUT request. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        gift_certificate_amount:
          description: A read-only value. Do not pass in a POST or PUT request. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        currency_id:
          description: The display currency ID. Depending on the currency selected, the value can be different from the transactional currency. A read-only value. Do not pass in a POST or PUT request. In v2 display currency is set to the transactional currency, ''default_currency_id''.
          example: 1
          type: integer
        currency_code:
          description: The currency code of the display currency used to present prices to the shopper on the storefront. Depending on the currency selected, the value can be different from the transactional currency. A read-only value. Do not pass in a POST or PUT request.
          example: USD
          type: string
        currency_exchange_rate:
          description: The exchange rate between the store’s default currency and the display currency. A read-only value. Do not pass in a POST or PUT request. For orders created using the V2 endpoints, this value is always 1 (only in the storefront this value can be different to 1). (Float, Float-As-String, Integer)
          example: '1.0000000000'
          type: string
        default_currency_id:
          description: The transactional currency ID. A read-only value. Do not pass in a POST or PUT request.
          example: 1
          type: integer
        default_currency_code:
          description: The currency code of the transactional currency the shopper pays in.
          example: EUR
          type: string
        store_default_currency_code:
          description: The currency code of the store's default currency.
          example: USD
          type: string
        store_default_to_transactional_exchange_rate:
          description: The exchange rate between the store's default currency and the transactional currency used in the order.
          example: '100.0000000000'
          type: string
        coupon_discount:
          description: A read-only value. Do not pass in a POST or PUT request. (Float, Float-As-String, Integer)
          example: '5.0000'
          type: string
        shipping_address_count:
          type: number
          description: The number of shipping addresses associated with this transaction. A read-only value. Do not pass in a POST or PUT.
        is_email_opt_in:
          description: Indicates whether the shopper has selected an opt-in check box (on the checkout page) to receive emails. A read-only value. Do not pass in a POST or PUT.
          example: false
          type: boolean
        order_source:
          description: Orders submitted from the store's website will include a `www` value. Orders submitted with the Checkout API will be set to `checkout_api`.
          example: www, iPhone, Android, mobile, manual
          type: string
        consignments:
          $ref: '#/components/schemas/orderConsignments_Resource'
        products:
          $ref: '#/components/schemas/products_Resource'
        shipping_addresses:
          $ref: '#/components/schemas/shippingAddresses_Resource'
        coupons:
          $ref: '#/components/schemas/coupons_Resource'
        status_id:
          type: integer
          example: 7
          description: The status ID of the order.
        billing_address:
          type: object
          properties:
            form_fields:
              type: array
              items:
                $ref: '#/components/schemas/formFields'
    orderCustomProduct_Put:
      type: object
      title: Custom product
      description: |-
        **Usage notes:**

        To `add` a custom product to an existing order, don't include `id` in the payload. You must provide a non-empty value for at least one of these fields: `name`, `name_customer`, or `name_merchant`.
        To `update` an order product line, `id` is required. The payload should only contain the fields that need to be updated. You cannot change omitted fields.

        Note the following constraints and default field values:
         - Empty strings `''` and `null` are invalid for `xxx`, `xxx_customer`, and `xxx_merchant`.
         - `name` and `name_customer` always hold the same value; updating either `name` or `name_customer` will change the value for both of those fields.
         - If both fields `name` and `name_customer` are present, they must have the same value.
         - When updating an existing order product, if you omit both fields `name` and `name_customer` from the request, they will not be updated.
         - When updating an existing order product, if you omit `name_merchant` from the request, it will not be updated.
         - When adding a product, if you omit `name_merchant`, it will be set to the value of `name` (or `name_customer`).
         - When adding a new product to an existing order, if you omit both fields `name` and `name_customer`, they will be set to the value of `name_merchant`.
      properties:
        name:
          type: string
          example: Fog Linen Chambray Towel - Beige Stripe
          description: |
            Alias for name_customer. The product name that is shown to customer in storefront.
        name_customer:
          type: string
          example: Fog Linen Chambray Towel - Beige Stripe
          description: The product name that is shown to customer in storefront.
        name_merchant:
          type: string
          example: Towel Type 1
          description: The product name that is shown to merchant in control panel.
        quantity:
          type: integer
        price_ex_tax:
          type: number
        price_inc_tax:
          type: number
        sku:
          type: string
        upc:
          type: string
        id:
          type: integer
          description: ID of the product line.
      required:
        - name
        - quantity
        - price_ex_tax
        - price_inc_tax
      x-internal: false
    orderCatalogProduct_Put:
      title: Catalog product
      description: |
        **Usage notes**
        
         To `add` a product to an existing order, don't include `id` in the payload. When adding a product with variants, `product_options` are required.
         To `update` an order product line, `id` is required. The payload should only contain the fields that need to be updated. The fields that you omit will not be changed.

         Note the following constraints and default field values:
         - `xxx` and `xxx_customer` always hold the same value. Updating either `xxx` or `xxx_customer` will change the value of both fields.
         - If both fields `xxx` and `xxx_customer` are present, they must have same value.
         - Empty strings `''` and `null` are invalid for `xxx`, `xxx_customer`, and `xxx_merchant`.
         - When updating an existing order product without changing the variant, product, or product options, requests that do not contain `xxx_merchant` will fail.
         - When updating an existing order product, requests that do not contain both fields `xxx` and `xxx_customer` will fail.
         - Empty strings `''` and `null` are invalid for `xxx`, `xxx_customer, and `xxx_merchant`. If `xxx_merchant` is omitted, it will default to have the catalog value.
         - If both fields `xxx` and `xxx_customer` are omitted from the request, they will default to the catalog value.
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: The order product `id`. To add a product to an existing order, donʼt include `id` in the payload. `id` is required when updating an order product.
        - $ref: '#/components/schemas/orderCatalogProduct_Post'
      x-internal: false
    orderRemoveProduct_Put:
      title: Remove Product from Order
      type: object
      properties:
        id:
          type: integer
          description: |-
            The `id` returned from a request to the [List order products](/docs/rest-management/orders/order-products#list-order-products) or the [Get an order product](/docs/rest-management/orders/order-products#get-an-order-product) endpoint.
          example: 123
        product_id:
          type: integer
          description: The numeric ID of the product.
          example: 117
        quantity:
          type: integer
          description: The quantity of product being removed.
          example: 1
        product_options:
          type: array
          description: List of product variant options and modifiers. `product_options` are required when removing a product with variants and not specifying the `variant_id`, or when products have mandatory modifiers.
          items:
            type: object
            properties:
              cost_price_inc_tax:
                type: string
                description: |-
                  The product’s cost price including tax. (Float, Float-As-String, Integer)
                  The cost of your products to you; this is never shown to customers, but can be used for accounting purposes. Read Only.
                  readOnly: true
                example: '0.0000'
              price_ex_tax:
                type: string
                description: |-
                  The products cost price excluding tax. (Float, Float-As-String, Integer)
                  The cost of your products to you; this is never shown to customers, but can be used for accounting purposes. Read Only.
                  readOnly: true
                example: '0.0000'
    orderCatalogProduct_Post:
      title: orderCatalogProduct_Post
      description: |
        Note:
        - `xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.
        - If both fields `xxx` and `xxx_customer` are present, they must have same value.
        - Empty strings `''` and `null` are invalid for `xxx` and `xxx_customer, and `xxx_merchant`.
        - `xxx`, `xxx_customer`, and `xxx_merchant` default to the value from `catalog` if not supplied in the request.
      type: object
      properties:
        product_id:
          type: integer
        name:
          type: string
          description: Alias for `name_customer`. The product name that is shown to customer in storefront. `xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.
          example: Fog Linen Chambray Towel - Beige Stripe
          minLength: 1
        name_customer:
          type: string
          example: Fog Linen Chambray Towel - Beige Stripe
          description: The product name that is shown to customer in storefront. `xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.
          minLength: 1
        name_merchant:
          type: string
          example: Towel Type 1
          description: The product name that is shown to merchant in control panel.
        product_options:
          type: array
          description: List of product variant options and modifiers. `product_options` are required when adding a product with variants and not specifying the `variant_id`, or when products have mandatory modifiers.
          items:
            type: object
            properties:
              id:
                type: integer
                description: Numeric ID of an option applied to the product from a list of options available to the product. This field has the same value as `product_option_id` when [retrieving products in an order](/docs/rest-management/orders/order-products#list-order-products).
              value:
                type: string
                description: |-
                  Depending on the option type, value can be one of the following:
                  - The variant option value id or the modifier value id for modifier types with a list of defined values, such as drop down or checkbox modifiers.
                  - The modifier value for modifier types without a list of defined values, such as text field or date field modifiers.
                  
                  Notes:
                  - The API does not currently support the following option types:
                    - File upload
                    - Pick list
                  - For date modifiers use either the `YYYY-MM-DDThh:mm:ss±hh:mm` or the `YYYY-MM-DD` ISO-8601 formats. The date field modifier values are saved and returned as timestamps. For values entered using the YYYY-MM-DD format, the store timezone is used when creating the timestamp.
                  - For multi-line text field modifiers, use the `\n` characters for separating the lines.
              display_name:
                type: string
                example: couleur
                description: Alias for display_name_customer. The product option name that is shown to customer in storefront. `xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.
                minLength: 1
              display_name_customer:
                type: string
                description: The product option name that is shown to customer in storefront. `xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.
                example: couleur
                minLength: 1
              display_name_merchant:
                type: string
                example: color
                description: The product option name that is shown to merchant in Control Panel.
              display_value:
                type: string
                example: bleu
                description: Alias for display_value_customer. The product option value that is shown to customer in storefront. `xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.
                minLength: 1
              display_value_merchant:
                type: string
                example: blue
                description: The product option value that is shown to merchant in Control Panel.
                minLength: 1
              display_value_customer:
                type: string
                example: bleu
                description: The product option value that is shown to a customer in storefront.`xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.
                minLength: 1
        quantity:
          type: integer
        price_inc_tax:
          type: number
        price_ex_tax:
          type: number
        upc:
          type: string
        variant_id:
          type: integer
          description: '""'
        wrapping_id:
          type: integer
          description: ID of the gift wrapping that will be used for this product. If provided, then `wrapping_cost_ex_tax` and `wrapping_cost_inc_tax` are required. When updating an order product line item, if `wrapping_id` is set to `0` and no other wrapping fields are provided,then the wrapping will be removed from the order product.
        wrapping_name:
          type: string
          description: If the `wrapping_id` is provided, this field will populate with the name of the gift wrapping that is to be used.
        wrapping_message:
          type: string
        wrapping_cost_ex_tax:
          type: number
          description: When provided, this value should be equal to `wrapping_cost_ex_tax` times quantity to accurately reflect wrapping cost per unit.
        wrapping_cost_inc_tax:
          type: number
          description: When provided, this value should be equal to `wrapping_cost_inc_tax` times quantity to accurately reflect wrapping cost per unit.
      x-internal: false
    orderCustomProduct_Post:
      title: orderCustomProduct_Post
      type: object
      description: |-
        **Usage notes**

        Provide one of these fields with a non-empty value:
          - `name`
          - `name_customer`
          - `name_merchant`
        
        Note the following constraints and default field values:
          - Null and `''` empty strings are invalid for `name`, `name_customer`, and `name_merchant`.
          - `name` and `name_customer` always share the same value; updating one updates the other.
          - When you omit both `name` and `name_customer`, they default to the value of `name_merchant`. 
          - When you omit `name_merchant`, it defaults to the value that `name` and `name_customer` share.
      properties:
        name:
          type: string
          example: Fog Linen Chambray Towel - Beige Stripe
          description: Alias for name_customer. The product name that is shown to customer in storefront.
          minLength: 1
          maxLength: 250
        name_customer:
          type: string
          example: Fog Linen Chambray Towel - Beige Stripe
          description: The product name that is shown to customer in storefront.
        name_merchant:
          type: string
          example: Towel Type 1
          description: The product name that is shown to merchant in control panel.
        quantity:
          type: integer
        price_inc_tax:
          type: number
        price_ex_tax:
          type: number
        upc:
          type: string
        sku:
          type: string
      required:
        - name
        - quantity
        - price_inc_tax
        - price_ex_tax
      x-internal: false
    order_Put:
      allOf:
        - type: object
          properties:
            base_handling_cost:
              description: The value of the base handling cost. (Float, Float-As-String, Integer)
              example: '0.0000'
              type: string
            base_shipping_cost:
              description: The value of the base shipping cost. (Float, Float-As-String, Integer)
              example: '0.0000'
              type: string
            base_wrapping_cost:
              description: The value of the base wrapping cost expressed as a floating point number to four decimal places in string format.
              example: '0.0000'
              type: string
            billing_address:
              $ref: '#/components/schemas/billingAddress_Put'
            channel_id:
              description: Shows where the order originated. The channel_id will default to 1.
              example: 1
              type: integer
            consignments:
              $ref: '#/components/schemas/orderConsignment_Put'
            customer_id:
              type: number
            customer_message:
              description: Message that the customer entered (number, options) -o the `Order Comments` box during checkout.
              example: Thank you
              type: string
            date_created:
              description: The date the order was created, formatted in the RFC-2822 standard. You set this attribute on Order creation (POST) to support the migration of historical orders. If you do not provide a value, then it will default to the current date/time. e.g., `Tue, 20 Nov 2012 00:00:00 +0000`.
              type: string
            default_currency_code:
              description: A read-only field displays the currency code of the [transactional currency](/api-docs/multi-currency/guide/introduction#display-vs-transactional) the shopper uses.
              type: string
            discount_amount:
              description: Amount of discount for this transaction. (Float, Float-As-String, Integer)
              example: '0.0000'
              type: string
            ebay_order_id:
              description: If the order was placed through eBay, the eBay order number will be included. Otherwise, the value will be `0`.
              example: '0'
              type: string
            external_id:
              description: (Read-only) The order ID in another system, such as the Amazon Order ID if this is an Amazon order.  
              example: null
              type: string
              nullable: true
              readOnly: true
            external_merchant_id:
              description: The merchant ID represents an upstream order from an external system. It is the source of truth for orders. After setting it, you cannot write to or update the `external_merchant_id`. For example, you can update the Facebook by Meta page ID in a POST request, but a PUT request to update the order will return a 400 error. Please remove it from your request before trying again.
              example: null
              oneOf:
                - type: string
              nullable: true
            external_source:
              description: |-
                This value identifies an external system that generated the order and submitted it to BigCommerce with the Orders API.
                * When supplying the value, we recommend combining the type of system and vendor, e.g., ERP (Acumatica) or POS (Square).
                * If you are migrating historical orders processed on another eCommerce platform to BigCommerce, supply the following code as the value: M-MIG. This code will exclude historical orders from the store’s GMV/order count, which factors into pricing.
                * If you do not provide a value, then it will default to null.
              example: null
              type: string
              nullable: true
            geoip_country:
              description: The full name of the country where the customer made the purchase, based on the IP.
              example: United States
              type: string
            geoip_country_iso2:
              description: The country where the customer made the purchase, in ISO2 format, based on the IP.
              example: US
              type: string
            handling_cost_ex_tax:
              description: The value of the handling cost, excluding tax. (Float, Float-As-String, Integer)
              example: '0.0000'
              type: string
            handling_cost_inc_tax:
              description: The value of the handling cost, including tax. (Float, Float-As-String, Integer)
              example: '0.0000'
              type: string
            ip_address:
              type: string
              description: |-
                IPv4 Address of the customer, if known.

                Note: You can set either `ip_address` or `ip_address_v6`. Setting the `ip_address` value will reset the `ip_address_v6` value and vice versa.
              example: 12.345.678.910
              maxLength: 30
            ip_address_v6:
              type: string
              description: |-
                IPv6 Address of the customer, if known.

                Note: You can set either `ip_address` or `ip_address_v6`. Setting the `ip_address_v6` value will reset the `ip_address` value and vice versa.
              example: '2001:db8:3333:4444:5555:6666:7777:8888'
              maxLength: 39
            is_deleted:
              description: Indicates whether the order was deleted (archived). Set to to true, to archive an order.
              example: false
              type: boolean
            items_shipped:
              description: The number of items that have been shipped.
              example: 0
              type: number
            items_total:
              description: The total number of items in the order.
              example: 1
              type: number
            order_is_digital:
              description: Whether this is an order for digital products.
              example: false
              type: boolean
            payment_method:
              type: string
              description: 'The payment method for this order. Can be one of the following: `Manual`, `Credit Card`, `Cash`,`Test Payment Gateway`, etc.'
            payment_provider_id:
              description: The external Transaction ID/Payment ID within this order’s payment provider (if a payment provider was used).
              example: ''
              oneOf:
                - type: string
                - type: number
            products:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/orderCatalogProduct_Put'
                  - $ref: '#/components/schemas/orderCustomProduct_Put'
                  - $ref: '#/components/schemas/orderRemoveProduct_Put'
            refunded_amount:
              description: The amount refunded from this transaction; always returns `0`. (Float, Float-As-String, Integer)
              example: '0.0000'
              type: string
            shipping_cost_ex_tax:
              description: The value of shipping cost, excluding tax. (Float, Float-As-String, Integer)
              example: '0.0000'
              type: string
            shipping_cost_inc_tax:
              description: The value of shipping cost, including tax. (Float, Float-As-String, Integer)
              example: '0.0000'
              type: string
            staff_notes:
              type: string
              description: Any additional notes for staff.
              example: Send Saturday
              maxLength: 65535
            shipping_addresses:
              allOf:
                - type: object
                  properties:
                    id:
                      type: integer
                - $ref: '#/components/schemas/shippingAddress_Put'
            status_id:
              description: The status ID of the order.
              type: integer
            subtotal_ex_tax:
              description: 'Override value for subtotal excluding tax. If specified, the field `subtotal_inc_tax` is also required. (Float, Float-As-String, Integer)'
              example: '225.0000'
              type: string
            subtotal_inc_tax:
              description: 'Override value for subtotal including tax. If specified, the field `subtotal_ex_tax` is also required. (Float, Float-As-String, Integer)'
              example: '225.0000'
              type: string
            tax_provider_id:
              description: |
                BasicTaxProvider - Tax is set to manual and order is created in the store.
                
                AvaTaxProvider - Tax is set to automatic and order is created in the store. Used for Avalara.
                
                "" (empty string) - The order is created with the API, or the tax provider is unknown.
              enum:
                - BasicTaxProvider
                - AvaTaxProvider
                - ''
              type: string
            customer_locale:
              type: string
              example: en
              description: The customer’s locale.
            external_order_id:
              type: string
              example: external-order-id
              description: The order ID in another system, such as the Amazon Order ID if this is an Amazon order. After setting it, you can update this field using a POST or PUT request. 
            total_ex_tax:
              description: Override value for the total, excluding tax. If specified, the field `total_inc_tax` is also required. (Float, Float-As-String, Integer)
              example: '225.0000'
              type: string
            total_inc_tax:
              description: Override value for the total, including tax. If specified, the field `total_ex_tax` is also required. (Float, Float-As-String, Integer)
              example: '225.0000'
              type: string
            wrapping_cost_ex_tax:
              description: The value of the wrapping cost, excluding tax. (Float, Float-As-String, Integer)
              example: '0.0000'
              type: string
            wrapping_cost_inc_tax:
              description: The value of the wrapping cost, including tax. (Float, Float-As-String, Integer)
              example: '0.0000'
              type: string
    order_Post:
      title: order_Post
      description: Products and Billing address only required for POST operation.
      allOf:
        - type: object
          properties:
            products:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/orderCatalogProduct_Post'
                  - $ref: '#/components/schemas/orderCustomProduct_Post'
            shipping_addresses:
              type: array
              items:
                $ref: '#/components/schemas/shippingAddress_Base'
            consignments:
              $ref: '#/components/schemas/orderConsignment_Post'
        - $ref: '#/components/schemas/order_Shared'
      x-internal: false
    shippingAddress_Put:
      allOf:
        - $ref: '#/components/schemas/shippingAddress_Base'
        - type: object
          properties:
            form_fields:
              type: array
              items:
                $ref: '#/components/schemas/formFields'
    billingAddress_Put:
      allOf:
        - $ref: '#/components/schemas/billingAddress_Base'
        - type: object
          properties:
            form_fields:
              type: array
              items:
                $ref: '#/components/schemas/formFields'
    orderConsignment_Put:
      title: ''
      type: object
      properties:
        pickups:
          type: array
          items:
            $ref: '#/components/schemas/pickupConsignment_Put'
      x-examples:
        example-1:
          pickups:
            - id: 99
              pickup_method_id: 1
              pickup_method_display_name: Pick Up
              collection_instructions: Bring your ID
              collection_time_description: 9am - 6pm
              location:
                name: Location 1
                code: LOCATION-1
                address_line_1: 123 Main Street
                address_line_2: Suite 101
                city: Austin
                state: Texas
                postal_code: '78726'
                country_alpha2: US
                email: location1@example.com
                phone: +1 111-111-1111
              line_items:
                - name: Fog Linen Chambray Towel - Beige Stripe
                  name_customer: Fog Linen Chambray Towel - Beige Stripe
                  name_merchant: Towel Type 1
                  quantity: 3
                  price_ex_tax: 0
                  price_inc_tax: 0
                  sku: string
                  upc: string
                  id: 12
    pickupConsignment_Put:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              example: 99
              description: ID of the pickup consignment to update.
            pickup_method_id:
              type: integer
              example: 1
              description: ID of the pickup method.
          required:
            - id
        - $ref: '#/components/schemas/pickupConsignment_Base'
        - type: object
          properties:
            location:
              $ref: '#/components/schemas/pickupConsignmentLocation_Put'
            line_items:
              type: array
              items:
                $ref: '#/components/schemas/orderProduct_Put'
      x-examples:
        example-1:
          id: 99
          pickup_method_id: 1
          pickup_method_display_name: Pick Up
          collection_instructions: Bring your ID
          collection_time_description: 9am - 6pm
          location:
            name: Location 1
            code: LOCATION-1
            address_line_1: 123 Main Street
            address_line_2: Suite 101
            city: Austin
            state: Texas
            postal_code: '78726'
            country_alpha2: US
            email: location1@example.com
            phone: +1 111-111-1111
          line_items:
            - name: Fog Linen Chambray Towel - Beige Stripe
              name_customer: Fog Linen Chambray Towel - Beige Stripe
              name_merchant: Towel Type 1
              quantity: 0
              price_ex_tax: 0
              price_inc_tax: 0
              sku: string
              upc: string
              id: 12
    pickupConsignment_Base:
      title: ''
      type: object
      description: ''
      properties:
        pickup_method_display_name:
          type: string
          description: A name for the pickup method that can be displayed to shoppers.
          maxLength: 250
          example: Pick Up
        collection_instructions:
          type: string
          description: A message for shoppers explaining how to collect their pickup order.
          example: Bring your ID.
        collection_time_description:
          type: string
          description: A message for shoppers indicating the estimated time their pickup order will be ready for collection.
          maxLength: 250
          example: 9am - 6pm
    pickupConsignmentLocation_Put:
      title: ''
      description: ''
      x-examples:
        example-1:
          name: Location 1
          code: LOCATION-1
          address_line_1: 123 Main Street
          address_line_2: Suite 101
          city: Austin
          state: Texas
          postal_code: '78726'
          country_alpha2: US
          email: location1@example.com
          phone: +1 111-111-1111
      allOf:
        - $ref: '#/components/schemas/pickupConsignmentLocation_Base'
    pickupConsignmentLocation_Base:
      title: ''
      type: object
      description: ''
      properties:
        name:
          type: string
          description: The name of the pickup location.
          example: Location 1
          maxLength: 255
        code:
          type: string
          description: The code of the pickup location.
          example: LOCATION-1
          maxLength: 50
        address_line_1:
          type: string
          description: Street address (first line).
          example: 123 Main Street
          maxLength: 255
        address_line_2:
          type: string
          description: Street address (second line).
          maxLength: 255
          example: Suite 101
        city:
          type: string
          maxLength: 255
          example: Austin
        state:
          type: string
          example: Texas
          maxLength: 255
        postal_code:
          type: string
          example: '78726'
          maxLength: 50
        country_alpha2:
          type: string
          minLength: 2
          maxLength: 2
          example: US
          description: 2-letter ISO Alpha-2 code for the country.
        email:
          type: string
          description: Pickup location's email address.
          maxLength: 255
          example: location1@example.com
        phone:
          type: string
          description: Pickup location's phone number.
          maxLength: 125
          example: +1 111-111-1111
      x-examples: {}
    orderProduct_Put:
      title: orderProduct_Put
      anyOf:
        - $ref: '#/components/schemas/orderCustomProduct_Put'
        - $ref: '#/components/schemas/orderCatalogProduct_Put'
    orderConsignment_Post:
      title: ''
      type: object
      x-examples:
        example-1:
          pickups:
            - pickup_method_id: 1
              pickup_method_display_name: Pick Up
              collection_instructions: Bring your ID
              collection_time_description: 9am - 6pm
              location:
                name: Location 1
                code: LOCATION-1
                address_line_1: 123 Main Street
                address_line_2: Suite 101
                city: Austin
                state: Texas
                postal_code: 78726
                country_alpha2: US
                email: location1@example.com
                phone: +1 111-111-1111
              line_items:
                - name: Fog Linen Chambray Towel - Beige Stripe
                  name_customer: Fog Linen Chambray Towel - Beige Stripe
                  name_merchant: Towel Type 1
                  quantity: 0
                  price_inc_tax: 0
                  price_ex_tax: 0
                  upc: string
                  sku: string
      properties:
        pickups:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/pickupConsignment_Post'
      required:
        - pickups
    pickupConsignment_Post:
      allOf:
        - type: object
          properties:
            pickup_method_id:
              type: integer
              example: 1
              description: ID of the pickup method.
          required:
            - pickup_method_id
        - $ref: '#/components/schemas/pickupConsignment_Base'
        - type: object
          properties:
            location:
              $ref: '#/components/schemas/pickupConsignmentLocation_Post'
            line_items:
              type: array
              minItems: 1
              items:
                $ref: '#/components/schemas/orderProduct_Post'
          required:
            - line_items
      x-examples:
        example-1:
          pickup_method_id: 1
          pickup_method_display_name: Pick Up
          collection_instructions: Bring your ID
          collection_time_description: 9am - 6pm
          location:
            name: Location 1
            code: LOCATION-1
            address_line_1: 123 Main Street
            address_line_2: Suite 101
            city: Austin
            state: Texas
            postal_code: '78726'
            country_alpha2: US
            email: location1@example.com
            phone: +1 111-111-1111
          line_items:
            - name: Fog Linen Chambray Towel - Beige Stripe
              name_customer: Fog Linen Chambray Towel - Beige Stripe
              name_merchant: Towel Type 1
              quantity: 0
              price_inc_tax: 0
              price_ex_tax: 0
              upc: string
              sku: string
    pickupConsignmentLocation_Post:
      title: ''
      description: ''
      x-examples:
        example-1:
          name: Location 1
          code: LOCATION-1
          address_line_1: 123 Main Street
          address_line_2: Suite 101
          city: Austin
          state: Texas
          postal_code: '78726'
          country_alpha2: US
          email: location1@example.com
          phone: +1 111-111-1111
      allOf:
        - $ref: '#/components/schemas/pickupConsignmentLocation_Base'
    orderProduct_Post:
      title: orderProduct_Post
      anyOf:
        - $ref: '#/components/schemas/orderCustomProduct_Post'
        - $ref: '#/components/schemas/orderCatalogProduct_Post'
    orderConsignment_Get:
      title: ''
      type: object
      x-examples:
        order with pickup consignments:
          pickups:
            - id: 99
              pickup_method_id: 1
              pickup_method_display_name: Pick Up
              collection_instructions: Bring your ID
              collection_time_description: 9am - 6pm
              location:
                id: 1
                name: Location 1
                code: LOCATION-1
                address_line_1: 123 Main Street
                address_line_2: Suite 101
                city: Austin
                state: Texas
                postal_code: '78726'
                country_alpha2: US
                email: location1@example.com
                phone: +1 111-111-1111
              line_items:
                - url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products/12'
                  resource: /orders/129/products/12
          shipping: []
          downloads: []
          email:
            gift_certificates: []
        order with shipping consignments:
          pickups: []
          shipping:
            - id: 99
              first_name: Jane
              last_name: Doe
              company: Laser Ltd
              street_1: 123 Main Street
              street_2: string
              city: Austin
              state: Texas
              zip: '12345'
              country: United States
              country_iso2: US
              phone: '0410999888'
              email: janedoe@example.com
              form_fields:
                - name: License Id
                  value: 123BAF
              shipping_method: Free Shipping
              line_items:
                - url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products/12'
                  resource: /orders/129/products/12
              items_total: 1
              items_shipped: 0
              base_cost: 5.1
              cost_ex_tax: 5.1
              cost_inc_tax: 6.2
              cost_tax: 1.1
              cost_tax_class_id: 2
              base_handling_cost: 4.1
              handling_cost_ex_tax: 4.1
              handling_cost_inc_tax: 5.3
              handling_cost_tax: 1.2
              handling_cost_tax_class_id: 2
              shipping_zone_id: 1
              shipping_zone_name: United States
              shipping_quotes:
                url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/163/consignments/shipping/64/shipping_quotes'
                resource: /orders/163/consignments/shipping/64/shipping_quotes
          downloads: []
          email:
            gift_certificates: []
        order with digital consignments:
          pickups: []
          shipping: []
          downloads:
            - recipient_email: recipient@email.com
              line_items:
                url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products/12'
                resource: /orders/129/products/12
          email:
            gift_certificates: []
        order with gift certificate consignments:
          pickups: []
          shipping: []
          downloads: []
          email:
            gift_certificates:
              - recipient_email: recipient@email.com
                line_items:
                  url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products/12'
                  resource: /orders/129/products/12
      properties:
        pickups:
          type: array
          description: Pickup consignments.
          items:
            $ref: '#/components/schemas/pickupConsignment_Get'
        shipping:
          type: array
          description: Shipping consignments.
          items:
            $ref: '#/components/schemas/shippingConsignment_Get'
        downloads:
          type: array
          maxItems: 1
          description: Digital consignments for products that are downloaded.
          items:
            $ref: '#/components/schemas/digitalConsignment_Get'
        email:
          type: object
          description: Email consignments for gift certificates.
          properties:
            gift_certificates:
              type: array
              items:
                $ref: '#/components/schemas/giftCertificateConsignment_Get'
    giftCertificateConsignment_Get:
      type: object
      x-examples:
        example-1:
          recipient_email: recipient@email.com
          line_items:
            - url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products/12'
              resource: /orders/129/products/12
      properties:
        recipient_email:
          type: string
          example: recipient@email.com
          description: The recipient email of the gift certificate.
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/products_Resource'
    pickupConsignment_Get:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              example: 99
              description: The ID of the pickup consignment to update.
            pickup_method_id:
              type: integer
              example: 1
              description: ID of the pickup method.
        - $ref: '#/components/schemas/pickupConsignment_Base'
        - type: object
          properties:
            location:
              $ref: '#/components/schemas/pickupConsignmentLocation_Get'
            line_items:
              type: array
              items:
                $ref: '#/components/schemas/products_Resource'
      x-examples:
        example-1:
          id: 99
          pickup_method_id: 1
          pickup_method_display_name: Pick Up
          collection_instructions: Bring your ID
          collection_time_description: 9am - 6pm
          location:
            id: 1
            name: Location 1
            code: LOCATION-1
            address_line_1: 123 Main Street
            address_line_2: Suite 101
            city: Austin
            state: Texas
            postal_code: '78726'
            country_alpha2: US
            email: location1@example.com
            phone: +1 111-111-1111
          line_items:
            - url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products/12'
              resource: /orders/129/products/12
    pickupConsignmentLocation_Get:
      title: ''
      description: ''
      x-examples:
        example-1:
          id: 1
          name: Location 1
          code: LOCATION-1
          address_line_1: 123 Main Street
          address_line_2: Suite 101
          city: Austin
          state: Texas
          postal_code: '78726'
          country_alpha2: US
          email: location1@example.com
          phone: +1 111-111-1111
      allOf:
        - type: object
          properties:
            id:
              type: integer
              example: 1
              description: ID of the location.
        - $ref: '#/components/schemas/pickupConsignmentLocation_Base'
    shippingConsignment_Get:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              example: 99
              description: ID of the shipping consignment.
        - $ref: '#/components/schemas/shippingConsignment_Base'
        - type: object
          properties:
            line_items:
              type: array
              items:
                $ref: '#/components/schemas/products_Resource'
            items_total:
              type: number
              example: 1
              description: The total number of items in the order.
            items_shipped:
              type: number
              description: The number of items that have been shipped.
              example: 0
            shipping_method:
              type: string
              description: Text identifying the BigCommerce shipping module selected by the customer.
              example: Free Shipping
            base_cost:
              type: number
              description: The base shipping cost value.
              example: 5.1
            cost_ex_tax:
              type: number
              example: 5.1
              description: The shipping cost value excluding tax.
            cost_inc_tax:
              type: number
              description: The shipping cost value including tax.
              example: 6.2
            cost_tax:
              type: number
              description: The tax amount on the shipping cost.
              example: 1.1
            cost_tax_class_id:
              type: integer
              description: The ID of the tax class applied to the shipping cost. Ignored if automatic tax is enabled.
              example: 2
            base_handling_cost:
              type: number
              description: The base handling charge.
              example: 4.1
            handling_cost_ex_tax:
              type: number
              description: The handling charge, excluding tax.
              example: 4.1
            handling_cost_inc_tax:
              type: number
              description: The handling charge, including tax.
              example: 5.3
            handling_cost_tax:
              type: number
              example: 1.2
            handling_cost_tax_class_id:
              type: integer
              description: The ID of the tax class applied to the handling charge. Ignored if automatic tax is enabled.
              example: 2
            shipping_zone_id:
              type: number
              description: The numeric ID of the shipping zone.
              example: 1
            shipping_zone_name:
              type: string
              description: The name of the shipping zone.
              example: United States
            shipping_quotes:
              $ref: '#/components/schemas/shippingQuotesConsignment_Resource'
      x-examples:
        example-1:
          id: 99
          first_name: Jane
          last_name: Doe
          company: Laser Ltd
          street_1: 123 Main Street
          street_2: string
          city: Austin
          state: Texas
          zip: '12345'
          country: United States
          country_iso2: US
          phone: 0410999888
          email: janedoe@example.com
          form_fields:
            - name: License Id
              value: 123BAF
          shipping_method: Free Shipping
          line_items:
            - url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products/12'
              resource: /orders/129/products/12
          items_total: 1
          items_shipped: 0
          base_cost: 5.1
          cost_ex_tax: 5.1
          cost_inc_tax: 6.2
          cost_tax: 1.1
          cost_tax_class_id: 2
          base_handling_cost: 4.1
          handling_cost_ex_tax: 4.1
          handling_cost_inc_tax: 5.3
          handling_cost_tax: 1.2
          handling_cost_tax_class_id: 2
          shipping_zone_id: 1
          shipping_zone_name: United States
          shipping_quotes:
            url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/163/consignments/shipping/64/shipping_quotes'
            resource: /orders/163/consignments/shipping/64/shipping_quotes
    shippingConsignment_Base:
      title: shippingConsignment_Base
      type: object
      properties:
        first_name:
          type: string
          example: Jane
        last_name:
          type: string
          example: Doe
        company:
          type: string
          example: Laser Ltd
        street_1:
          type: string
          example: 123 Main Street
          description: Street address (first line).
        street_2:
          type: string
          description: Street address (second line).
        city:
          type: string
          example: Austin
        zip:
          type: string
          example: '12345'
          description: Zip or postal code, as a string.
        country:
          type: string
          example: United States
        country_iso2:
          type: string
          example: US
          description: 2-letter ISO Alpha-2 code for the country.
        state:
          type: string
          example: Texas
        email:
          type: string
          example: janedoe@example.com
          description: Recipient’s email address.
        phone:
          type: string
          description: Recipient’s telephone number.
          example: '0410999888'
        form_fields:
          type: array
          items:
            $ref: '#/components/schemas/formFields'
    shippingQuotesConsignment_Resource:
      type: object
      title: ''
      properties:
        url:
          type: string
          description: URL where you can use a GET request to get the shipping quotes for the order consignment.
          example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/163/consignments/shipping/64/shipping_quotes'
          readOnly: true
        resource:
          type: string
          description: Path where you can use a GET request to get the shipping quotes for the order consignment.
          example: /orders/163/consignments/shipping/64/shipping_quotes
          readOnly: true
      readOnly: true
    digitalConsignment_Get:
      type: object
      properties:
        recipient_email:
          type: string
          example: recipient@email.com
          description: The recipient email of the digital consignment.
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/products_Resource'
      x-examples:
        example-1:
          recipient_email: recipient@email.com
          line_items:
            - url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products/12'
              resource: /orders/129/products/12

openapi: '3.0.3'
info:
  title: Orders V3
  version: ''
  description: Manage order settings of BigCommerce stores.
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  license:
    name: ''
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Metafields
  - name: Payment Actions
  - name: Transactions
  - name: Order Settings
paths:
  '/orders/{order_id}/payment_actions/capture':
    post:
      summary: Capture order payment
      description: |-
        Capture the payment for an order. When there are no payment method validation issues, the capture process is successful, the `payment_status` updates to `capture pending`, and the payment request is scheduled. The payment request itself occurs asynchronously.
        Requires at least one of the following scopes:
        * `store_v2_orders`
        * `store_v2_transactions`
      operationId: paymentactioncapture
      parameters:
        - $ref: '#/components/parameters/ContentType'
      responses:
        '201':
          $ref: '#/components/responses/201_Created'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_UnprocessableEntity'
        '502':
          $ref: '#/components/responses/502_GatewayError'
        '503':
          $ref: '#/components/responses/503_ServiceUnavailable'
        '504':
          $ref: '#/components/responses/504_GatewayTimeout'
      tags:
        - Payment Actions
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/OrderIdParam'
  '/orders/{order_id}/payment_actions/void':
    post:
      summary: Void
      description: |-
        Void the payment for an order. When there are no payment method validation issues, the void process is successful, the `payment_status` updates to `void pending`, and the void payment request is scheduled. The payment request itself occurs asynchronously.

        Requires at least one of the following scopes:
        * `store_v2_orders`
        * `store_v2_transactions`
      operationId: paymentactionvoid
      parameters:
        - $ref: '#/components/parameters/ContentType'
      responses:
        '201':
          $ref: '#/components/responses/201_Created'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_UnprocessableEntity'
        '502':
          $ref: '#/components/responses/502_GatewayError'
        '503':
          $ref: '#/components/responses/503_ServiceUnavailable'
        '504':
          $ref: '#/components/responses/504_GatewayTimeout'
      tags:
        - Payment Actions
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/OrderIdParam'
  '/orders/{order_id}/transactions':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/OrderIdParam'
    get:
      tags:
        - Transactions
      description: |-
        Returns an **order's** transactions.

        **Usage Notes**
        * Depending on the payment method, different information will be available (not all payment gateways return full card or fraud detail).


        Requires at least one of the following scopes:
        * `store_v2_transactions_read_only`
        * `store_v2_transactions`
      operationId: getTransactions
      responses:
        '200':
          $ref: '#/components/responses/TransactionCollection_Resp'
        '204':
          description: |
            No content found to fulfill request.
          content:
            application/json:
              schema:
                description: No-content response for the BigCommerce API.
                type: object
                properties:
                  status:
                    description: |
                      204 HTTP status code.
                    type: integer
                  title:
                    description: The error title describing the situation.
                    type: string
                  type:
                    type: string
                  instance:
                    type: string
                title: No Content
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                type: object
                properties:
                  status:
                    description: |
                      404 HTTP status code.
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                  instance:
                    type: string
                title: Not Found
      summary: Get Transactions
  '/orders/{order_id}/payment_actions/refund_quotes':
    post:
      summary: Create a Refund Quote
      description: |-
        Calculate the tax amount, total refund amount and get available payment options for an order refund by providing items and costs or quantities to refund.

        Requires at least one of the following scopes:
        * `store_v2_orders`
        * `store_v2_transactions`

        **Note:**
        Order refunds are processed consecutively. Processing synchronous refunds on an order are not yet supported.

      operationId: postrefundquote
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundQuote_Post'
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
        required: true
        x-examples:
          Quantity:
            items:
              - item_id: 75
                item_type: PRODUCT
                quantity: 1
          Amount:
            items:
              - item_id: 79
                item_type: SHIPPING
                amount: 10
          Tax Exempt (Order Level):
            items:
              - item_type: ORDER
                item_id: 1234
                amount: 1
                reason: Overcharged $1.00
          Multiple Items:
            items:
              - item_id: 75
                item_type: PRODUCT
                quantity: 1
              - item_id: 79
                item_type: SHIPPING
                amount: 10
        description: ''
      responses:
        '201':
          $ref: '#/components/responses/RefundQuote_Resp'
        '422':
          $ref: '#/components/responses/422_UnprocessableEntity'
      tags:
        - Payment Actions
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/OrderIdParam'
  '/orders/{order_id}/payment_actions/refunds':
    post:
      summary: Create a Refund
      description: |-
        Creates a refund. When there are no payment method validation issues, the refund process is successful and the refund payment request is scheduled. The payment request itself occurs asynchronously.

        Requires at least one of the following scopes:
        * `store_v2_orders`
        * `store_v2_transactions`

        **Note:**
        Order refunds are processed consecutively. Processing synchronous refunds on an order are not yet supported.
        
      operationId: postrefund
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundRequest_Post'
        required: true
        x-examples:
          Quantity:
            items:
              - item_type: PRODUCT
                item_id: 31
                amount: 35.00
                quantity: 1
                reason: Not the right product.
            payments:
              - provider_id: storecredit
                amount: 37.89
                offline: false
            merchant_calculated_override:
              - total_amount: 45.00
                total_tax:
          Tax Exempt (Order Level):
            order_id: 1234
            items:
              - item_type: ORDER
                item_id: 1234
                amount: 1
                reason: overcharged
            payments:
              - provider_id: authorizenet
                provider_description: Authorize.net
                amount: 1
                offline: false
          Multiple Items:
            items:
              - item_id: 75
                item_type: PRODUCT
                quantity: 1
              - item_id: 79
                item_type: SHIPPING
                amount: 10
            tax_adjustment_amount: 0
            payments:
              - provider_id: storecredit
                amount: 232.75
                offline: false
          Merchant Calculated Override:
            order_id: 1234
            items:
              - item_type: ORDER
                item_id: 1234
                amount: 10
                reason: overcharged
            merchant_calculated_override:
              total_amount: 10
              tax_amount: 0
            payments:
              - provider_id: authorizenet
                provider_description: Authorize.net
                amount: 10
                offline: false
      responses:
        '201':
          $ref: '#/components/responses/Refund_Resp'
        '422':
          description: |
            Unable to process a guest refund with store credit. 
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    data:
                      - status: 422
                        title: Unable to provide store credit for a guest customer.
                        type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/FailedQuoteError'
                  meta:
                    $ref: '#/components/schemas/Meta'
              examples:
                response:
                  value:
                    data:
                      - order_id: 1
                        status: 503
                        error: Tax service gone away
                    meta: {}
      tags:
        - Payment Actions
    get:
      summary: Get Refunds for Order
      description: |-
        Returns a list of refunds ordered by refund ID in ascending order for the given order.

        Requires at least one of the following scopes:
        * `store_v2_transactions_read_only`
        * `store_v2_transactions`
        * `store_v2_orders_read_only`
        * `store_v2_orders`
      operationId: getorderrefunds
      responses:
        '200':
          $ref: '#/components/responses/RefundCollection_Resp'
      tags:
        - Payment Actions
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/OrderIdParam'
  '/orders/payment_actions/refunds/{refund_id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - name: refund_id
        in: path
        description: Refund ID.
        required: true
        schema:
          type: integer
    get:
      summary: Get a Refund
      description: Returns a refund by refund ID.
      operationId: RefundID_Get
      responses:
        '200':
          $ref: '#/components/responses/RefundID_Response'
      tags:
        - Payment Actions
  '/orders/payment_actions/refunds':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      summary: Get All Refunds
      description: |-
        Returns a list of refunds ordered by refund ID in ascending order.

        Requires at least one of the following scopes:
        * `store_v2_transactions_read_only`
        * `store_v2_transactions`
        * `store_v2_orders_read_only`
        * `store_v2_orders`
      operationId: getrefunds
      tags:
        - Payment Actions
      parameters:
        - name: 'order_id:in'
          in: query
          description: Filter by `order_id`. Accepts multiple as comma-separated values.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:in'
          in: query
          description: Filter by refund `id`. Accepts multiple as comma-separated values.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: 'created:min'
          description: |-
            Filter results so they are later than or equal to provided date.


            Must be in url-encoded RFC 3339 format.
            e.g. `2020-01-15T01:02:34-01:00` is RFC 3339 format.
            Url-encoded this will be `2020-01-15T01%3A02%3A34%2B01%3A00`
          schema:
            type: string
            format: date-time
        - in: query
          name: 'created:max'
          description: |-
            Filter results so they are earlier than or equal to provided date.

            Must be in url-encoded RFC 3339 format.
            e.g. `2020-01-15T01:02:34-01:00` is RFC 3339 format.
            Url-encoded this will be `2020-01-15T01%3A02%3A34%2B01%3A00`
          schema:
            type: string
            format: date-time
        - in: query
          name: page
          description: Specifies the page number in a limited (paginated) list of items.
          schema:
            type: integer
        - in: query
          name: limit
          description: Controls the number of items per page in a limited (paginated) list of items.
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/RefundCollection_Resp'
  '/orders/payment_actions/refund_quotes':
    post:
      summary: Create Refund Quotes - BATCH
      description: |-
        Calculate the tax amount, total refund amount and get available payment options for an order refund by providing items and costs or quantities to refund.

        This endpoint will accept a batch of one or more.

        Requires at least one of the following scopes:
        * `store_v2_orders`
        * `store_v2_transactions`
      operationId: postrefundquotes
      parameters:
        - $ref: '#/components/parameters/Accept'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRefundQuotesRequest'
        required: true
        x-examples:
          application/json:
            - items:
                - item_id: 76
                  item_type: PRODUCT
                  quantity: 1
              tax_adjustment_amount: 0
      responses:
        '201':
          $ref: '#/components/responses/RefundQuotesBATCH_Resp'
        '422':
          description: Partial success/failure response. Status to roll up to the most severe individual failure to the whole request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/RefundQuote_Full'
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/FailedQuoteError'
                  meta:
                    $ref: '#/components/schemas/Meta'
            Example 1:
              examples:
                response:
                  value: |-
                    {
                        "data": [
                            {
                                "order_id": 1,
                                "total_refund_amount": 1.99,
                                "total_refund_tax_amount": 1.95,
                                "rounding": 1,
                                "adjustment": 0.05,
                                "tax_inclusive": true,
                                "refund_methods": [
                                    ""
                                ]
                            }
                        ],
                        "errors": [
                            {
                                "order_id": 1,
                                "status": 422,
                                "error": "Refund amount is greater than remaining amount"
                            }
                        ],
                        "meta": {
                            "failure": 1,
                            "success": 1,
                            "total": 2
                        }
                    }
        '503':
          description: Every request in the batch failed. The error object describes the failure for each component request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/RefundQuote_Full'
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/FailedQuoteError'
                  meta:
                    $ref: '#/components/schemas/Meta'
              examples:
                response:
                  value:
                    data: []
                    errors:
                      - order_id: 1
                        status: 503
                        error: Tax service could not be contacted
                      - order_id: 100
                        status: 422
                        error: Refund amount exceeds remaining amount
                    meta:
                      failure: 2
                      success: 0
                      total: 2
      tags:
        - Payment Actions
      x-private: true
  '/orders/{order_id}/metafields':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/OrderIdParam'
    get:
      summary: Get Metafields
      tags:
        - Metafields
      description: |
        Gets a `Metafield` object list, by `order_id`.

        The maximum number of metafields allowed on each order, product, category, variant, or brand is 250 per client ID.
      operationId: getOrderMetafieldsByOrderId
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/MetafieldKeyParam'
        - $ref: '#/components/parameters/MetafieldNamespaceParam'
        - $ref: '#/components/parameters/DirectionParam'
      responses:
        '200':
          description: |
            An array of metafields and metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaFieldCollectionResponse'
              examples: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              examples:
                example-1:
                  value:
                    status: 404
                    title: There was no order found with ID 1010
                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
    post:
      summary: Create Metafields
      tags:
        - Metafields
      description: |-
        Creates an order `Metafield`.

        The maximum number of metafields allowed on each order, product, category, variant, or brand is 250 per client ID.
      operationId: createOrderMetafield
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetafieldPost'
            examples: {}
        description: |
          A `Metafield` object.
        required: true
      responses:
        '200':
          description: |
            A `Metafield` object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetafieldResponse'
        '409':
          description: |
            The `Metafield` conflicts with another `Metafield`. This can be the result of duplicate unique key combinations of the app's client ID, namespace, key, resource_type, and resource_id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: |
            The `Metafield` is not valid. This is the result of missing required fields or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/orders/{order_id}/metafields/{metafield_id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/OrderIdParam'
      - name: metafield_id
        in: path
        description: |
          The ID of the `Metafield`.
        required: true
        schema:
          type: integer
    get:
      summary: Get a Metafield
      tags:
        - Metafields
      description: |
        Gets a `Metafield`, by `order_id`.
      operationId: getOrderMetafieldByOrderIdAndMetafieldId
      responses:
        '200':
          description: |
            A `Metafield` object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetafieldResponse'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
    put:
      summary: Update a Metafield
      tags:
        - Metafields
      description: |-
        Updates a `Metafield` object.

        The maxiumum number of metafields allowed on each order, product, category, variant, or brand is 250 per client ID.
      operationId: updateOrderMetafield
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetafieldPut'
        description: |
          A `Metafield` object.
        required: true
      responses:
        '200':
          description: |
            A metafield and metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetafieldResponse'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
    delete:
      summary: Delete a Metafield
      tags:
        - Metafields
      description: |
        Deletes a `Metafield`.
      operationId: deleteOrderMetafieldById
      responses:
        '204':
          description: |
            An empty response.
  '/orders/settings':
    get:
      summary: Get Global Order Settings
      description: Returns global order settings.
      operationId: GetGlobalOrderSettings
      tags:
        - Order Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/GlobalOrderSettings'
                  - type: object
                    properties:
                      meta:
                        $ref: '#/components/schemas/metaEmpty_Full'
              examples: {}
        '400':
          description: Bad request. Authentication Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400'
    put:
      summary: Update Global Order Settings
      description: Updates global order settings.
      operationId: UpdateGlobalOrderSettings
      parameters:
        - $ref: '#/components/parameters/ContentType'
      tags:
        - Order Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalOrderSettings'
            examples:
              EnableMultipleOrderNotifications:
                $ref: '#/components/examples/EnableMultipleOrderNotifications'
              DisableOrderPlacedNotificatons:
                $ref: '#/components/examples/GlobalOrderSettingsDisableOrderPlacedNotificatons'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                  - $ref: '#/components/schemas/GlobalOrderSettings'
                  - properties:
                      meta:
                        $ref: '#/components/schemas/metaEmpty_Full'
        '400':
          description: Bad request. Authentication Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400'
        '422':
          description: 'Order settings data is not valid. This is the result of missing required fields, or of invalid data. See the response for more details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse422'
    parameters:
      - $ref: '#/components/parameters/Accept'
  '/orders/settings/channels/{channel_id}':
    get:
      summary: Get Channel Order Settings
      description: Returns order settings for a specific channel.
      operationId: GetChannelOrderSettings
      tags:
        - Order Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ChannelOrderSettings'
                  - type: object
                    properties:
                      meta:
                        $ref: '#/components/schemas/metaEmpty_Full'
              examples: {}
        '400':
          description: Bad request. Authentication Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400'
    put:
      summary: Update Channel Order Settings
      description: |-
        Updates order settings for a specific channel.

         **Note:** You must override both notifications `email_addresses` or neither, i.e. either both notification `email_addresses` are an array of valid email addresses, or both `email_addresses` must be null. You may not have one set to an array of addresses and the other set to `null`.
      operationId: UpdateChannelOrderSettings
      parameters:
        - $ref: '#/components/parameters/ContentType'
      tags:
        - Order Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelOrderSettings'
            examples:
              OverrideOrderPlacedEmailAddressesAndDisableForwardEmailAddresses:
                $ref: '#/components/examples/ChannelOrderSettingsOverrideOrderPlacedEmailAddressesAndDisableForwardEmail'
              ResetChannelSettings:
                $ref: '#/components/examples/ChannelOrderSettingsReset'
              DisableMultipleNotificatonsForChannels:
                $ref: '#/components/examples/ChannelOrderSettingsDisableBothNotifications'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ChannelOrderSettings'
                  - type: object
                    properties:
                      meta:
                        $ref: '#/components/schemas/metaEmpty_Full'
        '400':
          description: Bad request. Authentication Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400'
        '422':
          description: 'Order settings data is not valid. This is the result of missing required fields, or of invalid data. See the response for more details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse422'
    parameters:
      - $ref: '#/components/parameters/Accept'
      - name: channel_id
        in: path
        schema:
          type: string
        description: Channel ID
        required: true
components:
  schemas:
    GetReturnsSettings:
      type: object
      properties:
        reasons:
          type: array
          items:
            $ref: '#/components/schemas/Reason'
        preferred_outcomes:
          type: array
          items:
            $ref: '#/components/schemas/PreferredOutcome'
      x-internal: false
    Reason:
      type: object
      properties:
        id:
          type: integer
          format: int64
        label:
          type: string
          description: A description of the reason.
        is_archived:
          type: boolean
          description: Indicates whether or not the reason has been archived.
      x-internal: false
    PreferredOutcome:
      type: object
      properties:
        id:
          type: integer
          format: int64
        label:
          type: string
          description: A description of the outcome.
        is_archived:
          type: boolean
          description: Indicates whether or not the outcome has been archived.
      x-internal: false
    CreateReturnRequest:
      type: object
      required:
        - items
      properties:
        items:
          description: A collection of items to be returned.
          type: array
          items:
            $ref: '#/components/schemas/CreateReturnRequestItem'
        comment:
          description: A comment provided to the merchant for review.
          type: string
      title: CreateReturnRequest
      x-internal: false
    CreateReturnRequestItem:
      type: object
      required:
        - reference_id
        - quantity
        - preferred_outcome_id
        - reason_id
      properties:
        reference_id:
          $ref: '#/components/schemas/ItemReferenceId'
        quantity:
          type: integer
          minimum: 1
        preferred_outcome_id:
          type: integer
          format: int64
        reason_id:
          type: integer
          format: int64
      x-internal: false
    CreateReturn:
      $ref: '#/components/schemas/Return_Full'
    Return_Full:
      type: object
      description: A view of a return.
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ReturnItem'
        total:
          type: string
          format: decimal
          description: The total price of the items being returned.
        currency:
          type: string
          format: iso-4217
          description: The transactional currency of the return and the associated order.
        customer:
          type: object
          properties:
            id:
              type: integer
              format: int64
            email:
              type: string
              format: email
        comment:
          type: string
          description: A comment provided to the merchant for review.
        status:
          $ref: '#/components/schemas/Status_Full'
        date_modified:
          type: string
          format: date-time
      x-internal: false
    ReturnItem:
      type: object
      description: A view of a returned item.
      properties:
        id:
          type: integer
          format: int64
          description: The unique identifier of this returned item.
        reference_id:
          $ref: '#/components/schemas/ItemReferenceId'
        quantity:
          type: integer
          description: The quantity of items for which a return was requested.
        total:
          type: string
          format: decimal
          description: The total price of the line item.
        preferred_outcome:
          type: object
          properties:
            id:
              type: integer
              format: int64
              description: Unique identifier of the preferred outcome.
            label:
              type: string
              description: A displayable label for the preferred outcome.
        reason:
          type: object
          properties:
            id:
              type: integer
              format: int64
              description: Unique identifier of the reason.
            label:
              type: string
              description: A displayable label for the reason.
        received_state:
          type: object
          properties:
            received_quantity:
              type: integer
              description: The quantity of items marked as received by the merchant.
            pending_quantity:
              type: integer
              description: The quantity of items pending receipt by the merchant.
        review_state:
          type: object
          properties:
            approved_quantity:
              type: integer
              description: The quantity of items approved for return by the merchant.
            pending_quantity:
              type: integer
              description: The quantity of items pending receipt by the merchant.
            rejected_quantity:
              type: integer
              description: The quantity of items rejected by the merchant.
      x-internal: false
    StatusUpdate_Full:
      type: object
      properties:
        return_id:
          type: integer
          format: int64
          description: The ID of the return for which the status should be updated.
        new_status:
          $ref: '#/components/schemas/Status_Full'
      title: StatusUpdate_Full
      x-internal: false
    Status_Full:
      type: string
      enum:
        - CLOSED
        - OPEN
        - REMOVED
      description: The status of the return.
      title: Status_Full
      x-internal: false
    UpdateReturnStatusesRequest:
      type: array
      items:
        $ref: '#/components/schemas/StatusUpdate_Full'
      title: UpdateReturnStatusesRequest
      x-internal: false
    UpdateReturnStatuses:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            format: int64
            description: The ID of the return for which the status was updated.
          status:
            $ref: '#/components/schemas/Status_Full'
      x-internal: false
    Problem:
      type: object
      properties:
        status:
          type: integer
          description: Status code of the problem.
        title:
          type: string
          description: A short description of the problem.
        type:
          type: string
          format: url
          description: A resource describing the problem.
      x-internal: false
    BatchOperationMeta:
      type: object
      properties:
        total:
          type: integer
          description: The total number of operations in the batch.
        success:
          type: integer
          description: The number of failed operations in the batch.
        failed:
          type: integer
          description: The number of failed operations in the batch.
      x-internal: false
    Pagination:
      type: object
      description: 'Data about the response, including pagination and collection totals.'
      title: Pagination
      properties:
        total:
          type: integer
          description: |
            Total number of items in the result set.
          example: 36
        count:
          type: integer
          description: |
            Total number of items in the collection response.
          example: 36
        per_page:
          type: integer
          description: |
            The amount of items returned in the collection per page, controlled by the limit parameter.
          example: 50
        current_page:
          type: integer
          description: |
            The page you are currently on within the collection.
          example: 1
        total_pages:
          type: integer
          description: |
            The total number of pages in the collection.
          example: 1
        links:
          type: object
          description: |
            Pagination links for the previous and next parts of the whole collection.
          properties:
            previous:
              type: string
              description: |
                Link to the previous page returned in the response.
            current:
              type: string
              description: |
                Link to the current page returned in the response.
              example: '?page=1&limit=50'
            next:
              type: string
              description: |
                Link to the next page returned in the response.
      x-internal: false
    ReceivedItems_Put:
      type: array
      items:
        type: object
        required:
          - item_id
          - received_quantity
          - pending_quantity
        properties:
          item_id:
            type: integer
            format: int64
            description: The item ID for updating the received state.
          received_quantity:
            type: integer
            description: The quantity of items to be marked as received.
          pending_quantity:
            type: integer
            description: The quantity of items to be marked as pending.
      title: ReceivedItems_Put
      x-internal: false
    ReceivedItems_Base:
      type: array
      items:
        type: object
        properties:
          item_id:
            type: integer
            format: int64
            description: The ID of the item for which received item status was updated.
          received_quantity:
            type: integer
            format: int64
            description: The quantity of items marked as received.
          pending_quantity:
            type: integer
            format: int64
            description: The quantity of items marked as pending.
      title: ReceivedItems_Base
      x-internal: false
    ReviewedItems_Put:
      type: array
      items:
        type: object
        required:
          - item_id
          - authorized_quantity
          - rejected_quantity
          - pending_quantity
        properties:
          item_id:
            type: integer
            format: int64
            description: The item ID for updating the reviewed state.
          authorized_quantity:
            type: integer
            description: The quantity of items to be marked as authorized.
          rejected_quantity:
            type: integer
            description: The quantity of items to be marked as rejected.
          pending_quantity:
            type: integer
            description: The quantity of items to be marked as pending.
      title: ReviewedItems_Put
      x-internal: false
    ReviewedItems_Base:
      type: array
      items:
        type: object
        properties:
          item_id:
            type: integer
            format: int64
            description: The ID of the item for which reviewed status was updated.
          authorized_quantity:
            type: integer
            format: int64
            description: The quantity of items marked as authorized.
          rejected_quantity:
            type: integer
            format: int64
            description: The quantity of items marked as rejected.
          pending_quantity:
            type: integer
            format: int64
            description: The quantity of items marked as pending.
      title: ReviewedItems_Base
      x-internal: false
    GetReturnableItems:
      type: array
      items:
        type: object
        properties:
          reference_id:
            $ref: '#/components/schemas/ItemReferenceId'
          name:
            type: string
            description: The name of the order product.
          returnable_quantity:
            type: integer
            description: The maximum quantity of this item that can presently be requested for return.
          total:
            type: string
            format: decimal
            description: The total price of this line item.
          options:
            type: array
            items:
              type: object
              properties:
                display_name:
                  type: string
                  description: A displayable name for the option.
                display_value:
                  type: string
                  description: A displayable value for the option.
              description: An item available for return.
            description: A collection of options configured for the order product.
      x-internal: false
    ItemReferenceId:
      type: object
      properties:
        type:
          type: string
          description: The reference type.
          enum:
            - ORDER_PRODUCT
        value:
          type: string
          description: The value identifying the returned item.
      required:
        - type
        - value
      x-internal: false
    CollectionMeta:
      type: object
      description: 'Data about the response, including pagination and collection totals.'
      properties:
        pagination:
          type: object
          description: 'Data about the response, including pagination and collection totals.'
          title: Pagination
          properties:
            total:
              type: integer
              description: |
                Total number of items in the result set.
              example: 36
            count:
              type: integer
              description: |
                Total number of items in the collection response.
              example: 36
            per_page:
              type: integer
              description: |
                The amount of items returned in the collection per page, controlled by the limit parameter.
              example: 50
            current_page:
              type: integer
              description: |
                The page you are currently on within the collection.
              example: 1
            total_pages:
              type: integer
              description: |
                The total number of pages in the collection.
              example: 1
            links:
              type: object
              description: |
                Pagination links for the previous and next parts of the whole collection.
              properties:
                previous:
                  type: string
                  description: |
                    Link to the previous page returned in the response.
                current:
                  type: string
                  description: |
                    Link to the current page returned in the response.
                  example: '?page=1&limit=50'
                next:
                  type: string
                  description: |
                    Link to the next page returned in the response.
      title: Collection Meta
      x-internal: false
    Meta:
      type: object
      title: Meta
      properties:
        meta:
          type: object
          description: 'Data about the response, including pagination and collection totals.'
          title: Pagination
          properties:
            total:
              type: integer
              description: |
                Total number of items in the result set.
              example: 36
            count:
              type: integer
              description: |
                Total number of items in the collection response.
              example: 36
            per_page:
              type: integer
              description: |
                The amount of items returned in the collection per page, controlled by the limit parameter.
              example: 50
            current_page:
              type: integer
              description: |
                The page you are currently on within the collection.
              example: 1
            total_pages:
              type: integer
              description: |
                The total number of pages in the collection.
              example: 1
            links:
              type: object
              description: |
                Pagination links for the previous and next parts of the whole collection.
              properties:
                previous:
                  type: string
                  description: |
                    Link to the previous page returned in the response.
                current:
                  type: string
                  description: |
                    Link to the current page returned in the response.
                  example: '?page=1&limit=50'
                next:
                  type: string
                  description: |
                    Link to the next page returned in the response.
      x-internal: false
    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/error_Base'
        - type: object
          properties:
            errors:
              type: object
              properties: {}
              additionalProperties: true
              title: DetailedErrors
      title: ErrorResponse
      x-internal: false
    DetailedErrors:
      type: object
      properties: {}
      additionalProperties: true
      title: DetailedErrors
      x-internal: false
    Transaction_Post:
      type: object
      title: Transaction_Post
      properties:
        event:
          type: string
          description: |
            Store event that created the transaction.
          enum:
            - purchase
            - authorization
            - capture
            - refund
            - void
            - pending
            - settled
        method:
          type: string
          description: |
            The payment method: `credit_card` - a credit-card transaction; `electronic_wallet` - an online wallet; `store_credit` - a transaction using store credit; `gift_certificate` - a transaction using a gift certificate; `custom` - manual payment methods; `token` - payment token; `nonce` - temporary payment token; `offsite` - online payment off the site (e.g., PayPal); `offline` - payment method that takes place offline.
          enum:
            - credit_card
            - electronic_wallet
            - gift_certificate
            - store_credit
            - apple_pay_card
            - apple_pay_token
            - bigpay_token
            - token
            - custom
            - offsite
            - offline
            - nonce
        amount:
          type: number
          format: float
          description: |
            Amount of money in the transaction.
        currency:
          type: string
          format: ISO-4217
          description: |
            Currency used for the transaction.
        gateway:
          type: string
          description: |
            The payment gateway, where applicable.
          enum:
            - 2checkout
            - adyen
            - amazon
            - authorizenet
            - bankdeposit
            - braintree
            - cheque
            - cod
            - custom
            - firstdatagge4
            - giftcertificate
            - hps
            - instore
            - klarna
            - migs
            - moneyorder
            - nmi
            - paypalexpress
            - paypalpaymentsprous
            - paypalpaymentsprouk
            - plugnpay
            - qbmsv2
            - securenet
            - square
            - storecredit
            - stripe
            - testgateway
            - usaepay
        gateway_transaction_id:
          description: |
            The transaction ID returned by the payment gateway for this transaction item.
          type: string
        date_created:
          description: |
            The date/time of the transaction.
          type: string
          format: date-time
        test:
          type: boolean
          description: |
            True if the transaction performed was a test, or if the gateway is in test mode.
        status:
          type: string
          description: |
            Status of the transaction.
          enum:
            - ok
            - error
        fraud_review:
          type: boolean
          description: |
            Result of gateway fraud review, if any. Default is `false`.
        reference_transaction_id:
          type: integer
          description: |
            Identifier for an existing transaction upon which this transaction acts.
        offline:
          $ref: '#/components/schemas/Offline'
        custom:
          $ref: '#/components/schemas/Custom'
      required:
        - event
        - method
        - amount
        - currency
        - gateway
      x-internal: false
    NotFound:
      description: Error payload for the BigCommerce API.
      type: object
      properties:
        status:
          description: |
            404 HTTP status code.
          type: integer
        title:
          description: The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
      title: Not Found
      x-internal: false
    Transaction:
      allOf:
        - title: Transaction Base
          properties:
            event:
              type: string
              description: |
                Store event that created the transaction.
              enum:
                - purchase
                - authorization
                - capture
                - refund
                - void
                - pending
                - settled
            method:
              type: string
              description: |
                The payment method: `credit_card` - a credit-card transaction; `electronic_wallet` - an online wallet; `store_credit` - a transaction using store credit; `gift_certificate` - a transaction using a gift certificate; `custom` - manual payment methods; `token` - payment token; `nonce` - temporary payment token; `offsite` - online payment off the site; `offline` - payment method that takes place offline.
              enum:
                - credit_card
                - electronic_wallet
                - gift_certificate
                - store_credit
                - apple_pay_card
                - bigpay_token
                - apple_pay_token
                - token
                - custom
                - offsite
                - offline
                - nonce
            amount:
              type: number
              format: float
              description: |
                Amount of money in the transaction.
            currency:
              type: string
              format: ISO-4217
              description: |
                Currency used for the transaction.
            gateway:
              type: string
              description: |
                The payment gateway, where applicable.
              enum:
                - 2checkout
                - adyen
                - amazon
                - authorizenet
                - bankdeposit
                - braintree
                - cheque
                - cod
                - custom
                - firstdatagge4
                - giftcertificate
                - hps
                - instore
                - klarna
                - migs
                - moneyorder
                - nmi
                - paypalexpress
                - paypalpaymentsprous
                - paypalpaymentsprouk
                - plugnpay
                - qbmsv2
                - securenet
                - square
                - storecredit
                - stripe
                - testgateway
                - usaepay
            gateway_transaction_id:
              description: |
                The transaction ID returned by the payment gateway for this transaction item.
              type: string
            date_created:
              description: |
                The date/time of the transaction.
              type: string
              format: date-time
            test:
              type: boolean
              description: |
                True if the transaction performed was a test, or if the gateway is in test mode.
            status:
              type: string
              description: |
                Status of the transaction.
              enum:
                - ok
                - error
            fraud_review:
              type: boolean
              description: |
                Result of gateway fraud review, if any. Default is `false`.
            reference_transaction_id:
              type: integer
              description: |
                Identifier for an existing transaction upon which this transaction acts.
            offline:
              type: object
              description: 'Offline payment (e.g., check or purchase order).'
              title: Offline
              properties:
                display_name:
                  description: |
                    Display name for the offline payment.
                  type: string
            custom:
              type: object
              description: Custom payment from manual order.
              title: Custom
              properties:
                payment_method:
                  description: |
                    Text entered for the payment method in the control panel.
                  type: string
            payment_method_id:
              type: string
              description: |
                The payment method ID used for this transaction.
          required:
            - event
            - method
            - amount
            - currency
            - gateway
        - properties:
            id:
              type: integer
              description: |
                Unique identifier for the transaction.
            order_id:
              type: string
              description: |
                Identifier for the BigCommerce Order with which this transaction is associated.
            date_created:
              description: |
                The date/time of the transaction.
              type: string
              format: date-time
            payment_instrument_token:
              type: string
              description: This field contains internal BigPay token for stored card that is then mapped to the actual third-party token. We currently do not offer a way to get third party tokens.These tokens are read-only and do not return any information about the payment.
            avs_result:
              description: Address Verification Service (AVS) result from the payment gateway.
              type: object
              title: AVS Results
              properties:
                code:
                  description: AVS code.
                  type: string
                message:
                  description: AVS message.
                  type: string
                street_match:
                  description: AVS Code for street matching result.
                  type: string
                postal_match:
                  description: AVS Code for postal matching result.
                  type: string
            cvv_result:
              description: Card Verification Value result from the payment gateway.
              type: object
              title: CVV Result
              properties:
                code:
                  description: CVV code.
                  type: string
                message:
                  description: CVV message.
                  type: string
            credit_card:
              $ref: '#/components/schemas/CreditCard'
            gift_certificate:
              type: object
              description: A gift-certificate model.
              title: Gift Certificate
              properties:
                code:
                  description: |
                    The gift-certificate code.
                  type: string
                  example: MB345
                original_balance:
                  type: number
                  description: |
                    The balance on a gift certificate when it was purchased.
                  format: float
                  example: 100
                  minimum: 0
                  maximum: 21474836.47
                starting_balance:
                  description: |
                    The balance on a gift certificate at the time of this purchase.
                  type: number
                  format: float
                  example: 100
                remaining_balance:
                  description: |
                    The remaining balance on a gift certificate.
                  type: number
                  format: float
                  example: 35.42
                status:
                  description: |
                    The status of a gift certificate: `active` - gift certificate is active; `pending` - gift certificate purchase is pending; `disabled` - gift certificate is disabled; `expired` - gift certificate is expired.
                  type: string
                  enum:
                    - active
                    - pending
                    - disabled
                    - expired
            store_credit:
              type: object
              description: |
                A store credit model.
              properties:
                remaining_balance:
                  description: |
                    Remaining balance of shopper's store credit.
                  type: number
                  format: float
                  example: 35.42
      type: object
      title: ''
      x-examples:
        Example 1:
          event: purchase
          method: credit_card
          amount: 3.4
          currency: string
          gateway: 2checkout
          gateway_transaction_id: string
          date_created: '2019-08-24T14:15:22Z'
          test: true
          status: ok
          fraud_review: true
          reference_transaction_id: 0
          offline:
            display_name: string
          custom:
            payment_method: string
          payment_method_id: string
          id: 0
          order_id: string
          payment_instrument_token: string
          avs_result:
            code: string
            message: string
            street_match: string
            postal_match: string
          cvv_result:
            code: string
            message: string
          credit_card:
            card_type: alelo
            card_iin: string
            card_last4: string
            card_expiry_month: 1
            card_expiry_year: 0
          gift_certificate:
            code: MB345
            original_balance: 100
            starting_balance: 100
            remaining_balance: 35.42
            status: active
          store_credit:
            remaining_balance: 35.42
      description: ''
    CreditCard:
      type: object
      description: A credit-card model.
      title: Credit Card
      properties:
        card_type:
          type: string
          enum:
            - alelo
            - alia
            - american_express
            - cabal
            - carnet
            - dankort
            - diners_club
            - discover
            - elo
            - forbrugsforeningen
            - jcb
            - maestro
            - master
            - naranja
            - sodexo
            - unionpay
            - visa
            - vr
          description: '**Allowed values**: alelo, alia, american_express, cabal, carnet, dankort, diners_club, discover, elo, forbrugsforeningen, jcb, maestro, master, naranja, sodexo, unionpay, visa, vr'
        card_iin:
          description: |
            The IIN of a credit-card number.
          type: string
        card_last4:
          description: |
            The last 4 digits of a credit-card number.
          type: string
        card_expiry_month:
          description: |
            The expiry month of a credit-card.
          type: integer
          minimum: 1
          maximum: 12
        card_expiry_year:
          description: |
            The expiry year of a credit-card.
          type: integer
      x-internal: false
    StoreCredit:
      type: object
      description: |
        A store credit model.
      properties:
        remaining_balance:
          description: |
            Remaining balance of shopper's store credit.
          type: number
          format: float
          example: 35.42
      x-internal: false
    Custom:
      type: object
      description: Custom payment from manual order.
      properties:
        payment_method:
          description: |
            Text entered for the payment method in the control panel.
          type: string
      title: Custom
      x-internal: false
    Offline:
      type: object
      description: 'Offline payment (e.g., check or purchase order).'
      properties:
        display_name:
          description: |
            Display name for the offline payment.
          type: string
      title: Offline
      x-internal: false
    GiftCertificate:
      type: object
      description: A gift-certificate model.
      title: Gift Certificate
      x-internal: false
      properties:
        code:
          description: |
            The gift-certificate code.
          type: string
          example: MB345
        original_balance:
          type: number
          description: |
            The balance on a gift certificate when it was purchased.
          format: float
          example: 100
          minimum: 0
          maximum: 21474836.47
        starting_balance:
          type: number
          description: |
            The balance on a gift certificate at the time of this purchase.
          format: float
          example: 100
          minimum: 0
        remaining_balance:
          description: |
            The remaining balance on a gift certificate.
          type: number
          format: float
          example: 35.42
        status:
          description: |
            The status of a gift certificate: `active` - gift certificate is active; `pending` - gift certificate purchase is pending; `disabled` - gift certificate is disabled; `expired` - gift certificate is expired.
          type: string
          enum:
            - active
            - pending
            - disabled
            - expired
    AVSResult:
      description: Address Verification Service (AVS) result from the payment gateway.
      type: object
      properties:
        code:
          description: AVS code.
          type: string
        message:
          description: AVS message.
          type: string
        street_match:
          description: AVS Code for street matching result.
          type: string
        postal_match:
          description: AVS Code for postal matching result.
          type: string
      title: AVS Results
      x-internal: false
    CVVResult:
      description: Card Verification Value result from the payment gateway.
      type: object
      properties:
        code:
          description: CVV code.
          type: string
        message:
          description: CVV message.
          type: string
      title: CVV Result
      x-internal: false
    NoContent:
      description: No-content response for the BigCommerce API.
      type: object
      properties:
        status:
          description: |
            204 HTTP status code.
          type: integer
        title:
          description: The error title describing the situation.
          type: string
        type:
          type: string
        instance:
          type: string
      title: No Content
      x-internal: false
    metaEmpty_Full:
      type: object
      title: Response meta
      properties: {}
      additionalProperties: true
      description: Response metadata.
    pagination_Full:
      type: object
      title: pagination_Full
      properties:
        total:
          description: Total number of items in the result set.
          type: integer
          format: int32
        count:
          description: Total number of items in the collection response.
          type: integer
          format: int32
        per_page:
          description: 'The amount of items returned in the collection per page, controlled by the limit parameter.'
          type: integer
          format: int32
        current_page:
          description: The page you are currently on within the collection.
          type: integer
          format: int32
        total_pages:
          description: The total number of pages in the collection.
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/links_Full'
      x-internal: false
    metaCollection_Full:
      type: object
      title: metaCollection_Full
      properties:
        pagination:
          $ref: '#/components/schemas/pagination_Full'
      x-internal: false
      x-examples:
        example-1:
          pagination:
            total: 0
            count: 0
            per_page: 0
            current_page: 0
            total_pages: 0
            links:
              previous: string
              current: '?page=1&limit=50'
              next: string
    links_Full:
      type: object
      properties:
        previous:
          type: string
          description: |
            Link to the previous page returned in the response.
        current:
          type: string
          description: |
            Link to the current page returned in the response.
          example: '?page=1&limit=50'
        next:
          type: string
          description: |
            Link to the next page returned in the response.
      title: links_Full
      x-internal: false
    error_Base:
      type: object
      title: error_Base
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
      description: Error payload for the BigCommerce API.
      x-internal: false
    errorDetailed_Full:
      type: object
      properties:
        errors:
          type: object
          properties: {}
          additionalProperties: true
          title: DetailedErrors
      title: errorDetailed_Full
      x-internal: false
    PostRefundQuotesRequest:
      type: array
      description: Request body for batch refund quotes.
      title: Refund Quotes Request - BATCH
      items:
        $ref: '#/components/schemas/RefundQuote_Post'
      x-internal: false
    RefundQuote_Post:
      type: object
      title: RefundQuote_Post
      description: Request body for refund quotes.
      x-internal: false
      x-examples: {}
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ItemsRefund'
      required:
        - items
    RefundQuote_Full:
      type: object
      title: RefundQuote_Full
      x-internal: false
      properties:
        order_id:
          type: integer
          description: ID of the order to be refunded.
        total_refund_amount:
          $ref: '#/components/schemas/Amount'
        total_refund_tax_amount:
          type: number
          example: 1.95
        rounding:
          type: number
          description: Indicates rounding value to bring `refund_total` to an amount refundable with payment providers (in this case to 2 decimal places).
        adjustment:
          $ref: '#/components/schemas/AdjustmentAmount'
        tax_inclusive:
          type: boolean
          description: Indicate if `total_refund_amount` includes tax amount.
        refund_methods:
          type: array
          description: |
            An array of available refund methods.

            Note that `refund_methods` is an array of refund methods, with each refund method being an array of payment options.

            For example, if the order was placed by a combination of store credit and bank deposit the refund methods would be:
            ```json
            {
              "refund_methods": [
                [
                  {
                    "provider_id": "storecredit",
                    "provider_description": "Store Credit",
                    "amount": 119.35,
                    "offline": false,
                    "offline_provider": false,
                    "offline_reason": ""
                  }
                ],
                [
                  {
                    "provider_id": "custom",
                    "provider_description": "Custom",
                    "amount": 119.35,
                    "offline": true,
                    "offline_provider": true,
                    "offline_reason": "This is an offline payment provider."
                  }
                ],
                [
                  {
                    "provider_id": "bankdeposit",
                    "provider_description": "Bank Deposit",
                    "amount": 80.35,
                    "offline": true,
                    "offline_provider": true,
                    "offline_reason": "This is an offline payment provider."
                  },
                  {
                    "provider_id": "storecredit",
                    "provider_description": "Store Credit",
                    "amount": 39,
                    "offline": false,
                    "offline_provider": false,
                    "offline_reason": ""
                  }
                ]
              ]
            }
            ```

            In this case there are three refund methods available to the merchant:
            1. Refund up to the entire order amount to store credit.
            2. Mark an amount up to the full order amount as refunded externally, through a provider or means not represented directly in BC ("custom").
            3. Refund the amount paid by store credit to store credit, and the amount paid by bank deposit with a manual refund, which will be recorded as being refunded against the bank deposit.
          items:
            $ref: '#/components/schemas/RefundMethod'
    RefundRequest_Post:
      type: object
      description: Request body for refund requests.
      title: RefundRequest_Post
      x-internal: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ItemsRefund'
        payments:
          type: array
          items:
            $ref: '#/components/schemas/PaymentRequest'
        merchant_calculated_override:
          $ref: '#/components/schemas/MerchantOverride'
      required:
        - items
        - payments
      x-examples: {}
    RefundID_Get:
      type: object
      x-examples:
        Example:
          data:
            id: 12
            order_id: 180
            user_id: 0
            created: '2022-06-16T16:44:15+00:00'
            reason: ''
            total_amount: 50
            total_tax: 5
            uses_merchant_override_values: false
            payments:
              - id: 13
                provider_id: storecredit
                amount: 50
                offline: true
                is_declined: false
                declined_message: ''
            items:
              - item_type: PRODUCT
                item_id: 87
                quantity: 1
                requested_amount: null
                reason: Wrong color
          meta: {}
      properties:
        data:
          type: object
          properties:
            id:
              type: integer
              description: |
                Refund ID for the returned refund.
            order_id:
              type: integer
              description: Order ID associated with the refund.
            user_id:
              type: integer
              description: |
                Reference to the user ID who created the refund. This is automatically populated by BigCommerce.
            created:
              type: string
              description: |
                Timestamp of when the refund was created.
              format: date-time
            reason:
              type: string
              description: |
                Reason for refund.
            total_amount:
              type: number
              description: |
                A non-negative 2 decimal place rounded value that represents the amount that can be refunded with the correct payment provider(s).
              example: 109.11
            total_tax:
              type: number
              description: |
                Total tax amount refunded back to the shopper. This can be a negative amount indicating we have collected tax by refunding less to the customer.
            uses_merchant_override_values:
              type: boolean
              description: |
                Whether refund amount and tax are provided explicitly by merchant override.
            payments:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    description: |
                      Reference to refund payment ID.
                  provider_id:
                    type: string
                    description: |
                      Reference to payment provider.
                      example: storecredit
                  amount:
                    type: number
                    description: |
                      A non-negative two decimal place rounded value represents the amount that can be charged/refunded with payment providers.
                    example: 109.11
                  offline:
                    type: boolean
                    description: |
                      Indicates whether the payment was offline.
                  is_declined:
                    type: boolean
                    description: |
                      Indicates if this payment has been declined by the payment provider.
                  declined_message:
                    type: string
                    description: |
                      Message indicates why the payment was declined.
            items:
              type: array
              items:
                type: object
                properties:
                  item_type:
                    type: string
                    description: |
                      Type of item that was refunded.
                    enum:
                      - PRODUCT
                      - GIFT_WRAPPING
                      - SHIPPING
                      - HANDLING
                      - ORDER
                  item_id:
                    type: integer
                    description: |
                      `order_product.id` corresponding to the item_types of PRODUCT, GIFT_WRAPPING. `order_address.id` corresponding to the item_types of SHIPPING, HANDLING. `order.id` corresponding to the item_type of ORDER.
                  quantity:
                    type: integer
                    description: |
                      Quantity of item refunded. Note: this will only be populated for item_type PRODUCT.
                  requested_amount:
                    type: string
                    description: |
                      A non-negative two decimal place rounded value that represents the amount that can be refunded with the payment provider(s).
                    example: '109.11'
                    nullable: true
                  reason:
                    type: string
                    description: |
                      Reason for refunding an item.
        meta:
          $ref: '#/components/schemas/metaEmpty_Full'
    PostRefundsRequest:
      type: array
      description: Request body for batch refunds.
      title: Refunds Request - BATCH
      items:
        $ref: '#/components/schemas/RefundRequest_Post'
      x-internal: false
      x-examples: {}
    FailedQuoteError:
      type: object
      description: Failed quote response.
      properties:
        order_id:
          type: integer
        status:
          type: integer
          description: HTTP status code.
          example: 422
        error:
          type: string
          description: Details why the request failed.
      title: FailedQuoteError
      x-internal: false
    ItemsRefund:
      title: ItemsRefund
      x-internal: false
      oneOf:
        - $ref: '#/components/schemas/AmountBoundItem'
        - $ref: '#/components/schemas/QuantityBoundItem'
        - $ref: '#/components/schemas/TaxExemptItem'
      x-examples: {}
    PaymentRequest:
      type: object
      properties:
        provider_id:
          type: string
          description: Reference to payment provider.
          example: checkout_paypalexpress
        amount:
          type: number
          description: Amount refunded with this provider.
          example: 9.99
        offline:
          type: boolean
          description: Whether the payment was marked as offline or performed through an online payment service.
          example: true
      title: Payment Request
      x-internal: false
    RefundMethod:
      type: array
      minItems: 1
      items:
        $ref: '#/components/schemas/PaymentOption'
      title: Refund Method
      x-internal: false
    QuantityBoundItem:
      type: object
      title: Quantity Bound Item
      description: |
        Quantity Bound Item

        Type of refund item that capture refunding of items in the order that are of type quantity.
        * `ORDER`
        * `PRODUCT`
        * `GIFT_WRAPPING`
        * `SHIPPING`
        * `HANDLING`
        * `TAX`
      properties:
        item_type:
          type: string
          example: PRODUCT
          enum:
            - ORDER
            - PRODUCT
            - GIFT_WRAPPING
            - SHIPPING
            - HANDLING
            - TAX
          description: Type of refund.
        item_id:
          type: integer
          example: 1
          description: Order Product ID.
        quantity:
          type: integer
          example: 3
        reason:
          type: string
          example: Wrong size.
          description: Reason for refund.
          minLength: 0
          maxLength: 1000
      x-internal: false
    TaxExemptItem:
      type: object
      title: Tax Exempt (Order Level)
      description: 'Use this to refund a custom value at the order level. When `item_type` is set to `ORDER`, tax is not re-calculated.'
      x-internal: false
      properties:
        item_type:
          type: string
          description: 'The type of refund. When `item_type` is set to `ORDER`, tax is not re-calculated.'
          example: ORDER
          enum:
            - ORDER
        item_id:
          type: number
          description: Numeric ID of the product in the order.
          example: 1
        amount:
          $ref: '#/components/schemas/Amount'
        reason:
          type: string
          description: Reason for the refund.
          minLength: 0
          maxLength: 1000
    AmountBoundItem:
      type: object
      title: Amount Bound Item
      description: |-
        Amount Bound Item

        Type of refund item that capture refunding of items in the order that are of type amount.
        * `PRODUCT`
        * `ORDER`
        * `GIFT_WRAPPING`
        * `SHIPPING`
        * `HANDLING`
        * `TAX`
      x-internal: false
      properties:
        item_type:
          type: string
          enum:
            - PRODUCT
            - ORDER
            - GIFT_WRAPPING
            - SHIPPING
            - HANDLING
            - TAX
          example: SHIPPING
          description: Type of refund.
        item_id:
          type: integer
          example: 1
          description: Order address ID.
        amount:
          $ref: '#/components/schemas/Amount'
        quantity:
          type: integer
          example: 3
          description: Number of items in refund.
        reason:
          type: string
          description: Explanation of refund.
          minLength: 0
          maxLength: 1000
          example: Customer requested refund
    MerchantOverride:
      type: object
      title: Merchant Calculated Override
      description: |-
        Merchant explicitly provided override based on their own calculation.

        This override gives merchants the flexibility to
        - bypass any tax correction due to tax rate/providers changes between when a customer places an order and a merchant initiates a refund
        - use explicit values calculated by external systems (e.g., merchants' own Extended Producer Responsibility or Order Management System)

        Note: when using the override, BC internal tax based refund calculation is skipped and therefore order/taxes records are not updated.
      properties:
        total_amount:
          $ref: '#/components/schemas/Amount'
        total_tax:
          type: number
          description: Total tax amount refunded back to the shopper. Use 0 value if there is no tax liability change for the refund or tax does not need to be recorded on the refund and would be handled externally.
      required:
        - total_amount
        - total_tax
      x-internal: false
    Refund:
      type: object
      title: Refund
      properties:
        id:
          type: integer
          description: Refund resource ID.
          readOnly: true
        order_id:
          type: integer
          description: Reference to order ID.
        user_id:
          type: integer
          description: Reference to the user's ID who create this refund. This is automatically populated by BigCommerce.
          readOnly: true
        created:
          type: string
          format: date-time
          description: Timestamp of when this refund was created.
          readOnly: true
        reason:
          type: string
          description: Reason for refund.
        total_amount:
          $ref: '#/components/schemas/Amount'
        total_tax:
          type: number
          description: 'Total tax amount refunded back to the shopper. Note: `order_level_amount` does not affect tax liability. This can be a negative amount indicating we have collected tax by refunding less to the customer.'
        uses_merchant_override_values:
          type: boolean
          description: Whether refund amount and tax are provided explicitly by merchant override.
        items:
          type: array
          description: Array of items refunded.
          minItems: 1
          items:
            $ref: '#/components/schemas/RefundItem'
        payments:
          type: array
          description: An array of refund payments made to payment providers.
          minItems: 1
          items:
            $ref: '#/components/schemas/RefundPayment'
      x-internal: false
    RefundItem:
      type: object
      properties:
        item_type:
          type: string
          description: Type of item that was refunded.
          enum:
            - PRODUCT
            - GIFT_WRAPPING
            - SHIPPING
            - HANDLING
            - ORDER
        item_id:
          type: integer
          description: 'order_product.id corresponding to the item_types of PRODUCT, GIFT_WRAPPING. order_address.id corresponding to the item_types of SHIPPING, HANDLING. order.id corresponding to the item_type of ORDER.'
        reason:
          type: string
          description: Reason for refunding an item.
        quantity:
          type: integer
          description: 'Quantity of item refunded. Note: this will only be populated for item_type PRODUCT'
        requested_amount:
          $ref: '#/components/schemas/Amount'
      title: Refund Item
      x-internal: false
    RefundPayment:
      type: object
      title: Refund Payment
      properties:
        id:
          type: integer
          description: Reference to refund payment ID.
          readOnly: true
        provider_id:
          type: string
          description: Reference to payment provider.
          example: storecredit
        amount:
          $ref: '#/components/schemas/Amount'
        offline:
          type: boolean
          description: Indicate whether payment was offline.
        is_declined:
          type: boolean
          description: Indicate if this payment has been declined by payment provider.
        declined_message:
          type: string
          description: Message indicate why payment was declined.
      x-internal: false
    PaymentOption:
      type: object
      example:
        provider_id: checkout_paypalexpress
        provider_description: Paypal Express
        amount: 9.99
        offline: true
        offline_provider: true
        offline_reason: Multiple online refunds are not available.
      title: Payment Option
      properties:
        provider_id:
          type: string
          description: Name of the payment method.
          example: checkout_paypalexpress
        provider_description:
          type: string
          description: Description for payment provider.
          example: Paypal Express
        amount:
          type: number
          description: Amount to be refunded with this payment provider.
          example: 9.99
        offline:
          type: boolean
          description: 'Indicates the payment must be done offline due to constraints of the payment provider, such as partial refunds not being supported, or it being offline only such as cash on delivery of bank deposit.'
          example: true
        offline_provider:
          type: boolean
          description: 'Indicates if the payment provider is a strictly offline provider, such as cash on delivery or bank deposit.'
          example: true
        offline_reason:
          type: string
          description: 'Reason the payment option is offline only, if applicable.'
          example: Multiple online refunds are not available
      x-internal: false
    Amount:
      type: number
      format: float
      description: A non-negative 2 decimal place rounded value that represents the amount that can be charged/refunded with payment providers.
      example: 1.99
      title: Amount
      x-internal: false
    AdjustmentAmount:
      type: number
      format: float
      description: 'A negative or positive 2 decimal place rounded value that represents the difference between the refund amount requested in the refund quote and the actual amount that is refundable on the order. This value is negative when the refund amount requested in the refund quote is more than the total refundable amount. This value is positive when the total refundable amount has increased, e.g. as a result of rounding.'
      example: -10.2
      title: Adjustment Amount
      x-internal: false
    MetaRefund:
      type: object
      title: MetaRefund
      properties:
        failure:
          type: integer
        success:
          type: integer
        total:
          type: integer
      description: 'Describes refund failures, success and totals.'
      x-internal: false
      x-examples:
        example-1:
          failure: 0
          success: 0
          total: 0
    MetaFieldCollectionResponse:
      type: object
      description: |
        Response payload for the BigCommerce API.
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Metafield'
        meta:
          $ref: '#/components/schemas/CollectionMeta'
      x-internal: false
    MetafieldResponse:
      description: |
        Response payload for the BigCommerce API.
      x-internal: false
      x-examples: {}
      allOf:
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Metafield'
        - $ref: '#/components/schemas/Meta'
    MetafieldBase:
      type: object
      description: |
        Common Metafield properties.
      x-internal: false
      properties:
        permission_set:
          type: string
          description: |
            Determines the visibility and writeability of the field by other API consumers.

            |Value|Description |
            |:-|:-|
            |`app_only`|Private to the app that owns the field|
            |`read`|Visible to other API consumers|
            |`write`|Open for reading and writing by other API consumers|
            |`read_and_sf_access`|Visible to other API consumers, including on storefront|
            |`write_and_sf_access`|Open for reading and writing by other API consumers, including on storefront|
          enum:
            - app_only
            - read
            - write
            - read_and_sf_access
            - write_and_sf_access
        namespace:
          type: string
          description: |
            Namespace for the metafield, for organizational purposes.
          example: Sales Department
          minLength: 1
          maxLength: 64
        key:
          type: string
          description: |
            The name of the field, for example: `location_id`, `color`.
          minLength: 1
          maxLength: 64
          example: Staff Name
        value:
          type: string
          description: |
            The value of the field, for example: `1`, `blue`.
          minLength: 1
          maxLength: 65535
          example: Ronaldo
        description:
          type: string
          description: |
            Description for the metafields.
          example: order
          minLength: 0
          maxLength: 255
        resource_type:
          type: string
          description: |
            The type of resource with which the metafield is associated.
          enum:
            - order
            - brand
            - product
            - variant
            - category
          example: order
        resource_id:
          type: integer
          description: |
            The unique identifier for the resource with which the metafield is associated.
          example: 0
          readOnly: true
      required:
        - permission_set
    MetafieldBase_Post:
      type: object
      description: |
        Common Metafield properties.
      x-internal: false
      properties:
        permission_set:
          type: string
          description: |
            Determines the visibility and writeability of the field by other API consumers.

            |Value|Description |
            |:-|:-|
            |`app_only`|Private to the app that owns the field|
            |`read`|Visible to other API consumers|
            |`write`|Open for reading and writing by other API consumers|
            |`read_and_sf_access`|Visible to other API consumers, including on storefront|
            |`write_and_sf_access`|Open for reading and writing by other API consumers, including on storefront|
          enum:
            - app_only
            - read
            - write
            - read_and_sf_access
            - write_and_sf_access
        namespace:
          type: string
          description: |
            Namespace for the metafield, for organizational purposes.
          example: Sales Department
          minLength: 1
          maxLength: 64
        key:
          type: string
          description: |
            The name of the field, for example: `location_id`, `color`.
          minLength: 1
          maxLength: 64
          example: Staff Name
        value:
          type: string
          description: |
            The value of the field, for example: `1`, `blue`.
          minLength: 1
          maxLength: 65535
          example: Ronaldo
        description:
          type: string
          description: |
            Description for the metafields.
          minLength: 0
          maxLength: 255
          example: Name of Staff Member
      required:
        - permission_set
        - namespace
        - key
        - value
    Metafield:
      description: |
        Allows app partners to write custom data to various resources in the API.
      allOf:
        - $ref: '#/components/schemas/MetafieldBase'
        - type: object
          properties:
            id:
              type: integer
              description: |
                The unique identifier for the metafields.
            date_created:
              type: string
              format: date-time
              description: |
                Date and time of the metafield's creation.
              example: '2022-06-16T18:39:00+00:00'
            date_modified:
              type: string
              format: date-time
              description: |
                Date and time when the metafield was last updated.
              example: '2022-06-16T18:39:00+00:00'
      x-internal: false
      x-examples: {}
    MetafieldPost:
      description: |
        The model for a POST to create metafield.
      allOf:
        - $ref: '#/components/schemas/MetafieldBase_Post'
      x-internal: false
      x-examples: {}
    MetafieldPut:
      description: |
        The model for a PUT to update metafield.
      allOf:
        - $ref: '#/components/schemas/MetafieldBase_Post'
      x-internal: false
    GlobalOrderSettings:
      type: object
      properties:
        notifications:
          type: object
          description: Global notification settings.
          properties:
            order_placed:
              description: Global order notification settings.
              type: object
              properties:
                email_addresses:
                  description: Email addresses order notifications will be sent to. Empty array disables order notifications. Not nullable.
                  type: array
                  items:
                    type: string
            forward_invoice:
              description: Global order invoice forward settings.
              type: object
              properties:
                email_addresses:
                  description: Email addresses order invoices will be forwarded to. Empty array disables forwarding order invoices. Not nullable.
                  type: array
                  items:
                    type: string
      example:
        $ref: '#/components/examples/EnableMultipleOrderNotifications/value'
      x-tags:
        - Models
      title: GlobalOrderSettings
      x-examples:
        example-1:
          $ref: '#/components/examples/EnableMultipleOrderNotifications/value'
    ChannelOrderSettings:
      type: object
      properties:
        notifications:
          type: object
          description: Channel notification settings.
          properties:
            order_placed:
              description: Channel order notification settings.
              type: object
              properties:
                email_addresses:
                  description: Email addresses channel order notifications will be sent to. If null will fall back to global value. Empty array disables order notifications for channel.
                  type: array
                  nullable: true
                  items:
                    type: string
            forward_invoice:
              description: Channel order invoice forward settings.
              type: object
              properties:
                email_addresses:
                  description: Email addresses channel order invoices will be forwarded to. If null will fall back to global value. Empty array disables forwarding order invoices for channel.
                  type: array
                  nullable: true
                  items:
                    type: string
      x-tags:
        - Models
      title: ChannelOrderSettings
    ErrorResponse400:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/betaErrorResponse'
      x-tags:
        - Models
    ErrorResponse404:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/betaErrorResponse'
      x-tags:
        - Models
    ErrorResponse422:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/betaErrorResponse'
      x-tags:
        - Models
    betaErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            errors:
              type: object
      x-tags:
        - Models
    BaseError:
      type: object
      description: |
        Error payload for the BigCommerce API.
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
      x-tags:
        - Models
    betaDetailedErrors:
      type: object
      x-tags:
        - Models
  responses:
    Return_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Return_Full'
              meta:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
    ReturnStatus_Resp:
      description: ''
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/UpdateReturnStatuses'
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/Problem'
              meta:
                $ref: '#/components/schemas/BatchOperationMeta'
    OrderReturnableItems_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/GetReturnableItems'
    CreateReturn_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/CreateReturn'
    ReceivedItems_Resp:
      description: ''
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/ReceivedItems_Base'
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/Problem'
              meta:
                $ref: '#/components/schemas/BatchOperationMeta'
    ReviewedItems_Resp:
      description: ''
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/ReviewedItems_Base'
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/Problem'
              meta:
                $ref: '#/components/schemas/BatchOperationMeta'
    StoreReturnSettings_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/GetReturnsSettings'
    502_GatewayError:
      description: 'If something happens during the request that causes it to fail, a 502 response will be returned. A new request should be made; however, it could fail.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Base'
          examples:
            response:
              value:
                status: 502
                title: A login URL could not be generated. Please try another request.
                type: /api-docs/getting-started/api-status-codes
    504_GatewayTimeout:
      description: 'If this occurs, you should retry the request. Typically retrying the request several times will result in a successful request; however, if you cannot successfully make a request, please check the BigCommerce system status [here](https://status.bigcommerce.com/). A service is likely down, and you will need to complete the request again when it is back up (in several hours, usually).'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorDetailed_Full'
          examples:
            response:
              value:
                status: 504
                title: Gateway Timeout
                type: /api-docs/getting-started/api-status-codes
                errors: {}
    403_Unauthorized:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Base'
          examples:
            response:
              value:
                status: 403
                title: Unauthorized Access. You do not have permission to make this request.
                type: /api-docs/getting-started/api-status-codes
    400_BadRequest:
      description: |-
        Malformed request syntax. Typically need to fix the JSON.
        Body to resend successfully.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Base'
          examples:
            response:
              value:
                status: 400
                title: Input is invalid.
                type: /api-docs/getting-started/api-status-codes
    404_NotFound:
      description: The resource was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Base'
          examples:
            response:
              value:
                status: 404
                title: 'Account with {id} not found'
                type: /api-docs/getting-started/api-status-codes
    422_UnprocessableEntity:
      description: This occurs when missing or unacceptable data is passed for one or more fields. Please correct the values for the fields listed in the errors object.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            response:
              value:
                status: 422
                title: JSON data is missing or invalid
                type: /api-docs/getting-started/api-status-codes
                errors:
                  name: error.expected.jsstring
                  primary_contact.district: error.expected.jsstring.
    503_ServiceUnavailable:
      description:  'If this occurs, you should retry the request. If you cannot successfully make a request, please check the BigCommerce system status [here](https://status.bigcommerce.com/). A service is likely down, and you will need to make the request again when it is back up (in several hours, usually).'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Base'
          examples:
            response:
              value:
                status: 503
                title: Service Unavailable
                type: /api-docs/getting-started/api-status-codes
    paymentActionsCapture_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties: {}
    paymentActionsVoid_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties: {}
    201_Acknowledged:
      description: Request acknowledged.
      content:
        application/json:
          schema:
            type: object
            properties: {}
    201_Created:
      description: Resource Created.
      content:
        application/json:
          schema:
            type: object
    RefundCollection_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            description: Response payload for Refund resource.
            properties:
              data:
                type: array
                description: Collection of Refunds
                items:
                  $ref: '#/components/schemas/Refund'
              meta:
                $ref: '#/components/schemas/metaEmpty_Full'
    refundsBATCH_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Refund'
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/FailedQuoteError'
              meta:
                $ref: '#/components/schemas/MetaRefund'
    RefundQuote_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/RefundQuote_Full'
              meta:
                $ref: '#/components/schemas/metaEmpty_Full'
    Refund_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Refund'
              meta:
                $ref: '#/components/schemas/metaEmpty_Full'
    TransactionCollection_Resp:
      description: Response payload for the BigCommerce Order Transactions API.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
              meta:
                $ref: '#/components/schemas/metaCollection_Full'
    Transaction_Resp:
      description: Response payload for the BigCommerce Order Transactions API single transaction.
      content:
        application/json:
          schema:
            allOf:
              - properties:
                  data:
                    $ref: '#/components/schemas/Transaction_Post'
              - properties:
                  id:
                    type: integer
                    description: |
                      Unique identifier for the transaction.
                  order_id:
                    type: string
                    description: Identifier for the BigCommerce Order with which this transaction is associated.
                  date_created:
                    type: string
                    format: date-time
                    description: |
                      The datetime of the transaction.
                  payment_instrument_token:
                    type: string
                    description: This field contains internal BigPay token for stored card that is then mapped to the actual third-party token. We currently do not offer a way to get third party tokens.These tokens are read-only and do not return any information about the payment.
                  avs_result:
                    $ref: '#/components/schemas/AVSResult'
                  cvv_result:
                    $ref: '#/components/schemas/CVVResult'
                  credit_card:
                    $ref: '#/components/schemas/CreditCard'
                  gift_certificate:
                    $ref: '#/components/schemas/GiftCertificate'
                  store_credit:
                    $ref: '#/components/schemas/StoreCredit'
              - properties:
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
            type: object
    RefundQuotesBATCH_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/RefundQuote_Full'
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/FailedQuoteError'
              meta:
                $ref: '#/components/schemas/Meta'
    RefundID_Response:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RefundID_Get'
          examples:
            Example:
              value:
                data:
                  id: 12
                  order_id: 180
                  user_id: 0
                  created: '2022-06-16T16:44:15+00:00'
                  reason: ''
                  total_amount: 50
                  total_tax: 5
                  uses_merchant_override_values: false
                  payments:
                    - id: 13
                      provider_id: storecredit
                      amount: 50
                      offline: true
                      is_declined: false
                      declined_message: ''
                  items:
                    - item_type: PRODUCT
                      item_id: 87
                      quantity: 1
                      requested_amount: null
                      reason: Wrong item sent.
                meta: {}
  parameters:
    OrderIdParam:
      name: order_id
      in: path
      description: |
        The ID of the `Order` to which the transactions belong.
      required: true
      schema:
        type: integer
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
    PageParam:
      name: page
      description: |
        Specifies the page number in a limited (paginated) list of products.
      required: false
      in: query
      schema:
        type: integer
    MetafieldIdParam:
      name: metafield_id
      in: path
      description: |
        The ID of the `Metafield`.
      required: true
      schema:
        type: integer
    MetafieldKeyParam:
      name: key
      in: query
      description: |
        Filter based on a metafield's key.
      required: false
      schema:
        type: string
    MetafieldNamespaceParam:
      name: namespace
      in: query
      description: |
        Filter based on a metafield's key.
      required: false
      schema:
        type: string
    LimitParam:
      name: limit
      description: |
        Controls the number of items per page in a limited (paginated) list of products.
      required: false
      in: query
      schema:
        type: integer
    DirectionParam:
      name: direction
      description: |
        Sort direction. Acceptable values are: `asc`, `desc`.
      required: false
      in: query
      schema:
        type: string
        enum:
          - asc
          - desc
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Order Transactions | read and modify `transactions` and `payment_methods` | `store_v2_transactions` |
        |  Order Transactions | read `transactions` and `payment_methods`  | `store_v2_transactions_read_only` |
        |  Orders | read and modify `payment_methods` |`store_v2_orders`|
        |  Orders | read `payment_methods` |`store_v2_orders_read_only`|

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header
  examples:
    EnableMultipleOrderNotifications:
      summary: Enable order placed and forward invoice notifications
      value:
        notifications:
          order_placed:
            email_addresses:
              - admin@example.com
              - another-email@example.com
          forward_invoice:
            email_addresses:
              - admin@example.com
              - another-email@example.com
    GlobalOrderSettingsDisableOrderPlacedNotificatons:
      summary: Disable order placed notifications at global level
      value:
        notifications:
          order_placed:
            email_addresses: []
    ChannelOrderSettingsOverrideOrderPlacedEmailAddressesAndDisableForwardEmail:
      summary: Override order placed email addresses and forward email addresses global value for channel
      value:
        notifications:
          order_placed:
            email_addresses:
              - admin@example.com
              - another-email@example.com
          forward_invoice:
            email_addresses: []
    ChannelOrderSettingsReset:
      summary: Reset order placed email addresses to global value for channel
      value:
        notifications:
          order_placed:
            email_addresses: null
          forward_invoice:
            email_addresses: null
    ChannelOrderSettingsDisableBothNotifications:
      summary: Disable order placed notifications for channel
      value:
        notifications:
          order_placed:
            email_addresses: []
          forward_invoice:
            email_addresses: []


openapi: 3.0.3
info:
  title: Pages V3
  version: ''
  termsOfService: 'http://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  description: |-
    ## Overview

    A **page** appears on a **site** that is associated with a **channel**. 

    Some pages, such as blog pages, contact forms, and plain-text or HTML pages, are web pages in the traditional sense. They contain markup (a `body`) and load at a relative page location on the site itself (the `url`). Other pages, such as link and feed pages, make external or non-visual content available from the menu of a parent page or by direct link.

    ### Bulk operations
    All endpoints without a `pageId` path parameter support bulk operations.

    ### Page types

    The following table describes the types of pages that the Pages API can manage:

    | Page Type | Description | Body |
    |:----------|:------------|:-----|
    | `page` | A user-defined plain-text page. | text |
    | `contact_form` | A user-customizable page that contains a contact form. | HTML |
    | `raw` | A user-defined page that contains HTML markup or other stringified code. | HTML, other code |
    | `blog` | A page that contains blog posts. Use caution; `blog`-type pages can only be created in the store control panel, but you may be able to change the type of a blog page to something else with this API. Use the [Store Content API](/docs/rest-content/store-content/blog-posts#create-a-blog-post) to work with blog posts and tags. | empty string |
    | `feed` | Makes RSS-syndicated content feeds available in the menu of other pages that contain markup. | &mdash; |
    | `link` | A link to an external absolute URL. Displays in the menu of other pages that contain markup. | &mdash; |
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
tags:
  - name: Pages (Bulk)
  - name: Pages (Single)
security:
  - X-Auth-Token: []
paths:
  '/content/pages':
    get:
      operationId: content-pages-get
      tags:
        - Pages (Bulk)
      description: Returns one or more content pages. This endpoint supports bulk operations.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagesCollectionResponse'
        '400':
          description: 'Bad Request; reasons for failure include passing query parameters that are not supported on this endpoint, but are common on other BigCommerce endpoints.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ResponseErrorDetailed'
        '422':
          description: Invalid input. Reasons for failure include passing supported parameters with values that have the incorrect datatype.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ResponseErrorItemized'
      parameters:
        - $ref: '#/components/parameters/channelIdQuery'
        - $ref: '#/components/parameters/idInQueryGet'
        - $ref: '#/components/parameters/nameQuery'
        - $ref: '#/components/parameters/nameLikeQuery'
        - $ref: '#/components/parameters/limitQuery'
        - $ref: '#/components/parameters/pageQuery'
        - $ref: '#/components/parameters/includeQuery'
      summary: Get Pages
    post:
      operationId: content-pages-post
      tags:
        - Pages (Bulk)
      description: Creates one or more content pages. This endpoint supports bulk operations.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Page'
            examples:
              example-1:
                value:
                  channel_id: 1
                  name: Content Page
                  is_visible: false
                  parent_id: 0
                  sort_order: 0
                  type: page
                  body: <div>Hello World!</div>
                  is_homepage: false
                  meta_title: My Content page
                  meta_keywords: string
                  meta_description: string
                  search_keywords: string
                  url: /my-content-page
        description: ''
        required: true
      responses:
        '201':
          $ref: '#/components/responses/HTTP201CreatePages'
        '207':
          $ref: '#/components/responses/HTTP207Response'
        '422':
          description: |-
            The input was not valid. This is the result of missing required fields or other invalid arguments. See the response for more details.

            When making bulk requests, an invalid input in any one entry will cause the whole request to return 422. The entries that are valid will still be created.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ResponseErrorDetailed'
      parameters:
        - $ref: '#/components/parameters/includeQuery'
        - $ref: '#/components/parameters/ContentType'
      summary: Create Pages
    put:
      operationId: content-pages-put
      tags:
        - Pages (Bulk)
      description: Updates one or more content pages. This endpoint supports bulk operations.
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/PagePutBulk'
                - type: array
                  items:
                    $ref: '#/components/schemas/PagePutBulk'
      responses:
        '200':
          description: |
            Updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagesCollectionResponse'
              examples:
                update meta descriptions for two pages:
                  value:
                    data:
                      - id: 20
                        channel_id: 1
                        name: all about powder detergents
                        meta_title: ''
                        is_visible: false
                        parent_id: 0
                        sort_order: 0
                        meta_keywords: null
                        type: page
                        meta_description: cornpone
                        is_homepage: false
                        is_customers_only: false
                        search_keywords: ''
                      - id: 19
                        channel_id: 1
                        name: sign up to dream big
                        meta_title: ''
                        email: ''
                        is_visible: false
                        parent_id: 0
                        sort_order: 0
                        meta_keywords: null
                        contact_fields: ''
                        type: contact_form
                        meta_description: arugula
                        is_homepage: false
                        is_customers_only: false
                        search_keywords: ''
                    meta: {}
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ResponseErrorBrief'
              examples:
                example-1:
                  value:
                    status: 0
                    title: string
                    type: string
        '422':
          description: The input was not valid. This is the result of missing required fields or other invalid arguments. See the response for more details.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ResponseErrorDetailed'
              examples:
                missing required field for type raw:
                  value:
                    status: 422
                    title: Input is invalid
                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
                    detail: 'missing the required field: body'
      parameters:
        - $ref: '#/components/parameters/includeQuery'
        - $ref: '#/components/parameters/ContentType'
      summary: Update Pages
    delete:
      operationId: content-pages-delete
      tags:
        - Pages (Bulk)
      description: |-
        Deletes one or more content pages. This endpoint supports bulk operations.

        > #### Warning
        > **Pay attention to query parameters**
        > If you attempt to delete multiple pages by passing more than one page ID to `id:in` and one or more of them does not exist, you will receive a 404 response. However, the pages corresponding to the page IDs that do exist will still be deleted.
      responses:
        '204':
          $ref: '#/components/responses/HTTP204'
        '404':
          description: Not Found. One of more of the pages specified for deletion did not exist. Specified pages that did exist were successfully deleted.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ResponseErrorBrief'
              examples:
                Page not found:
                  value:
                    status: 404
                    title: A Page was not found with an ID of 100
                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
        '422':
          description: Invalid input. See response for details.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ResponseErrorDetailed'
              examples:
                Missing ID:
                  value:
                    status: 422
                    title: Input is invalid
                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
                    detail: 'missing the required field: id'
      parameters:
        - $ref: '#/components/parameters/idInQueryDelete'
      summary: Delete Pages
    parameters:
      - $ref: '#/components/parameters/Accept'
  '/content/pages/{pageId}':
    get:
      operationId: content-page-get
      tags:
        - Pages (Single)
      description: |-
        Returns one content page.

        > #### Warning
        > **Pay attention to query parameters**
        > This endpoint recognizes the same query parameters as [Get Multiple Pages](/docs/rest-content/pages#get-pages). If the requested page does not meet the query parameters you specify, you will receive a 404 response even if the requested `pageId` does exist.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse'
              examples:
                several data types:
                  value:
                    data:
                      - id: 3
                        channel_id: 1
                        name: Blog
                        meta_title: Blog
                        is_visible: false
                        parent_id: 0
                        sort_order: 4
                        meta_keywords: ''
                        type: blog
                        meta_description: ''
                        is_homepage: false
                        is_customers_only: false
                        search_keywords: '0'
                        url: /blog/
                      - id: 5
                        channel_id: 1
                        name: Contact Us
                        meta_title: ''
                        email: ''
                        is_visible: true
                        parent_id: 0
                        sort_order: 3
                        meta_keywords: contact keyword
                        contact_fields: 'fullname,companyname,phone,orderno,rma'
                        type: contact_form
                        meta_description: contact meta desc
                        is_homepage: false
                        is_customers_only: true
                        search_keywords: contact search keyword
                      - id: 16
                        channel_id: 1
                        name: all about powder detergents 2
                        meta_title: ''
                        is_visible: false
                        parent_id: 0
                        sort_order: 0
                        meta_keywords: null
                        type: page
                        meta_description: ''
                        is_homepage: false
                        is_customers_only: false
                        search_keywords: ''
                      - id: 17
                        channel_id: 1
                        name: one hundred million red balloons 3
                        is_visible: false
                        parent_id: 0
                        sort_order: 0
                        type: raw
                        is_homepage: false
                        is_customers_only: false
                        search_keywords: ''
                        content_type: text/html
                      - id: 18
                        channel_id: 1
                        name: diaper pin purveyors 3
                        is_visible: false
                        parent_id: 0
                        sort_order: 0
                        link: 'https://example.com/diaper-pins'
                        type: link
                        is_homepage: false
                        is_customers_only: false
                      - id: 19
                        channel_id: 1
                        name: sign up to crush dreams 3
                        meta_title: ''
                        email: ''
                        is_visible: false
                        parent_id: 0
                        sort_order: 0
                        meta_keywords: null
                        contact_fields: ''
                        type: contact_form
                        meta_description: ''
                        is_homepage: false
                        is_customers_only: false
                        search_keywords: ''
                      - id: 20
                        channel_id: 1
                        name: all about powder detergents 3
                        meta_title: ''
                        is_visible: false
                        parent_id: 0
                        sort_order: 0
                        meta_keywords: null
                        type: page
                        meta_description: ''
                        is_homepage: false
                        is_customers_only: false
                        search_keywords: ''
                      - id: 21
                        channel_id: 1
                        name: feed monsters 3
                        meta_title: ''
                        is_visible: false
                        parent_id: 0
                        sort_order: 0
                        meta_keywords: null
                        feed: /rss/monsters
                        type: feed
                        meta_description: ''
                        is_homepage: false
                        is_customers_only: false
                        search_keywords: ''
                      - id: 22
                        channel_id: 1
                        name: one hundred million red balloons 4
                        is_visible: false
                        parent_id: 0
                        sort_order: 0
                        type: raw
                        is_homepage: false
                        is_customers_only: false
                        search_keywords: ''
                        content_type: text/html
                      - id: 23
                        channel_id: 1
                        name: diaper pin purveyors 4
                        is_visible: false
                        parent_id: 0
                        sort_order: 0
                        link: 'https://example.com/diaper-pins'
                        type: link
                        is_homepage: false
                        is_customers_only: false
                    meta:
                      pagination:
                        total: 6
                        count: 6
                        per_page: 50
                        current_page: 1
                        total_pages: 1
                        links:
                          current: '?page=1&limit=50'
        '404':
          description: Not Found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ResponseErrorBrief'
              examples:
                pageId does not exist:
                  value:
                    status: 404
                    title: A Page was not found with an ID of 99
                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
        '422':
          description: Invalid input. One or more path parameter(s) did not have the correct datatype.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ResponseErrorItemized'
              examples:
                pageId is bar:
                  value:
                    status: 422
                    title: Invalid Input.
                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
                    errors:
                      - bar
      parameters:
        - $ref: '#/components/parameters/includeQuery'
      summary: Get a Page
    put:
      operationId: content-page-put
      tags:
        - Pages (Single)
      description: Updates one content page.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PagePut'
        description: ''
        required: true
      responses:
        '200':
          description: |+

          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse'
        '400':
          description: Bad Request; reasons for failure include invalid query parameters. See the response for more details.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ResponseErrorDetailed'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ResponseErrorBrief'
              examples:
                not found:
                  value:
                    status: 404
                    title: A Page was not found with an ID of 99
                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
        '422':
          description: The input was not valid. This error is the result of missing required fields or other invalid arguments. See the response for more details.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ResponseErrorDetailed'
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/includeQuery'
      summary: Update a Page
    delete:
      operationId: content-page-delete
      tags:
        - Pages (Single)
      description: |-
        Deletes one content page.

        > #### Warning
        > **Query parameters not recognized**
        > This endpoint does not recognize query parameters.
      responses:
        '204':
          $ref: '#/components/responses/HTTP204'
        '404':
          description: The page specified for deletion did not exist.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ResponseErrorBrief'
              examples:
                example-1:
                  value:
                    status: 404
                    title: A Page was not found with an ID of 99
                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
      parameters: []
      summary: Delete a Page
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/pageIdPath'
components:
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      schema:
        type: string
        default: application/json
    ContentType:
      name: Content-Type
      in: header
      required: true
      schema:
        type: string
        default: application/json
    storeHashPath:
      schema:
        type: string
      name: store_hash
      in: path
      required: true
      description: The permanent ID of the BigCommerce store.
    pageIdPath:
      schema:
        type: string
      name: pageId
      in: path
      required: true
      description: The ID of the page to be operated on.
    includeQuery:
      schema:
        type: string
        enum:
          - body
      in: query
      name: include
      description: 'Include the requested property in the response. The `body` property returns the page’s markup, text, or raw content.'
    channelIdQuery:
      schema:
        type: integer
      in: query
      name: channel_id
      description: Return only pages associated with the specified channel.
    idInQueryGet:
      schema:
        type: string
      in: query
      name: 'id:in'
      description: 'A comma-separated string of page IDs to fetch. Supports bulk operations. If none of the page IDs passed exist, the query will return an empty `data` array.'
    idInQueryDelete:
      schema:
        type: string
      in: query
      name: 'id:in'
      description: 'Request deletion of multiple pages by passing a comma-separated string of corresponding page IDs. Supports bulk operations. '
      required: true
    nameQuery:
      schema:
        type: string
      in: query
      name: name
      description: Name of the page.
    nameLikeQuery:
      schema:
        type: string
      in: query
      name: 'name:like'
      description: Return only pages whose `name` or `body` contain the supplied string.
    limitQuery:
      schema:
        type: integer
      in: query
      name: limit
      description: The number of results to return per request. See `meta.pagination.per_page` in the response body.
    pageQuery:
      schema:
        type: integer
      in: query
      name: page
      description: The ordered grouping of results to return. See `meta.pagination.current_page` in the response body.
  headers:
    Content-Type:
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: application/json
    Accept:
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: application/json
    X-Auth-Token:
      description: Your API account's access token.
      schema:
        type: string
  securitySchemes:
    X-Auth-Token:
      type: apiKey
      name: X-Auth-Token
      in: header
      description: |-
        ## API account

        You can use this API with a [store API account or an app API account](https://developer.bigcommerce.com/api-docs/getting-started/rest-api-authentication). 

        ## OAuth scopes 

        | UI Name | Permission | Parameter | 
        |:--------|:-----------|:----------| 
        | Content | modify     |`store_v2_content`| 
        | Content | read-only  |`store_v2_content_read_only`| 

        For a [full list of OAuth scopes](https://developer.bigcommerce.com/api-docs/getting-started/rest-api-authentication#oauth-scopes), see our narrative documentation.

        ## Security header        

        Include a header parameter called `X-Auth-Token` and pass it the `access_token` provided with your store API account or generated with your app's `/auth` callback.

        ```http title="Security header example"
          X-Auth-Token: example_access_token
        ```

        ## Example requests

        For detailed examples, consult our [X-Auth-Token example requests](https://developer.bigcommerce.com/api-docs/getting-started/authentication#x-auth-token-header-example-requests).

        ## Additional information

        [BigCommerce Terms of Service](http://www.bigcommerce.com/terms)
  schemas:
    ResponseErrorBrief:
      type: object
      description: |
        Error payload for the BigCommerce API.
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
      required:
        - status
    ResponseErrorDetailed:
      type: object
      description: |
        Error payload for the BigCommerce API.
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
        detail:
          type: string
      required:
        - status
    ResponseErrorItemized:
      type: object
      description: |
        Error payload for the BigCommerce API.
      title: ResponseErrorItemized
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
        errors:
          type: array
          items:
            type: string
      required:
        - status
    ResponseMeta:
      type: object
      description: |
        Data about the response, including pagination and collection totals.
      properties:
        pagination:
          type: object
          description: |
            Data about the response, including pagination and collection totals.
          properties:
            total:
              type: integer
              description: |
                Total number of items in the result set.
            count:
              type: integer
              description: |
                Total number of items in the collection response.
            per_page:
              type: integer
              description: |
                The amount of items returned in the collection per page, controlled by the limit parameter.
            current_page:
              type: integer
              description: |
                The page you are currently on within the collection.
            total_pages:
              type: integer
              description: |
                The total number of pages in the collection.
            links:
              type: object
              description: |
                Pagination links for the previous and next parts of the whole collection.
              properties:
                previous:
                  type: string
                  description: |
                    Link to the previous page returned in the response.
                current:
                  type: string
                  description: |
                    Link to the current page returned in the response.
                next:
                  type: string
                  description: |
                    Link to the next page returned in the response.
    PagesCollectionResponse:
      description: |
        Response payload for the BigCommerce API.
      type: object
      title: ''
      properties:
        data:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/typePage'
              - $ref: '#/components/schemas/typeBlog'
              - $ref: '#/components/schemas/typeContactForm'
              - $ref: '#/components/schemas/typeFeed'
              - $ref: '#/components/schemas/typeRaw'
              - $ref: '#/components/schemas/typeLink'
        meta:
          $ref: '#/components/schemas/ResponseMeta'
    PageResponse:
      description: |
        Response payload for the BigCommerce API.
      x-examples: {}
      allOf:
        - properties:
            data:
              type: object
              items:
                $ref: '#/components/schemas/Page'
            meta:
              $ref: '#/components/schemas/ResponseMeta'
      title: PageResponseObject
      type: object
    ContactFields:
      allOf:
        - properties:
            fullname:
              type: string
              description: Full name of the customer who is submitting the form.
            phone:
              type: string
              description: 'Customer’s phone number, as submitted on the form.'
            companyname:
              type: string
              description: Customer’s submitted company name.
            orderno:
              type: string
              description: Customer’s submitted order number.
            rma:
              type: string
              description: Customer’s submitted RMA (Return Merchandise Authorization) number.
      type: object
    PagePutBulk:
      type: object
      description: Properties of the page modification request body.
      properties:
        name:
          type: string
          description: |
            The name of the page. Must be unique.
          minLength: 1
          maxLength: 100
          example: My Store Page
        is_visible:
          type: boolean
          description: |
            Boolean value that specifies the visibility of the page in the storefront’s navigation menu.
                      
                      
            Indicates whether the page is available to users and visible in any menus.
        parent_id:
          type: integer
          description: |
            ID of any parent Web page.
          example: 0
          default: 0
        sort_order:
          type: integer
          description: |
            Specifies the order in which the page is displayed on the storefront. (Lower integers specify earlier display.)
          example: 0
          default: 0
        type:
          type: string
          description: |-
            Specifies the type of the page. The following values are possible;

            |Value|Description|
            |-|-|
            | `blog` | blog page. Read-only; blog pages can only be created in the store control panel. |
            |`contact_form`|hosts the store's contact form|
            |`link`|link to another absolute URL|
            |`page`|user-defined plain-text page|
            |`raw`|page that contains markup, such as HTML.|
            |`rss_feed`|contains syndicated content from an RSS feed|
          example: page
          enum:
            - page
            - raw
            - contact_form
            - feed
            - link
            - blog
        is_homepage:
          type: boolean
          description: |
            Boolean value that specifies whether this page is the storefront’s home page.
        is_customers_only:
          type: boolean
          description: |
            Boolean value. If this value is set to `true`, this page will not be visible when the user is logged in to the store control panel.
        id:
          type: integer
          description: The ID of the target page.
        email:
          type: string
          description: 'Applicable when the page type is `contact_form`: contact email address that receives messages sent via the form. Must be unique.'
          maxLength: 255
        meta_title:
          type: string
          nullable: true
        body:
          type: string
          description: |
            HTML or variable that populates the element of this page, in default/desktop view. Required in a `POST` request if the page type is `raw`.
          example: <div>Hello World!</div>
          nullable: true
        feed:
          type: string
          description: |
            The URL of the RSS feed. Required in a `POST` request if the page type is `rss_feed`.
        link:
          type: string
          description: |
            Required in a `POST` request to create a link if the page type is `link`.
        contact_fields:
          type: string
          description: |
            Applicable when the page type is `contact_form`: comma-separated list of keywords representing the fields enabled in the control panel for storefront display. Possible fields include:

            |Field|Description|
            |-|-|
            |`fullname`|Full name of the customer submitting the form|
            |`phone`|Customer’s phone number, as submitted on the form|
            |`companyname`|Customer’s submitted company name|
            |`orderno`|Customer’s submitted order number|
            |`rma`|Customer’s submitted RMA (Return Merchandise Authorization) number|
          example: 'fullname,companyname,phone,orderno,rma'
        meta_keywords:
          description: |
            Comma-separated list of SEO-relevant keywords to include in the element of this page.
          default: ''
          type: string
          nullable: true
        meta_description:
          type: string
          description: |
            Description contained within the element of this page.
          nullable: true
        search_keywords:
          type: string
          description: |
            Comma-separated list of keywords that shoppers can use to locate this page when searching the store.
          example: 'trousers,pockets,luxury'
          nullable: true
        url:
          type: string
          description: |
            Relative URL on the storefront for this page.
          example: /my-store-page
        channel_id:
          type: integer
          description: |
            The ID of the channel where this page should be shown.
          example: 12
          default: 0
      required:
        - id
    PagePut:
      type: object
      description: Properties of the page modification request body.
      properties:
        name:
          type: string
          description: |
            The name of the page. Must be unique.
          minLength: 1
          maxLength: 100
          example: My Store Page
        is_visible:
          type: boolean
          description: |
            Boolean value that specifies the visibility of the page in the storefront’s navigation menu.
        parent_id:
          type: integer
          description: |
            ID of any parent Web page.
          example: 0
          default: 0
        sort_order:
          type: integer
          description: |
            Specifies the order in which the page is displayed on the storefront. (Lower integers specify earlier display.)
          example: 0
          default: 0
        type:
          type: string
          description: |-
            Specifies the type of the page.

            |Value|Description|
            |-|-|
            | `blog` | blog page. Read-only; blog pages can only be created in the store control panel. |
            |`contact_form`|hosts the store's contact form|
            |`link`|link to another absolute URL|
            |`page`|user-defined plain-text page|
            |`raw`|page that contains markup, such as HTML.|
            |`rss_feed`|contains syndicated content from an RSS feed|
          example: page
          enum:
            - page
            - raw
            - contact_form
            - feed
            - link
            - blog
        is_homepage:
          type: boolean
          description: |
            Boolean value that specifies whether this page is the storefront’s home page.
        is_customers_only:
          type: boolean
          description: |
            Boolean value. If this value is set to `true`, this page will not be visible when the user is logged in to the store control panel.
        email:
          type: string
          description: 'Applicable when the page type is `contact_form`: contact email address that receives messages sent via the form. Must be unique.'
          maxLength: 255
        meta_title:
          type: string
          nullable: true
        body:
          type: string
          description: |
            HTML or variable that populates the elment of this page, in default/desktop view. Required in a `POST` request if the page type is `raw`.
          example: <div>Hello World!</div>
          nullable: true
        feed:
          type: string
          description: |
            The URL of the RSS feed. Required in a `POST` request if the page type is `rss_feed`.
        link:
          type: string
          description: |
            Required in a `POST` request to create a link if the page type is `link`.
        contact_fields:
          type: string
          description: |
            Applicable when the page type is `contact_form`: comma-separated list of keywords representing the fields enabled in the control panel for storefront display. Possible fields include:

            |Field|Description|
            |-|-|
            |`fullname`|Full name of the customer submitting the form|
            |`phone`|Customer’s phone number, as submitted on the form|
            |`companyname`|Customer’s submitted company name|
            |`orderno`|Customer’s submitted order number|
            |`rma`|Customer’s submitted RMA (Return Merchandise Authorization) number|
          example: 'fullname,companyname,phone,orderno,rma'
        meta_keywords:
          default: ''
          type: string
          description: |
            Comma-separated list of SEO-relevant keywords to include in the element of this page.
          nullable: true
        meta_description:
          type: string
          description: |
            Description contained within the element of this page.
          nullable: true
        search_keywords:
          type: string
          description: |
            Comma-separated list of keywords that shoppers can use to locate this page when searching the store.
          example: 'trousers,pockets,luxury'
          nullable: true
        url:
          type: string
          description: |
            Relative URL on the storefront for this page.
          example: /my-store-page
        channel_id:
          type: integer
          description: |
            The ID of the channel where this page should be shown.
          example: 12
          default: 0
      required:
        - id
    Page:
      allOf:
        - type: object
          properties:
            email:
              type: string
              description: 'Applicable when the page type is `contact_form`: contact email address that receives messages sent via the form. Must be unique.'
              maxLength: 255
              default: ''
            meta_title:
              type: string
              nullable: true
            body:
              type: string
              description: |
                HTML or variable that populates this page’s element, in default/desktop view. Required in a `POST` request if the page type is `raw`.
              example: <div>Hello World!</div>
              nullable: true
            feed:
              type: string
              description: |
                The URL of the RSS feed. Required in a `POST` request if the page type is `rss_feed`.
            link:
              type: string
              description: |
                Required in a `POST` request to create a link if the page type is `link`.
            contact_fields:
              type: string
              description: |
                Applicable when the page type is `contact_form`: comma-separated list of keywords representing the fields enabled in the control panel for storefront display. Possible fields include:

                |Field|Description|
                |-|-|
                |`fullname`|Full name of the customer submitting the form|
                |`phone`|Customer’s phone number, as submitted on the form|
                |`companyname`|Customer’s submitted company name|
                |`orderno`|Customer’s submitted order number|
                |`rma`|Customer’s submitted RMA (Return Merchandise Authorization) number|
              example: 'fullname,orderno,rma'
              default: ''
            meta_keywords:
              description: |
                Comma-separated list of SEO-relevant keywords to include in the page’s element.
              default: ''
              type: string
              nullable: true
            meta_description:
              type: string
              description: |
                Description contained within this page’s element.
              nullable: true
            search_keywords:
              type: string
              description: |
                Comma-separated list of keywords that shoppers can use to locate this page when searching the store.
              example: 'trousers,pockets,luxury'
              nullable: true
            url:
              type: string
              description: |
                Relative URL on the storefront for this page.
              example: /my-store-page
            channel_id:
              type: integer
              description: |
                The Id of the channel where this page should be shown.
              example: 12
              default: 1
        - $ref: '#/components/schemas/PageBase'
      title: ''
      description: ''
    PageBase:
      type: object
      description: Common Page properties.
      properties:
        name:
          type: string
          description: |
            The name of the page. Must be unique.
          minLength: 1
          maxLength: 100
          example: My Store Page
        is_visible:
          type: boolean
          description: |
            Determines the visibility of the page in the storefront’s navigation menu.

            Boolean value that specifies the visibility of the page in the storefront’s navigation menu.
                      
            Indicates whether the page is available to users and visible in any menus.
        parent_id:
          type: integer
          description: |
            ID of any parent Web page.
          example: 0
          default: 0
        sort_order:
          type: integer
          description: |
            Determines the order in which the page is displayed on the storefront. (Lower integers specify earlier display.)
          example: 0
          default: 0
        type:
          type: string
          description: |-
            Determines the type of the page.

            |Value|Description|
            |-|-|
            | `blog` | blog page. Read-only; blog pages can only be created in the store control panel. |
            |`contact_form`|hosts the store's contact form|
            |`link`|link to another absolute URL|
            |`page`|user-defined plain-text page|
            |`raw`|page that contains markup, such as HTML.|
            |`rss_feed`|contains syndicated content from an RSS feed|
          example: page
          enum:
            - page
            - raw
            - contact_form
            - feed
            - link
            - blog
        is_homepage:
          type: boolean
          description: |
            Determines whether this page is the storefront’s home page.
        is_customers_only:
          type: boolean
          description: |
            If `true`, this page will only be visible to customers that are logged in to the store.
      required:
        - name
        - type
    anyTypePage:
      type: object
      description: |
        Properties of all Pages V3 pages.
      properties:
        id:
          type: integer
          nullable: false
          readOnly: true
        channel_id:
          type: integer
          readOnly: true
        name:
          type: string
          description: The name of the page. Must be unique.
          minLength: 1
          maxLength: 100
          uniqueItems: true
          example: About Our Company
          nullable: false
          readOnly: false
        is_visible:
          type: boolean
          example: true
          default: true
          description: A boolean value that controls whether the page is available to users or visible in any navigation menus.
        parent_id:
          type: integer
          description: 'ID of the parent page, if any.'
          example: 0
          default: 0
        sort_order:
          type: integer
          description: Determines the order in which the page is displayed in the parent page’s menu. Pages with lower integers display earlier.
          example: 0
        type:
          type: string
          description: 'Determines the type of page. See [Pages v3 page types](/docs/rest-content/pages#page-types) for more about the differences.'
          nullable: false
          example: page
          enum:
            - page
            - raw
            - contact_form
            - feed
            - link
            - blog
        is_homepage:
          type: boolean
          description: 'Determines whether this page loads at the siteʼs root route. For example, at `https://example.com/`.'
          default: false
        is_customers_only:
          type: boolean
          description: 'When `true`, this page is not visible to merchant users who are signed in to the store control panel.'
          default: false
        url:
          type: string
          description: |
            Relative URL on the storefront for this page.
          example: /my-store-page
      required:
        - name
        - type
    typePage:
      description: |
        Schema for a Pages V3 page with `type: page`
      allOf:
        - $ref: '#/components/schemas/anyTypePage'
        - $ref: '#/components/schemas/pageMeta'
        - $ref: '#/components/schemas/searchKeywords'
    typeBlog:
      description: ''
      allOf:
        - $ref: '#/components/schemas/anyTypePage'
        - $ref: '#/components/schemas/pageMeta'
        - $ref: '#/components/schemas/searchKeywords'
        - properties:
            url:
              type: string
              description: |
                Relative URL on the storefront for this page.
              example: /blog/
    typeContactForm:
      description: ''
      allOf:
        - $ref: '#/components/schemas/anyTypePage'
        - $ref: '#/components/schemas/pageMeta'
        - $ref: '#/components/schemas/searchKeywords'
        - properties:
            email:
              type: string
              description: 'Applicable when the page type is `contact_form`: contact email address that receives messages sent via the form. Must be unique.'
              maxLength: 255
            contact_fields:
              type: string
              description: |
                A comma-separated list of the contact field forms that are enabled in the store control panel for display on the subject storefront. Possible fields include:

                | Field | Description |
                |:------|:------------|
                | `fullname` | The full name of the customer submitting the form. |
                | `phone` | The customer’s phone number. |
                | `companyname` | The customer’s company name. |
                | `orderno` | A field that lets customers specify a subject order number. |
                | `rma` | A customer’s submitted RMA (Return Merchandise Authorization) number. |
              example: 'fullname,companyname,phone,orderno,rma'
    typeFeed:
      description: ''
      allOf:
        - $ref: '#/components/schemas/anyTypePage'
        - $ref: '#/components/schemas/pageMeta'
        - $ref: '#/components/schemas/searchKeywords'
        - properties:
            feed:
              type: string
              description: |
                The URL of the RSS feed. Required in a `POST` request if the page type is `rss_feed`.
          required:
            - feed
    typeRaw:
      description: ''
      allOf:
        - $ref: '#/components/schemas/anyTypePage'
        - $ref: '#/components/schemas/searchKeywords'
        - properties:
            body:
              type: string
              description: |
                HTML or variable that populates the element of this page, in default/desktop view. Required in a `POST` request if the page type is `raw`.
              example: <div>Hello World!</div>
              nullable: true
            content_type:
              type: string
              description: The MIME type of the page body.
              example: text/html
          required:
            - body
    typeLink:
      description: ''
      allOf:
        - $ref: '#/components/schemas/anyTypePage'
        - properties:
            link:
              type: string
              description: The link for the page type `link`.
          required:
            - link
    pageMeta:
      type: object
      properties:
        meta_title:
          type: string
          nullable: true
        meta_keywords:
          description: |
            Comma-separated list of SEO-relevant keywords to include in the element of this page.
          default: '""'
          type: string
          nullable: true
        meta_description:
          type: string
          default: '""'
          description: |
            Description contained within the element of this page.
          nullable: true
    searchKeywords:
      type: object
      properties:
        search_keywords:
          type: string
          description: |
            Comma-separated list of keywords that shoppers can use to locate this page when searching the store.
          example: 'trousers,pockets,luxury'
          nullable: true
          default: '""'
          readOnly: false
    ReadShared:
      type: object
      properties:
        name:
          type: string
          description: The name of the page. Must be unique.
          minLength: 1
          maxLength: 100
          uniqueItems: true
          example: About Our Company
        is_visible:
          type: boolean
          description: Indicates whether the page is available to users and visible in any menus.
        parent_id:
          type: integer
          description: 'ID of the parent page, if any.'
          example: 0
          default: 0
        sort_order:
          type: integer
          description: Determines the order in which the page is displayed in the parent page’s menu. Pages with lower integers display earlier.
          example: 0
          default: 0
        type:
          type: string
          description: 'Determines the type of page. See [Pages v3 page types](/docs/rest-content/pages#page-types) for more about the differences.'
          example: page
          enum:
            - page
            - contact_form
            - raw
            - blog
            - feed
            - link
        is_homepage:
          type: boolean
          description: 'Determines whether this page loads at the siteʼs root route. For example, at `https://example.com/`.'
          default: false
        is_customers_only:
          type: boolean
          description: 'When `true`, this page is not visible to merchant users who are signed in to the store control panel.'
          default: false
      required:
        - name
        - type
  responses:
    HTTP207Response:
      description: 'Multiple operations have occurred and the status for each operation can be viewed in the body of the response. Typically indicates that a partial failure has occurred, such as when a `POST` or `PUT` request is successful, but saving the URL has failed.'
      content:
        application/json:
          schema: {}
    HTTP201CreatePages:
      description: |-
        Created.

        Response.data will inherit the datatype of the request. A single entry passed as an object will return an object for the data property. Any number of entries passed in an array will return an array for the data property.

        Properties associated with a page `type` that are not required to create an entry will be created with default values. 

        When you make bulk requests, an invalid input in any one entry will return 422. The entries that are valid will still be created.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                anyOf:
                  - $ref: '#/components/schemas/typePage'
                  - $ref: '#/components/schemas/typeBlog'
                  - $ref: '#/components/schemas/typeContactForm'
                  - $ref: '#/components/schemas/typeFeed'
                  - $ref: '#/components/schemas/typeRaw'
                  - $ref: '#/components/schemas/typeLink'
              meta:
                $ref: '#/components/schemas/ResponseMeta'
    HTTP204:
      description: No content. A 204 response with no payload indicates successful deletion of all specified pages.
    HTTP400:
      description: ''
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ResponseErrorBrief'
    HTTP404:
      description: ''
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ResponseErrorDetailed'
    HTTP422:
      description: ''
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ResponseErrorDetailed'

openapi: '3.0.0'
info:
  version: ''
  title: Accepted Payment Methods
  description: |
    > The Payments API processes payments using payment instruments such as credit cards or PayPal accounts. To learn more about Payments, see the [Payments Overview](/api-docs/store-management/payments-api-overview).

    The [Get accepted payment methods](/docs/rest-payments/methods#get-accepted-payment-methods) endpoint returns information about the payment methods each configured payment gateway accepts. This information optimizes your implementation's likelihood of making successful payments requests 
    that return errors solely when payment methods fail, without making API calls to the gateway prior to running the payment.

    For a list of compatible payment gateways, as well as a guide through the API call sequence needed to make charges, see the [Payments Overview](/api-docs/store-management/payments-api-overview#compatible-payment-gateways).

    This endpoint uses the X-Auth-Token header to authenticate. For an X-Auth-Token example request, see the related section in our [Authentication article](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).

    > To learn more about authenticating Payments endpoints, locate the **Authentication** section at the top of each endpoint, then click **Show Details**. 
    
    ## Resources

    * [Payments Overview](/api-docs/store-management/payments-api-overview)
    * [Process payments authentication example request](/api-docs/getting-started/authentication#bigcommerce-generated-jwts)
    * [Orders Overview](/api-docs/store-management/orders-api-overview)
    
    ### Webhooks
    
    * [Carts](https://developer.bigcommerce.com/api-docs/channels/guide/webhooks#carts)
    * [Orders](https://developer.bigcommerce.com/api-docs/store-management/webhooks/webhook-events#orders)
    * [Price list assignment](https://developer.bigcommerce.com/api-docs/channels/guide/webhooks#price-list-assignments)

    ### Additional Payments endpoints
    
    * [Create a Payment Access Token](/docs/rest-payments/tokens#create-payment-access-token)
    * [Process payments](/docs/rest-payments/processing#process-payment)
    * [Get a customer's stored instruments](/docs/rest-management/customers/customer-stored-instruments#get-stored-instruments)
  
  
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
tags:
  - name: Methods 
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
paths:
  '/payments/methods':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      description: |-
        Returns a list of accepted payment methods based on the `order_id` or `checkout_id`.

        **Notes**
        * Use the [Create an Order](/docs/rest-management/orders#create-an-order) endpoint to generate the `order_id`.
        * Orders created will be set to incomplete order status.
        * The cart ID and checkout ID are the same.

        **Required Fields**
        * `order_id` or `checkout_id`
      summary: Get Accepted Payment Methods
      tags:
        - Methods 
      operationId: PaymentsMethodsGet
      deprecated: false
      parameters:
        - name: order_id
          in: query
          description: Identifier for the order
          schema:
            type: integer
            format: int32
            exclusiveMinimum: false
            exclusiveMaximum: false
        - name: checkout_id
          in: query
          description: Identifier for the checkout (same as the cart ID)
          schema:
            type: string
            exclusiveMinimum: false
            exclusiveMaximum: false
      responses:
        '200':
          $ref: '#/components/responses/paymentsMethods_Resp'
        '400':
          description: Request has been rejected
          content:
            application/json:
              schema:
                title: ErrorResponse
                type: object
                properties:
                  status:
                    description: HTTP status code
                    type: integer
                    format: int32
                  title:
                    description: Short summary describing the particular error
                    type: string
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                  code:
                    description: Code representing the particular error
                    type: integer
                    format: int32
                  errors:
                    type: object
                    additionalProperties:
                      type: string
                required:
                  - status
                  - title
                  - type
        '401':
          description: Valid authentication required
          content:
            application/json:
              schema:
                title: ErrorResponse
                type: object
                properties:
                  status:
                    description: HTTP status code
                    type: integer
                    format: int32
                  title:
                    description: Short summary describing the particular error
                    type: string
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                  code:
                    description: Code representing the particular error
                    type: integer
                    format: int32
                  errors:
                    type: object
                    additionalProperties:
                      type: string
                required:
                  - status
                  - title
                  - type
        '404':
          description: Request has been rejected due to resource not being found
          content:
            application/json:
              schema:
                title: ErrorResponse
                type: object
                properties:
                  status:
                    description: HTTP status code
                    type: integer
                    format: int32
                  title:
                    description: Short summary describing the particular error
                    type: string
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                  code:
                    description: Code representing the particular error
                    type: integer
                    format: int32
                  errors:
                    type: object
                    additionalProperties:
                      type: string
                required:
                  - status
                  - title
                  - type
        '422':
          description: Request has been rejected due to missing or invalid data
          content:
            application/json:
              schema:
                title: ErrorResponse
                type: object
                properties:
                  status:
                    description: HTTP status code
                    type: integer
                    format: int32
                  title:
                    description: Short summary describing the particular error
                    type: string
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                  code:
                    description: Code representing the particular error
                    type: integer
                    format: int32
                  errors:
                    type: object
                    additionalProperties:
                      type: string
                required:
                  - status
                  - title
                  - type
        default:
          description: Internal server error
          content:
            application/json:
              schema:
                title: ErrorResponse
                type: object
                properties:
                  status:
                    description: HTTP status code
                    type: integer
                    format: int32
                  title:
                    description: Short summary describing the particular error
                    type: string
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                  code:
                    description: Code representing the particular error
                    type: integer
                    format: int32
                  errors:
                    type: object
                    additionalProperties:
                      type: string
                required:
                  - status
                  - title
                  - type
components:
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
  schemas:
    paymentMethodStoredInstrument:
      title: paymentMethodStoredInstrument
      type: object
      properties:
        brand:
          description: Brand of this card such as VISA or Mastercard
          type: string
          minLength: 1
        expiry_month:
          description: Expiry month of this card
          type: integer
          minimum: 1
          maximum: 12
          format: int32
        expiry_year:
          description: Expiry year of this card
          type: integer
          format: int32
        issuer_identification_number:
          description: Issuer identification number of this card. This is extracted from the card when the order is paid for.
          type: string
          minLength: 6
          maxLength: 6
        last_4:
          description: Last four numbers of this card
          type: string
          minLength: 4
          maxLength: 4
        token:
          description: A BigCommerce-generated identifier that represents the stored card.
          type: string
          minLength: 64
          maxLength: 64
        is_default:
          description: Whether this instrument is a default instrument
          example: false
          type: boolean
          default: false
        type:
          description: Type to classify this stored card
          example: stored_card
          type: string
          default: stored_card
      required:
        - brand
        - expiry_month
        - expiry_year
        - issuer_identification_number
        - last_4
        - token
        - is_default
        - type
      x-examples:
        example-1:
          brand: string
          expiry_month: 1
          expiry_year: 0
          issuer_identification_number: string
          last_4: stri
          token: stringstringstringstringstringstringstringstringstringstringstri
          is_default: false
          type: stored_card
      x-internal: false
    paymentMethod_Full:
      title: paymentMethod_Full
      type: object
      properties:
        id:
          description: Identifier for this payment method
          type: string
          minLength: 1
        name:
          description: Name of this payment method
          type: string
          minLength: 1
        stored_instruments:
          type: array
          items:
            $ref: '#/components/schemas/paymentMethodStoredInstrument'
        supported_instruments:
          type: array
          items:
            title: Supported Card Instrument
            type: object
            properties:
              instrument_type:
                title: InstrumentType
                description: Type of this instrument
                example: VISA
                type: string
                enum:
                  - VISA
                  - MASTERCARD
                  - DISCOVER
                  - AMEX
                  - DINERS_CLUB
                  - JCB
                  - DANKORT
                  - MAESTRO
                  - STORED_CARD
              verification_value_required:
                description: Whether verification value is required for payment
                type: boolean
            required:
              - instrument_type
        test_mode:
          description: Whether this payment method is on test mode
          example: false
          type: boolean
          default: false
        type:
          description: Type to classify this payment method
          example: card
          type: string
          default: card
      required:
        - id
        - name
        - supported_instruments
        - test_mode
        - type
      x-examples:
        example-1:
          id: string
          name: string
          stored_instruments:
            - brand: string
              expiry_month: 1
              expiry_year: 0
              issuer_identification_number: string
              last_4: stri
              token: stringstringstringstringstringstringstringstringstringstringstri
              is_default: false
              type: stored_card
          supported_instruments:
            - instrument_type: VISA
              verification_value_required: true
          test_mode: false
          type: card
      x-internal: false
  responses:
    paymentsMethods_Resp:
      description: ''
      content:
        application/json:
          schema:
            title: Payments Methods Response
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/paymentMethod_Full'
              meta: 
                type: object
                properties: {}
                additionalProperties: true
                description: Response metadata.
          examples:
            response:
              value:
                data:
                  - id: bigcommerce.gift_certificate
                    name: Gift Certificate
                    test_mode: false
                    type: gift_certificate
                    supported_instruments: []
                    stored_instruments: []
                  - id: bigcommerce.store_credit
                    name: Store Credit
                    test_mode: false
                    type: store_credit
                    supported_instruments: []
                    stored_instruments: []
                  - id: stripe.card
                    name: Stripe
                    test_mode: true
                    type: card
                    supported_instruments:
                      - instrument_type: VISA
                        verification_value_required: true
                      - instrument_type: MASTERCARD
                        verification_value_required: true
                      - instrument_type: AMEX
                        verification_value_required: true
                      - instrument_type: DISCOVER
                        verification_value_required: true
                      - instrument_type: JCB
                        verification_value_required: true
                      - instrument_type: DINERS_CLUB
                        verification_value_required: true
                      - instrument_type: STORED_CARD
                        verification_value_required: true
                    stored_instruments:
                      - type: stored_card
                        brand: VISA
                        expiry_month: 9
                        expiry_year: 2020
                        issuer_identification_number: '424242'
                        last_4: '4242'
                        token: 050a1e5c982e5905288ec5ec33f292772762033a0704f46fccb16bf1940b51ef
                        is_default: true
                meta: {}
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Create Payments | create | `store_payments_access_token_create` |
        |  Get Payment Methods | read-only | `store_payments_methods_read` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |

        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header


openapi: '3.0.0'
info:
  version: ''
  title: Payment Access Token
  description: |
    > The Payments API processes payments using payment instruments such as credit cards or PayPal accounts. To learn more about Payments, see the [Payments Overview](/api-docs/store-management/payments-api-overview).

    BigCommerce payments requests require a Payment Access Token, or _PAT_, which is a single use BigCommerce-generated JWT that's tied to the particular **order** for which the shopper authorizes BigCommerce to submit a payment. 
    
    To get a valid PAT, submit the order number to the [Create a Payment Access Token](/docs/rest-payments/tokens#create-payment-access-token) endpoint. Authenticate using an [API account access token](/api-docs/getting-started/api-accounts#api-accounts) with the [Create payments](/api-docs/getting-started/api-accounts#token-creation-scopes) scope as the value of the X-Auth-Token header.

    You can also generate a PAT during checkout by using the `completeCheckout` mutation in the [GraphQL Storefront API](/api-docs/storefront/graphql/carts-and-checkout#handling-payments).

    For a guide through the API call sequence needed to create a PAT and make charges, see the [Payments Overview](/api-docs/store-management/payments-api-overview#compatible-payment-gateways).

    > To learn more about authenticating Payments endpoints, locate the **Authentication** section at the top of each endpoint, then click **Show Details**. 

    ## Resources

    * [Payments Overview](/api-docs/store-management/payments-api-overview)
    * [Process payments authentication example request](/api-docs/getting-started/authentication#bigcommerce-generated-jwts)
    * [Orders Overview](/api-docs/store-management/orders-api-overview)
    
    ### Webhooks
    
    * [Carts](https://developer.bigcommerce.com/api-docs/channels/guide/webhooks#carts)
    * [Orders](https://developer.bigcommerce.com/api-docs/store-management/webhooks/webhook-events#orders)
    * [Price list assignment](https://developer.bigcommerce.com/api-docs/channels/guide/webhooks#price-list-assignments)


    ### Additional Payments endpoints

    * [Get accepted payment methods](/docs/rest-payments/methods#get-accepted-payment-methods)
    * [Process payments](/docs/rest-payments/processing#process-payment)
    * [Get a customer's stored instruments](/docs/rest-management/customers/customer-stored-instruments#get-stored-instruments)
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
tags:
  - name: Tokens
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
paths:
  '/payments/access_tokens':
    parameters:
      - $ref: '#/components/parameters/Accept'
    post:
      description: |-
        Use this endpoint to create a payment access token. A payment access token is required to process payments with the BigCommerce API.

        You can also generate a payment access token during checkout by using the `completeCheckout` mutation in the [GraphQL Storefront API](/api-docs/storefront/graphql/carts-and-checkout#handling-payments).

        After the token is created, use the token to [Process a payment](/docs/rest-payments/processing#process-payment).

        **Required Fields**
        * order_id
      summary: Create Payment Access Token
      tags:
        - Tokens
      operationId: PaymentsAccessTokensPost
      deprecated: false
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Payment Access Token Request
              type: object
              properties:
                order:
                  $ref: '#/components/schemas/Order'
              required:
                - order
            examples:
              example-1:
                value:
                  order:
                    id: 1
                    is_recurring: false
        required: true
        x-examples:
          application/json:
            order:
              id: 44796008
              is_recurring: true
          Example:
            order:
              id: 182
      responses:
        '201':
          description: Payment access token has been successfully created.
          headers: {}
          content:
            application/json:
              schema:
                title: Payments Access Tokens Response
                type: object
                properties:
                  data:
                    title: Payment Access Token
                    type: object
                    properties:
                      id:
                        description: Payment access token. This token is required in the subsequent request to the [Process a payment](/docs/rest-payments/processing#process-payment) endpoint.
                        type: string
                        minLength: 1
                    required:
                      - id
                  meta:
                    type: object
                    properties: {}
                    additionalProperties: true
                    description: Response metadata.
              examples:
                example-1:
                  value:
                    data:
                      id: eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MTUyNTA3NTksIm5iZiI6MTYxNTI0Nz E1OSwiaXNzIjoicGF5bWVudHMuYmlnY29tbWVyY2UuY29tIiwic3ViIjoieHNsM3 JoZGYzNiIsImp0aSI6IjNhOGE3NTJjLTBmNWQtNDNmNS05MzdjLTRhMTYzODBlMW YwZCIsImlhdCI6MTYxNTI0NzE1OSwiZGF0YSI6eyJzdG9yZV9pZCI6IjEwMDEzMz YzMjQiLCJvcmRlcl9pZCI6IjE2NiIsImFtb3VudCI6NDU3OTAsImN1cnJlbmN5Ij oiVVNEIn19.dpCDgOfbNrz095VARY20yYBRTOuq-W1F0ETTgf1Zhbs
                    meta: {}
        '400':
          description: Request has been rejected
          content:
            application/json:
              schema:
                title: ErrorResponse
                type: object
                properties:
                  status:
                    description: HTTP status code
                    type: integer
                    format: int32
                  title:
                    description: Short summary describing the particular error
                    type: string
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                  code:
                    description: Code representing the particular error
                    type: integer
                    format: int32
                  errors:
                    type: object
                    additionalProperties:
                      type: string
                required:
                  - status
                  - title
                  - type
        '401':
          description: Valid authentication required
          content:
            application/json:
              schema:
                title: ErrorResponse
                type: object
                properties:
                  status:
                    description: HTTP status code
                    type: integer
                    format: int32
                  title:
                    description: Short summary describing the particular error
                    type: string
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                  code:
                    description: Code representing the particular error
                    type: integer
                    format: int32
                  errors:
                    type: object
                    additionalProperties:
                      type: string
                required:
                  - status
                  - title
                  - type
        '404':
          description: Request has been rejected due to resource not being found
          content:
            application/json:
              schema:
                title: ErrorResponse
                type: object
                properties:
                  status:
                    description: HTTP status code
                    type: integer
                    format: int32
                  title:
                    description: Short summary describing the particular error
                    type: string
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                  code:
                    description: Code representing the particular error
                    type: integer
                    format: int32
                  errors:
                    type: object
                    additionalProperties:
                      type: string
                required:
                  - status
                  - title
                  - type
        '409':
          description: Request has been rejected due to conflict with the current state of the target resource
          content:
            application/json:
              schema:
                title: ErrorResponse
                type: object
                properties:
                  status:
                    description: HTTP status code
                    type: integer
                    format: int32
                  title:
                    description: Short summary describing the particular error
                    type: string
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                  code:
                    description: Code representing the particular error
                    type: integer
                    format: int32
                  errors:
                    type: object
                    additionalProperties:
                      type: string
                required:
                  - status
                  - title
                  - type
        '422':
          description: Request has been rejected due to missing or invalid data
          content:
            application/json:
              schema:
                title: ErrorResponse
                type: object
                properties:
                  status:
                    description: HTTP status code
                    type: integer
                    format: int32
                  title:
                    description: Short summary describing the particular error
                    type: string
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                  code:
                    description: Code representing the particular error
                    type: integer
                    format: int32
                  errors:
                    type: object
                    additionalProperties:
                      type: string
                required:
                  - status
                  - title
                  - type
        default:
          description: Internal server error
          content:
            application/json:
              schema:
                title: ErrorResponse
                type: object
                properties:
                  status:
                    description: HTTP status code
                    type: integer
                    format: int32
                  title:
                    description: Short summary describing the particular error
                    type: string
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                  code:
                    description: Code representing the particular error
                    type: integer
                    format: int32
                  errors:
                    type: object
                    additionalProperties:
                      type: string
                required:
                  - status
                  - title
                  - type
components:
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
  schemas:
    Order:
      title: Order
      type: object
      properties:
        id:
          description: Identifier for the order
          type: integer
          minimum: 1
          format: int32
        is_recurring:
          description: Whether this is a recurring order. If the order is recurring this field should be set to true in order to let the payment gateway know.
          example: false
          type: boolean
          default: false
      required:
        - id
      x-examples:
        example-1:
          id: 1
          is_recurring: false
      x-internal: false
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Create Payments | create | `store_payments_access_token_create` |
        |  Get Payment Methods | read-only | `store_payments_methods_read` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |

        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header


openapi: '3.0.1'
info:
  title: Payment Methods (Deprecated)
  description: |
    > The Payments API processes payments using payment instruments such as credit cards or PayPal accounts. To learn more about Payments, see the [Payments Overview](/api-docs/store-management/payments-api-overview).

    This endpoint is deprecated. Use [Get accepted payment methods](/docs/rest-payments/methods#get-accepted-payment-methods) instead.

    The V3 version of this endpoint contains more information about the payment methods each payment gateway accepts. The additional information enables your application and BigCommerce to make the most likely-to-succeed payment request to the gateway, without using extra middleware or making preparatory API calls to the gateway on your end prior to running the payment. Use [Get accepted payment methods](/docs/rest-payments/methods#get-accepted-payment-methods) for a leaner, more optimized application.

    > To learn more about authenticating Payments endpoints, locate the **Authentication** section at the top of each endpoint, then click **Show Details**. 

    ## Resources

    * [Payments Overview](/api-docs/store-management/payments-api-overview)
    * [Process payments authentication example request](/api-docs/getting-started/authentication#bigcommerce-generated-jwts)
    * [Orders Overview](/api-docs/store-management/orders-api-overview)
    
     ### Webhooks
    
    * [Carts](https://developer.bigcommerce.com/api-docs/channels/guide/webhooks#carts)
    * [Orders](https://developer.bigcommerce.com/api-docs/store-management/webhooks/webhook-events#orders)
    * [Price list assignment](https://developer.bigcommerce.com/api-docs/channels/guide/webhooks#price-list-assignments)

    ### Payments endpoints

    * [Get accepted payment methods](/docs/rest-payments/methods#get-accepted-payment-methods)
    * [Create a Payment Access Token](/docs/rest-payments/tokens#create-payment-access-token)
    * [Process payments](/docs/rest-payments/processing#process-payment)
    * [Get a customer's stored instruments](/docs/rest-management/customers/customer-stored-instruments#get-stored-instruments)
    
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  license:
    name: ''
  version: ''
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v2'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Methods (Deprecated)
paths:
  '/payments/methods':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
      - Methods (Deprecated)
      summary: Get All Payment Methods
      operationId: getAllPaymentMethods
      deprecated: true
      description: |         
        Gets the list of enabled payment methods. Default sorting is by payment method, alphabetically from A to Z.
  
        > #### Note
        > Avoid using this API operation if possible. It is not supported; therefore, all enabled providers may not appear.
      parameters:
      - name: page
        in: query
        description: Optional filter param `/api/v2/payments/methods?page={number}`
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          type: number
      - name: limit
        in: query
        description: Optional filter param `/api/v2/payments/methods?limit={count}`
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          type: number
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/payment_Base'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
components:
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
  schemas:
    payment_Base:
      title: payment_Base
      type: object
      properties:
        code:
          type: string
          description: Unique platform-wide code identifying the payment method.
          example: squarev2
        name:
          type: string
          description: Descriptive name of the payment method.
          example: Square
        test_mode:
          type: boolean
          description: Determines whether the payment gateway is in test mode. Always
            false for offline payment methods.
          example: false
      example:
        code: squarev2
        name: Square
        test_mode: false
      x-internal: false
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Information & Settings | read-only | `store_payments_methods_read` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header

openapi: '3.0.0'
info:
  version: ''
  title: Payment Processing
  description: |
    > The Payments API processes payments using payment instruments such as credit cards or PayPal accounts. To learn more about Payments, see the [Payments Overview](/api-docs/store-management/payments-api-overview). 

    The Payment Processing API uses BigCommerce's PCI-compliant payments server and a supported payment gateway to charge customers. The payment portal you choose may support charging stored instruments and/or making refund transactions. For a list of compatible payment gateways, as well as a guide through the API call sequence needed to make charges, see the [Payments Overview](/api-docs/store-management/payments-api-overview#compatible-payment-gateways).

    A Payment Access Token (_PAT_) is required to authorize payment processing requests. The X-Auth-Token header is not required in requests to the payment processing endpoint. To generate a PAT, use the [Create a Payment Access Token](/docs/rest-payments/tokens#create-payment-access-token) endpoint or the `completeCheckout` mutation in the [GraphQL Storefront API](/api-docs/storefront/graphql/carts-and-checkout#handling-payments). For a payment processing authentication example request, see the related section in our [Authentication article](/api-docs/getting-started/authentication#bigcommerce-generated-jwts).
    
    Also note that payment processing requests use the BigCommerce Payments Gateway, which uses a different server than our other REST APIs. Please see the server URL for the payment processing endpoint.

    > To learn more about authenticating Payments endpoints, locate the **Authentication** section at the top of each endpoint, then click **Show Details**.

    ## Resources

    * [Payments Overview](/api-docs/store-management/payments-api-overview)
    * [Process payments authentication example request](/api-docs/getting-started/authentication#bigcommerce-generated-jwts)
    * [Orders Overview](/api-docs/store-management/orders-api-overview)
    
     ### Webhooks
    
    * [Carts](https://developer.bigcommerce.com/api-docs/channels/guide/webhooks#carts)
    * [Orders](https://developer.bigcommerce.com/api-docs/store-management/webhooks/webhook-events#orders)
    * [Price list assignment](https://developer.bigcommerce.com/api-docs/channels/guide/webhooks#price-list-assignments)

    ### Additional Payments endpoints
    
    * [Get accepted payment methods](/docs/rest-payments/methods#get-accepted-payment-methods)
    * [Create a Payment Access Token](/docs/rest-payments/tokens#create-payment-access-token)
    * [Get a customer's stored instruments](/docs/rest-management/customers/customer-stored-instruments#get-stored-instruments)


  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
tags:
  - name: Processing
servers:
  - url: 'https://payments.bigcommerce.com/stores/{store_hash}'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce Payments Gateway
security:
  - BearerPAT: []
paths:
  '/payments':
    post:
      summary: Process Payments
      tags:
        - Processing
      operationId: PaymentsPost
      description: 'Process payments for an order. See [Payment Processing](/api-docs/store-management/payments-api-overview) for more information.'
      parameters:
        - $ref: '#/components/parameters/AcceptPaymentResponse'
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Payment Request
              type: object
              properties:
                payment:
                  title: Payment
                  type: object
                  required:
                    - instrument
                    - payment_method_id
                  properties:
                    instrument:
                      anyOf:
                        - $ref: '#/components/schemas/Card'
                        - $ref: '#/components/schemas/StoredCard'
                        - $ref: '#/components/schemas/StoredPayPalAccount'
                        - $ref: '#/components/schemas/GiftCertificate'
                        - $ref: '#/components/schemas/StoreCredit'
                        - $ref: '#/components/schemas/TokenizedCard'
                    payment_method_id:
                      description: Identifier for payment method that will be used for this payment and `id` from the Get Accepted Payment Methods API
                      type: string
                      minLength: 1
                    save_instrument:
                      type: boolean
                      description: 'To use `save_instrument`, configure the payment gateway to accept stored cards.'
              required:
                - payment
            examples:
              Card:
                value:
                  payment:
                    instrument:
                      type: card
                      cardholder_name: string
                      number: string
                      expiry_month: 1
                      expiry_year: 0
                      verification_value: stri
                      issue_month: 1
                      issue_year: 0
                      issue_number: 0
                    payment_method_id: string
              Stored Card:
                value:
                  payment:
                    instrument:
                      type: stored_card
                      token: 8cdf7b6ea1b27119463bf9e5106639618cc77a9adc49f0069ca8b756cc15caee
                      verification_value: '1142'
                    payment_method_id: adyenv2.scheme
                    save_instrument: true
              Stored PayPal Account:
                value:
                  payment:
                    instrument:
                      type: stored_paypal_account
                      token: 2c129313bcffe4501ec5fa2764c8c16320e38c7ba9e8cdf95583b541bb05ad91
                    payment_method_id: braintree.paypal
              Gift Certificate:
                value:
                  payment:
                    instrument:
                      type: gift_certificate
                      gift_certificate_code: ABC-DEF-GXX
                    payment_method_id: bigcommerce.gift_certificate
              Store Credit:
                value:
                  payment:
                    instrument:
                      type: store_credit
                    payment_method_id: bigcommerce.store_credit
              Tokenized Card:
                value:
                  payment: 
                    instrument:
                      type: tokenized_card
                      token: K7KW-M9GX-6PQ3
                      iin: 4111111
                      last_four_digits: 1111
                      expiration_month: 12
                      expiration_year: 2030
                    payment_method_id: bolt.card
        required: true
        x-examples:
          application/json:
            payment:
              instrument: {}
              payment_method_id: Lorem in
              amount: 81505146
              currency_code: NYE
          Payment Access Token: |-
            curl -X POST \
              https://payments.bigcommerce.com/stores/{store_hash}/payments \
              -H 'Accept: application/vnd.bc.v1+json' \
              -H 'Authorization: PAT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NsdfasftIsIm5iZiI6MTU1MTM5MDU0MiwiaXNzIjoicGF5bWVudHMuYmlnY29tbWVyY2UuY29tIiwic3ViIjoianJhaDZnbW4iLCJqdGkiOiI3Nzg3ZmU1Zi01OWJmLTQ3ZWMtYTFmZC00ZDQ3ZTkwNjFlNWMiLCJpYXQiOjE1NTEzOTA1NDIsImRhdGEiOnsic3RvcmVfaWQiOjEwMjU2NDYsIm9yZGVyX2lkIjoyMTUsImFtb3VudCI6OTgwMCwiY3VycmVuY3kiOiJVU0QifX0.WbR90d8m4gn8wK7kPMDEoVq8B0hHC5Ul5H4Hpqq6Yvo' \
              -H 'Content-Type: application/json' \
          Vaulted Card:
            payment:
              instrument:
                type: stored_card
                token: vaulted instrument token
                verification_value: '123'
              payment_method_id: stripe.card
              save_instrument: true
          Credit Card: |-
            {
              "payment": {
                "instrument": {
                  "type": "card",
                  "number": "4111111111111111",
                  "cardholder_name": "BP",
                  "expiry_month": 12,
                  "expiry_year": 2020,
                  "verification_value": "411"
                },
                "payment_method_id": "authorizenet.card",
                 "save_instrument": true
              }
            }
        description: ''
      responses:
        '202':
          description: Payment has been successfully processed
          content:
            application/json:
              schema:
                title: Success Payment Response
                type: object
                properties:
                  id:
                    description: Identifier for this transaction
                    type: string
                  transaction_type:
                    title: Transaction Type
                    description: Transaction type for this payment
                    example: authorization
                    type: string
                    enum:
                      - authorization
                      - purchase
                  status:
                    type: string
                    title: Status
                    description: Status to indicate a success response
                    enum:
                      - success
                      - pending
              examples:
                response:
                  value:
                    id: 227d9e1e-94f8-408c-95a5-f97b30592eb7
                    transaction_type: authorization
                    status: pending
        '400':
          description: Payment request has been rejected due to malformed request
          content:
            application/json:
              schema:
                title: Error Payment Response
                type: object
                properties:
                  status:
                    description: HTTP status code
                    type: integer
                    format: int32
                  title:
                    description: Short summary describing the particular error
                    type: string
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                  code:
                    description: Code representing the particular error
                    type: integer
                    format: int32
                  errors:
                    description: ''
                    type: object
                    additionalProperties:
                      type: string
                required:
                  - status
                  - title
                  - type
        '401':
          description: Valid authentication required
          content:
            application/json:
              schema:
                title: Error Payment Response
                type: object
                properties:
                  status:
                    description: HTTP status code
                    type: integer
                    format: int32
                  title:
                    description: Short summary describing the particular error
                    type: string
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                  code:
                    description: Code representing the particular error
                    type: integer
                    format: int32
                  errors:
                    description: ''
                    type: object
                    additionalProperties:
                      type: string
                required:
                  - status
                  - title
                  - type
        '422':
          description: 'Payment request has been rejected due to missing, invalid data or declined by payment provider'
          content:
            application/json:
              schema:
                title: Error Payment Response
                type: object
                properties:
                  status:
                    description: HTTP status code
                    type: integer
                    format: int32
                  title:
                    description: Short summary describing the particular error
                    type: string
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                  code:
                    description: Code representing the particular error
                    type: integer
                    format: int32
                  errors:
                    description: ''
                    type: object
                    additionalProperties:
                      type: string
                required:
                  - status
                  - title
                  - type
        default:
          description: Internal server error
          content:
            application/json:
              schema:
                title: Error Payment Response
                type: object
                properties:
                  status:
                    description: HTTP status code
                    type: integer
                    format: int32
                  title:
                    description: Short summary describing the particular error
                    type: string
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                  code:
                    description: Code representing the particular error
                    type: integer
                    format: int32
                  errors:
                    description: ''
                    type: object
                    additionalProperties:
                      type: string
                required:
                  - status
                  - title
                  - type
components:
  parameters:
    AcceptPaymentResponse:
      name: Accept
      in: header
      schema:
        type: string
        enum:
          - 'application/vnd.bc.v1+json'
        default: 'application/vnd.bc.v1+json'
      required: true
      description: This required value must be `application/vnd.bc.v1+json`.
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
  schemas:
    Card:
      title: Card
      type: object
      x-examples:
        example-1:
          type: card
          cardholder_name: string
          number: string
          expiry_month: 1
          expiry_year: 0
          verification_value: stri
          issue_month: 1
          issue_year: 0
          issue_number: 0
      x-internal: false
      properties:
        type:
          type: string
          default: card
          example: card
          description: Type to classify this payment instrument (required)
        cardholder_name:
          type: string
          minLength: 1
          description: Cardholderʼs full name (required)
        number:
          type: string
          minLength: 1
          description: Credit card number (required)
        expiry_month:
          type: integer
          format: int32
          minimum: 1
          maximum: 12
          description: Expiry month of this card (required)
        expiry_year:
          type: integer
          format: int32
          description: Expiry year of this card (required)
        verification_value:
          type: string
          minLength: 3
          maxLength: 4
          description: Verification value of this card (CVV)
        issue_month:
          type: integer
          description: Issue month of this card
          format: int32
          minimum: 1
          maximum: 12
        issue_year:
          type: integer
          format: int32
          description: Issue year of this card
        issue_number:
          type: integer
          format: int32
          description: Issue number of this card
    StoredCard:
      title: Stored Card
      type: object
      x-internal: false
      x-examples:
        example-1:
          type: stored_card
          token: stringstringstringstringstringstringstringstringstringstringstri
          verification_value: 1142
      properties:
        type:
          description: Type to classify this payment instrument (required)
          example: stored_card
          type: string
          default: stored_card
        token:
          description: Identifier representing this stored card (required)
          type: string
          minLength: 64
          maxLength: 64
        verification_value:
          type: string
          description: Verification value of this card (CVV)
          minLength: 3
          maxLength: 4
    StoredPayPalAccount:
      title: StoredPayPalAccount
      type: object
      x-internal: false
      properties:
        type:
          type: string
          description: Type to classify this payment instrument (required)
          enum:
            - stored_paypal_account
        token:
          description: Identifier representing this stored PayPal account (required)
          type: string
          minLength: 64
          maxLength: 64
      x-examples:
        example-1:
          type: stored_paypal_account
          token: stringstringstringstringstringstringstringstringstringstringstri
    GiftCertificate:
      title: GiftCertificate
      type: object
      properties:
        type:
          type: string
          example: gift_certificate
        gift_certificate_code:
          type: string
          example: ABC-DEF-GXX
      x-examples:
        example-1:
          type: gift_certificate
          gift_certificate_code: ABC-DEF-GXX
    StoreCredit:
      title: StoreCredit
      type: object
      properties:
        type:
          type: string
          example: store_credit
      x-examples:
        example-1:
          type: store_credit
    TokenizedCard:
      title: Tokenized Card
      type: object
      x-internal: false
      x-examples:
        example-1:
          type: tokenized_card
          token: K7KW-M9GX-6PQ3
          iin: 4111111
          last_four_digits: 1111
          expiration_month: 12
          expiration_year: 2030
      properties:
        type:
          type: string
          description: Type to classify this payment instrument (required).
          enum:
            - tokenized_card
        token:
          description: Identifier representing the tokenized card (required).
          type: string
          minLength: 64
          maxLength: 64
        iin:
          type: string
          description: Issuer identification number.
        last_four_digits:
          type: string
          description: Last four numbers of this card.
        expiration_month:
          type: string
          description: Expiry month of this card.
        expiration_year:
          type: string
          description: Expiry year of this card.
      required:
          - type
          - token
  securitySchemes:
    BearerPAT:
      description: |-
        ### OAuth scopes

        The required scopes are granted to the `payment_access_token` upon generation.

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        |`Authorization`|`PAT {{PAYMENT_ACCESS_TOKEN}}`| Obtained using the Create Access Token endpoint.|

        ### Further reading
        
        For an outline of the Process Payment API call flow and more information about authenticating, see [Authentication and Example Requests](/api-docs/getting-started/authentication#bigcommerce-generated-jwts).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: http
      scheme: bearer
      bearerFormat: 'PAT {{PAYMENT_ACCESS_TOKEN}}'

openapi: '3.0.1'
info:
  title: Price Lists
  description: |-
    Populate different versions of catalog pricing and assign them to different [customer groups](/docs/rest-management/customers-v2/customer-groups) at the variant level.

    ## Price Lists
    You can associate a Price List with a customer group either through the control panel or by using the [Customer Groups API](/docs/rest-management/customers-v2/customer-groups).

    You can create [Price List Assignments](/docs/rest-management/price-lists/price-lists-assignments#create-price-list-assignments) to assign Price Lists to a specific [channel](/docs/rest-management/channels/channel-listings). Price Lists assigned to a channel apply to all shoppers on that channel, unless there are more specific assignments or customer group discounts set up for the shopper's customer group.

    If an active Price List does not contain prices for a variant, the catalog pricing will be used.
    Price Lists provide overridden price values to the Stencil storefront. You can further customize the final price display using Stencil's [handlebars objects](/theme-objects).

    To learn more about Price Lists, see [Price Lists API](/api-docs/store-management/price-list-overview).

    ## Price Lists Assignments

    ### Order of operations
    
    **IF** Price List assigned to current customer group **AND** Price List assigned to current channel:
    * Use this Price List -- any prices not found fall back to the catalog price (or in the case of multi-currency, auto-converted prices)
    
    **ELSE IF** Price List assigned to current customer group:
    * Use this Price List -- any prices not found fall back to the catalog price (or in the case of multi-currency, auto-converted prices)
    
    **ELSE IF** Customer group discounts:
    * Use them -- any prices not found fall back to the catalog price (or in the case of multi-currency, auto-converted prices)
    
    **ELSE IF** Channel has a default Price List:
    * Use this Price List -- any prices not found fall back to the catalog price (or in the case of multi-currency, auto-converted prices)
    
    **ELSE**:
    * Fall back to the catalog price (or in the case of multi-currency, auto-converted prices)

    ## Usage notes

    - You cannot assign Price Lists to a customer group with customer group discounts -- You must delete the customer group discounts first.
    - Bulk pricing Tiers can additionally be associated with a price record to indicate different pricing as the quantity in the cart increases.
    - If a variant has a Price Record, any existing product-level bulk pricing will not apply to the cart. For variants without Price Records, any existing product bulk pricing will apply.
    - [Price Lists Records](/docs/rest-management/price-lists/price-lists-records) accepts bulk upsert. You can only do one bulk upsert at a time. Running more than one bulk upsert in parallel on the **same store** will cause a `429` error and the request will fail.
    - There are webhooks available for Price Lists assignments. The price list assignment webhook fires when a price list assignment is assigned, reassigned, or unassigned. Note that since Price Lists directly relate to products, neither product nor SKU webhooks are going to fire for corresponding changes, such as pricing.

    ## Additional information

    ### Webhooks
    
    * [Price list assignments](/api-docs/channels/guide/webhooks#price-list-assignments)
    * [Products](/api-docs/store-management/webhooks/events#products)
    * [SKU](/api-docs/store-management/webhooks/events#sku)
    ### Related endpoints
    * [Get All Price Lists](/docs/rest-management/price-lists#get-all-price-lists)
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  version: ''
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Price Lists
  - name: Price Lists Assignments
  - name: Price Lists Records
paths:
  '/pricelists':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
        - Price Lists
      summary: Get All Price Lists
      description: Returns a list of *Price Lists*. Optional parameters can be passed in.
      operationId: getPriceListCollection
      parameters:
        - name: id
          in: query
          description: |
            Filter items by ID.
          schema:
            type: integer
        - name: name
          in: query
          description: |
            Filter items by name.
          schema:
            type: string
        - name: date_created
          in: query
          description: |
            Filter items by date_created.
          schema:
            type: string
            format: date-time
        - name: date_modified
          in: query
          description: 'Filter items by date_modified. For example `v3/catalog/products?date_last_imported:min=2018-06-15`'
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: 'id:in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'name:like'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: 'date_created:max'
          in: query
          schema:
            type: string
        - name: 'date_created:min'
          in: query
          schema:
            type: string
        - name: 'date_modified:max'
          in: query
          schema:
            type: string
        - name: 'date_modified:min'
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PriceList Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      title: Price List
                      type: object
                      allOf:
                        - type: object
                          properties:
                            id:
                              type: integer
                              description: |
                                The unique numeric ID of the `Price List`; this number increments sequentially.
                              example: 3
                            date_created:
                              type: string
                              description: |
                                The date on which the `Price List` was created.
                              format: date-time
                              example: '2018-04-05T16:05:12Z'
                            date_modified:
                              type: string
                              description: |
                                The date on which the `Price List` was created.
                              format: date-time
                              example: '2018-04-05T16:05:12Z'
                        - title: PriceList Base
                          required:
                            - name
                          type: object
                          properties:
                            name:
                              type: string
                              description: The unique name of the Price List. Required in a POST request.
                              example: Wholesale
                              x-required:
                                - post
                            active:
                              type: boolean
                              description: |
                                Boolean value that specifies whether this `Price List` and its prices are active or not. Defaults to `true`.
                              example: true
                          description: Specifies the Common Price List properties.
                  meta:
                    title: Collection Meta
                    type: object
                    properties:
                      pagination:
                        title: Pagination
                        type: object
                        properties:
                          total:
                            type: integer
                            description: |
                              Total number of items in the result set.
                            example: 36
                          count:
                            type: integer
                            description: |
                              Total number of items in the collection response.
                            example: 36
                          per_page:
                            type: integer
                            description: |
                              The amount of items returned in the collection per page, controlled by the limit parameter.
                            example: 50
                          current_page:
                            type: integer
                            description: |
                              The page you are currently on within the collection.
                            example: 1
                          total_pages:
                            type: integer
                            description: |
                              The total number of pages in the collection.
                            example: 1
                          links:
                            type: object
                            properties:
                              previous:
                                type: string
                                description: |
                                  Link to the previous page returned in the response.
                              current:
                                type: string
                                description: |
                                  Link to the current page returned in the response.
                                example: '?page=1&limit=50'
                              next:
                                type: string
                                description: |
                                  Link to the next page returned in the response.
                            description: |
                              Pagination links for the previous and next parts of the whole collection.
                        description: 'Data related to the response, including pagination and collection totals.'
                    description: 'Data related to the response, including pagination and collection totals.'
                description: Get All PriceLists.
              example:
                data:
                  - id: 1
                    name: Warehouse
                    date_created: '2022-02-26T17:33:11Z'
                    date_modified: '2022-05-08T14:05:27Z'
                    active: true
                  - id: 2
                    name: B2B
                    date_created: '2022-02-26T17:37:01Z'
                    date_modified: '2022-02-26T17:37:01Z'
                    active: true
                  - id: 3
                    name: Wholesale
                    date_created: '2022-04-05T16:05:12Z'
                    date_modified: '2022-04-05T16:05:12Z'
                    active: true
                meta:
                  pagination:
                    total: 3
                    count: 3
                    per_page: 50
                    current_page: 1
                    total_pages: 1
    post:
      tags:
        - Price Lists
      summary: Create a Price List
      description: |-
        Creates a *Price List*.

        **Required Fields**
        * name
      operationId: createPriceList
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: PriceList Post
              description: 'Creates a Price List. '
              allOf:
                - title: PriceList Base
                  required:
                    - name
                  type: object
                  properties:
                    name:
                      type: string
                      description: The unique name of the Price List. Required in a POST request.
                      example: Wholesale
                      x-required:
                        - post
                    active:
                      type: boolean
                      description: |
                        Boolean value that specifies whether this `Price List` and its prices are active or not. Defaults to `true`.
                      example: true
                  description: Specifies the Common Price List properties.
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Price List Response
                type: object
                properties:
                  data:
                    title: Price List
                    type: object
                    allOf:
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the `Price List`; this number increments sequentially.
                            example: 3
                          date_created:
                            type: string
                            description: |
                              The date on which the `Price List` was created.
                            format: date-time
                            example: '2022-04-05T16:05:12Z'
                          date_modified:
                            type: string
                            description: |
                              The date on which the `Price List` was created.
                            format: date-time
                            example: '2022-04-05T16:05:12Z'
                      - title: PriceList Base
                        required:
                          - name
                        type: object
                        properties:
                          name:
                            type: string
                            description: The unique name of the Price List. Required in a POST request.
                            example: Wholesale
                            x-required:
                              - post
                          active:
                            type: boolean
                            description: |
                              Boolean value that specifies whether this `Price List` and its prices are active or not. Defaults to `true`.
                            example: true
                        description: Specifies the Common Price List properties.
                  meta:
                    $ref: '#/components/schemas/Meta'
                description: |-
                  PriceList Response returns for:

                  * Create a PriceList
                  * Get a PriceList
                  * Update a PriceList
              example:
                data:
                  id: 4
                  name: Wholesale Group - Trade Show
                  date_created: '2022-09-17T18:41:59Z'
                  date_modified: '2022-09-17T18:41:59Z'
                  active: false
                meta: {}
        '409':
          description: |
            `Price List` conflicts with another Price List. This is the result of duplicate unique values, such as `name`.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            `Price List` is not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
    delete:
      tags:
        - Price Lists
      summary: Delete All Price Lists
      description: Deletes a *Price List*. All associated price records are also removed. Optional parameters can be passed in.
      operationId: deletePriceListsByFilter
      parameters:
        - name: id
          in: query
          description: |
            Filter items by ID.
          schema:
            type: integer
        - name: name
          in: query
          description: |
            Filter items by name.
          schema:
            type: string
      responses:
        '204':
          description: '`204 No Content`. The action has been performed and no further information will be supplied. `null` is returned.'
          content:
            application/json:
              schema:
                type: object
                nullable: true
  '/pricelists/{price_list_id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
        - Price Lists
      summary: Get a Price List
      description: ' Returns a single *Price List*.'
      operationId: getPriceList
      parameters:
        - name: price_list_id
          in: path
          description: |
            The ID of the `Price List` requested.
          required: true
          schema:
            type: integer
        - name: id
          in: query
          description: Filter items by ID.
          schema:
            type: integer
        - name: name
          in: query
          description: Filter items by name.
          schema:
            type: string
        - name: date_created
          in: query
          description: Filter items by date_created.
          schema:
            type: string
            format: date-time
        - name: date_modified
          in: query
          description: 'Filter items by date_modified. For example `v3/catalog/products?date_last_imported:min=2022-06-15`'
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Specifies the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Price List Response
                type: object
                properties:
                  data:
                    title: Price List
                    required:
                      - name
                    type: object
                    properties:
                      id:
                        type: integer
                        description: |
                          The unique numeric ID of the `Price List`; this number increments sequentially.
                        example: 3
                      date_created:
                        type: string
                        description: |
                          The date on which the `Price List` was created.
                        format: date-time
                        example: '2022-04-05T16:05:12Z'
                      date_modified:
                        type: string
                        description: |
                          The date on which the `Price List` was created.
                        format: date-time
                        example: '2022-04-05T16:05:12Z'
                      name:
                        type: string
                        description: The unique name of the Price List. Required in a POST request.
                        example: Wholesale
                        x-required:
                          - post
                      active:
                        type: boolean
                        description: |
                          Boolean value that specifies whether this `Price List` and its prices are active or not. Defaults to `true`.
                        example: true
                    description: Specifies the Common Price List properties.
                  meta:
                    $ref: '#/components/schemas/Meta'
                description: |-
                  PriceList Response returns for:

                  * Create a PriceList
                  * Get a PriceList
                  * Update a PriceList
              example:
                data:
                  id: 2
                  name: B2B
                  date_created: '2022-02-26T17:37:01Z'
                  date_modified: '2022-09-17T18:34:36Z'
                  active: true
                meta: {}
    put:
      tags:
        - Price Lists
      summary: Update a Price List
      description: Updates a *Price List*.
      operationId: updatePriceList
      parameters:
        - name: price_list_id
          in: path
          description: |
            The ID of the `Price List` requested.
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: PriceList Put
              description: Update a PriceList
              allOf:
                - title: PriceList Base
                  required:
                    - name
                  type: object
                  properties:
                    name:
                      type: string
                      description: The unique name of the Price List. Required in a POST request.
                      example: Wholesale
                      x-required:
                        - post
                    active:
                      type: boolean
                      description: |
                        Whether or not this `Price List` and its prices are active. Defaults to `true`.
                      example: true
                  description: Common Price List properties.
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Price List Response
                type: object
                properties:
                  data:
                    title: Price List
                    type: object
                    allOf:
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the `Price List`; this number increments sequentially.
                            example: 3
                          date_created:
                            type: string
                            description: |
                              The date on which the `Price List` was created.
                            format: date-time
                            example: '2022-04-05T16:05:12Z'
                          date_modified:
                            type: string
                            description: |
                              The date on which the `Price List` was created.
                            format: date-time
                            example: '2022-04-05T16:05:12Z'
                      - title: PriceList Base
                        required:
                          - name
                        type: object
                        properties:
                          name:
                            type: string
                            description: The unique name of the Price List. Required in /POST.
                            example: Wholesale
                            x-required:
                              - post
                          active:
                            type: boolean
                            description: |
                              Whether or not this `Price List` and its prices are active.  Defaults to `true`.
                            example: true
                        description: Common Price List properties.
                  meta:
                    $ref: '#/components/schemas/Meta'
                description: |-
                  PriceList Response returns for:

                  * Create a PriceList
                  * Get a PriceList
                  * Update a PriceList
              example:
                data:
                  id: 2
                  name: BigCommerce
                  date_created: '2022-02-26T17:37:01Z'
                  date_modified: '2022-09-17T18:45:17Z'
                  active: false
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '409':
          description: |
            `Price List` was in conflict with another Price List. This is the result of duplicate unique values, such as `name`.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            `Price List` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
    delete:
      tags:
        - Price Lists
      summary: Delete a Price List
      description: |-
        Deletes a *Price List*. All associated price records are also removed.
        **Limits**
        * Limit of 1 concurrent request.
      operationId: deletePriceList
      parameters:
        - name: price_list_id
          in: path
          description: |
            The ID of the `Price List` requested.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Action has been enacted and no further information is to be supplied. `null` is returned.
  '/pricelists/records':
    parameters:
      - $ref: '#/components/parameters/Accept'
    put: 
      tags:
        - Price Lists Records
      summary: Create Batch of Price Lists Records
      description: Creates a batch of `Price Lists Records`; may include price list records from more than one price list.  Concurrency limit of 1.
      operationId: UpsertPriceListRecords
      requestBody: 
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/PriceRecordCollectionPutWithPriceListId'
        required: true
      responses:
        '200':
          description: |
            Success response for batch PUT of `Price Records`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessBatchResponse'
        '422':
          description: |
            Error response for batch PUT of `Price Records`.  May include errors during partial update in non-strict mode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceRecordBatchErrorResponse'
      x-codegen-request-body-name: PriceRecordBatch        
  '/pricelists/{price_list_id}/records':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
        - Price Lists Records
      summary: Get All Price List Records
      description: |-
        Returns a list of *Price List Records* associated with a *Price List*.

        **Notes**
        * Supports up to 10 simultaneous GET requests. Running more than the allowed number of requests concurrently on the same store will result in a `429` status error and your additional requests will fail.
        * Store Pricelist Records data to reduce the number of calls and maximize performance.
      operationId: getPriceListRecordCollection
      parameters:
        - name: price_list_id
          in: path
          description: |
            The ID of the `Price List` requested.
          required: true
          schema:
            type: integer
        - name: 'variant_id:in'
          in: query
          description: The ID of the `Variant` for which prices were requested.
          schema:
            type: integer
        - name: 'product_id:in'
          in: query
          description: |
            A comma-separated list of IDs of `Product`s for which prices were requested.
          schema:
            type: string
        - name: currency
          in: query
          description: |
            Filter items by currency.
          schema:
            type: string
            format: ISO-4217
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: include
          in: query
          description: |
            Sub-resources to include on a price record, in a comma-separated list. Valid expansions currently include `bulk_pricing_tiers` and `sku`. Other values will be ignored.
          schema:
            type: string
            enum:
              - bulk_pricing_tiers
              - sku
        - name: price
          in: query
          description: |
            Filter items by price.
          schema:
            type: number
        - name: sale_price
          in: query
          description: |
            Filter items by sale_price.
          schema:
            type: number
        - name: retail_price
          in: query
          description: |
            Filter items by retail_price.
          schema:
            type: number
        - name: map_price
          in: query
          description: |
            Filter items by map_price.
          schema:
            type: number
        - name: calculated_price
          in: query
          description: |
            Filter items by calculated_price.
          schema:
            type: number
        - name: date_created
          in: query
          description: |
            Filter items by date_created.
          schema:
            type: string
            format: date-time
        - name: date_modified
          in: query
          description: 'Filter items by date_modified. For example `v3/catalog/products?date_last_imported:min=2022-06-15`'
          schema:
            type: string
            format: date-time
        - name: sku
          in: query
          description: |
            Filter items by SKU.
          schema:
            type: string
        - name: 'sku:in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: 'currency:in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: 'price:max'
          in: query
          schema:
            type: number
        - name: 'price:min'
          in: query
          schema:
            type: number
        - name: 'sale_price:max'
          in: query
          schema:
            type: number
        - name: 'sale_price:min'
          in: query
          schema:
            type: number
        - name: 'retail_price:max'
          in: query
          schema:
            type: number
        - name: 'retail_price:min'
          in: query
          schema:
            type: number
        - name: 'map_price:max'
          in: query
          schema:
            type: number
        - name: 'map_price:min'
          in: query
          schema:
            type: number
        - name: 'calculated_price:max'
          in: query
          schema:
            type: number
        - name: 'calculated_price:min'
          in: query
          schema:
            type: number
        - name: 'date_created:max'
          in: query
          schema:
            type: string
        - name: 'date_created:min'
          in: query
          schema:
            type: string
        - name: 'date_modified:max'
          in: query
          schema:
            type: string
        - name: 'date_modified:min'
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PriceRecord Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      title: Price Record
                      type: object
                      description: The Price Record object.
                      allOf:
                        - type: object
                          properties:
                            calculated_price:
                              type: number
                              description: |
                                The price of the variant as seen on the storefront if a price record is in effect. It will be equal to the `sale_price`, if set, and the `price` if there is not a `sale_price`. Read only.
                              format: double
                              example: 24.64
                              readOnly: true
                            date_created:
                              type: string
                              description: |
                                The date on which the Price entry was created.
                              format: date-time
                              example: '2018-08-23T19:59:23Z'
                            date_modified:
                              type: string
                              description: |
                                The date on which the Price entry was created.
                              format: date-time
                              example: '2018-08-23T19:59:23Z'
                            product_id:
                              type: integer
                              description: |
                                The ID of the `Product` this `Price Record`ʼs `variant_id` is associated with. Read only.
                              example: 158
                              readOnly: true
                        - title: Price Record Identifiers
                          type: object
                          description: Price Record object used in batch create or update.
                          allOf:
                            - type: object
                              properties:
                                price_list_id:
                                  type: integer
                                  description: |
                                    The Price List with which this price set is associated.
                                  example: 2
                                variant_id:
                                  type: integer
                                  description: |
                                    The variant with which this price set is associated. Either `variant_id` or `sku` is required.
                                  example: 325
                                sku:
                                  type: string
                                  description: |
                                    The variant with which this price set is associated. Either `sku` or `variant_id` is required.
                                currency:
                                  type: string
                                  description: |
                                    The 3-letter currency code with which this price set is associated.
                                  format: ISO-4217
                                  example: usd
                        - title: PriceRecord Base
                          type: object
                          properties:
                            price:
                              type: number
                              description: |
                                The list price for the variant mapped in a Price List. Overrides any existing or Catalog list price for the variant/product.
                              format: double
                              example: 3.99
                              x-required:
                                - put
                            sale_price:
                              type: number
                              description: |
                                The sale price for the variant mapped in a Price List. Overrides any existing or Catalog sale price for the variant/product. If empty, the sale price will be treated as not being set on this variant.
                              format: double
                            retail_price:
                              type: number
                              description: |
                                The retail price for the variant mapped in a Price List. Overrides any existing or Catalog retail price for the variant/product. If empty, the retail price will be treated as not being set on this variant.
                              format: double
                            map_price:
                              type: number
                              description: |
                                The MAP (Minimum Advertised Price) for the variant mapped in a Price List. Overrides any existing or Catalog MAP price for the variant/product. If empty, the MAP price will be treated as not being set on this variant.
                              format: double
                            bulk_pricing_tiers:
                              type: array
                              items:
                                title: Bulk Pricing Tier
                                type: object
                                properties:
                                  quantity_min:
                                    type: integer
                                    description: |
                                      The minimum quantity of associated variant in the cart needed to qualify for this tiers pricing.
                                    example: 1
                                  quantity_max:
                                    type: integer
                                    description: |
                                      The maximum allowed quantity of associated variant in the cart to qualify for this tiers pricing.
                                    example: 10
                                  type:
                                    type: string
                                    description: |
                                      The type of adjustment that is made. Acceptable values: price – the adjustment amount per product; percent – the adjustment as a percentage of the original price; fixed – the adjusted absolute price of the product.
                                    example: price
                                    enum:
                                      - fixed
                                      - price
                                      - percent
                                  amount:
                                    type: number
                                    description: |
                                      The price adjustment amount. This value along with the type will decide the price per variant for the pricing tier.
                                    format: double
                                    example: 3
                            sku:
                              type: string
                              description: |
                                The SKU code associated with this `Price Record` if requested and it exists.
                              example: SMB-123
                          description: Common Price Record properties.
                  meta:
                    title: Collection Meta
                    type: object
                    properties:
                      pagination:
                        title: Pagination
                        type: object
                        properties:
                          total:
                            type: integer
                            description: |
                              Total number of items in the result set.
                            example: 36
                          count:
                            type: integer
                            description: |
                              Total number of items in the collection response.
                            example: 36
                          per_page:
                            type: integer
                            description: |
                              The amount of items returned in the collection per page, controlled by the limit parameter.
                            example: 50
                          current_page:
                            type: integer
                            description: |
                              The page you are currently on within the collection.
                            example: 1
                          total_pages:
                            type: integer
                            description: |
                              The total number of pages in the collection.
                            example: 1
                          links:
                            type: object
                            properties:
                              previous:
                                type: string
                                description: |
                                  Link to the previous page returned in the response.
                              current:
                                type: string
                                description: |
                                  Link to the current page returned in the response.
                                example: '?page=1&limit=50'
                              next:
                                type: string
                                description: |
                                  Link to the next page returned in the response.
                            description: |
                              Pagination links for the previous and next parts of the whole collection.
                        description: 'Data about the response, including pagination and collection totals.'
                    description: 'Data about the response, including pagination and collection totals.'
                description: |-
                  PriceRecord Collection Response returns for:
                  * Get All PriceList Records
                  * Get PriceList Records by Variant ID
              example:
                data:
                  - price_list_id: 3
                    variant_id: 358
                    price: 25.48
                    sale_price: 18.57
                    retail_price: 25.48
                    map_price: 18.57
                    calculated_price: 25.48
                    date_created: '2022-09-17T20:33:14Z'
                    date_modified: '2022-09-17T20:33:14Z'
                    currency: usd
                    product_id: 187
                    bulk_pricing_tiers: []
                  - price_list_id: 3
                    variant_id: 359
                    price: 31.31
                    sale_price: 31.31
                    retail_price: 31.31
                    map_price: 31.31
                    calculated_price: 31.31
                    date_created: '2022-09-17T20:33:14Z'
                    date_modified: '2022-09-17T20:33:14Z'
                    currency: usd
                    product_id: 188
                    bulk_pricing_tiers: []
                  - price_list_id: 3
                    variant_id: 360
                    price: 18.57
                    sale_price: 18.57
                    retail_price: 18.57
                    map_price: 18.57
                    calculated_price: 18.57
                    date_created: '2022-09-17T20:33:14Z'
                    date_modified: '2022-09-17T20:33:14Z'
                    currency: usd
                    product_id: 189
                    bulk_pricing_tiers: []
                  - price_list_id: 3
                    variant_id: 361
                    price: 22.54
                    sale_price: 22.54
                    retail_price: 22.54
                    map_price: 22.54
                    calculated_price: 22.54
                    date_created: '2022-09-17T20:33:14Z'
                    date_modified: '2022-09-17T20:33:14Z'
                    currency: usd
                    product_id: 190
                    bulk_pricing_tiers: []
                  - price_list_id: 3
                    variant_id: 362
                    price: 27.39
                    sale_price: 27.39
                    retail_price: 27.39
                    map_price: 27.39
                    calculated_price: 27.39
                    date_created: '2022-09-17T20:33:14Z'
                    date_modified: '2022-09-17T20:51:26Z'
                    currency: usd
                    product_id: 191
                    bulk_pricing_tiers:
                      - quantity_min: 10
                        quantity_max: 19
                        type: percent
                        amount: 1
                      - quantity_min: 20
                        quantity_max: 29
                        type: percent
                        amount: 3
                      - quantity_min: 30
                        quantity_max: 2147483647
                        type: percent
                        amount: 5
                  - price_list_id: 3
                    variant_id: 382
                    price: 9.8
                    sale_price: 9.8
                    retail_price: 9.8
                    map_price: 9.8
                    calculated_price: 9.8
                    date_created: '2022-09-17T20:33:14Z'
                    date_modified: '2022-09-17T20:33:14Z'
                    currency: usd
                    product_id: 192
                    bulk_pricing_tiers: []
                  - price_list_id: 3
                    variant_id: 383
                    price: 24.5
                    sale_price: 24.5
                    retail_price: 24.5
                    map_price: 24.5
                    calculated_price: 24.5
                    date_created: '2022-09-17T20:33:14Z'
                    date_modified: '2022-09-17T20:33:14Z'
                    currency: usd
                    product_id: 192
                    bulk_pricing_tiers: []
                  - price_list_id: 3
                    variant_id: 384
                    price: 24.5
                    sale_price: 24.5
                    retail_price: 24.5
                    map_price: 24.5
                    calculated_price: 24.5
                    date_created: '2022-09-17T20:33:14Z'
                    date_modified: '2022-09-17T20:33:14Z'
                    currency: usd
                    product_id: 192
                    bulk_pricing_tiers: []
                  - price_list_id: 3
                    variant_id: 385
                    price: 9.8
                    sale_price: 9.8
                    retail_price: 9.8
                    map_price: 9.8
                    calculated_price: 9.8
                    date_created: '2022-09-17T20:33:14Z'
                    date_modified: '2022-09-17T20:33:14Z'
                    currency: usd
                    product_id: 193
                    bulk_pricing_tiers: []
                  - price_list_id: 3
                    variant_id: 386
                    price: 10.78
                    sale_price: 10.78
                    retail_price: 10.78
                    map_price: 10.78
                    calculated_price: 10.78
                    date_created: '2022-09-17T20:33:14Z'
                    date_modified: '2022-09-17T20:33:14Z'
                    currency: usd
                    product_id: 194
                    bulk_pricing_tiers: []
                  - price_list_id: 3
                    variant_id: 388
                    price: 10.78
                    sale_price: 10.78
                    retail_price: 10.78
                    map_price: 10.78
                    calculated_price: 10.78
                    date_created: '2022-09-17T20:33:14Z'
                    date_modified: '2022-09-17T20:35:42Z'
                    currency: usd
                    product_id: 195
                    bulk_pricing_tiers:
                      - quantity_min: 2
                        quantity_max: 9
                        type: percent
                        amount: 1
                      - quantity_min: 10
                        quantity_max: 19
                        type: percent
                        amount: 2
                      - quantity_min: 20
                        quantity_max: 2147483647
                        type: percent
                        amount: 3
                  - price_list_id: 3
                    variant_id: 389
                    price: 18.62
                    sale_price: 18.62
                    retail_price: 18.62
                    map_price: 18.62
                    calculated_price: 18.62
                    date_created: '2022-09-17T20:33:14Z'
                    date_modified: '2022-09-17T20:35:42Z'
                    currency: usd
                    product_id: 195
                    bulk_pricing_tiers:
                      - quantity_min: 2
                        quantity_max: 9
                        type: percent
                        amount: 1
                      - quantity_min: 10
                        quantity_max: 19
                        type: percent
                        amount: 2
                      - quantity_min: 20
                        quantity_max: 2147483647
                        type: percent
                        amount: 3
                  - price_list_id: 3
                    variant_id: 390
                    price: 10.78
                    sale_price: 10.78
                    retail_price: 10.78
                    map_price: 10.78
                    calculated_price: 10.78
                    date_created: '2022-09-17T20:33:14Z'
                    date_modified: '2022-09-17T20:35:42Z'
                    currency: usd
                    product_id: 195
                    bulk_pricing_tiers:
                      - quantity_min: 2
                        quantity_max: 9
                        type: percent
                        amount: 1
                      - quantity_min: 10
                        quantity_max: 19
                        type: percent
                        amount: 2
                      - quantity_min: 20
                        quantity_max: 2147483647
                        type: percent
                        amount: 3
                  - price_list_id: 3
                    variant_id: 391
                    price: 10.78
                    sale_price: 10.78
                    retail_price: 10.78
                    map_price: 10.78
                    calculated_price: 10.78
                    date_created: '2022-09-17T20:33:14Z'
                    date_modified: '2022-09-17T20:35:42Z'
                    currency: usd
                    product_id: 195
                    bulk_pricing_tiers:
                      - quantity_min: 2
                        quantity_max: 9
                        type: percent
                        amount: 1
                      - quantity_min: 10
                        quantity_max: 19
                        type: percent
                        amount: 2
                      - quantity_min: 20
                        quantity_max: 2147483647
                        type: percent
                        amount: 3
                meta:
                  pagination:
                    total: 14
                    count: 14
                    per_page: 50
                    current_page: 1
                    total_pages: 1
        '429':
          description: |
            Allowed number of requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    status: 429
                    title: Too many requests
                    type: /api-docs/getting-started/api-status-codes
                    errors: {}
            examples: {}
    put:
      tags:
        - Price Lists Records
      summary: Upsert Price List Records
      description: |-
        Creates or updates *Price List Records*. 
        **Required Fields**
        * currency
        **Notes**
        * Batch requests support up to 1,000 items per request.
        * Up to 2 concurrent batch upsert requests are supported with this API. Running more than the allowed concurrent requests in parallel on the **same store** will cause a `429` error, and your additional requests will fail. You are encouraged to run requests sequentially with as many records per request as possible to maximize performance.
        * When updating a product with variants, or multiple SKUs, don't include records for the parent product SKU.
      operationId: setPriceListRecordCollection
      parameters:
        - name: price_list_id
          in: path
          description: |
            The ID of the `Price List` requested.
          required: true
          schema:
            type: integer
        - name: X-Strict-Mode
          in: header
          description: |
            Header that determines whether the Batch API operates in strict mode or not. Strict mode will reject the entire request if any item in the batch has an error.
          schema:
            type: integer
            default: 0
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Price Record Collection Put
              type: array
              items:
                title: PriceRecord Batch Item
                description: Price Record object used in batch create or update.
                allOf:
                  - properties:
                      variant_id:
                        type: integer
                        description: |
                          The variant ID with which this price set is associated. Either `variant_id` or `sku` is required.
                        example: 331
                      sku:
                        type: string
                        description: |
                          The SKU for the variant with which this price set is associated. Either `sku` or `variant_id` is required.
                        example: SMB-123
                      currency:
                        type: string
                        description: |
                          The 3-letter currency code with which this price set is associated.
                        format: ISO-4217
                        example: usd
                  - title: PriceRecord Base
                    description: Common Price Record properties.
                    properties:
                      price:
                        type: number
                        description: |
                          The list price for the variant mapped in a Price List. Overrides any existing or Catalog list price for the variant/product.
                        format: double
                        example: 3.99
                        x-required:
                          - put
                      sale_price:
                        type: number
                        description: |
                          The sale price for the variant mapped in a Price List. Overrides any existing or Catalog sale price for the variant/product. If empty, the sale price will be treated as not being set on this variant.
                        format: double
                        minimum: 0
                        example: 3.49
                      retail_price:
                        type: number
                        description: |
                          The retail price for the variant mapped in a Price List. Overrides any existing or Catalog retail price for the variant/product. If empty, the retail price will be treated as not being set on this variant.
                        format: double
                        minimum: 0
                        example: 4.99
                      map_price:
                        type: number
                        description: |
                          The MAP (Minimum Advertised Price) for the variant mapped in a Price List. Overrides any existing or Catalog MAP price for the variant/product. If empty, the MAP price will be treated as not being set on this variant.
                        format: double
                        minimum: 0
                        example: 2.5
                      bulk_pricing_tiers:
                        type: array
                        items:
                          title: Bulk Pricing Tier
                          type: object
                          properties:
                            quantity_min:
                              type: integer
                              description: |
                                The minimum quantity of associated variant in the cart needed to qualify for the pricing of this tier.
                              example: 1
                            quantity_max:
                              type: integer
                              description: |
                                The maximum allowed quantity of associated variant in the cart to qualify for the pricing of this tier.
                              example: 10
                            type:
                              type: string
                              description: |
                                The type of adjustment that is made. Acceptable values: price – the adjustment amount per product; percent – the adjustment as a percentage of the original price; fixed – the adjusted absolute price of the product.
                              example: price
                              enum:
                                - fixed
                                - price
                                - percent
                            amount:
                              type: number
                              description: |
                                The price adjustment amount. This value along with the type will decide the price per variant for the pricing tier.
                              format: double
                              example: 3
                      sku:
                        type: string
                        description: |
                          The SKU code associated with this `Price Record` if requested and it exists.
                        example: SMB-123
                type: object
        required: true
        description: ''
      responses:
        '200':
          description: 'Success response for batch PUT requests of Price Records.'
          content:
            application/json:
              schema:
                title: Price Records response
                type: object
                properties:
                  data:
                    type: object
                    properties: {}
                  meta:
                    type: object
                    properties: {}
        '422':
          description: Error response for batch PUT of `Price Records`. May include errors during partial update in non-strict mode.
          content:
            application/json:
              schema:
                title: PriceRecord Batch Error Response
                type: object
                properties:
                  batch_errors:
                    type: array
                    items:
                      title: PriceRecord Batch Error Set
                      type: object
                      properties:
                        data:
                          title: Price Record Identifiers
                          type: object
                          description: Price Record object used in batch create or update.
                          allOf:
                            - type: object
                              properties:
                                price_list_id:
                                  type: integer
                                  description: |
                                    The Price List with which this price set is associated.
                                  example: 2
                                variant_id:
                                  type: integer
                                  description: |
                                    The variant ID with which this price set is associated. Either `variant_id` or `sku` is required.
                                  example: 325
                                sku:
                                  type: string
                                  description: |
                                    The variant with which this price set is associated. Either `sku` or `variant_id` is required.
                                currency:
                                  type: string
                                  description: |
                                    The 3-letter currency code with which this price set is associated.
                                  format: ISO-4217
                                  example: usd
                        field_errors:
                          title: Detailed Errors
                          type: object
                          properties: {}
                          additionalProperties: true
                      description: Error during Price Record batch PUT request. Includes data sent in the request and errors.
                description: Errors during batch usage for the BigCommerce API.
        '429':
          description: |
            Allowed number of requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    status: 429
                    title: Too many requests
                    type: /api-docs/getting-started/api-status-codes
                    errors: {}
            examples: {}
    delete:
      tags:
        - Price Lists Records
      summary: Delete a Price List Record
      description: Deletes a *Price List Record*. Deleting the records does not delete the Price List. Optional parameters can be passed in.
      operationId: deletePriceListRecordsByFilter
      parameters:
        - name: price_list_id
          in: path
          description: |
            The ID of the `Price List` requested.
          required: true
          schema:
            type: integer
        - name: 'variant_id:in'
          in: query
          description: The ID of the `Variant` for which prices were requested.
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                title: No Content
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      204 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the situation.
                  type:
                    type: string
                  instance:
                    type: string
                description: No-content response for the BigCommerce API.
  '/pricelists/{price_list_id}/records/{variant_id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
        - Price Lists Records
      summary: Get Price Records by Variant
      description: |
        Returns *Price List Records* using the variant ID. Will also contain currency records.
        
        **Notes**
        * Supports up to 40 simultaneous GET requests. Running more than the allowed number of requests concurrently on the same store will result in a `429` status error, and your additional requests will fail.
        * Store Pricelist Records data to reduce the number of calls and maximize performance.
      operationId: getPriceListRecordsByVariantId
      parameters:
        - name: price_list_id
          in: path
          description: |
            The ID of the `Price List` requested.
          required: true
          schema:
            type: integer
        - name: variant_id
          in: path
          description: |
            ID of the variant on a product, or on an associated Price List Record.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PriceRecord Collection Response
                type: object
                description: |-
                  PriceRecord Collection Response returns for:
                  * Get All PriceList Records
                  * Get PriceList Records by Variant ID
                properties:
                  data:
                    type: array
                    items:
                      title: Price Record
                      description: The Price Record object.
                      allOf:
                        - properties:
                            calculated_price:
                              type: number
                              description: |
                                The price of the variant as seen on the storefront if a price record is in effect. It will be equal to the `sale_price`, if set, and the `price` if there is not a `sale_price`. Read only.
                              format: double
                              example: 24.64
                              readOnly: true
                            date_created:
                              type: string
                              description: |
                                The date on which the Price entry was created.
                              format: date-time
                              example: '2022-08-23T19:59:23Z'
                            date_modified:
                              type: string
                              description: |
                                The date on which the Price entry was created.
                              format: date-time
                              example: '2022-08-23T19:59:23Z'
                            product_id:
                              type: integer
                              description: |
                                The ID of the `Product` this `Price Record`ʼs `variant_id` is associated with. Read only.
                              example: 158
                              readOnly: true
                        - title: Price Record Identifiers
                          description: Price Record object used in batch create or update.
                          properties:
                            price_list_id:
                              type: integer
                              description: |
                                The Price List with which this price set is associated.
                              example: 2
                            variant_id:
                              type: integer
                              description: |
                                The variant ID with which this price set is associated. Either `variant_id` or `sku` is required.
                              example: 325
                            sku:
                              type: string
                              description: |
                                The variant ID with which this price set is associated. Either `sku` or `variant_id` is required.
                            currency:
                              type: string
                              description: |
                                The 3-letter currency code with which this price set is associated.
                              example: usd
                        - title: PriceRecord Base
                          description: Common Price Record properties.
                          properties:
                            price:
                              type: number
                              description: |
                                The list price for the variant mapped in a Price List. Overrides any existing or Catalog list price for the variant/product.
                              format: double
                              example: 3.99
                              x-required:
                                - put
                            sale_price:
                              type: number
                              description: |
                                The sale price for the variant mapped in a Price List. Overrides any existing or Catalog sale price for the variant/product. If empty, the sale price will be treated as not being set on this variant.
                              format: double
                              minimum: 0
                              example: 5.99
                            retail_price:
                              type: number
                              description: |
                                The retail price for the variant mapped in a Price List. Overrides any existing or Catalog retail price for the variant/product. If empty, the retail price will be treated as not being set on this variant.
                              format: double
                              minimum: 0
                              example: 6.99
                            map_price:
                              type: number
                              description: |
                                The MAP (Minimum Advertised Price) for the variant mapped in a Price List. Overrides any existing or Catalog MAP price for the variant/product. If empty, the MAP price will be treated as not being set on this variant.
                              format: double
                              minimum: 0
                              example: 5.99
                            bulk_pricing_tiers:
                              type: array
                              items:
                                title: Bulk Pricing Tier
                                type: object
                                properties:
                                  quantity_min:
                                    type: integer
                                    description: |
                                      The minimum quantity of associated variant in the cart needed to qualify for this tiers pricing.
                                    example: 1
                                  quantity_max:
                                    type: integer
                                    description: |
                                      The maximum allowed quantity of associated variant in the cart to qualify for this tiers pricing.
                                    example: 10
                                  type:
                                    type: string
                                    description: |
                                      The type of adjustment that is made. Acceptable values: price – the adjustment amount per product; percent – the adjustment as a percentage of the original price; fixed – the adjusted absolute price of the product.
                                    example: price
                                    enum:
                                      - fixed
                                      - price
                                      - percent
                                  amount:
                                    type: number
                                    description: |
                                      The price adjustment amount. This value along with the type will decide the price per variant for the pricing tier.
                                    format: double
                                    example: 3
                            sku:
                              type: string
                              description: |
                                The SKU code associated with this `Price Record` if requested and it exists.
                              example: SMB-123
                      type: object
                  meta:
                    title: Collection Meta
                    type: object
                    description: 'Data related to the response, including pagination and collection totals.'
                    properties:
                      pagination:
                        title: Pagination
                        type: object
                        description: 'Data related to the response, including pagination and collection totals.'
                        properties:
                          total:
                            type: integer
                            description: |
                              Total number of items in the result set.
                            example: 36
                          count:
                            type: integer
                            description: |
                              Total number of items in the collection response.
                            example: 36
                          per_page:
                            type: integer
                            description: |
                              The amount of items returned in the collection per page, controlled by the limit parameter.
                            example: 50
                          current_page:
                            type: integer
                            description: |
                              The page you are currently on within the collection.
                            example: 1
                          total_pages:
                            type: integer
                            description: |
                              The total number of pages in the collection.
                            example: 1
                          links:
                            type: object
                            description: |
                              Pagination links for the previous and next parts of the whole collection.
                            properties:
                              previous:
                                type: string
                                description: |
                                  Link to the previous page returned in the response.
                              current:
                                type: string
                                description: |
                                  Link to the current page returned in the response.
                                example: '?page=1&limit=50'
                              next:
                                type: string
                                description: |
                                  Link to the next page returned in the response.
        '429':
          description: |
            Allowed number of requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    status: 429
                    title: Too many requests
                    type: /api-docs/getting-started/api-status-codes
                    errors: {}
            examples: {}
  '/pricelists/{price_list_id}/records/{variant_id}/{currency_code}':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
        - Price Lists Records
      summary: Get a Price Record by Currency Code
      description: |- 
        Returns a *Price List Record* using the currency code. You can use optional parameters.
        **Notes**
        * Supports up to 40 simultaneous GET requests. Running more than the allowed number of requests concurrently on the same store will result in a `429` status error, and your additional requests will fail.
      operationId: getPriceListRecord
      parameters:
        - name: price_list_id
          in: path
          description: |
            The ID of the `Price List` requested.
          required: true
          schema:
            type: integer
        - name: variant_id
          in: path
          description: |
            ID of the variant on a product, or on an associated Price List Record.
          required: true
          schema:
            type: integer
        - name: currency_code
          in: path
          description: |
            The currency code associated with the price record being acted upon.
          required: true
          schema:
            type: string
            format: ISO-4217
        - name: include
          in: query
          description: |
            Sub-resources to include on a price record, in a comma-separated list. Valid expansions currently include `bulk_pricing_tiers` and `sku`. Other values will be ignored.
            Sub-resources to include on a price record, in a comma-separated list. Valid expansions currently include `bulk_pricing_tiers` and `sku`. Other values will be ignored.
          schema:
            type: string
            enum:
              - bulk_pricing_tiers
              - sku
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Price Record Response
                type: object
                properties:
                  data:
                    title: Price Record
                    type: object
                    description: The Price Record object.
                    allOf:
                      - type: object
                        properties:
                          calculated_price:
                            type: number
                            description: |
                              The price of the variant as seen on the storefront if a price record is in effect. It will be equal to the `sale_price`, if set, and the `price` if there is not a `sale_price`. Read only.
                            format: double
                            example: 24.64
                            readOnly: true
                          date_created:
                            type: string
                            description: |
                              The date on which the Price entry was created.
                            format: date-time
                            example: '2022-08-23T19:59:23Z'
                          date_modified:
                            type: string
                            description: |
                              The date on which the Price entry was created.
                            format: date-time
                            example: '2022-08-23T19:59:23Z'
                          product_id:
                            type: integer
                            description: |
                              The ID of the `Product` this `Price Record`ʼs `variant_id` is associated with. Read only.
                            example: 158
                            readOnly: true
                      - title: Price Record Identifiers
                        type: object
                        description: Price Record object used in batch create or update requests.
                        allOf:
                          - type: object
                            properties:
                              price_list_id:
                                type: integer
                                description: |
                                  The Price List with which this price set is associated.
                                example: 2
                              variant_id:
                                type: integer
                                description: |
                                  The variant with which this price set is associated. Either `variant_id` or `sku` is required.
                                example: 325
                              sku:
                                type: string
                                description: |
                                  The variant with which this price set is associated. Either `sku` or `variant_id` is required.
                              currency:
                                type: string
                                description: |
                                  The 3-letter currency code with which this price set is associated.
                                format: ISO-4217
                                example: usd
                      - title: PriceRecord Base
                        type: object
                        properties:
                          price:
                            type: number
                            description: |
                              The list price for the variant mapped in a Price List. Overrides any existing or Catalog list price for the variant/product.
                            format: double
                            example: 3.99
                            x-required:
                              - put
                          sale_price:
                            type: number
                            description: |
                              The sale price for the variant mapped in a Price List. Overrides any existing or Catalog sale price for the variant/product. If empty, the sale price will be treated as not being set on this variant.
                            format: double
                          retail_price:
                            type: number
                            description: |
                              The retail price for the variant mapped in a Price List. Overrides any existing or Catalog retail price for the variant/product. If empty, the retail price will be treated as not being set on this variant.
                            format: double
                          map_price:
                            type: number
                            description: |
                              The MAP (Minimum Advertised Price) for the variant mapped in a Price List. Overrides any existing or Catalog MAP price for the variant/product. If empty, the MAP price will be treated as not being set on this variant.
                            format: double
                          bulk_pricing_tiers:
                            type: array
                            items:
                              title: Bulk Pricing Tier
                              type: object
                              properties:
                                quantity_min:
                                  type: integer
                                  description: |
                                    The minimum quantity of associated variant in the cart needed to qualify for the pricing of this tier.
                                  example: 1
                                quantity_max:
                                  type: integer
                                  description: |
                                    The maximum allowed quantity of associated variant in the cart to qualify for the pricing of this tier.
                                  example: 10
                                type:
                                  type: string
                                  description: |
                                    The type of adjustment that is made. Acceptable values: price – the adjustment amount per product; percent – the adjustment as a percentage of the original price; fixed – the adjusted absolute price of the product.
                                  example: price
                                  enum:
                                    - fixed
                                    - price
                                    - percent
                                amount:
                                  type: number
                                  description: |
                                    The price adjustment amount. This value along with the type will decide the price per variant for the pricing tier.
                                  format: double
                                  example: 3
                          sku:
                            type: string
                            description: |
                              The SKU code associated with this `Price Record` if requested and it exists.
                            example: SMB-123
                        description: Common Price Record properties.
                  meta:
                    $ref: '#/components/schemas/Meta'
                description: Response payload for the BigCommerce API.
              example:
                data:
                  price_list_id: 4
                  variant_id: 356
                  price: 22.544
                  sale_price: 22.544
                  retail_price: 22.544
                  map_price: 22.544
                  calculated_price: 22.544
                  date_created: '2022-09-18T13:18:15Z'
                  date_modified: '2022-09-18T13:18:15Z'
                  currency: eur
                  product_id: 185
                meta:
                  pagination:
                    total: 1
                    count: 1
                    per_page: 50
                    current_page: 1
                    total_pages: 1
        '429':
          description: |
            Allowed number of requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    status: 429
                    title: Too many requests
                    type: /api-docs/getting-started/api-status-codes
                    errors: {}
            examples: {}
    put:
      tags:
        - Price Lists Records
      summary: Set Price List Record by Currency Code
      description: |-
        Creates or updates a *Price List Record* using the currency code.
        **Notes**
        * Supports up to 40 simultaneous PUT requests. Running more than the allowed number of requests concurrently on the same store will result in a `429` status error, and your additional requests will fail.
      operationId: setPriceListRecord
      parameters:
        - name: price_list_id
          in: path
          description: |
            The ID of the `Price List` requested.
          required: true
          schema:
            type: integer
        - name: variant_id
          in: path
          description: |
            ID of the variant on a product, or on an associated Price List Record.
          required: true
          schema:
            type: integer
        - name: currency_code
          in: path
          description: |
            The currency code associated with the price record being acted upon.
          required: true
          schema:
            type: string
            format: ISO-4217
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Price Record Put
              allOf:
                - title: PriceRecord Base
                  type: object
                  properties:
                    price:
                      type: number
                      description: |
                        The list price for the variant mapped in a Price List. Overrides any existing or Catalog list price for the variant/product.
                      format: double
                      example: 3.99
                      x-required:
                        - put
                    sale_price:
                      type: number
                      description: |
                        The sale price for the variant mapped in a Price List. Overrides any existing or Catalog sale price for the variant/product. If empty, the sale price will be treated as not being set on this variant.
                      format: double
                    retail_price:
                      type: number
                      description: |
                        The retail price for the variant mapped in a Price List. Overrides any existing or Catalog retail price for the variant/product.  If empty, the retail price will be treated as not being set on this variant.
                      format: double
                    map_price:
                      type: number
                      description: |
                        The MAP (Minimum Advertised Price) for the variant mapped in a Price List. Overrides any existing or Catalog MAP price for the variant/product. If empty, the MAP price will be treated as not being set on this variant.
                      format: double
                    bulk_pricing_tiers:
                      type: array
                      items:
                        title: Bulk Pricing Tier
                        type: object
                        properties:
                          quantity_min:
                            type: integer
                            description: |
                              The minimum quantity of associated variant in the cart needed to qualify for this tiers pricing.
                            example: 1
                          quantity_max:
                            type: integer
                            description: |
                              The maximum allowed quantity of associated variant in the cart to qualify for this tiers pricing.
                            example: 10
                          type:
                            type: string
                            description: |
                              The type of adjustment that is made. Acceptable values: price – the adjustment amount per product; percent – the adjustment as a percentage of the original price; fixed – the adjusted absolute price of the product.
                            example: price
                            enum:
                              - fixed
                              - price
                              - percent
                          amount:
                            type: number
                            description: |
                              The price adjustment amount. This value along with the type will decide the price per variant for the pricing tier.
                            format: double
                            example: 3
                    sku:
                      type: string
                      description: |
                        The SKU code associated with this `Price Record` if requested and it exists.
                      example: SMB-123
                  description: Common Price Record properties.
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                description: Response payload for the BigCommerce API.
                type: object
                properties:
                  data:
                    description: The Price Record object.
                    allOf:
                      - properties:
                          calculated_price:
                            type: number
                            format: double
                            description: |
                              The price of the variant as seen on the storefront if a price record is in effect. It will be equal to the `sale_price`, if set, and the `price` if there is not a `sale_price`. Read only.
                            example: 24.64
                            readOnly: true
                          date_created:
                            type: string
                            format: date-time
                            description: |
                              The date on which the Price entry was created.
                            example: '2018-08-23T19:59:23Z'
                          date_modified:
                            type: string
                            format: date-time
                            description: |
                              The date on which the Price entry was created.
                            example: '2018-08-23T19:59:23Z'
                          product_id:
                            type: integer
                            description: |
                              The ID of the `Product` this `Price Record`ʼs `variant_id` is associated with. Read only.
                            example: 158
                            readOnly: true
                      - description: Price Record object used in a batch create or update request.
                        allOf:
                          - properties:
                              price_list_id:
                                type: integer
                                description: |
                                  The Price List with which this price set is associated.
                                example: 2
                              variant_id:
                                type: integer
                                description: |
                                  The variant with which this price set is associated. Either `variant_id` or `sku` is required.
                                example: 325
                              sku:
                                type: string
                                description: |
                                  The variant with which this price set is associated. Either `sku` or `variant_id` is required.
                              currency:
                                type: string
                                format: ISO-4217
                                description: |
                                  The 3-letter currency code with which this price set is associated.
                                example: usd
                        title: Price Record Identifiers
                        type: object
                      - type: object
                        description: Common Price Record properties.
                        title: PriceRecord Base
                        properties:
                          price:
                            type: number
                            format: double
                            description: |
                              The list price for the variant mapped in a Price List. Overrides any existing or Catalog list price for the variant/product.
                            x-required:
                              - put
                            example: 3.99
                          sale_price:
                            type: number
                            format: double
                            description: |
                              The sale price for the variant mapped in a Price List. Overrides any existing or Catalog sale price for the variant/product. If empty, the sale price will be treated as not being set on this variant.
                          retail_price:
                            type: number
                            format: double
                            description: |
                              The retail price for the variant mapped in a Price List. Overrides any existing or Catalog retail price for the variant/product.  If empty, the retail price will be treated as not being set on this variant.
                          map_price:
                            type: number
                            format: double
                            description: |
                              The MAP (Minimum Advertised Price) for the variant mapped in a Price List. Overrides any existing or Catalog MAP price for the variant/product. If empty, the MAP price will be treated as not being set on this variant.
                          bulk_pricing_tiers:
                            type: array
                            items:
                              type: object
                              title: Bulk Pricing Tier
                              properties:
                                quantity_min:
                                  type: integer
                                  description: |
                                    The minimum quantity of associated variant in the cart needed to qualify for the pricing of this tier.
                                  example: 1
                                quantity_max:
                                  type: integer
                                  description: |
                                    The maximum allowed quantity of associated variant in the cart to qualify for the pricing of this tier.
                                  example: 10
                                type:
                                  type: string
                                  enum:
                                    - fixed
                                    - price
                                    - percent
                                  description: |
                                    The type of adjustment that is made. Acceptable values: price – the adjustment amount per product; percent – the adjustment as a percentage of the original price; fixed – the adjusted absolute price of the product.
                                  example: price
                                amount:
                                  type: number
                                  format: double
                                  description: |
                                    The price adjustment amount. This value along with the type will decide the price per variant for the pricing tier.
                                  example: 3
                          sku:
                            type: string
                            description: |
                              The SKU code associated with this `Price Record` if requested and it exists.
                            example: SMB-123
                    title: Price Record
                    type: object
                  meta:
                    $ref: '#/components/schemas/Meta'
                title: Price Record Response
              examples:
                value:
                  value:
                    data:
                      price_list_id: 4
                      variant_id: 356
                      price: 12.99
                      sale_price: 10.99
                      retail_price: 15.99
                      map_price: 17.99
                      calculated_price: 10.99
                      date_created: '2022-09-18T13:18:15Z'
                      date_modified: '2022-09-18T13:30:48Z'
                      currency: eur
                      product_id: 185
                      bulk_pricing_tiers:
                        - quantity_min: 5
                          quantity_max: 10
                          type: percent
                          amount: 1
                        - quantity_min: 11
                          quantity_max: 20
                          type: percent
                          amount: 2
                    meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '409':
          description: |
            `Price Record` was in conflict with another price record. This is the result of duplicate unique values.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            `Price Record` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '429':
          description: |
            Allowed number of requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    status: 429
                    title: Too many requests
                    type: /api-docs/getting-started/api-status-codes
                    errors: {}
            examples: {}
    delete:
      tags:
        - Price Lists Records
      summary: Delete a Price Record by Currency Code
      description: Deletes a *Price List Record* using the currency code.
      operationId: deletePriceListRecord
      parameters:
        - name: price_list_id
          in: path
          description: |
            The ID of the `Price List` requested.
          required: true
          schema:
            type: integer
        - name: variant_id
          in: path
          description: |
            ID of the variant on a product, or on an associated Price List Record.
          required: true
          schema:
            type: integer
        - name: currency_code
          in: path
          description: |
            The currency code associated with the price record being acted upon.
          required: true
          schema:
            type: string
            format: ISO-4217
      responses:
        '204':
          description: ''
          content: {}
  '/pricelists/assignments':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
        - Price Lists Assignments
      summary: Get Price List Assignments
      description: Fetches an array of `Price List Assignments` matching a particular Customer Group and Price List and Channel.
      operationId: GetListOfPriceListAssignments
      parameters:
        - name: id
          in: query
          description: The ID of the `Price List Assignment`.
          schema:
            type: integer
        - name: price_list_id
          in: query
          description: The ID of the `Price List`.
          schema:
            type: integer
        - name: customer_group_id
          in: query
          description: The ID of the `Customer Group`.
          schema:
            type: integer
        - name: channel_id
          in: query
          description: The ID of the `Channel`.
          schema:
            type: integer
        - name: 'id:in'
          in: query
          description: Filter items by a comma-separated list of `id`s.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'customer_group_id:in'
          in: query
          description: Filter items by a comma-separated list of `customer_group_id`s.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'price_list_id:in'
          in: query
          description: Filter items by a comma-separated list of `price_list_id`s.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'channel_id:in'
          in: query
          description: Filter items by a comma-separated list of `channel_id`s.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
      responses:
        '200':
          description: An array of price list assignments and metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentsForGetResponse'
    post:
      tags:
        - Price Lists Assignments
      description: |-
        Creates a batch of `Price List Assignments`. 
        **Note:** The batch limit for `Price List Assignments` is 25.
      summary: Create Price List Assignments
      operationId: CreatePriceListAssignments
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBatchPriceListAssignmentsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessBatchResponse'
        '422':
          description: Error response. Includes the errors for each reference ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceListAssignmentsBatchErrorResponse'
    delete:
      tags:
        - Price Lists Assignments
      summary: Delete Price List Assignments
      description: 'Deletes one or more `Price List Assignments` objects from BigCommerce using a query parameter. You must use at least one query parameter. '
      operationId: deletePriceListAssignmentsByFilter
      parameters:
        - $ref: '#/components/parameters/FilterAssignmentIdParam'
        - $ref: '#/components/parameters/FilterPriceListIdParam'
        - $ref: '#/components/parameters/FilterCustomerGroupIdParam'
        - $ref: '#/components/parameters/FilterChannelIdParam'
        - $ref: '#/components/parameters/ChannelIdInParam'
      responses:
        '204':
          description: No Content.
  '/pricelists/{price_list_id}/assignments':
    parameters:
      - $ref: '#/components/parameters/Accept'
    put:
      tags:
        - Price Lists Assignments
      description: Upsert a single `Price List Assignment` for a `Price List`.
      summary: Upsert Price List Assignment
      operationId: upsertPriceListAssignment
      parameters:
        - $ref: '#/components/parameters/PriceListIdParam'
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentForPutRequest'
        required: true
      responses:
        '200':
          description: A price list assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentForPutResponse'
        '404':
          description: 'A matching customer group or channel wasnʼt found, so no assignment is created or returned.'
components:
  parameters:
    ChannelIdInParam:
      in: query
      name: 'channel_id:in'
      description: Filter results by a comma-separated list of `channel_id`s.
      schema:
        type: string
    PriceListIdParam:
      schema:
        type: integer
      name: price_list_id
      in: path
      description: |
        The ID of the `Price List` requested.
      required: true
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
    FilterAssignmentIdParam:
      description: The ID of the `Price List Assignment`.
      required: false
      in: query
      schema:
        type: integer
      name: id
    FilterPriceListIdParam:
      name: price_list_id
      description: The ID of the `Price List`.
      required: false
      in: query
      schema:
        type: integer
    FilterCustomerGroupIdParam:
      name: customer_group_id
      description: The ID of the `Customer Group`.
      required: false
      in: query
      schema:
        type: integer
    FilterChannelIdParam:
      name: channel_id
      description: The ID of the `Channel`.
      required: false
      in: query
      schema:
        type: integer
  schemas:
    AssignmentsForRequest:
      type: object
      description: '`Price List Assignments` object used in a batch create request.'
      x-internal: false
      properties:
        price_list_id:
          type: integer
          format: int32
          description: Price list ID for assignment.
          example: 1
        customer_group_id:
          type: integer
          format: int32
          description: Customer group ID for assignment.
          example: 2
        channel_id:
          type: integer
          format: int32
          description: Channel ID for assignment
          example: 1
      required:
        - price_list_id
    AssignmentForPutRequest:
      type: object
      properties:
        customer_group_id:
          type: integer
          format: int32
          description: Customer group ID for assignment.
          example: 2
        channel_id:
          type: integer
          format: int32
          description: Channel ID for assignment
          example: 1
      required:
        - customer_group_id
        - channel_id
    AssignmentForPutResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: integer
              format: int32
              description: Unique identifier for this price list assignment.
              example: 1
            price_list_id:
              type: integer
              format: int32
              description: Price list ID for assignment.
              example: 1
            customer_group_id:
              type: integer
              format: int32
              description: Customer group ID for assignment.
              example: 2
            channel_id:
              type: integer
              format: int32
              description: Channel ID for assignment.
              example: 2
        meta:
          $ref: '#/components/schemas/Meta'
    PriceRecordCollectionPutWithPriceListId:
      type: array
      items:
        $ref: '#/components/schemas/PriceRecordBatchItem'
    PriceRecordBatchItem:
      description: The `Price Record` object used in batch create or update.
      allOf:
      - type: array
        items:
          $ref: '#/components/schemas/PriceRecordBase'
        properties:
          price_list_id:
            type: integer
            description: The price list ID the price record is associated with.
          variant_id:
            type: integer
            description: The price list with which the price record is associated. Either `variant_id` or `sku` is required.
          sku:
            type: string
            description: The SKU for the variant with which this price record is associated.  Either `sku`` or `variant_id is required.
          currency:
            type: string
            description: The 3-letter country code with which this price record is associated.
            format: ISO:4217
    PriceRecordBase:
      type: object
      properties: 
        price: 
          type: number
          description: The list price for the variant mapped in a Price List. Overrides any existing or Catalog list price for the variant/product. If empty, the sale price will be treated as not being set on this variant.
        
          format: double
        sale_price:
          type: number
          description: The sale price for the variant mapped in a Price List. Overrides any existing or Catalog sale price for the variant/product. If empty, the sale price will be treated as not being set on this variant.
          format: double
        retail_price:
          type: number
          description: The retail price for the variant mapped in a Price List. Overrides any existing or Catalog retail price for the variant/product.  If empty, the retail price will be treated as not being set on this variant.
          format: double
        map_price:
          type: number
          description: The MAP (Minimum Advertised Price) for the variant mapped in a Price List. Overrides any existing or Catalog MAP price for the variant/product. If empty, the `map_ price` will be treated as not being set on this variant.
          format: double
        bulk_pricing_tiers:
          type: array
          items:
            $ref: '#/components/schemas/BulkPricingTier'
      description: Common Price Record properties.
    BulkPricingTier:
      type: object
      properties:
        quantity_min:
          type: integer
          description: The cart's minimum quantity of associated variants needed to qualify for this tier's pricing.
        quantity_max:
          type: integer
          description: The cart's maximum allowed quantity of associated variants to qualify for this tier's pricing.
        type:
          type: string
          description: |- 
            The type of adjustment that is made. 
            Acceptable values: 
            * price – the adjustment amount per product 
            * percent – the adjustment as a percentage of the original price 
            * fixed – the adjusted absolute price of the product
          enum:
            - fixed
            - price
            - percent
        amount:
          type: number
          description: The price adjustment amount. This value and the type will decide the price per variant for the pricing tier.
          format: double
    SuccessBatchResponse: 
      type: object
      description: Empty object for Success case for Batch API.
    PriceRecordBatchErrorResponse:
      type: object
      properties: 
        data:
          $ref: '#/components/schemas/PriceRecordIdentifiers'
        field_errors:
          $ref: '#/components/schemas/DetailedErrors'
      description: Error during `Price Record` batch PUT. Includes data sent in the request and errors.
    PriceRecordIdentifiers:
      type: object
      description: The `Price Record` object used in batch create or update.
      allOf:
      - type: object
        properties:
          price_list_id:
            type: integer
            description: The Price List with which this price record is associated.
          variant_id:
            type: integer
            description:  The variant with which this price record is associated. Either `variant_id`` or `sku` is required.
          sku: 
            type: string
            description: The variant with which this price record is associated. Either `sku`` or `variant_id`` is required.
          currency:
            type: string
            description: The 3-letter currency code with which this price set is associated.
            format: ISO-4217
    DetailedErrors:
      type: object
      additionalProperties:
        type: string
    PriceListAssignmentsBatchErrorResponse:
      type: object
      x-internal: false
      properties:
        status:
          type: integer
        title:
          type: string
        type:
          type: string
        errors:
          type: object
          properties: {}
          additionalProperties: true
          title: Detailed Errors
        meta:
          type: object
          properties:
            saved_records:
              type: integer
    AssignmentForGetResponse:
      type: object
      x-internal: false
      properties:
        id:
          type: integer
          format: int32
          description: Unique identifier for this price list assignment.
          example: 1
        price_list_id:
          type: integer
          format: int32
          description: Pricelist ID for assignment.
          example: 1
        customer_group_id:
          type: integer
          format: int32
          description: Customer group ID for assignment.
          example: 2
        channel_id:
          type: integer
          format: int32
          description: Channel ID for assignment.
          example: 2
    AssignmentsForGetResponse:
      description: Array of the price list assignments matching the filter. The response is paginated.
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentForGetResponse'
        meta:
          $ref: '#/components/schemas/CollectionMeta'
      x-internal: false
    CollectionMeta:
      type: object
      description: 'Data related the response, including pagination and collection totals.'
      properties:
        pagination:
          type: object
          description: 'Data related to the response, including pagination and collection totals.'
          title: Pagination
          properties:
            total:
              type: integer
              description: |
                Total number of items in the result set.
              example: 36
            count:
              type: integer
              description: |
                Total number of items in the collection response.
              example: 36
            per_page:
              type: integer
              description: |
                The amount of items returned in the collection per page, controlled by the limit parameter.
              example: 50
            current_page:
              type: integer
              description: |
                The page you are currently on within the collection.
              example: 1
            total_pages:
              type: integer
              description: |
                The total number of pages in the collection.
              example: 1
            links:
              type: object
              description: |
                Pagination links for the previous and next parts of the whole collection.
              properties:
                previous:
                  type: string
                  description: |
                    Link to the previous page returned in the response.
                current:
                  type: string
                  description: |
                    Link to the current page returned in the response.
                  example: '?page=1&limit=50'
                next:
                  type: string
                  description: |
                    Link to the next page returned in the response.
      title: Collection Meta
      x-internal: false
    Meta:
      title: Response meta
      type: object
      properties: {}
      additionalProperties: true
      description: Response metadata.
    ErrorResponse:
      allOf:
        - type: object
          description: |
            Error payload for the BigCommerce API.
          properties:
            status:
              description: |
                The HTTP status code.
              type: integer
            title:
              description: |
                The error title describing the particular error.
              type: string
            type:
              type: string
            instance:
              type: string
          title: Base Error
        - type: object
          properties:
            errors:
              type: object
              properties: {}
              additionalProperties: true
              title: Detailed Errors
      title: Error Response
      x-internal: false
    CreateBatchPriceListAssignmentsRequest:
      type: array
      description: Batch of price list assignments.
      items:
        $ref: '#/components/schemas/AssignmentsForRequest'
      x-internal: false
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Products | modify | `store_v2_products` |
        |  Products | read-only | `store_v2_products_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header

openapi: '3.0.1'
info:
  title: Pricing
  description: |-
    Get product pricing.
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  version: ''
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Products
paths:
  '/pricing/products':
    post:
      tags:
        - Products
      summary: Get Prices (Batch)
      description: |-
        Calculate batch pricing for products for a specific channel, currency, and customer group.

        **Limits**
        * Limit of 50 concurrent requests.
      operationId: get-prices
      requestBody:
        content:
          application/json:
            schema:
              required:
                - channel_id
                - currency_code
                - customer_group_id
                - items
              type: object
              properties:
                channel_id:
                  type: integer
                  description: The channel ID that pricing evaluates within. The default BigCommerce storefront is channel 1.
                  example: 1
                currency_code:
                  type: string
                  description: The currency code of prices this request returns.

                  example: USD
                customer_group_id:
                  type: integer
                  description: The customer group ID that's relevant for any customer group pricing, tax values, etc.
                items:
                  type: array
                  description: The items for which to fetch prices.

                  items:
                    type: object
                    properties:
                      product_id:
                        type: integer
                        description: The (required) product ID of the item.
                      variant_id:
                        type: number
                        description: The (optional) variant ID of the item.
                      options:
                        type: array
                        description: The option configuration of the product (optional); might be partially configured for estimates.
                        items:
                          type: object
                          properties:
                            option_id:
                              type: integer
                              description: The ID of the variant option or modifier option that is being configured for this product.
                            value_id:
                              type: integer
                              description: |-
                                The ID of the value matching the option that's being configured. 
                                
                                **Note:*** This must be the ID, not the value.

                    description: Details/configuration for the product to request a price for.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Note that a storeʼs [tax settings](/docs/rest-management/tax-settings) may affect the calculations for `tax_inclusive` and `tax_exclusive` prices. 
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        product_id:
                          type: integer
                          description: The (required) product ID of the item.
                        variant_id:
                          type: integer
                          description: The (optional) variant ID of the item.
                        options:
                          type: array
                          description: The optional product option configuration for which this price was generated.

                          items:
                            type: object
                            properties:
                              option_id:
                                type: integer
                                description: The ID of the variant option or modifier option configured for this price.
                              value_id:
                                type: integer
                                description: The selected value ID for the configured option.
                        retail_price:
                          type: object
                          properties:
                            as_entered:
                              type: number
                              description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
                            entered_inclusive:
                              type: boolean
                              description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
                            tax_exclusive:
                              type: number
                              description: The estimated tax exclusive price for this product based on the provided customer group.
                            tax_inclusive:
                              type: number
                              description: The estimated tax inclusive price for this product based on the provided customer group.
                          description: The (optional) RRP/retail price configured for this product. Used for price comparison and storefront display purposes.
                        sale_price:
                          type: object
                          properties:
                            as_entered:
                              type: number
                              description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
                            entered_inclusive:
                              type: boolean
                              description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
                            tax_exclusive:
                              type: number
                              description: The estimated tax exclusive price for this product based on the provided customer group.
                            tax_inclusive:
                              type: number
                              description: The estimated tax inclusive price for this product based on the provided customer group.
                          description: The merchant-entered sale price for a product overwrites the default price. The sale_price is optional.
                        minimum_advertised_price:
                          type: object
                          properties:
                            as_entered:
                              type: number
                              description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
                            entered_inclusive:
                              type: boolean
                              description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
                            tax_exclusive:
                              type: number
                              description: The estimated tax exclusive price for this product based on the provided customer group.
                            tax_inclusive:
                              type: number
                              description: The estimated tax inclusive price for this product based on the provided customer group.
                          description: The minimum advertised price (MAP) allowed to be shown on a storefront. A value supplied by the merchant and used for display purposes.
                        price:
                          type: object
                          properties:
                            as_entered:
                              type: number
                              description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
                            entered_inclusive:
                              type: boolean
                              description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
                            tax_exclusive:
                              type: number
                              description: The estimated tax exclusive price for this product based on the provided customer group.
                            tax_inclusive:
                              type: number
                              description: The estimated tax inclusive price for this product based on the provided customer group.
                          description: The merchant-entered price for a product could be including or excluding tax. Price must be defined when creating a product and serves as the default price.
                        calculated_price:
                          type: object
                          properties:
                            as_entered:
                              type: number
                              description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
                            entered_inclusive:
                              type: boolean
                              description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
                            tax_exclusive:
                              type: number
                              description: The estimated tax exclusive price for this product based on the provided customer group.
                            tax_inclusive:
                              type: number
                              description: The estimated tax inclusive price for this product based on the provided customer group.
                          description: The shopper price for a product including modifier, option, and option set rules. The `calculated_price` may include or exclude estimates for tax.
                        price_range:
                          type: object
                          properties:
                            minimum:
                              type: object
                              properties:
                                as_entered:
                                  type: number
                                  description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
                                entered_inclusive:
                                  type: boolean
                                  description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
                                tax_exclusive:
                                  type: number
                                  description: The estimated tax exclusive price for this product based on the provided customer group.
                                tax_inclusive:
                                  type: number
                                  description: The estimated tax inclusive price for this product based on the provided customer group.
                              description: The price for a product including estimates for tax.
                            maximum:
                              type: object
                              properties:
                                as_entered:
                                  type: number
                                  description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
                                entered_inclusive:
                                  type: boolean
                                  description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
                                tax_exclusive:
                                  type: number
                                  description: The estimated tax exclusive price for this product based on the provided customer group.
                                tax_inclusive:
                                  type: number
                                  description: The estimated tax inclusive price for this product based on the provided customer group.
                              description: The price for a product including estimates for tax.
                          description: The minimum and maximum price that will typically apply to this product. Only used for complex products (products with variants).
                        retail_price_range:
                          type: object
                          properties:
                            minimum:
                              type: object
                              properties:
                                as_entered:
                                  type: number
                                  description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
                                entered_inclusive:
                                  type: boolean
                                  description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
                                tax_exclusive:
                                  type: number
                                  description: The estimated tax exclusive price for this product based on the provided customer group.
                                tax_inclusive:
                                  type: number
                                  description: The estimated tax inclusive price for this product based on the provided customer group.
                              description: The price for a product including estimates for tax.
                            maximum:
                              type: object
                              properties:
                                as_entered:
                                  type: number
                                  description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
                                entered_inclusive:
                                  type: boolean
                                  description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
                                tax_exclusive:
                                  type: number
                                  description: The estimated tax exclusive price for this product based on the provided customer group.
                                tax_inclusive:
                                  type: number
                                  description: The estimated tax inclusive price for this product based on the provided customer group.
                              description: The price for a product including estimates for tax.
                          description: The productʼs variants that will typically apply to this product.
                        bulk_pricing:
                          type: array
                          items:
                            $ref: '#/components/schemas/BulkPricingTier'
                  meta:
                    type: object
                    properties: {}
                    additionalProperties: true
                    description: Response metadata.
              example:
                data:
                  - product_id: 1
                    variant_id: 1
                    options:
                      - option_id: 1
                        value_id: 1
                    retail_price:
                      as_entered: 1.5
                      entered_inclusive: true
                      tax_exclusive: 1.1
                      tax_inclusive: 1.5
                    sale_price:
                      as_entered: 1.5
                      entered_inclusive: true
                      tax_exclusive: 1.1
                      tax_inclusive: 1.5
                    minimum_advertised_price:
                      as_entered: 1.5
                      entered_inclusive: true
                      tax_exclusive: 1.1
                      tax_inclusive: 1.5
                    price:
                      as_entered: 1.5
                      entered_inclusive: true
                      tax_exclusive: 1.1
                      tax_inclusive: 1.5
                    calculated_price:
                      as_entered: 1.5
                      entered_inclusive: true
                      tax_exclusive: 1.1
                      tax_inclusive: 1.5
                    price_range:
                      minimum:
                        as_entered: 1.5
                        entered_inclusive: true
                        tax_exclusive: 1.1
                        tax_inclusive: 1.5
                      maximum:
                        as_entered: 1.5
                        entered_inclusive: true
                        tax_exclusive: 1.1
                        tax_inclusive: 1.5
                    retail_price_range:
                      minimum:
                        as_entered: 1.5
                        entered_inclusive: true
                        tax_exclusive: 1.1
                        tax_inclusive: 1.5
                      maximum:
                        as_entered: 1.5
                        entered_inclusive: true
                        tax_exclusive: 1.1
                        tax_inclusive: 1.5
                    bulk_pricing:
                      - minimum: 1
                        maximum: 1
                        discount_amount: 1
                        discount_type: percent
                        tax_discount_amount:
                        - as_entered: 10
                          tax_inclusive: 10
                          tax_exclusive: 10
                          entered_inclusive: false
                meta: {}
components:
  schemas:
    BulkPricingTier:
      type: object
      properties:
        minimum:
          type: integer
          description: The minimum quantity required to trigger this bulk pricing discount.
        maximum:
          type: integer
          description: The maximum quantity (or 0 for unlimited) to trigger this bulk pricing discount.
        discount_amount:
          type: number
        discount_type:
          type: string
          enum:
            - price
            - percent
            - fixed
        tax_discount_amount:
          type: array
          description: Formats the `bulk_pricing.discount_amount` into the tax price amounts.
          items:
            type: object
            properties:
              as_entered:
                type: number
                description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
              tax_inclusive:
                type: number
                description: The estimated tax inclusive price for this product based on the provided customer group.
              tax_exclusive:
                type: number
                description: The estimated tax exclusive price for this product based on the provided customer group.
              entered_inclusive:
                type: boolean
                description: Determines whether the 'as_entered' price is inclusive or exclusive of tax based on the store's tax jurisdiction.
      x-internal: false
    PricingResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              product_id:
                type: integer
                description: The (required) product ID of the item.
              variant_id:
                type: integer
                description: The (optional) variant ID of the item.
              options:
                type: array
                description: The optional product option configuration this price was generated for
                items:
                  type: object
                  properties:
                    option_id:
                      type: integer
                      description: The ID of the variant option or modifier option configured for this price
                    value_id:
                      type: integer
                      description: The selected value ID for the configured option.
              retail_price:
                type: object
                properties:
                  as_entered:
                    type: number
                    description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
                  entered_inclusive:
                    type: boolean
                    description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
                  tax_exclusive:
                    type: number
                    description: The estimated tax exclusive price for this product based on the provided customer group.
                  tax_inclusive:
                    type: number
                    description: The estimated tax inclusive price for this product based on the provided customer group.
                description: The (optional) RRP/retail price configured for this product.
              sale_price:
                type: object
                properties:
                  as_entered:
                    type: number
                    description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
                  entered_inclusive:
                    type: boolean
                    description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
                  tax_exclusive:
                    type: number
                    description: The estimated tax exclusive price for this product based on the provided customer group.
                  tax_inclusive:
                    type: number
                    description: The estimated tax inclusive price for this product based on the provided customer group.
                description: The price for a product including estimates for tax.
              minimum_advertised_price:
                type: object
                properties:
                  as_entered:
                    type: number
                    description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
                  entered_inclusive:
                    type: boolean
                    description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
                  tax_exclusive:
                    type: number
                    description: The estimated tax exclusive price for this product based on the provided customer group.
                  tax_inclusive:
                    type: number
                    description: The estimated tax inclusive price for this product based on the provided customer group.
                description: The price for a product including estimates for tax.
              price:
                type: object
                properties:
                  as_entered:
                    type: number
                    description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
                  entered_inclusive:
                    type: boolean
                    description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
                  tax_exclusive:
                    type: number
                    description: The estimated tax exclusive price for this product based on the provided customer group.
                  tax_inclusive:
                    type: number
                    description: The estimated tax inclusive price for this product based on the provided customer group.
                description: The price for a product including estimates for tax.
              calculated_price:
                type: object
                properties:
                  as_entered:
                    type: number
                    description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
                  entered_inclusive:
                    type: boolean
                    description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
                  tax_exclusive:
                    type: number
                    description: The estimated tax exclusive price for this product based on the provided customer group.
                  tax_inclusive:
                    type: number
                    description: The estimated tax inclusive price for this product based on the provided customer group.
                description: The price for a product including estimates for tax.
              price_range:
                type: object
                properties:
                  minimum:
                    type: object
                    properties:
                      as_entered:
                        type: number
                        description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
                      entered_inclusive:
                        type: boolean
                        description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
                      tax_exclusive:
                        type: number
                        description: The estimated tax exclusive price for this product based on the provided customer group.
                      tax_inclusive:
                        type: number
                        description: The estimated tax inclusive price for this product based on the provided customer group.
                    description: The price for a product including estimates for tax.
                  maximum:
                    type: object
                    properties:
                      as_entered:
                        type: number
                        description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
                      entered_inclusive:
                        type: boolean
                        description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
                      tax_exclusive:
                        type: number
                        description: The estimated tax exclusive price for this product based on the provided customer group.
                      tax_inclusive:
                        type: number
                        description: The estimated tax inclusive price for this product based on the provided customer group.
                    description: The price for a product including estimates for tax.
                description: For estimated prices, the minimum/maximum price that will typically apply to this product.
              retail_price_range:
                type: object
                properties:
                  minimum:
                    type: object
                    properties:
                      as_entered:
                        type: number
                        description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
                      entered_inclusive:
                        type: boolean
                        description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
                      tax_exclusive:
                        type: number
                        description: The estimated tax exclusive price for this product based on the provided customer group.
                      tax_inclusive:
                        type: number
                        description: The estimated tax inclusive price for this product based on the provided customer group.
                    description: The price for a product including estimates for tax.
                  maximum:
                    type: object
                    properties:
                      as_entered:
                        type: number
                        description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
                      entered_inclusive:
                        type: boolean
                        description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
                      tax_exclusive:
                        type: number
                        description: The estimated tax exclusive price for this product based on the provided customer group.
                      tax_inclusive:
                        type: number
                        description: The estimated tax inclusive price for this product based on the provided customer group.
                    description: The price for a product including estimates for tax
                description: For estimated prices, the minimum/maximum price that will typically apply to this product.
              bulk_pricing:
                type: array
                items:
                  type: object
                  properties:
                    minimum:
                      type: integer
                      description: The minimum quantity required to trigger this bulk pricing discount.
                    maximum:
                      type: integer
                      description: The maximum quantity (or 0 for unlimited) to trigger this bulk pricing discount.
                    discount_amount:
                      type: number
                      description: The price reduction set by the merchant for this bulk pricing discount.
                    discount_type:
                      type: string
                      enum:
                        - price
                        - percent
                        - fixed
                      description: The format of the price reduction set by the merchant for this bulk pricing discount.
                    tax_discount_amount:
                      type: array
                      description: Formats the `bulk_pricing.discount_amount` into the tax price amounts.
                      items:
                        type: object
                        properties:
                          as_entered:
                            type: number
                            description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
                          tax_inclusive:
                            type: number
                            description: The estimated tax inclusive price for this product based on the provided customer group.
                          tax_exclusive:
                            type: number
                            description: The estimated tax exclusive price for this product based on the provided customer group.
                          entered_inclusive:
                            type: boolean
                            description: Determines whether the 'as_entered' price is inclusive or exclusive of tax based on the store's tax jurisdiction.
        meta:
          type: object
          properties: {}
          additionalProperties: true
          description: Response metadata.
      x-internal: false
    PriceRange:
      type: object
      properties:
        minimum:
          type: object
          properties:
            as_entered:
              type: number
              description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
            entered_inclusive:
              type: boolean
              description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
            tax_exclusive:
              type: number
              description: The estimated tax exclusive price for this product based on the provided customer group.
            tax_inclusive:
              type: number
              description: The estimated tax inclusive price for this product based on the provided customer group.
          description: The price for a product including estimates for tax.
        maximum:
          type: object
          properties:
            as_entered:
              type: number
              description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
            entered_inclusive:
              type: boolean
              description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
            tax_exclusive:
              type: number
              description: The estimated tax exclusive price for this product based on the provided customer group.
            tax_inclusive:
              type: number
              description: The estimated tax inclusive price for this product based on the provided customer group.
          description: The price for a product including estimates for tax.
      description: For estimated prices, the minimum/maximum price that will typically apply to this product.
      x-internal: false
    TaxPrice:
      type: object
      properties:
        as_entered:
          type: number
          description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
        entered_inclusive:
          type: boolean
          description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
        tax_exclusive:
          type: number
          description: The estimated tax exclusive price for this product based on the provided customer group.
        tax_inclusive:
          type: number
          description: The estimated tax inclusive price for this product based on the provided customer group.
      description: The price for a product including estimates for tax.
      x-internal: false
    ItemPricing:
      type: object
      properties:
        product_id:
          type: integer
          description: The (required) product ID of the item.
        variant_id:
          type: integer
          description: The (optional) variant ID of the item.
        options:
          type: array
          description: The optional product option configuration for which this price was generated.

          items:
            type: object
            properties:
              option_id:
                type: integer
                description: The ID of the variant option or modifier option configured for this price.
              value_id:
                type: integer
                description: The selected value ID for the configured option.
        retail_price:
          type: object
          properties:
            as_entered:
              type: number
              description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
            entered_inclusive:
              type: boolean
              description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
            tax_exclusive:
              type: number
              description: The estimated tax exclusive price for this product based on the provided customer group.
            tax_inclusive:
              type: number
              description: The estimated tax inclusive price for this product based on the provided customer group.
          description: The (optional) RRP/retail price configured for this product.
        sale_price:
          type: object
          properties:
            as_entered:
              type: number
              description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
            entered_inclusive:
              type: boolean
              description: Determines wether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
            tax_exclusive:
              type: number
              description: The estimated tax exclusive price for this product based on the provided customer group.
            tax_inclusive:
              type: number
              description: The estimated tax inclusive price for this product based on the provided customer group.
          description: The price for a product including estimates for tax.
        minimum_advertised_price:
          type: object
          properties:
            as_entered:
              type: number
              description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
            entered_inclusive:
              type: boolean
              description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
            tax_exclusive:
              type: number
              description: The estimated tax exclusive price for this product based on the provided customer group.
            tax_inclusive:
              type: number
              description: The estimated tax inclusive price for this product based on the provided customer group.
          description: The price for a product including estimates for tax.
        price:
          type: object
          properties:
            as_entered:
              type: number
              description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
            entered_inclusive:
              type: boolean
              description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
            tax_exclusive:
              type: number
              description: The estimated tax exclusive price for this product based on the provided customer group.
            tax_inclusive:
              type: number
              description: The estimated tax inclusive price for this product based on the provided customer group.
          description: The price for a product including estimates for tax.
        calculated_price:
          type: object
          properties:
            as_entered:
              type: number
              description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
            entered_inclusive:
              type: boolean
              description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
            tax_exclusive:
              type: number
              description: The estimated tax exclusive price for this product based on the provided customer group.
            tax_inclusive:
              type: number
              description: The estimated tax inclusive price for this product based on the provided customer group.
          description: The price for a product including estimates for tax.
        price_range:
          type: object
          properties:
            minimum:
              type: object
              properties:
                as_entered:
                  type: number
                  description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
                entered_inclusive:
                  type: boolean
                  description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
                tax_exclusive:
                  type: number
                  description: The estimated tax exclusive price for this product based on the provided customer group.
                tax_inclusive:
                  type: number
                  description: The estimated tax inclusive price for this product based on the provided customer group.
              description: The price for a product including estimates for tax.
            maximum:
              type: object
              properties:
                as_entered:
                  type: number
                  description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
                entered_inclusive:
                  type: boolean
                  description: Determines whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax. jurisdiction
                tax_exclusive:
                  type: number
                  description: The estimated tax exclusive price for this product based on the provided customer group.
                tax_inclusive:
                  type: number
                  description: The estimated tax inclusive price for this product based on the provided customer group.
              description: The price for a product including estimates for tax.
          description: For estimated prices, the minimum/maximum price that will typically apply to this product.
        retail_price_range:
          type: object
          properties:
            minimum:
              type: object
              properties:
                as_entered:
                  type: number
                  description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
                entered_inclusive:
                  type: boolean
                  description: Whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
                tax_exclusive:
                  type: number
                  description: The estimated tax exclusive price for this product based on the provided customer group.
                tax_inclusive:
                  type: number
                  description: The estimated tax inclusive price for this product based on the provided customer group.
              description: The price for a product including estimates for tax.
            maximum:
              type: object
              properties:
                as_entered:
                  type: number
                  description: The price provided by the merchant as entered in their catalog/price list; may include or exclude tax.
                entered_inclusive:
                  type: boolean
                  description: Whether the `as_entered` price is inclusive or exclusive of tax, based on the stores tax jurisdiction.
                tax_exclusive:
                  type: number
                  description: The estimated tax exclusive price for this product based on the provided customer group.
                tax_inclusive:
                  type: number
                  description: The estimated tax inclusive price for this product based on the provided customer group.
              description: The price for a product including estimates for tax.
          description: For estimated prices, the minimum/maximum price that will typically apply to this product.
        bulk_pricing:
          type: array
          items:
            $ref: '#/components/schemas/BulkPricingTier'
      x-internal: false
    Item:
      type: object
      properties:
        product_id:
          type: integer
          description: The (required) product ID of the item.
        variant_id:
          type: number
          description: The (optional) variant ID of the item.
        options:
          type: array
          description: The (optional) option configuration of the product. May be "partially" configured for estimates.
          items:
            type: object
            properties:
              option_id:
                type: integer
                description: The ID of the variant option or modifier option being configured for this product.
              value_id:
                type: integer
                description: |- 
                  The ID of the value matching the option being configured. 
                  
                  **Note:** must be ID, not the value.

      description: Details/configuration for the product to request a price for.
      x-internal: false
    PricingRequest:
      type: object
      properties:
        channel_id:
          type: integer
          description: The channel ID that pricing evaluates within. The default BigCommerce storefront is channel 1.
          example: 1
        currency_code:
          type: string
          description: The currency of prices to be returned for this request.
          example: USD
        customer_group_id:
          type: integer
          description: The customer group relevant for any customer group pricing, tax values, etc.
        items:
          type: array
          description: The items for which to fetch prices.

          items:
            type: object
            properties:
              product_id:
                type: integer
                description: The (required) product ID of the item.
              variant_id:
                type: number
                description: The (optional) variant ID of the item.
              options:
                type: array
                description: The (optional) option configuration of the product. May be "partially" configured for estimates.
                items:
                  type: object
                  properties:
                    option_id:
                      type: integer
                      description: The ID of the variant option or modifier option being configured for this product.
                    value_id:
                      type: integer
                      description: |-
                        The ID of the value matching the option being configured. 
                        
                        **Note:** This must be the ID, not the value.
                         
            description: Details/configuration for the product to request a price for.
      x-internal: false
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        | Products | read-only  | `store_v2_products_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header

openapi: '3.0.1'
info:
  title: Redirects
  description: |-
    Manage 301 redirects for one or more storefronts powered by a single BigCommerce backend. For a list of redirects that are not allowed, see the [301 Redirects FAQ](https://support.bigcommerce.com/s/article/301-Redirects#faq) in our Help Center.
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  version: ''
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Redirects
paths:
  '/storefront/redirects':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
        - Redirects
      summary: Get Redirects
      description: Returns a collection of the store's 301 redirects across all sites.
      operationId: GetRedirects
      parameters:
        - name: site_id
          in: query
          description: Filters items by `site_id`.
          schema:
            type: integer
        - name: 'id:in'
          in: query
          description: Filters items by redirect `id`. Also accepts comma-separated values to filter for multiple redirects.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: Controls the number of items to return per page.
          schema:
            type: integer
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of items. Used to paginate large collections.
          schema:
            type: integer
        - name: sort
          in: query
          description: |
            Field name to sort by. Note: Since redirect `id` increments when new redirects are added, you can use that field to sort by redirect create date.
          schema:
            type: string
            enum:
              - from_path
              - type
              - site_id
        - name: direction
          in: query
          description: 'Sort direction. Acceptable values are `asc`, `desc`.'
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: include
          in: query
          description: Indicates whether to include redirect sub-resources. Only `to_url` is supported.
          schema:
            type: string
            enum:
              - to_url
        - name: keyword
          in: query
          description: 'Filters redirects by the specified keyword. Will only search from the beginning of a URL path. For example, `blue` will match `/blue` and `/blue-shirt` ,  **not** `/royal-blue-shirt`.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/301RedirectRead'
                  meta:
                    $ref: '#/components/schemas/MetaPaginationObject'
    put:
      tags:
        - Redirects
      summary: Upsert Redirects
      description: Upserts new redirect data across all storefronts.
      operationId: UpsertRedirects
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/301RedirectUpsert'
        required: false
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/301RedirectRead'
                  meta:
                    $ref: '#/components/schemas/MetaPaginationObject'
    delete:
      tags:
        - Redirects
      summary: Delete Redirects
      description: Deletes redirects.
      operationId: DeleteRedirects
      parameters:
        - name: 'id:in'
          in: query
          description: List of Redirect IDs to delete explicitly.
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: site_id
          in: query
          description: Site ID provided to delete all redirects for a given Site.
          schema:
            type: integer
      responses:
        '204':
          description: No Content
          content: {}
components:
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
  schemas:
    Error:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
      x-internal: false
    ErrorResponse400:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
      x-internal: false
    ErrorResponse404:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
      x-internal: false
    ErrorResponse409:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
      x-internal: false
    ErrorResponse422:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
      x-internal: false
    301RedirectUpsert:
      required:
        - from_path
        - site_id
      type: object
      properties:
        from_path:
          type: string
          example: /old-url/
        site_id:
          type: integer
        to:
          $ref: '#/components/schemas/RedirectTo'
      description: 'Data necessary to create or update a redirect. If there’s a conflict on the from_path and site_id, the redirect will be overwritten with new data.'
      x-internal: false
    301RedirectRead:
      type: object
      description: 'Full detail of a Redirect, optionally including the full destination URL.'
      x-internal: false
      properties:
        id:
          type: integer
        site_id:
          type: integer
        from_path:
          type: string
          example: /old-url
        to:
          $ref: '#/components/schemas/RedirectTo'
        to_url:
          type: string
          description: Full destination URL for the redirect. Must be explicitly included via URL parameter.
          format: uri
          example: 'https://store-domain.com/new-url'
    MetaPaginationObject:
      type: object
      properties:
        pagination:
          type: object
          properties:
            total:
              minimum: 0
              type: integer
              example: 246
            count:
              minimum: 0
              type: integer
              example: 5
            per_page:
              minimum: 0
              type: integer
              example: 5
            current_page:
              minimum: 1
              type: integer
              example: 1
            total_pages:
              minimum: 0
              type: integer
              example: 50
            links:
              type: object
              properties:
                next:
                  type: string
                  example: '?limit=5&page=2'
                current:
                  type: string
                  example: '?limit=5&page=1'
      x-internal: false
    RedirectTo:
      title: RedirectTo
      type: object
      properties:
        type:
          type: string
          enum:
            - product
            - brand
            - category
            - page
            - post
            - url
        entity_id:
          type: integer
        url:
          maxLength: 2048
          type: string
          example: /new-url/
      x-internal: false
    DetailedErrors:
      type: object
      properties: {}
      additionalProperties: true
      title: Detailed Errors
      x-internal: false
    BaseError:
      type: object
      properties:
        status:
          type: integer
          description: |
            The HTTP status code.
        title:
          type: string
          description: |
            The error title describing the particular error.
        type:
          type: string
        instance:
          type: string
      description: |
        Error payload for the BigCommerce API.
      x-internal: false
    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            errors:
              $ref: '#/components/schemas/DetailedErrors'
      x-internal: false
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Content | modify | `store_v2_content` |
        |  Content | read-only | `store_v2_content_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header


openapi: '3.0.0'
info:
  title: Scripts
  version: ''
  description: |-
    Add client-side code to a BigCommerce storefront page or associate a script with a channel. To learn more about scripts, see the [Scripts API](/api-docs/store-management/scripts) article. 
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  license:
    name: ''
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Scripts
paths:
  '/content/scripts':
    parameters:
      - $ref: '#/components/parameters/Accept'
    post:
      summary: Create a Script
      operationId: createScript
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/script_Post'
            examples:
              Script Source URL:
                value:
                  name: Bootstrap
                  description: Build responsive websites
                  src: 'https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js'
                  auto_uninstall: true
                  load_method: default
                  location: footer
                  visibility: all_pages
                  kind: src
                  consent_category: essential
              HTML Script Tag:
                value:
                  name: Bootstrap
                  description: Build responsive websites
                  html: ''
                  auto_uninstall: true
                  load_method: default
                  location: footer
                  visibility: all_pages
                  kind: script_tag
                  consent_category: essential
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/script_Response'
        '422':
          description: |
            This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: |
                      Error payload for the BigCommerce API.
                    properties:
                      status:
                        description: |
                          The HTTP status code.
                        type: integer
                      title:
                        description: |
                          The error title describing the particular error.
                        type: string
                      type:
                        type: string
                      instance:
                        type: string
                    title: Base Error
                  - type: object
                    properties:
                      errors:
                        type: object
                        properties: {}
                        additionalProperties: true
                        title: DetailedErrors
                title: Error Response
      tags:
        - Scripts
      description: |-
        Creates a *Script*.

        **Required Fields**
        * name

        **Read Only Fields**
        * uuid

        **Notes**
        * If the `kind` is `src`:
          * Specify the `src` property. 
          * Optionally, you can supply a `load_method`. 
          * Do not specify the `html` field.
        * If the `kind` is `script_tag`:
          * Specify the `html` property.
          * Do not specify the `src` field.
        * Each app can have 10 scripts installed.
        * Multiple scripts can be created [per call](/api-docs/store-management/scripts#notes). 
    get:
      summary: Get All Scripts
      operationId: getScripts
      parameters:
        - name: page
          description: Specifies the page number in a limited (paginated) list of products.
          required: false
          in: query
          schema:
            type: integer
        - name: limit
          description: Controls the number of items per page in a limited (paginated) list of products.
          required: false
          in: query
          schema:
            type: integer
        - name: sort
          description: |
            Field name to sort the scripts by. Note: Since `id` increments when new scripts are added, you can use that field to sort by script create date.
          required: false
          in: query
          schema:
            type: string
            enum:
              - name
              - description
              - date_created
              - date_modified
        - name: direction
          description: |
            Sort direction. Acceptable values are: `asc`, `desc`.
          required: false
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
        - in: query
          name: 'channel_id:in'
          description: Filters list of scripts by the associated channel_id.
          schema:
            type: array
            items: {}
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                title: Scripts Response
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/script_Full'
                  meta:
                    $ref: '#/components/schemas/CollectionMeta'
        '422':
          description: |
            This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: |
                      Error payload for the BigCommerce API.
                    properties:
                      status:
                        description: |
                          The HTTP status code.
                        type: integer
                      title:
                        description: |
                          The error title describing the particular error.
                        type: string
                      type:
                        type: string
                      instance:
                        type: string
                    title: Base Error
                  - type: object
                    properties:
                      errors:
                        type: object
                        properties: {}
                        additionalProperties: true
                title: Error Response
      tags:
        - Scripts
      description: |-
        Returns a list of *Scripts*. Optional parameters can be passed in.

        This operation will only return scripts generated by the API key and password used to create the script originally. 
  '/content/scripts/{uuid}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ScriptUUID'
    get:
      summary: Get a Script
      operationId: getScript
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/script_Response'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: |
                      Error payload for the BigCommerce API.
                    properties:
                      status:
                        description: |
                          The HTTP status code.
                        type: integer
                      title:
                        description: |
                          The error title describing the particular error.
                        type: string
                      type:
                        type: string
                      instance:
                        type: string
                    title: Base Error
                  - type: object
                    properties:
                      errors:
                        type: object
                        properties: {}
                        additionalProperties: true
                        title: DetailedErrors
                title: Error Response
        '422':
          description: |
            This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: |
                      Error payload for the BigCommerce API.
                    properties:
                      status:
                        description: |
                          The HTTP status code.
                        type: integer
                      title:
                        description: |
                          The error title describing the particular error.
                        type: string
                      type:
                        type: string
                      instance:
                        type: string
                    title: Base Error
                  - type: object
                    properties:
                      errors:
                        type: object
                        properties: {}
                        additionalProperties: true
                        title: DetailedErrors
                title: Error Response
      tags:
        - Scripts
      description: Returns a single *Script*.
    put:
      summary: Update a Script
      operationId: updateScript
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/script_Put'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/script_Response'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: |
                      Error payload for the BigCommerce API.
                    properties:
                      status:
                        description: |
                          The HTTP status code.
                        type: integer
                      title:
                        description: |
                          The error title describing the particular error.
                        type: string
                      type:
                        type: string
                      instance:
                        type: string
                    title: Base Error
                  - type: object
                    properties:
                      errors:
                        type: object
                        properties: {}
                        additionalProperties: true
                        title: DetailedErrors
                title: Error Response
        '422':
          description: |
            This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: |
                      Error payload for the BigCommerce API.
                    properties:
                      status:
                        description: |
                          The HTTP status code.
                        type: integer
                      title:
                        description: |
                          The error title describing the particular error.
                        type: string
                      type:
                        type: string
                      instance:
                        type: string
                    title: Base Error
                  - type: object
                    properties:
                      errors:
                        type: object
                        properties: {}
                        additionalProperties: true
                        title: DetailedErrors
                title: Error Response
      tags:
        - Scripts
      description: Updates a *Script*.
    delete:
      summary: Delete a Script
      operationId: deleteScript
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoContent'
        '404':
          description: The resource was not found.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: |
                      Error payload for the BigCommerce API.
                    properties:
                      status:
                        description: |
                          The HTTP status code.
                        type: integer
                      title:
                        description: |
                          The error title describing the particular error.
                        type: string
                      type:
                        type: string
                      instance:
                        type: string
                    title: Base Error
                  - type: object
                    properties:
                      errors:
                        type: object
                        properties: {}
                        additionalProperties: true
                        title: DetailedErrors
                title: Error Response
        '422':
          description: 'This is the result of missing required fields, or of invalid data. See the response for more details.'
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: |
                      Error payload for the BigCommerce API.
                    properties:
                      status:
                        description: |
                          The HTTP status code.
                        type: integer
                      title:
                        description: |
                          The error title describing the particular error.
                        type: string
                      type:
                        type: string
                      instance:
                        type: string
                    title: Base Error
                  - type: object
                    properties:
                      errors:
                        type: object
                        properties: {}
                        additionalProperties: true
                        title: DetailedErrors
                title: Error Response
      tags:
        - Scripts
      description: Deletes a *Script*.
components:
  parameters:
    FilterWidgetTemplateUUIDParam:
      in: query
      name: widget_template_uuid
      description: The identifier for a specific widget template.
      required: false
      schema:
        type: string
        format: uuid
    FilterWidgetTemplateKindParam:
      in: query
      name: widget_template_kind
      description: The kind of widget template.
      required: false
      schema:
        type: string
    PlacementUUID:
      name: uuid
      description: The identifier for a specific placement.
      required: true
      in: path
      schema:
        type: string
        format: uuid
    WidgetUUID:
      name: uuid
      description: The identifier for a specific widget.
      required: true
      in: path
      schema:
        type: string
        format: uuid
    ScriptUUID:
      name: uuid
      description: The identifier for a specific script.
      required: true
      in: path
      schema:
        type: string
        format: uuid
        example: 03805148-a592-4803-9482-e91fe5c1be12
    FilterWidgetUUIDParam:
      name: widget_uuid
      description: The identifier for a specific widget.
      in: query
      required: false
      schema:
        type: string
        format: uuid
    FilterIncludeFieldsParam:
      name: include_fields
      description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
      required: false
      in: query
      schema:
        type: string
    FilterExcludeFieldsParam:
      name: exclude_fields
      description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
      required: false
      in: query
      schema:
        type: string
    PageParam:
      name: page
      description: Specifies the page number in a limited (paginated) list of products.
      required: false
      in: query
      schema:
        type: integer
    LimitParam:
      name: limit
      description: Controls the number of items per page in a limited (paginated) list of products.
      required: false
      in: query
      schema:
        type: integer
    ScriptsSortKeyParam:
      name: sort
      description: |
        Scripts field name to sort by.
      required: false
      in: query
      schema:
        type: string
        enum:
          - name
          - description
          - date_created
          - date_modified
    DirectionParam:
      name: direction
      description: |
        Sort direction. Acceptable values are: `asc`, `desc`.
      required: false
      in: query
      schema:
        type: string
        enum:
          - asc
          - desc
    TemplateUUID:
      name: uuid
      description: The identifier for a specific template.
      required: true
      in: path
      schema:
        type: string
        format: uuid
    RequiredTemplateFile:
      in: query
      name: templateFile
      description: 'The template file, for example: `pages/home`.'
      required: true
      schema:
        type: string
    QueryWidgetsParam:
      name: query
      in: query
      description: |
        The query string associated with a widget's name and description.
      schema:
        type: string
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        | Checkout Content | modify | `store_content_checkout` |
        | Checkout Content | read-only | `store_content_checkout_read_only` |
        | Content | modify | `store_v2_content` |
        | Content | read-only  | `store_v2_content_read_only` |

        To read or modify scripts on checkout pages, add `Checkout Content` scopes.

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header
  schemas:
    CollectionMeta:
      type: object
      description: 'Data about the response, including pagination and collection totals.'
      properties:
        pagination:
          type: object
          description: 'Data about the response, including pagination and collection totals.'
          title: Pagination
          properties:
            total:
              type: integer
              description: |
                Total number of items in the result set.
              example: 36
            count:
              type: integer
              description: |
                Total number of items in the collection response.
              example: 36
            per_page:
              type: integer
              description: |
                The amount of items returned in the collection per page, controlled by the limit parameter.
              example: 50
            current_page:
              type: integer
              description: |
                The page you are currently on within the collection.
              example: 1
            total_pages:
              type: integer
              description: |
                The total number of pages in the collection.
              example: 1
            links:
              type: object
              description: |
                Pagination links for the previous and next parts of the whole collection.
              properties:
                previous:
                  type: string
                  description: |
                    Link to the previous page returned in the response.
                current:
                  type: string
                  description: |
                    Link to the current page returned in the response.
                  example: '?page=1&limit=50'
                next:
                  type: string
                  description: |
                    Link to the next page returned in the response.
      title: Collection Meta
    Pagination:
      type: object
      description: 'Data about the response, including pagination and collection totals.'
      title: Pagination
      properties:
        total:
          type: integer
          description: |
            Total number of items in the result set.
          example: 36
        count:
          type: integer
          description: |
            Total number of items in the collection response.
          example: 36
        per_page:
          type: integer
          description: |
            The amount of items returned in the collection per page, controlled by the limit parameter.
          example: 50
        current_page:
          type: integer
          description: |
            The page you are currently on within the collection.
          example: 1
        total_pages:
          type: integer
          description: |
            The total number of pages in the collection.
          example: 1
        links:
          type: object
          description: |
            Pagination links for the previous and next parts of the whole collection.
          properties:
            previous:
              type: string
              description: |
                Link to the previous page returned in the response.
            current:
              type: string
              description: |
                Link to the current page returned in the response.
              example: '?page=1&limit=50'
            next:
              type: string
              description: |
                Link to the next page returned in the response.
      x-internal: false
    Meta:
      type: object
      properties: {}
      additionalProperties: true
      description: Response metadata.
      title: Meta
      x-internal: false
    ErrorResponse:
      allOf:
        - type: object
          description: |
            Error payload for the BigCommerce API.
          properties:
            status:
              description: |
                The HTTP status code.
              type: integer
            title:
              description: |
                The error title describing the particular error.
              type: string
            type:
              type: string
            instance:
              type: string
          title: Base Error
        - type: object
          properties:
            errors:
              type: object
              properties: {}
              additionalProperties: true
              title: DetailedErrors
      title: Error Response
      x-internal: false
    BaseError:
      type: object
      description: |
        Error payload for the BigCommerce API.
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
      title: Base Error
      x-internal: false
    DetailedErrors:
      type: object
      properties: {}
      additionalProperties: true
      title: DetailedErrors
      x-internal: false
    NotFound:
      description: Error payload for the BigCommerce API.
      type: object
      properties:
        status:
          description: |
            404 HTTP status code.
          type: integer
        title:
          description: The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
      title: Not Found
      x-internal: false
    NoContent:
      description: No-content response for the BigCommerce API.
      type: object
      title: No Content
      x-internal: false
      properties:
        status:
          type: integer
          description: |
            204 HTTP status code.
          example: 204
        title:
          description: The error title describing the situation.
          type: string
        type:
          type: string
        instance:
          type: string
    script_Full:
      title: script_Full
      allOf:
        - type: object
          properties:
            name:
              type: string
              description: The user-friendly name.
              minLength: 1
              maxLength: 255
            uuid:
              type: string
              format: uuid
              description: The primary identifier.
            date_created:
              type: string
              format: date-time
              description: The date on which this object was initially created.
            date_modified:
              type: string
              format: date-time
              description: The date on which this object was last updated.
        - $ref: '#/components/schemas/script_Base'
      x-internal: false
    script_Post:
      title: script_Post
      allOf:
        - type: object
          properties:
            name:
              type: string
              description: The user-friendly name.
              minLength: 1
              maxLength: 255
          required:
            - name
        - $ref: '#/components/schemas/script_Base'
      x-internal: false
    script_Put:
      allOf:
        - type: object
          properties:
            name:
              type: string
              description: The user-friendly name.
              minLength: 1
              maxLength: 255
        - $ref: '#/components/schemas/script_Base'
      x-internal: false
    script_Response:
      type: object
      title: script_Response
      description: 'For a list of all locations visit [Scripts Visibility](/api-docs/store-management/scripts#script-visibility-locations).'
      properties:
        data:
          $ref: '#/components/schemas/script_Full'
        meta:
          $ref: '#/components/schemas/Meta'
      x-internal: false
    script_responseCollection:
      type: object
      title: script_responseCollection
      description: 'For a list of all locations visit [Scripts Visibility](/api-docs/store-management/scripts#script-visibility-locations).'
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/script_Full'
        meta:
          $ref: '#/components/schemas/CollectionMeta'
    script_Base:
      type: object
      title: script_Base
      description: 'Script properties common to `post`, `put`, and `get` requests.'
      properties:
        description:
          type: string
          description: The user-friendly description.
        html:
          type: string
          description: An HTML string containing exactly one `script` tag. Present when the script `kind` is `script_tag`.
          minLength: 0
          maxLength: 65536
        src:
          type: string
          description: The `src` attribute of the script to load. Only present if `kind` is `src`.
          example: 'https://code.jquery.com/jquery-3.2.1.min.js'
        auto_uninstall:
          type: boolean
          description: It will enable automatic cleanup of the script when the single click app is uninstalled or OAuth token is revoked.
        load_method:
          type: string
          description: 'The load method to use for the script. Values are `default`, `async`, or `defer`. It determines how the script should be loaded into the page.'
          enum:
            - default
            - async
            - defer
        location:
          type: string
          description: Where on the page to place the script. Values are `head` or `footer`.
          enum:
            - head
            - footer
        visibility:
          type: string
          description: "Which set of pages the script should load on. \n\nPlease note that you need to have `Checkout content` scope to use `all_pages` and `checkout`.\n\n- The current visibility options are `storefront`, `checkout`, `all_pages` and `order_confirmation`.\n\n     `storefront`: All pages that are not `checkout` or `order_confirmation`.\n\n\t\t \nFor a list of all locations visit [Scripts Visibility](/api-docs/store-management/scripts#script-visibility-locations)."
          enum:
            - storefront
            - all_pages
            - checkout
            - order_confirmation
        kind:
          type: string
          description: |-
            What type of script this is.

            `src` - For scripts that use the src URL. A `script` tag will be generated with its `src` attribute set to the value of the `src` property. When your app provides a path to the script, we can optimize and add the script automatically for you. The load_method can vary.

            `script_tag` - For scripts that include a raw HTML `script` tag-enclosed block of JavaScript. The value of `html` is added directly to the page. The load_method must be default.
          enum:
            - src
            - script_tag
          example: src
        api_client_id:
          type: string
          description: 'The client id of the API user that created this script, or blank if created by other means.'
        consent_category:
          type: string
          description: Consent category for GDPR and CCPA compliance. Defaults to `unknown` when not specified. Scripts with an `unknown` consent category do not display on stores with customer cookie consent banners enabled.
          enum:
            - essential
            - functional
            - analytics
            - targeting
          example: essential
        enabled:
          type: boolean
          description: Whether the script is enabled or disabled on the storefront.
        channel_id:
          type: integer
          example: 1
          minimum: 1

openapi: '3.0.3'
info:
  description: |-
    Manage settings and configuration for BigCommerce hosted stores and headless storefronts.
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  title: Settings V3
  version: '3.0.0'
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Email Statuses
  - name: Search Filters
  - name: Store Locale
  - name: Storefront Category
  - name: Storefront Robotstxt
  - name: Storefront Search
  - name: Storefront Security
  - name: Storefront SEO
  - name: Storefront Status
  - name: Analytics
  - name: Catalog
  - name: Inventory
  - name: Inventory Notifications
  - name: Logo
  - name: Logo Image
  - name: Favicon Image
  - name: Store Profile
  - name: Storefront Product
paths:
  '/settings/analytics':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      summary: Get All Web Analytics Providers
      description: Returns a list of web analytics providers.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/AnalyticsProviders'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
      tags:
        - Analytics
  '/settings/analytics/{id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: Get a Web Analytics Provider
      description: Returns a single web analytics provider data for a default channel.
      parameters:
        - name: id
          in: path
          description: Web Analytics Provider ID.
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsProvider'
        '400':
          description: Bad request. Authentication Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400'
        '404':
          description: The requested resource was not found. Please specify valid Web Analytics Provider ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
      tags:
        - Analytics
    put:
      summary: Update a Web Analytics Provider
      description: Updates a single web analytics provider data for a default channel.
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: id
          in: path
          description: Web Analytics Provider ID.
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                channel_id:
                  type: number
                code:
                  type: string
                  minLength: 1
                data_tag_enabled:
                  type: boolean
                enabled:
                  type: boolean
                id:
                  type: number
                is_oauth_connected: {}
                name:
                  type: string
                  minLength: 1
                version:
                  type: number
              x-examples:
                example-1:
                  channel_id: 1
                  code: GA-1234567890
                  data_tag_enabled: false
                  enabled: false
                  id: 2
                  is_oauth_connected: null
                  name: Visual Website Optimizer
                  version: 1
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsProvider'
        '400':
          description: Bad request. Authentication Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400'
        '404':
          description: The requested resource was not found. Please specify valid Web Analytics Provider ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
        '409':
          description: Web Analytics Provider was in conflict with another Web Analytics Provider. This can be caused by duplicated unique values (such as ID).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse409'
        '422':
          description: 'Web Analytics Provider data was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse422'
      tags:
        - Analytics
  '/settings/catalog':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      summary: Get Catalog Settings
      description: |-
        Returns catalog settings.

         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          description: OK. `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CatalogSettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
      tags:
        - Catalog
    put:
      summary: Update Catalog Settings
      description: |-
        Updates catalog settings.

         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        description: null set for a particular field removes override on a channel level and means inheritance from a global level
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogSettings'
      responses:
        '200':
          description: OK. `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CatalogSettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
      tags:
        - Catalog
  '/settings/email-statuses':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      operationId: get-settings-emails-enabled
      summary: Get Transactional Email Settings
      description: Get global transactional email settings or channel specific overrides by `channel_id`.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          description: 'OK, null indicates that a particular field has not been overridden on a channel level when channel level settings are requested'
          content:
            application/json:
              examples:
                Example:
                  value:
                    data:
                      abandoned_cart_email: true
                      account_details_changed_email: true
                      combined_order_status_email: true
                      createaccount_email: true
                      createguestaccount_email: true
                      giftcertificate_email: true
                      invoice_email: true
                      ordermessage_notification: true
                      product_review_email: false
                      return_confirmation_email: true
                      return_statuschange_email: true
                    meta: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/EnabledTransactionalEmails'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
      tags:
        - Email Statuses
    put:
      operationId: put-settings-transactional-emails-enabled
      summary: Update Transactional Email Settings
      description: Update global transactional email settings or create channel specific overrides by `channel_id`.
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  abandoned_cart_email: true
                  account_details_changed_email: true
                  combined_order_status_email: true
                  createaccount_email: true
                  createguestaccount_email: true
                  giftcertificate_email: true
                  invoice_email: true
                  ordermessage_notification: true
                  product_review_email: false
                  return_confirmation_email: true
                  return_statuschange_email: true
            schema:
              $ref: '#/components/schemas/EnabledTransactionalEmails'
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Example:
                  value:
                    data:
                      abandoned_cart_email: true
                      account_details_changed_email: true
                      combined_order_status_email: true
                      createaccount_email: true
                      createguestaccount_email: true
                      giftcertificate_email: true
                      invoice_email: true
                      ordermessage_notification: true
                      product_review_email: false
                      return_confirmation_email: true
                      return_statuschange_email: true
                    meta: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/EnabledTransactionalEmails'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
      tags:
        - Email Statuses
  '/settings/favicon/image':
    parameters:
      - $ref: '#/components/parameters/Accept'
    post:
      operationId: post-favicon-logo-image
      summary: Create Favicon Image
      description: |-
        Uploads an image file to use as the storefront favicon. Supported MIME types include GIF, JPEG, and PNG. 

          - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only.
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                FaviconFile:
                  type: string
                  format: binary
      responses:
        '204':
          description: OK
      tags:
        - Favicon Image
  '/settings/inventory/notifications':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      summary: Get Inventory Notifications Settings
      description: |-
        Returns inventory notification settings. 
        * `channel_id` can be used as a query parameter to get inventory notification settings per channel. If omitted, you will interact with the global setting only.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          description: OK. `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested
          content:
            application/json:
              examples: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/InventoryNotificationsSettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
      tags:
        - Inventory Notifications
    put:
      summary: Update Inventory Notifications Settings
      description: |-
        Updates inventory notification settings. 
        * `channel_id` can be used as a query parameter to get inventory notification settings per channel. If omitted, you will interact with the global setting only. 
        * Supplying `null` settings values per channel will delete overrides per given channel and values will be inherited from global level. 
        * Partial updates are not supported within the given endpoint. In order to delete overrides per channel, `null` should be supplied for all the settings within the given endpoint.
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        description: null set for a particular field removes override on a channel level and means inheritance from a global level
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryNotificationsSettings'
      responses:
        '200':
          description: OK
      tags:
        - Inventory Notifications
  '/settings/logo':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      operationId: get-settings-logo
      summary: Get Store Logo Settings
      description: |-
        Returns store logo settings.

         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          description: 'OK, null indicates that a particular field has not been overridden on a channel level when channel level settings are requested'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LogoSettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
      tags:
        - Logo
    put:
      operationId: put-settings-logo
      summary: Update Store Logo Settings
      description: |-
        Updates the logo type and logo text for a textual logo. To upload new images, use the dedicated image POST endpoints.

         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoSettingsUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LogoSettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
      tags:
        - Logo
  '/settings/logo/image':
    parameters:
      - $ref: '#/components/parameters/Accept'
    post:
      operationId: post-settings-logo-image
      summary: Create Logo Image
      description: |-
        Uploads an image file to use as the storefront logo. Supported MIME types include GIF, JPEG, and PNG. 

         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only.
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                LogoFile:
                  type: string
                  format: binary
      responses:
        '204':
          description: OK
      tags:
        - Logo Image
  '/settings/search/filters':
    get:
      operationId: getEnabled
      summary: Get Enabled Filters
      description: 'Returns a list of enabled default [Product Filtering](https://support.bigcommerce.com/s/article/Product-Filtering-Settings) filters. These filters will be used if a store does not have contextual overrides.'
      responses:
        '200':
          description: ''
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      - collapsed_by_default: false
                        display_name: Size
                        display_product_count: true
                        id: U123=
                        is_enabled: true
                        items_to_show: 10
                        sort_by: alpha
                        type: product
                      - collapsed_by_default: false
                        display_name: Brand
                        display_product_count: true
                        id: Y123=
                        is_enabled: true
                        items_to_show: 12
                        sort_by: alpha
                        type: brand
                      - collapsed_by_default: false
                        display_name: Color
                        display_product_count: true
                        id: Q123=
                        is_enabled: true
                        items_to_show: 10
                        sort_by: alpha
                        type: product
                      - collapsed_by_default: true
                        display_name: Ships for Free
                        display_product_count: false
                        id: Y456=
                        is_enabled: true
                        show_free_shipping_filter: true
                        show_in_stock_filter: true
                        show_is_featured_filter: true
                        type: other
                    meta: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ConfiguredFilters'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
      tags:
        - Search Filters
    put:
      operationId: updateEnabled
      summary: Update Enabled Filters
      description: 'Updates enabled default [Product Filtering](https://support.bigcommerce.com/s/article/Product-Filtering-Settings) filters.'
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  - collapsed_by_default: false
                    display_name: Size
                    display_product_count: true
                    id: U123=
                    is_enabled: true
                    items_to_show: 12
                    sort_by: alpha
                    type: product
                  - collapsed_by_default: false
                    display_name: Brand
                    display_product_count: true
                    id: Y123=
                    is_enabled: true
                    items_to_show: 10
                    sort_by: alpha
                    type: brand
                  - collapsed_by_default: false
                    display_name: Color
                    display_product_count: true
                    id: Q123=
                    is_enabled: true
                    items_to_show: 10
                    sort_by: alpha
                    type: product
                  - collapsed_by_default: true
                    display_name: Ships for Free
                    display_product_count: true
                    id: Y456=
                    is_enabled: true
                    show_free_shipping_filter: true
                    show_in_stock_filter: true
                    show_is_featured_filter: true
                    type: other
            schema:
              $ref: '#/components/schemas/ConfiguredFilters'
      responses:
        '200':
          description: ''
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      - collapsed_by_default: false
                        display_name: Size
                        display_product_count: true
                        id: U123==
                        is_enabled: true
                        items_to_show: 12
                        sort_by: alpha
                        type: product
                      - collapsed_by_default: false
                        display_name: Brand
                        display_product_count: true
                        id: Y123=
                        is_enabled: true
                        items_to_show: 10
                        sort_by: alpha
                        type: brand
                      - collapsed_by_default: false
                        display_name: Color
                        display_product_count: true
                        id: Q123=
                        is_enabled: true
                        items_to_show: 10
                        sort_by: alpha
                        type: product
                      - collapsed_by_default: true
                        display_name: Ships for Free
                        display_product_count: true
                        id: Y456=
                        is_enabled: true
                        show_free_shipping_filter: true
                        show_in_stock_filter: true
                        show_is_featured_filter: true
                        type: other
                    meta: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ConfiguredFilters'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
      tags:
        - Search Filters
  '/settings/search/filters/available':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      operationId: getAvailable
      summary: Get Available Filters
      description: 'Returns a list of filters available to power [Product Filtering](https://support.bigcommerce.com/s/article/Product-Filtering-Settings).'
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: channel_id
          in: query
          description: Narrows the list of available filters based on channel ID. Only products currently assigned to the given Channel will be considered.
          schema:
            type: integer
        - name: category_id
          in: query
          description: 'Narrows the list of available filters based on category ID. You can display settings to show products from the provided category, subcategories only, or both the category and its child categories.'
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      - id: Y2F0Zooo123=
                        name: Category
                        product_count: 7
                        type: category
                      - id: YnJh123=
                        name: Brand
                        product_count: 8
                        type: brand
                      - id: cmF0a123
                        name: Rating
                        product_count: 1
                        type: rating
                      - id: cHJp123=
                        name: Price
                        price_range_max: 300.99
                        price_range_min: 6.75
                        type: price
                      - id: U2l123==
                        name: Size
                        product_count: 3
                        type: product
                      - id: Q29s123=
                        name: Color
                        product_count: 2
                        type: product
                      - id: Ym9123==
                        name: Other
                        type: other
                    meta: {}
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AvailableFilter'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
      tags:
        - Search Filters
  '/settings/search/filters/contexts':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      operationId: getContexts
      summary: Get Contextual Filters
      description: |-
        Returns a list of contextual filters enabled for a particular channel or category.

        **Usage Notes**

        Contextual filters allow you to configure the enabled filters per channel or category, so that shoppers can filter by the most relevant criteria.

        The order of the returned filters will match the sort order of the filters on the storefront.
      parameters:
        - name: channel_id
          in: query
          description: Only return contextual overrides related to a particular Channel.
          schema:
            type: integer
        - name: category_id
          in: query
          description: Only return contextual overrides related to a particular Category.
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConfiguredFiltersOverride'
                  meta:
                    $ref: '#/components/schemas/MetaPaginationObject'
      tags:
        - Search Filters
    put:
      operationId: upsertContexts
      summary: Upsert Contextual Filters
      description: |-
        Upserts contextual filters for a particular channel or category.

        **Usage Notes**

        Contextual filters allow you to configure the enabled filters per channel or category, so that shoppers can filter by the most relevant criteria.

        You can change the order of the filters on the live site by changing the order of the filters you send.
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ConfiguredFiltersOverride'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConfiguredFiltersOverride'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
      tags:
        - Search Filters
  '/settings/store/locale':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      summary: Get Locale Settings
      description: Returns global locale settings.
      responses:
        '200':
          description: ''
          content:
            application/json:
              examples:
                Example:
                  value:
                    data:
                      default_shopper_language: en
                      shopper_language_selection_method: default_shopper_language
                      store_country: United States
                    meta: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Locale'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
      tags:
        - Store Locale
    put:
      summary: Update Locale Settings
      description: Updates global locale settings.
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  default_shopper_language: en
                  shopper_language_selection_method: default_shopper_language
                  store_country: United States
            schema:
              $ref: '#/components/schemas/Locale'
      responses:
        '200':
          description: ''
          content:
            application/json:
              examples:
                Example:
                  value:
                    data:
                      default_shopper_language: en
                      shopper_language_selection_method: default_shopper_language
                      store_country: United States
                    meta: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Locale'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
        '422':
          description: Provided settings could not be applied for some reason - detailed errors in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Store Locale
  '/settings/store/profile':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      summary: Get Store Profile Settings
      description: |-
        Returns store profile settings.

         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          description: OK. `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StoreProfile'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
      tags:
        - Store Profile
    put:
      summary: Update Store Profile Settings
      description: |-
        Updates store profile settings.

         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreProfile'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StoreProfile'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
        '422':
          description: Provided settings could not be applied for some reason - detailed errors in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Store Profile
  '/settings/storefront/category':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      summary: Get Storefront Category Settings
      description: |-
        Returns category settings.

         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          description: OK. `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontCategorySettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
      tags:
        - Storefront Category
    put:
      summary: Update Storefront Category Settings
      description: |-
        Updates category settings.

         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorefrontCategorySettings'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontCategorySettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
        '422':
          $ref: '#/components/responses/422ErrorResp'
      tags:
        - Storefront Category
  '/settings/storefront/product':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      operationId: get-settings-storefront-product
      summary: Get Storefront Product Settings
      description: |-
        Returns product settings.

         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          $ref: '#/components/responses/200-storefront-product-settings'
      tags:
        - Storefront Product
    put:
      operationId: put-settings-storefront-product
      summary: Update Storefront Product Settings
      description: |-
        Updates product settings.

         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorefrontProductSettings'
      responses:
        '200':
          $ref: '#/components/responses/200-storefront-product-settings'
        '422':
          $ref: '#/components/responses/422ErrorResp'
      tags:
        - Storefront Product
  '/settings/storefront/robotstxt':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      summary: Get Robots.txt Settings
      description: |-
        Returns Robots.txt settings.

         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          description: 'OK, null indicates that a particular field has not been overridden on a channel level when channel level settings are requested'
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      robots_txt_ssl: string
                    meta: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/RobotsTxtSettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
      tags:
        - Storefront Robotstxt
    put:
      summary: Update Robots.txt Settings
      description: |-
        Updates Robots.txt settings.

         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RobotsTxtSettings'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/RobotsTxtSettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
      tags:
        - Storefront Robotstxt
  '/settings/storefront/search':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      operationId: ''
      summary: Get Storefront Search Settings
      description: |-
        Returns search settings.

         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          description: 'OK, null indicates that a particular field has not been overridden on a channel level when channel level settings are requested'
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      content_product_sort: relevance
                      default_product_sort: bestselling
                      product_filtering_enabled: true
                      search_suggest: true
                    meta: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontSearchSettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
      tags:
        - Storefront Search
    put:
      summary: Update Storefront Search Settings
      description: |-
        Updates search settings.

         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  content_product_sort: relevance
                  default_product_sort: featured
                  product_filtering_enabled: true
                  search_suggest: true
            schema:
              $ref: '#/components/schemas/StorefrontSearchSettings'
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      content_product_sort: relevance
                      default_product_sort: featured
                      product_filtering_enabled: true
                      search_suggest: true
                    meta: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontSearchSettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
      tags:
        - Storefront Search
  '/settings/storefront/security':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      summary: Get Storefront Security Settings
      description: |-
        Returns security settings.

         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          description: 'OK, null indicates that a particular field has not been overridden on a channel level when channel level settings are requested'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontSecuritySettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
      tags:
        - Storefront Security
    put:
      summary: Update Storefront Security Settings
      description: |-
        Updates security settings.

         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorefrontSecuritySettings'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontSecuritySettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
      tags:
        - Storefront Security
  '/settings/storefront/seo':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      summary: Get Storefront SEO Settings
      description: |-
        Returns SEO settings.

         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          description: 'OK, null indicates that a particular field has not been overridden on a channel level when channel level settings are requested'
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      meta_description: Your BigCommerce Store
                      meta_keywords: ''
                      page_title: BigCommerce Store
                      www_redirect: no-www
                    meta: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/SEOSettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
      tags:
        - Storefront SEO
    put:
      summary: Update Storefront SEO Settings
      description: |-
        Updates SEO settings.

         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  meta_description: Your BigCommerce Store
                  meta_keywords: ''
                  page_title: New BigCommerce Store
                  www_redirect: no-www
            schema:
              $ref: '#/components/schemas/SEOSettings'
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/SEOSettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
        '422':
          $ref: '#/components/responses/422ErrorResp'
      tags:
        - Storefront SEO
  '/settings/storefront/status':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      summary: Get Storefront Status
      description: |-
        Returns storefront status-related settings. 

         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          description: 'OK, null indicates that a particular field has not been overridden on a channel level when channel level settings are requested'
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      down_for_maintenance_message: Down for maintenance
                      prelaunch_message: Prelaunch
                      prelaunch_password: mezt1f77gd
                    meta: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontStatus'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
      tags:
        - Storefront Status
    put:
      summary: Update Storefront Status
      description: |-
        Updates storefront status-related settings.

         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  down_for_maintenance_message: Down for maintenance
                  prelaunch_message: Coming soon
            schema:
              $ref: '#/components/schemas/StorefrontStatus'
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      down_for_maintenance_message: Down for maintenance
                      prelaunch_message: Coming soon
                      prelaunch_password: mezt1f77gd
                    meta: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontStatus'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
      tags:
        - Storefront Status
  '/settings/inventory':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      summary: Get Inventory Settings
      tags:
        - Inventory
      responses:
        '200':
          description: 'OK, null indicates that a particular field has not been overridden on a channel level when channel level settings are requested'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/InventorySettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
        '422':
          description: Provided settings could not be applied for some reason - detailed errors in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      description: Get Inventory Settings
    put:
      summary: Update Inventory Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventorySettings'
        description: null set for a particular field removes override on a channel level and means inheritance from a global level
      responses:
        '200':
          description: 'OK, null indicates that a particular field has not been overridden on a channel level when channel level settings are requested'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/InventorySettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/ChannelIdParam'
      tags:
        - Inventory
      description: Update inventory settings
components:
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
    ChannelIdParam:
      description: 'Channel ID to use for channel-specific setting. If omitted, you will interact with the global setting only.'
      in: query
      name: channel_id
      schema:
        type: integer
    KeysToDelete:
      description: Array of strings (CSV) representing which configuration keys should be cleared (un-overridden) for the Channel.
      in: query
      name: keys
      required: true
      schema:
        type: array
        items:
          type: string
    RequiredChannelIdParamForDelete:
      description: 'Required Channel ID. This delete operation will delete overridden settings for this channel, thus restoring them to the global defaults.'
      in: query
      name: channel_id
      required: true
      schema:
        type: integer
  schemas:
    AddressTypeEnumValues:
      description: Only supports manipulation on a global level.
      type: string
      default: Home Office
      enum:
        - Home Office
        - Commercial Office
        - Retail
        - Warehouse
      title: AddressTypeEnumValues
      x-tags:
        - Models
    AnalyticsProvider:
      type: object
      properties:
        code:
          description: Web Analytics Provider code.
          type: string
        enabled:
          description: Flag indicates if Web Analytics Provider is enabled or not.
          type: boolean
        id:
          description: Web Analytics Provider ID.
          type: integer
        name:
          description: Web Analytics Provider title.
          type: string
      x-internal: false
    AnalyticsProviders:
      type: array
      items:
        $ref: '#/components/schemas/AnalyticsProvider'
      x-internal: false
    AvailableFilter:
      type: object
      oneOf:
        - $ref: '#/components/schemas/AvailableNormalFilter'
        - $ref: '#/components/schemas/AvailablePriceFilter'
        - $ref: '#/components/schemas/AvailableOtherFilter'
      title: AvailableFilter
      x-internal: false
    AvailableNormalFilter:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        product_count:
          type: integer
        type:
          type: string
          enum:
            - category
            - brand
            - rating
            - product
      title: AvailableNormalFilter
      x-tags:
        - Models
    AvailableOtherFilter:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - other
      title: AvailableOtherFilter
      x-internal: false
    AvailablePriceFilter:
      description: ''
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        price_range_max:
          type: number
        price_range_min:
          type: number
        type:
          type: string
          enum:
            - price
      title: AvailablePriceFilter
      x-internal: false
    BaseError:
      description: |
        Error payload for the BigCommerce API.
      type: object
      properties:
        instance:
          type: string
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
      x-internal: false
    CatalogSettings:
      type: object
      properties:
        auto_approve_reviews:
          type: boolean
        enable_product_comparisons:
          type: boolean
      x-tags:
        - Models
    CategoryListingModeEnumValues:
      type: string
      enum:
        - current_category_only
        - child_categories
        - child_categories_if_category_empty
      title: CategoryListingModeEnumValues
      x-tags:
        - Models
    ConfiguredFilter:
      oneOf:
        - $ref: '#/components/schemas/EnabledProductFilter'
        - $ref: '#/components/schemas/EnabledPriceFilter'
        - $ref: '#/components/schemas/EnabledCategoryFilter'
        - $ref: '#/components/schemas/EnabledBrandFilter'
        - $ref: '#/components/schemas/EnabledRatingFilter'
        - $ref: '#/components/schemas/EnabledMiscFilter'
      title: ConfiguredFilter
      x-internal: false
    ConfiguredFilters:
      type: array
      items:
        $ref: '#/components/schemas/ConfiguredFilter'
      title: ConfiguredFilters
      x-internal: false
    ConfiguredFiltersOverride:
      description: 'A new set of enabled Product Filtering filters which should display in a particular context, such as on a particular Channel, or while viewing a particular Category. Array order indicates the display order on the storefront.'
      type: object
      properties:
        context:
          $ref: '#/components/schemas/SearchFilterOverrideContextIdentifier'
        data:
          $ref: '#/components/schemas/ConfiguredFilters'
      title: ConfiguredFiltersOverride
      x-internal: false
    ContentSortEnumValues:
      type: string
      default: relevance
      enum:
        - relevance
        - atoz
        - ztoa
      title: ContentSortEnumValues
      x-internal: false
    DetailedErrors:
      type: object
      properties: {}
      additionalProperties: true
      title: Detailed Errors
      x-internal: false
    EnabledBrandFilter:
      description: A storefront filter for product brand
      type: object
      properties:
        collapsed_by_default:
          type: boolean
        display_name:
          type: string
        display_product_count:
          type: boolean
        id:
          type: string
        is_enabled:
          type: boolean
        items_to_show:
          type: integer
          enum:
            - 5
            - 10
            - 15
        sort_by:
          type: string
          enum:
            - alpha
            - item_count
        type:
          type: string
          enum:
            - brand
      title: EnabledBrandFilter
      x-internal: false
    EnabledCategoryFilter:
      description: A storefront filter for product category
      type: object
      properties:
        collapsed_by_default:
          type: boolean
        display_name:
          type: string
        display_product_count:
          type: boolean
        id:
          type: string
        is_enabled:
          type: boolean
        items_to_show:
          type: integer
          enum:
            - 5
            - 10
            - 15
        type:
          type: string
          enum:
            - category
      title: EnabledCategoryFilter
      x-internal: false
    EnabledFilter:
      oneOf:
        - $ref: '#/components/schemas/EnabledProductFilter'
        - $ref: '#/components/schemas/EnabledPriceFilter'
        - $ref: '#/components/schemas/EnabledCategoryFilter'
        - $ref: '#/components/schemas/EnabledBrandFilter'
        - $ref: '#/components/schemas/EnabledRatingFilter'
        - $ref: '#/components/schemas/EnabledMiscFilter'
      title: EnabledFilter
      x-internal: false
    EnabledFilters:
      type: array
      items:
        $ref: '#/components/schemas/EnabledFilter'
      title: EnabledFilters
      x-internal: false
    EnabledFiltersOverride:
      description: 'A new set of enabled Product Filtering filters which should display in a particular context, such as on a particular Channel, or while viewing a particular Category. Array order indicates the display order on the storefront.'
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EnabledFilters'
        scope:
          $ref: '#/components/schemas/SearchFilterOverrideScopeIdentifier'
      title: EnabledFiltersOverride
      x-internal: false
    EnabledMiscFilter:
      description: Miscellaneous Filters which appear as a group.
      type: object
      properties:
        collapsed_by_default:
          type: boolean
        display_name:
          type: string
        display_product_count:
          type: boolean
        id:
          type: integer
        is_enabled:
          type: boolean
        show_free_shipping_filter:
          type: boolean
        show_in_stock_filter:
          type: boolean
        show_is_featured_filter:
          type: boolean
        show_product_count:
          type: boolean
        type:
          type: string
          enum:
            - other
      title: EnabledMiscFilter
      x-internal: false
    EnabledPriceFilter:
      description: 'A filter based on the product’s price, shown as a price range on the storefront.'
      type: object
      properties:
        collapsed_by_default:
          type: boolean
        display_name:
          type: string
        id:
          type: string
        is_enabled:
          type: boolean
        type:
          type: string
          enum:
            - price
      title: EnabledPriceFilter
      x-internal: false
    EnabledProductFilter:
      description: A filter that uses product options and custom field data.
      type: object
      properties:
        collapsed_by_default:
          type: boolean
        display_name:
          type: string
        display_product_count:
          type: boolean
        id:
          type: string
        is_enabled:
          type: boolean
        items_to_show:
          type: integer
          enum:
            - 5
            - 10
            - 15
        sort_by:
          type: string
          enum:
            - alpha
            - option_values
            - item_count
        type:
          type: string
          enum:
            - product
      title: EnabledProductFilter
      x-internal: false
    EnabledRatingFilter:
      description: A filter based on product review ratings.
      type: object
      properties:
        collapsed_by_default:
          type: boolean
        display_name:
          type: string
        id:
          type: string
        is_enabled:
          type: boolean
        type:
          type: string
          enum:
            - rating
      title: EnabledRatingFilter
      x-internal: false
    EnabledTransactionalEmails:
      type: object
      properties:
        abandoned_cart_email:
          type: boolean
        account_details_changed_email:
          type: boolean
        combined_order_status_email:
          type: boolean
        create_account_email:
          type: boolean
        create_guest_account_email:
          type: boolean
        gift_certificate_email:
          type: boolean
        invoice_email:
          type: boolean
        order_message_notification_email:
          type: boolean
        product_review_email:
          type: boolean
        return_confirmation_email:
          type: boolean
        return_statuschange_email:
          type: boolean
      title: ''
      x-internal: false
    Error:
      description: A standard error object.
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
      x-internal: false
      x-tags:
        - Common
    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - properties:
            errors:
              $ref: '#/components/schemas/DetailedErrors'
          type: object
      x-internal: false
    ErrorResponse400:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
      x-internal: false
    ErrorResponse404:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
      x-internal: false
    ErrorResponse409:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
      x-internal: false
    ErrorResponse422:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
      x-internal: false
    HSTSMaxAgeEnumValues:
      type: string
      enum:
        - zero_seconds
        - five_minutes
        - one_year
      title: HSTSMaxAgeEnumValues
      x-tags:
        - Models
    InventoryNotificationsSettings:
      type: object
      x-tags:
        - Models
      properties:
        low_stock_notification_address:
          type: array
          items:
            type: string
            example: test.user@example.com
        out_of_stock_notification_address:
          type: array
          items:
            type: string
            example: test.user@example.com
      x-examples:
        example-1:
          low_stock_notification_address:
            - test.user@example.com
          out_of_stock_notification_address:
            - test.user@example.com
    InventorySettings:
      type: object
      properties:
        product_out_of_stock_behavior:
          type: string
          enum:
            - do_nothing
            - hide_product
            - hide_product_and_accessible
            - hide_product_and_redirect
          description: Describes storefront behavior when product is out of stock.
        option_out_of_stock_behavior:
          type: string
          enum:
            - do_nothing
            - hide_option
            - label_option
          description: Describes storefront behavior when variant is out of stock.
        update_stock_behavior:
          type: string
          enum:
            - order_placed
            - order_completed_or_shipped
          description: |-
            Describes when stock levels are updated.

            Global settings apply when inventory changes through a [manual order](https://support.bigcommerce.com/s/article/Creating-a-Manual-Order?language=en_US). Settings for a channel apply when inventory changes through an order in a channel. These settings affect webhooks that trigger from order-related events, including [product](/api-docs/store-management/webhooks/webhook-events#products), [SKU](/api-docs/store-management/webhooks/webhook-events#skus), and [inventory](/buy-online-pick-up-in-store/webhooks#inventory) webhooks.  
        edit_order_stock_adjustment:
          type: boolean
          description: |-
            Describes whether stock levels automatically adjust when you edit an order.

            Global settings apply when inventory changes through a [manual order](https://support.bigcommerce.com/s/article/Creating-a-Manual-Order?language=en_US). Settings for a channel apply when inventory changes through an order in a channel. These settings affect webhooks that trigger from order-related events, including [product](/api-docs/store-management/webhooks/webhook-events#products), [SKU](/api-docs/store-management/webhooks/webhook-events#skus), and [inventory](/buy-online-pick-up-in-store/webhooks#inventory) webhooks.  
        refund_order_stock_adjustment:
          type: boolean
          description: |-
            Describes whether stock levels automatically adjust when you refund or cancel an order.

            Global settings apply when inventory changes through a [manual order](https://support.bigcommerce.com/s/article/Creating-a-Manual-Order?language=en_US). Settings for a channel apply when inventory changes through an order in a channel. These settings affect webhooks that trigger from order-related events, including [product](/api-docs/store-management/webhooks/webhook-events#products), [SKU](/api-docs/store-management/webhooks/webhook-events#skus), and [inventory](/buy-online-pick-up-in-store/webhooks#inventory) webhooks.  
        stock_level_display:
          type: string
          enum:
            - dont_show
            - show
            - show_when_low
          description: Describes whether a storefront displays stock levels.
        default_out_of_stock_message:
          type: string
          example: Currently out of stock
          description: Out of stock message displayed to shoppers.
        hide_in_product_filtering:
          type: boolean
          description: 'Describes whether an option is hidden in product filtering. Applies when `option_out_of_stock_behavior` is set to `label_option`. '
        show_pre_order_stock_levels:
          type: boolean
          description: Describes whether pre-order stock levels are shown.
          default: false
          example: true
        show_out_of_stock_message:
          type: boolean
          description: Describes whether out-of-stock messages are shown on product listing pages.
          default: false
          example: true
    Locale:
      description: 'The basic locale settings for a store, used to give shopper information about languages, countries, etc.'
      type: object
      properties:
        default_shopper_language:
          type: string
          example: 'en, en-us'
          default: en
        shopper_language_selection_method:
          description: |-
            Determines whether to display the storefront content in the shopper's browser language or the shopper's selected default language.

            Available values:
            * `browser` - language updates automatically based on the shopper browser language. Multiple languages are supported.
            * `default_shopper_language` - content is displayed in a single language based on the set `default_shopper_language`. Only the selected language is supported.
          type: string
          example: default_shopper_language
          default: default_shopper_language
          enum:
            - browser
            - default_shopper_language
        store_country:
          type: string
          default: United States
      required:
        - default_shopper_language
      x-internal: false
    LogoSettings:
      type: object
      properties:
        favicon_url:
          type: string
        logo_image_url:
          type: string
        logo_text:
          type: string
        type:
          type: string
          enum:
            - image
            - text
      x-internal: false
    LogoSettingsUpdate:
      type: object
      properties:
        logo_text:
          type: string
        type:
          type: string
          enum:
            - image
            - text
      x-tags:
        - Models
    MetaOpen:
      title: Response meta
      type: object
      properties: {}
      additionalProperties: true
      description: Response metadata.
    MetaPaginationObject:
      type: object
      properties:
        pagination:
          type: object
          properties:
            count:
              type: integer
              example: 5
              minimum: 0
            current_page:
              type: integer
              example: 1
              minimum: 1
            links:
              type: object
              properties:
                current:
                  type: string
                  example: '?limit=5&page=1'
                next:
                  type: string
                  example: '?limit=5&page=2'
            per_page:
              type: integer
              example: 5
              minimum: 0
            total:
              type: integer
              example: 246
              minimum: 0
            total_pages:
              type: integer
              example: 50
              minimum: 0
      x-internal: false
    ProductSortEnumValues:
      description: The available sorts for PLP pages.
      type: string
      default: bestselling
      enum:
        - featured
        - bestselling
        - newest
        - atoz
        - ztoa
        - highestprice
        - lowestprice
        - bestreviewed
      title: ProductSortEnumValues
      x-internal: false
    RobotsTxtSettings:
      type: object
      properties:
        robots_txt_ssl:
          type: string
      x-internal: false
    SEOSettings:
      type: object
      properties:
        meta_description:
          type: string
        meta_keywords:
          type: string
        page_title:
          type: string
        www_redirect:
          type: string
          enum:
            - www
            - no-www
            - none
      x-internal: false
    SearchFilterOverrideContextIdentifier:
      type: object
      properties:
        category_id:
          type: integer
        channel_id:
          type: integer
      title: ContextIdentifier
      x-internal: false
    SearchFilterOverrideScopeIdentifier:
      type: object
      properties:
        category_id:
          type: integer
        channel_id:
          type: integer
      title: ScopeIdentifier
      x-internal: false
    StoreProfile:
      description: 'The basic profile settings for a store, used to give the shopper information about the business from which they are purchasing.'
      type: object
      x-internal: false
      properties:
        store_address:
          type: string
        store_address_type:
          $ref: '#/components/schemas/AddressTypeEnumValues'
        store_email:
          type: string
        store_name:
          type: string
        store_phone:
          type: string
    StorefrontCategorySettings:
      type: object
      properties:
        category_tree_depth:
          type: integer
          maximum: 8
          minimum: 1
        default_product_sort:
          $ref: '#/components/schemas/ProductSortEnumValues'
        listing_mode:
          $ref: '#/components/schemas/CategoryListingModeEnumValues'
      x-tags:
        - Models
    StorefrontProductSettings:
      type: object
      properties:
        show_product_price:
          type: boolean
          description: |
           Determines the visibility of the product price.
          example: true
        show_product_sku:
          type: boolean
          description: |
           Determines the visibility of the product SKU.
          example: true
        show_product_weight:
          type: boolean
          description: |
           Determines the visibility of the product's weight.
          example: false
        show_product_brand:
          type: boolean
          description: |
           Determines the visibility of the product's brand.
          example: true
        show_product_shipping:
          type: boolean
          description: |
           Determines the visibility of the product's shipping option.
          example: false
        show_product_rating:
          type: boolean
          description: |
           Determines the visibility of the product's rating.
          example: true
        show_add_to_cart_link:
          type: boolean
          description: |
           Determines the visibility of the Add to Cart link.
          example: true
        default_preorder_message:
          type: string
          description: |
           The product's pre-order message. If undefined, the message defaults to the storewide setting.
          example: Preorder message
        show_breadcrumbs_product_pages:
          type: string
          enum:
            - show_one
            - show_none
          example: show_one
        show_add_to_cart_qty_box:
          type: boolean
          description: |
           Determines the visibility of the Add to Cart quantity setting.
          example: true
        show_add_to_wishlist:
          type: boolean
          description: |
           Determines the visibilty of the Add to Wishlist setting.
          example: true
        hide_price_from_guests:
          type: boolean
          description: |
           Determines the visibility of the price.
          example: false
      title: StorefrontProductSettings
      x-tags:
        - Models
    StorefrontSearchSettings:
      type: object
      properties:
        content_product_sort:
          $ref: '#/components/schemas/ContentSortEnumValues'
        default_product_sort:
          $ref: '#/components/schemas/ProductSortEnumValues'
        product_filtering_enabled:
          description: Controls whether Product Filtering feature is active on the storefront. Only supports manipulation on a global level.
          type: boolean
        search_suggest:
          type: boolean
      x-internal: false
    StorefrontSecuritySettings:
      type: object
      properties:
        csp_header:
          type: object
          properties:
            enabled:
              type: boolean
            header_value:
              type: string
        hsts:
          type: object
          properties:
            enabled:
              type: boolean
            include_preload:
              type: boolean
            include_subdomains:
              type: boolean
            max_age:
              $ref: '#/components/schemas/HSTSMaxAgeEnumValues'
        sitewide_https_enabled:
          type: boolean
        x_frame_options_header:
          type: object
          properties:
            allowed_url:
              type: string
            enabled:
              type: boolean
            setting:
              type: string
              enum:
                - deny
                - same_origin
                - allow_from_url
      title: StorefrontSecuritySettings
      x-internal: false
    StorefrontStatus:
      type: object
      properties:
        down_for_maintenance_message:
          type: string
        prelaunch_message:
          type: string
        prelaunch_password:
          description: A read-only value representing the auto-generated storefront password.
          type: string
      title: ''
      x-internal: false
  responses:
    200-storefront-product-settings:
      description: OK. `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested
      content:
        application/json:
          examples: {}
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/StorefrontProductSettings'
              meta:
                $ref: '#/components/schemas/MetaOpen'
    422ErrorResp:
      description: |
        `422 Unprocessable Entity` Provided settings could not be applied for some reason - detailed errors in the response.
      content:
        application/json:
          examples: {}
          schema:
            description: ''
            type: object
            properties:
              errors:
                type: object
                properties:
                  '':
                    type: string
                    example: 'Incorrect value [current__only], it should match one of: current_category_only,child_categories_if_category_empty,child_categories; Incorrect value [besling], it should match one of: featured,newest,bestselling,atoz,ztoa,bestreviewed,lowestprice,highestprice'
                    minLength: 1
              status:
                type: number
                example: 422
              title:
                type: string
                example: JSON data is missing or invalid
                minLength: 1
              type:
                type: string
                example: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
                minLength: 1
            x-examples:
              example-1:
                errors:
                  '': 'Incorrect value [], it should match one of: current_category_only,child_categories_if_category_empty,child_categories; Incorrect value [], it should match one of: featured,newest,bestselling,atoz,ztoa,bestreviewed,lowestprice,highestprice'
                status: 422
                title: JSON data is missing or invalid
                type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Information & Settings | modify | `store_v2_information` |
        |  Information & Settings | read-only | `store_v2_information_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header

openapi: '3.0.3'
info:
  version: ''
  title: Shipping V2
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  description: |-
    Manage shipping zones, shipping methods, and shipping carrier connections.


    ### Shipping Zones

    The Shipping Zone object and endpoints manage shipping zones within countries.


    ### Shipping Methods

    The Shipping Methods object and endpoints manage shipping rules within Shipping Zones. These rules determine the shipping rates displayed at checkout, and related parts of the control panel, such as the shipping of manual orders.


    ### Shipping Carrier Connections

    Carrier connections refer to specific settings required to connect to a specific shipping carrier. Each carrier requires your app to supply a unique set of properties/fields to establish a connection with that carrier.
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v2'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Shipping Method
  - name: Shipping Carrier
  - name: Shipping Zones
  - name: Shipping Products Custom Information
paths:
  '/shipping/zones':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      description: Returns a list of all *Shipping Zones*.
      summary: Get All Shipping Zones
      tags:
        - Shipping Zones
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  title: Shipping Zone
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Zone ID
                      example: 1
                    name:
                      type: string
                      description: Zone name. Required for PUT requests.
                      example: United States
                    type:
                      type: string
                      enum:
                        - zip
                        - country
                        - state
                        - global
                    locations:
                      description: Array of zone locations.
                      type: array
                      items:
                        title: Shipping Zone Locations
                        type: object
                        properties:
                          id:
                            description: Location’s ID.
                            example: 3
                            type: integer
                          zip:
                            description: Location’s ZIP/postal code.
                            example: '12345'
                            type: string
                          country_iso2:
                            description: 2-letter ISO Alpha-2 code for the country.
                            example: US
                            type: string
                          state_iso2:
                            description: ISO Alpha-2 code for the state.
                            example: TX
                            type: string
                    free_shipping:
                      type: object
                      properties:
                        enabled:
                          type: boolean
                        minimum_sub_total:
                          type: string
                          example: '0.0000'
                          description: '(Float, Float-As-String, Integer)'
                        exclude_fixed_shipping_products:
                          type: boolean
                    handling_fees:
                      title: Shipping Zone Handling Fees
                      type: object
                      oneOf:
                        - properties:
                            fixed_surcharge:
                              description: Flat-rate handling fee applied to shipping cost.
                              example: '0'
                              type: string
                            display_separately:
                              description: Indicates whether store displays handling fee separately at checkout.
                              example: true
                              type: boolean
                          title: fixed surcharge
                        - properties:
                            percentage_surcharge:
                              description: Percentage handling fee applied to shipping cost.
                              example: '5'
                              type: string
                            display_separately:
                              description: Indicates whether store displays handling fee separately at checkout.
                              example: true
                              type: boolean
                          title: percentage surcharge
                    enabled:
                      description: Whether this shipping zone is enabled.
                      example: true
                      type: boolean
              examples:
                'Example 1: Zones are Country Zones':
                  value:
                    - id: 1
                      name: United States
                      type: country
                      locations:
                        - id: 5
                          country_iso2: US
                      free_shipping:
                        enabled: false
                        minimum_sub_total: '0.0000'
                        exclude_fixed_shipping_products: false
                      enabled: true
                    - id: 2
                      name: Australia
                      type: country
                      locations:
                        - id: 6
                          country_iso2: AU
                      free_shipping:
                        enabled: false
                        minimum_sub_total: '0.0000'
                        exclude_fixed_shipping_products: false
                      enabled: true
                'Example 2: Zone is Selection of States in a Country':
                  value:
                    - id: 2
                      name: States in the U.S.
                      type: state
                      locations:
                        - id: 3
                          country_iso2: US
                          state_iso2: TX
                        - id: 4
                          country_iso2: US
                          state_iso2: TX
                      free_shipping:
                        enabled: false
                        minimum_sub_total: "0"
                        exclude_fixed_shipping_products: true
                      handling_fees:
                        display_separately: false
                        fixed_surcharge: 0
                      enabled: false
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      operationId: getAllShippingZones
    post:
      description: Creates a *Shipping Zone*.
      summary: Create a Shipping Zone
      tags:
        - Shipping Zones
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Shipping Zone
              type: object
              properties:
                name:
                  type: string
                  description: Zone name. Required for PUT requests.
                  example: United States
                type:
                  type: string
                  enum:
                    - zip
                    - country
                    - state
                    - global
                locations:
                  description: Array of zone locations.
                  type: array
                  items:
                    title: Shipping Zone Locations
                    type: object
                    properties:
                      id:
                        description: Location’s ID.
                        example: 3
                        type: integer
                      zip:
                        description: Location’s ZIP/postal code.
                        example: '12345'
                        type: string
                      country_iso2:
                        description: 2-letter ISO Alpha-2 code for the country.
                        example: US
                        type: string
                      state_iso2:
                        description: ISO Alpha-2 code for the state.
                        example: TX
                        type: string
                free_shipping:
                  type: object
                  properties:
                    enabled:
                      type: boolean
                    minimum_sub_total:
                      type: string
                      example: '0.0000'
                      description: '(Float, Float-As-String, Integer)'
                    exclude_fixed_shipping_products:
                      type: boolean
                handling_fees:
                  title: Shipping Zone Handling Fees
                  type: object
                  oneOf:
                    - properties:
                        fixed_surcharge:
                          description: Flat-rate handling fee applied to shipping cost.
                          example: '0'
                          type: string
                        display_separately:
                          description: Indicates whether store displays handling fee separately at checkout.
                          example: true
                          type: boolean
                      title: fixed surcharge
                    - properties:
                        percentage_surcharge:
                          description: Percentage handling fee applied to shipping cost.
                          example: '5'
                          type: string
                        display_separately:
                          description: Indicates whether store displays handling fee separately at checkout.
                          example: true
                          type: boolean
                      title: percentage surcharge
                enabled:
                  description: Whether this shipping zone is enabled.
                  example: true
                  type: boolean
              required:
                - name
                - type
            examples:
              'Type: ZIP':
                value:
                  name: United States
                  type: zip
                  locations:
                    - zip: '11103'
                      country_iso2: US
              'Type: Country':
                value:
                  name: Mexico
                  type: country
                  locations:
                    - country_iso2: MX
              'Type: State':
                value:
                  name: South Carolina
                  type: state
                  locations:
                    - country_iso2: US
                      state_iso2: SC
              'Type: Global':
                value:
                  name: Global
                  type: global
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Shipping Zone
                type: object
                properties:
                  id:
                    type: integer
                    description: Zone ID.
                    example: 1
                  name:
                    type: string
                    description: Zone name.
                    example: United States
                  type:
                    type: string
                    enum:
                      - zip
                      - country
                      - state
                      - global
                  locations:
                    description: Array of zone locations.
                    type: array
                    items:
                      title: Shipping Zone Locations
                      type: object
                      properties:
                        id:
                          description: Location ID.
                          example: 3
                          type: integer
                        zip:
                          description: Location’s ZIP/postal code.
                          example: '12345'
                          type: string
                        country_iso2:
                          description: 2-letter ISO Alpha-2 code for the country.
                          example: US
                          type: string
                        state_iso2:
                          description: ISO Alpha-2 code for the state.
                          example: TX
                          type: string
                  free_shipping:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                      minimum_sub_total:
                        type: string
                        example: '0.0000'
                        description: '(Float, Float-As-String, Integer)'
                      exclude_fixed_shipping_products:
                        type: boolean
                  handling_fees:
                    title: Shipping Zone Handling Fees
                    type: object
                    oneOf:
                      - properties:
                          fixed_surcharge:
                            description: Flat-rate handling fee applied to shipping cost.
                            example: '0'
                            type: string
                          display_separately:
                            description: Indicates whether store displays handling fee separately at checkout.
                            example: true
                            type: boolean
                        title: fixed surcharge
                      - properties:
                          percentage_surcharge:
                            description: Percentage handling fee applied to shipping cost.
                            example: '5'
                            type: string
                          display_separately:
                            description: Indicates whether store displays handling fee separately at checkout.
                            example: true
                            type: boolean
                        title: percentage surcharge
                  enabled:
                    description: Whether this shipping zone is enabled.
                    example: true
                    type: boolean
              examples: {}
      operationId: createAShippingZones
  '/shipping/zones/{id}':
    get:
      description: Returns a single *Shipping Zone*.
      summary: Get a Shipping Zones
      tags:
        - Shipping Zones
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Shipping Zone
                type: object
                properties:
                  id:
                    type: integer
                    description: Zone ID
                    example: 1
                  name:
                    type: string
                    description: Zone name.
                    example: United States
                  type:
                    type: string
                    enum:
                      - zip
                      - country
                      - state
                      - global
                  locations:
                    description: Array of zone locations.
                    type: array
                    items:
                      title: Shipping Zone Locations
                      type: object
                      properties:
                        id:
                          description: Location’s ID.
                          example: 3
                          type: integer
                        zip:
                          description: Location’s ZIP/postal code.
                          example: '12345'
                          type: string
                        country_iso2:
                          description: 2-letter ISO Alpha-2 code for the country.
                          example: US
                          type: string
                        state_iso2:
                          description: ISO Alpha-2 code for the state.
                          example: TX
                          type: string
                  free_shipping:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                      minimum_sub_total:
                        type: string
                        example: '0.0000'
                        description: '(Float, Float-As-String, Integer)'
                      exclude_fixed_shipping_products:
                        type: boolean
                  handling_fees:
                    title: Shipping Zone Handling Fees
                    type: object
                    oneOf:
                      - properties:
                          fixed_surcharge:
                            description: Flat-rate handling fee applied to shipping cost.
                            example: '0'
                            type: string
                          display_separately:
                            description: Indicates whether store displays handling fee separately at checkout.
                            example: true
                            type: boolean
                        title: fixed surcharge
                      - properties:
                          percentage_surcharge:
                            description: Percentage handling fee applied to shipping cost.
                            example: '5'
                            type: string
                          display_separately:
                            description: Indicates whether store displays handling fee separately at checkout.
                            example: true
                            type: boolean
                        title: percentage surcharge
                  enabled:
                    description: Whether this shipping zone is enabled.
                    example: true
                    type: boolean
      operationId: getAShippingZone
    put:
      description: |-
        Updates a *Shipping Zone*.

        **Required Fields**
        * name

        **Read Only Fields**
        * id
      summary: Update a Shipping Zone
      tags:
        - Shipping Zones
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Shipping Zone
              type: object
              properties:
                id:
                  type: integer
                  description: Zone ID. Read-only.
                  example: 1
                  readOnly: true
                name:
                  type: string
                  description: Zone name. Required for PUT requests.
                  example: United States
                type:
                  type: string
                  enum:
                    - zip
                    - country
                    - state
                    - global
                locations:
                  description: Array of zone locations.
                  type: array
                  items:
                    title: Shipping Zone Locations
                    type: object
                    properties:
                      id:
                        description: Location’s ID.
                        example: 3
                        type: integer
                      zip:
                        description: Location’s ZIP/postal code.
                        example: '12345'
                        type: string
                      country_iso2:
                        description: 2-letter ISO Alpha-2 code for the country.
                        example: US
                        type: string
                      state_iso2:
                        description: ISO Alpha-2 code for the state.
                        example: TX
                        type: string
                free_shipping:
                  type: object
                  properties:
                    enabled:
                      type: boolean
                    minimum_sub_total:
                      type: string
                      example: '0.0000'
                      description: '(Float, Float-As-String, Integer)'
                    exclude_fixed_shipping_products:
                      type: boolean
                handling_fees:
                  title: Shipping Zone Handling Fees
                  type: object
                  oneOf:
                    - properties:
                        fixed_surcharge:
                          description: Flat-rate handling fee applied to shipping cost.
                          example: '0'
                          type: string
                        display_separately:
                          description: Indicates whether store displays handling fee separately at checkout.
                          example: true
                          type: boolean
                      title: fixed surcharge
                    - properties:
                        percentage_surcharge:
                          description: Percentage handling fee applied to shipping cost.
                          example: '5'
                          type: string
                        display_separately:
                          description: Indicates whether store displays handling fee separately at checkout.
                          example: true
                          type: boolean
                      title: percentage surcharge
                enabled:
                  description: Whether this shipping zone is enabled.
                  example: true
                  type: boolean
              required:
                - name
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Shipping Zone
                type: object
                properties:
                  id:
                    type: integer
                    description: Zone ID. Read-only.
                    example: 1
                    readOnly: true
                  name:
                    type: string
                    description: Zone name. Required for PUT requests.
                    example: United States
                  type:
                    type: string
                    enum:
                      - zip
                      - country
                      - state
                      - global
                  locations:
                    description: Array of zone locations.
                    type: array
                    items:
                      title: Shipping Zone Locations
                      type: object
                      properties:
                        id:
                          description: Location’s ID.
                          example: 3
                          type: integer
                        zip:
                          description: Location’s ZIP/postal code.
                          example: '12345'
                          type: string
                        country_iso2:
                          description: 2-letter ISO Alpha-2 code for the country.
                          example: US
                          type: string
                        state_iso2:
                          description: ISO Alpha-2 code for the state.
                          example: TX
                          type: string
                  free_shipping:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                      minimum_sub_total:
                        type: string
                        example: '0.0000'
                        description: '(Float, Float-As-String, Integer)'
                      exclude_fixed_shipping_products:
                        type: boolean
                  handling_fees:
                    title: Shipping Zone Handling Fees
                    type: object
                    oneOf:
                      - properties:
                          fixed_surcharge:
                            description: Flat-rate handling fee applied to shipping cost.
                            example: '0'
                            type: string
                          display_separately:
                            description: Indicates whether store displays handling fee separately at checkout.
                            example: true
                            type: boolean
                        title: fixed surcharge
                      - properties:
                          percentage_surcharge:
                            description: Percentage handling fee applied to shipping cost.
                            example: '5'
                            type: string
                          display_separately:
                            description: Indicates whether store displays handling fee separately at checkout.
                            example: true
                            type: boolean
                        title: percentage surcharge
                  enabled:
                    description: Whether this shipping zone is enabled.
                    example: true
                    type: boolean
                required:
                  - name
      operationId: updateAShippingZone
    delete:
      description: Deletes a *Shipping Zone*.
      summary: Delete a Shipping Zone
      tags:
        - Shipping Zones
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      operationId: deleteAShippingZone
    parameters:
      - $ref: '#/components/parameters/Accept'
      - name: id
        in: path
        required: true
        description: ID of the shipping zone.
        schema:
          type: integer
          exclusiveMinimum: false
          exclusiveMaximum: false
  '/shipping/zones/{zone_id}/methods':
    get:
      description: 'Returns a list of *Shipping Methods* in a zone. Default sorting is by shipping method ID, from lowest to highest.'
      summary: Get All Shipping Methods in a Zone
      tags:
        - Shipping Method
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/shippingMethod_Full'
              examples:
                Example 1:
                  value:
                    - id: 1
                      name: Flat Rate
                      type: perorder
                      settings:
                        rate: 12
                      enabled: true
                      handling_fees:
                        fixed_surcharge: "0"
                      is_fallback: false
                    - id: 2
                      name: Pickup In Store
                      type: total
                      settings: {}
                      enabled: false
                      handling_fees:
                        fixed_surcharge: "0"
                      is_fallback: false
                    - id: 3
                      name: Ship by Weight
                      type: weight
                      settings:
                        default_cost: 0
                        default_cost_type: fixed_amount
                        range:
                          - lower_limit: 0
                            upper_limit: 20
                            shipping_cost: 8
                          - lower_limit: 20
                            upper_limit: 40
                            shipping_cost: 8
                          - lower_limit: 40
                            upper_limit: 60
                            shipping_cost: 8
                          - lower_limit: 60
                            upper_limit: 80
                            shipping_cost: 8
                      enabled: true
                      handling_fees:
                        fixed_surcharge: "0"
                      is_fallback: false
                    - id: 4
                      name: UPS®
                      type: upsready
                      settings:
                        carrier_options:
                          include_package_value: '1'
                          show_transit_time: '1'
                          destination_type: residential
                          packing_method: combined
                          packaging_type: 2c
                          delivery_services:
                            - Express
                            - Ground
                            - Next_Day_Air
                            - Saver
                            - Standard
                          packaging: []
                      enabled: true
                      handling_fees:
                        fixed_surcharge: "0"
                      is_fallback: false
                Example 2:
                  value:
                    - id: 23225205
                      name: tempo
                      type: royalmail
                      settings: {}
                      enabled: true
                      handling_fees:
                        fixed_surcharge: "0"
                      is_fallback: false
                    - id: 35889344
                      name: Lorem Excepteur esse
                      type: canadapost
                      settings: {}
                      enabled: true
                      handling_fees:
                        percentage_surcharge: "0"
                      is_fallback: false
      operationId: getShippingMethodsZone
    post:
      description: |-
        Creates a *Shipping Method* within a shipping zone. Real Time Carrier Connections are also supported by this endpoint. 
        
        ## Carrier Configurations – Current
        
        This section provides a sample request and a carrier-specific object/property model, for each supported carrier.
        
        ### USPS by Endicia
        
        Example request body:
        
        ```json
        {
            "name": "USPS by Endicia",
            "type": "endicia",
            "settings": {
                "carrier_options": {
                    "delivery_services" : ["PriorityExpress","Priority", "PriorityMailExpressInternational"],
                    "packaging_type" : "LargeFlatRateBox",
                    "show_transit_time" : true
                }
            },
            "enabled": true
        }
        ```
        
        #### USPS by Endicia Object Properties
        
        | Property | Type | Values |
        |:---------|:-----|:-------|
        | delivery_services | array | PriorityExpress, PriorityMailExpressInternational, FirstClassPackageInternationalService, Priority, PriorityMailInternational, First, ParcelSelect, MediaMail |
        | packaging_type | array | FlatRateLegalEnvelope, FlatRatePaddedEnvelope, Parcel, SmallFlatRateBox, MediumFlatRateBox, LargeFlatRateBox, FlatRateEnvelope, RegionalRateBoxA, RegionalRateBoxB |
        |show_transit_time | boolean | true, false |
        
        ### FedEx
        
        Example request body:
        
        ```json
        {
            "name": "FEDEX",
            "type": "fedex",
            "settings": {
                "carrier_options": {
                    "delivery_services": [
                        "PRIORITY_OVERNIGHT",
                        "FEDEX_2_DAY"
                    ],
                    "dropoff_type": "REGULAR_PICKUP",
                    "packaging_type": "FEDEX_ENVELOPE",
                    "packing_method": "SEPARATE",
                    "rate_type": "NONE",
                    "include_package_value": true,
                    "destination_type": "residential"
                }
            },
            "enabled": true
        }
        
        ```
        
        #### FedEx Object Properties
        
        | Property | Type | Values |
        |:---------|:-----|:-------|
        | delivery_services | array | PRIORITY_OVERNIGHT, STANDARD_OVERNIGHT, FIRST_OVERNIGHT, FEDEX_2_DAY, FEDEX_EXPRESS_SAVER, INTERNATIONAL_PRIORITY, INTERNATIONAL_ECONOMY, INTERNATIONAL_FIRST, FEDEX_1_DAY_FREIGHT, FEDEX_2_DAY_FREIGHT, FEDEX_3_DAY_FREIGHT, FEDEX_GROUND, GROUND_HOME_DELIVERY, INTERNATIONAL_PRIORITY_FREIGHT, INTERNATIONAL_ECONOMY_FREIGHT, EUROPE_FIRST_INTERNATIONAL_PRIORITY |
        | dropoff_type | string | REGULAR_PICKUP, REQUEST_COURIER, DROP_BOX, BUSINESS_SERVICE_CENTER, STATION |
        | packaging_type | string | FEDEX_ENVELOPE,  FEDEX_PAK, FEDEX_BOX, FEDEX_TUBE, FEDEX_10KG_BOX, FEDEX_25KG_BOX, YOUR_PACKAGING |
        | packing_method | string | SEPARATE, COMBINED |
        | rate_type | string | NONE, LIST |
        | include_package_value | boolean | true, false |
        | destination_type | string | residential, business |
        
        
        ### UPS Ready
        
        Example request body:
        
        ```json
        {
            "name": "UPS ready",
            "type": "upsready",
            "settings": {
                "carrier_options": {
                    "delivery_services": [
                        "2nd_Day_Air","Standard"
                    ],
                    "packaging_type": "21",
                    "packing_method": "separate",
                    "include_package_value": true,
                    "destination_type": "residential",
                    "show_transit_time" : true
                }
            },
            "enabled": true
        }
        
        ```
        
        #### UPS Ready Object Properties
        
        | Property | Type | Values |
        |:---------|:-----|:-------|
        | delivery_services | array | 2nd_Day_Air, 2nd_Day_Air_AM, 3_Day_Select, Expedited, Express, Express_Plus, Express_Saver, Express_Early_AM, Ground, Next_Day_Air, Next_Day_Air_Early_AM, Next_Day_Air_Saver, Saver, Standard, Today_Dedicated_Courier, Today_Express, Today_Express_Saver, Today_Intercity, Today_Standard, Worldwide_Expedited, Worldwide_Express, Worldwide_Express_Plus, Worldwide_Express_Saver, Worldwide_Saver |
        | destination_type | string | residential, business |
        | packing_method | string | separate, combined |
        | packaging_type | string (only codes allowed) | See the following table |
        | include_package_value | boolean | true, false |
        | show_transit_time | boolean | true, false |
        
        UPS `packaging_type` values include:

        | Code | Description |
        |:----:|:------------|
        | 21 | UPS® Express Box |
        | 24 | UPS® 25 KG Box |
        | 25 | UPS® 10 KG Box |
        | 30 | Pallet |
        | 01 | UPS® Letter |
        | 02 | Customer Supplied Package |
        | 03 | Tube |
        | 04 | PAK |
        | 2a | Small Express Box |
        | 2b | Medium Express Box |
        | 2c | Large Express Box |


        ### Canada Post
        
        Example request body:
        
        ```json
        {
            "name": "Canada Post",
            "type": "canadapost",
            "settings": {
                "carrier_options": {
                    "delivery_services": [
                        "DOM.RP","DOM.EP"
                    ]
                }
            },
            "enabled": true
        }
        
        ```
        
        #### Canada Post Object Properties
        
        | Property | Type | Values |
        |:---------|:-----|:-------|
        | delivery_services | array | DOM.RP, DOM.EP, DOM.XP, DOM.XP.CERT, DOM.PC DOM.LIB, USA.EP, USA.PW.ENV, USA.PW.PAK, USA.PW.PARCEL, USA.SP.AIR, USA.TP, USA.TP.LVM, USA.XP, INT.XP, INT.IP.AIR, INT.IP.SURF, INT.PW.ENV, INT.PW.PAK, INT.PW.PARCEL, INT.SP.AIR, INT.SP.SURF, INT.TP |
        
        ### Australia Post
        
        Example request body:

        ```json
        {
            "name": "Australia Post",
            "type": "auspost",
            "settings": {
                "carrier_options": {
                    "delivery_services": [
                        "AUS_PARCEL_REGULAR",
                "AUS_PARCEL_EXPRESS"
                    ]
                }
            },
            "enabled": true
        }
        
        ```
        
        #### Australia Post Object Properties
        
        | Property | Type | Values |
        |:---------|:-----|:-------|
        | delivery_services | array | AUS_LETTER_REGULAR_SMALL, AUS_LETTER_REGULAR_Large, AUS_LETTER_EXPRESS_SMALL, AUS_LETTER_EXPRESS_MEDIUM, AUS_LETTER_EXPRESS_LARGE, AUS_PARCEL_REGULAR, AUS_PARCEL_REGULAR_SATCHEL_500G, AUS_PARCEL_REGULAR_SATCHEL_3KG, AUS_PARCEL_REGULAR_SATCHEL_5KG, AUS_PARCEL_EXPRESS, AUS_PARCEL_EXPRESS_SATCHEL_500G, AUS_PARCEL_EXPRESS_SATCHEL_3KG, AUS_PARCEL_EXPRESS_SATCHEL_5KG, AUS_PARCEL_COURIER, AUS_PARCEL_COURIER_SATCHEL_MEDIUM, INT_PARCEL_COR_OWN_PACKAGING, INT_PARCEL_EXP_OWN_PACKAGING, INT_PARCEL_STD_OWN_PACKAGING, INT_PARCEL_AIR_OWN_PACKAGING, INT_PARCEL_SEA_OWN_PACKAGING |
        
        ### Royal Mail
        
        Example request body:
        
        ```json
        {
            "name": "Royal Mail",
            "type": "royalmail",
            "settings": {
                "carrier_options": {
                    "delivery_services": [
                        "StandardFirstClass",
                        "StandardSecondClass"
                    ]
                }
            },
            "enabled": true
        }
        ```
        
        #### Royal Mail Object Properties
        
        | Property | Type | Values |
        |:---------|:-----|:-------|
        | delivery_services | array | SpecialDelivery1pm, SpecialDelivery9am, SpecialDelivery1pmSaturday, SpecialDelivery9amSaturday, SignedForFirstClass, SignedForSecondClass, Express9, Express10, ExpressAM, Express24, Express48, StandardFirstClass, StandardSecondClass, InternationalStandard, InternationalTracked, InternationalEconomy |
        
        ### Zoom2U
        
        Example request body:
        
        ```json
        {
            "name": "Zoom2U",
            "type": "zoom2u",
            "settings": {
                "carrier_options": {
                    "delivery_services": [
                        "3_hour",
                "Same_day",
                "VIP"
                    ]
                }
            },
            "enabled": true
        }
        ```

        #### Zoom2U Object Properties
        
        | Property | Type | Values |
        |:---------|:-----|:-------|
        | delivery_services | array | 3_hour, Same_day, VIP|
        
        ### Settings Objects 
        
        A shipping methodʼs `type` and `settings` properties can match one of the following models:
        
        #### perorder Object – Properties 
        
        Object model for flat-rate shipping quotes per order.
        
        | Property | Type | Description |
        |:---------|:-----|:------------|
        | rate | number | Flat rate per order. |
        
        Example request body: 
        
        ```json
        {
          "name": "Flat Rate per Order",
          "type": "perorder",
          "settings": {
            "rate": 7
          }
        }
        ```
        
        #### peritem Object – Properties 
        
        Object model for flat-rate shipping quotes per item ordered.
        
        | Name | Type | Description |
        |:-----|:-----|:------------|
        | rate | number | Flat rate per item. |
        
        Ezample request body:
        
        ```json
        {
          "name": "Flat Rate per Item",
          "type": "peritem",
          "settings": {
            "rate": 8
          }
        }
        ```
        
        #### weight Object – Properties 
        
        Object model for shipping quotes by weight.
        
        | Property | Type | Description |
        |:---------|:-----|:------------|
        | default_cost | number &#124; null | Default shipping cost, applied either as a percentage of the orderʼs total value or as a fixed amount. If default cost is not required, you can supply a value of null. |
        | default_cost_type | string | How the default shipping cost is calculated; either `percentage_of_total` or `fixed_amount`. |
        | range | number | Array of [range](#range) objects. The units for these ranges' `lower_limit` and `upper_limit` properties depend on the default units set in the storeʼs control panel. |
        
        Example request body:
        
        ```json
        {
          "name": "Rate per Weight",
          "type": "weight",
          "settings": {
            "default_cost": 12,
            "default_cost_type": "fixed_amount",
            "range": [
              {
                "lower_limit": 0,
                "upper_limit": 20,
                "shipping_cost": 8
              },
              {
                "lower_limit": 20,
                "upper_limit": 40,
                "shipping_cost": 12
              }
            ]
          }
        }
        ```
        
        #### total Object – Properties 
        
        Object model for shipping quotes by orderʼs total value.
        
        | Property | Type | Description |
        |:---------|:-----|:------------|
        | default_cost | number &#124; null | Default shipping cost, applied either as a percentage of the orderʼs total value or as a fixed amount. If default cost is not required, you can supply a value of null. |
        | default_cost_type | string | How the default shipping cost is calculated; either `percentage_of_total` or `fixed_amount`. |
        | include_order_total_taxes | boolean | Whether or not to include taxes on the orderʼs total value in the shipping cost calculation. |
        | range | number | Array of [range](#range) objects. The units for these ranges' `lower_limit` and `upper_limit` properties are values in the storeʼs currency. |
        
        Example request body:
        
        This example sets free shipping above a certain order total:
        
        ```json
        {
          "name": "Per Total or Free",
          "type": "total",
          "settings": {
            "default_cost": 12,
            "default_cost_type": "fixed_amount",
            "include_order_total_taxes": 0,
            "range": [
              {
                "lower_limit": 0,
                "upper_limit": 5,
                "shipping_cost": 5
              },
              {
                "lower_limit": 5,
                "upper_limit": 10,
                "shipping_cost": 8
              },
              {
                "lower_limit": 10,
                "upper_limit": 20,
                "shipping_cost": 10
              },
              {
                "lower_limit": 20,
                "upper_limit": 49.99,
                "shipping_cost": 15
              },
              {
                "lower_limit": 50,
                "upper_limit": 100000,
                "shipping_cost": 0
              }       
            ]
          }
        }
        ```
        
        #### Range Object – Properties 
        
        Object model to define ranges for shipping quotes. Units are defined in the parent object.
        
        | Property | Type | Description |
        |:---------|:-----|:------------|
        | lower_limit | number | Lower limit for order total. |
        | upper_limit | number | Upper limit for order total. |
        | shipping_cost | number | Shipping cost for orders whose total falls between the lower and upper limits. |
        
        
        Example request body: 
        
        ```json
        {
          "lower_limit": 0,
          "upper_limit": 20,
          "shipping_cost": 8
        }
        ```
      summary: Create a Shipping Method
      tags:
        - Shipping Method
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shippingMethod_Base'
            example:
              name: Per Order
              type: perorder
              settings:
                rate: 8
              enabled: true
              handling_fees:
                fixed_surcharge: "3"
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shippingMethod_Full'
              examples:
                Example 1:
                  value:
                    id: 5
                    name: Per Order
                    type: perorder
                    settings:
                      rate: 8
                    enabled: true
                    handling_fees:
                      fixed_surcharge: "3"
                Example 2:
                  value:
                    id: 19609616
                    name: ad sed
                    type: auspost
                    settings: {}
                    enabled: false
                    handling_fees:
                      fixed_surcharge: "0"
                    is_fallback: false
      operationId: createAShippingMethod
    parameters:
      - $ref: '#/components/parameters/Accept'
      - name: zone_id
        in: path
        required: true
        description: ID of the shipping zone.
        schema:
          type: integer
          exclusiveMinimum: false
          exclusiveMaximum: false
  '/shipping/zones/{zone_id}/methods/{method_id}':
    get:
      description: |-
        Returns a single *Shipping Method* in a zone. Real Time Carrier Connections are also supported by this endpoint.

        ### Settings Objects

        A shipping methodʼs `type` and `settings` properties can match one of the following models:

        ### perorder Object – Properties

        Object model for flat-rate shipping quotes per order.

        | Name | Type | Description |
        | - | - | - |
        | rate | number | Flat rate per order. |

        #### JSON Example

        ```json
        {
            "name": "Flat Rate per Order",
            "type": "perorder",
            "settings": {
                "rate": 7
        },
        ```

        ### peritem Object – Properties

        Object model for flat-rate shipping quotes per item ordered.

        | Name | Type | Description |
        | - | - | - |
        | rate | number | Flat rate per item. |

        #### JSON Example

        ```json
        {
            "name": "Flat Rate per Item",
            "type": "peritem",
            "settings": {
                "rate": 8
        },
        ```

        ### weight Object – Properties

        Object model for shipping quotes by weight.

        | Name | Type | Description |
        | - | - | - |
        | default_cost | number &#124; null | Default shipping cost, applied either as a percentage of the orderʼs total value or as a fixed amount. If default cost is not required, you can supply a value of null. |
        | default_cost_type | string | How the default shipping cost is calculated; either `percentage_of_total` or `fixed_amount`. |
        | range | number | Array of [range](#range) objects. The units for these ranges' `lower_limit` and `upper_limit` properties depend on the default units set in the storeʼs control panel. |


        #### JSON Example
        ```json
        {
            "name": "Rate per Weight",
            "type": "weight",
            "settings": {
                "default_cost": 12,
                "default_cost_type": "fixed_amount",
                "range": [
                    {
                        "lower_limit": 0,
                        "upper_limit": 20,
                        "shipping_cost": 8
                    },
                    {
                        "lower_limit": 20,
                        "upper_limit": 40,
                        "shipping_cost": 12
                    }
                ]
            }
        }
        ```

        ### total Object – Properties

        Object model for shipping quotes by orderʼs total value.

        | Name | Type | Description |
        | - | - | - |
        | default_cost | number &#124; null | Default shipping cost, applied either as a percentage of the orderʼs total value or as a fixed amount. If default cost is not required, you can supply a value of null. |
        | default_cost_type | string | How the default shipping cost is calculated; either `percentage_of_total` or `fixed_amount`. |
        | include_order_total_taxes | boolean | Whether or not to include taxes on the orderʼs total value in the shipping cost calculation. |
        | range | number | Array of [range](#range) objects. The units for these ranges' `lower_limit` and `upper_limit` properties are values in the storeʼs currency. |

        #### JSON Example

        This example sets free shipping above a certain order total:

        ```json
        {
            "name": "Per Total or Free",
            "type": "total",
            "settings": {
                "default_cost": 12,
                "default_cost_type": "fixed_amount",
                "include_order_total_taxes": 0,
                "range": [
                    {
                        "lower_limit": 0,
                        "upper_limit": 5,
                        "shipping_cost": 5
                    },
                    {
                        "lower_limit": 5,
                        "upper_limit": 10,
                        "shipping_cost": 8
                    },
                    {
                        "lower_limit": 10,
                        "upper_limit": 20,
                        "shipping_cost": 10
                    },
                    {
                        "lower_limit": 20,
                        "upper_limit": 49.99,
                        "shipping_cost": 15
                    },
                    {
                        "lower_limit": 50,
                        "upper_limit": 100000,
                        "shipping_cost": 0
                    }
                ]
            }
        }
        ```

        ### Range Object – Properties

        Object model to define ranges for shipping quotes. Units are defined in the parent object.

        | Name | Type | Description |
        | - | - | - |
        | lower_limit | number | Lower limit for order total. |
        | upper_limit | number | Upper limit for order total. |
        | shipping_cost | number | Shipping cost for orders whose total falls between the lower and upper limits. |

        #### JSON Example

        ```json
        {
            "lower_limit": 0,
            "upper_limit": 20,
            "shipping_cost": 8
        }
        ```
      summary: Get a Shipping Method
      tags:
        - Shipping Method
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Shipping Method
                type: object
                properties:
                  id:
                    description: Shipping method ID. Read-only.
                    example: 1
                    type: integer
                    readOnly: true
                  name:
                    description: Display name for shipping method.
                    example: Flat Rate
                    type: string
                  type:
                    $ref: '#/components/schemas/ShippingMethodType'
                  settings:
                    description: 'Depends on the shipping method type. See the [supported settings object](#supported-settings).'
                    type: object
                  enabled:
                    description: Whether or not this shipping zone method is enabled.
                    example: true
                    type: boolean
                  handling_fees:
                    oneOf:
                      - title: fixed surcharge
                        properties:
                          fixed_surcharge:
                            type: number
                            description: Flat-rate handling fee applied to shipping cost.
                            example: 0
                      - title: percentage surcharge
                        properties:
                          percentage_surcharge:
                            type: number
                            description: Percentage handling fee applied to shipping cost.
                            example: 0
                    type: object
                  is_fallback:
                    description: Whether or not this shipping zone is the fallback if all others are not valid for the order.
                    example: false
                    type: boolean
              examples:
                Example 1:
                  value:
                    id: 1
                    name: Flat Rate
                    type: perorder
                    settings:
                      rate: 12
                    enabled: true
                    handling_fees:
                      fixed_surcharge: "0"
                    is_fallback: false
                Example 2:
                  value:
                    id: 71711609
                    name: nisi
                    type: weight
                    settings: {}
                    enabled: false
                    handling_fees:
                      percentage_surcharge: "0"
                    is_fallback: false
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      operationId: getAShippingMethod
    put:
      description: |-
        Updates a *Shipping Method* in a zone. Real Time Carrier Connections are also supported by this endpoint. 
        
        **Read Only Fields**
        * id
        
        ### Settings Objects 
        
        A shipping methodʼs `type` and `settings` properties can match one of the following models:
        
        #### perorder Object – Properties 
        
        Object model for flat-rate shipping quotes per order.
        
        | Property | Type | Description |
        |:---------|:-----|:------------|
        | rate | number | Flat rate per order. |
        
        Example response: 
        
        ```json
        {
          "name": "Flat Rate per Order",
          "type": "perorder",
          "settings": {
            "rate": 7
          }
        },
        ```
        
        #### peritem Object – Properties 
        
        Object model for flat-rate shipping quotes per item ordered.
        
        | Property | Type | Description |
        |:---------|:-----|:------------|
        | rate | number | Flat rate per item. |
        
        Example response: 
        
        ```json
        {
          "name": "Flat Rate per Item",
          "type": "peritem",
          "settings": {
            "rate": 8
          }
        },
        ```
        
        #### weight Object – Properties 
        
        Object model for shipping quotes by weight.
        
        | Property | Type | Description |
        |:---------|:-----|:------------|
        | default_cost | number &#124; null | Default shipping cost, applied either as a percentage of the orderʼs total value or as a fixed amount. If default cost is not required, you can supply a value of null. |
        | default_cost_type | string | How the default shipping cost is calculated; either `percentage_of_total` or `fixed_amount`. |
        | range | number | Array of [range](#range) objects. The units for these ranges' `lower_limit` and `upper_limit` properties depend on the default units set in the storeʼs control panel. |
        
        
        Example response: 
        
        ```json
        {
          "name": "Rate per Weight",
          "type": "weight",
          "settings": {
            "default_cost": 12,
            "default_cost_type": "fixed_amount",
            "range": [
              {
                "lower_limit": 0,
                "upper_limit": 20,
                "shipping_cost": 8
              },
              {
                "lower_limit": 20,
                "upper_limit": 40,
                "shipping_cost": 12
              }
            ]
          }
        }
        ```
        
        #### total Object – Properties 
        
        Object model for shipping quotes by orderʼs total value.
        
        | Property | Type | Description |
        |:---------|:-----|:------------|
        | default_cost | number &#124; null | Default shipping cost, applied either as a percentage of the orderʼs total value or as a fixed amount. If default cost is not required, you can supply a value of null. |
        | default_cost_type | string | How the default shipping cost is calculated; either `percentage_of_total` or `fixed_amount`. |
        | include_order_total_taxes | boolean | Whether or not to include taxes on the orderʼs total value in the shipping cost calculation. |
        | range | number | Array of [range](#range) objects. The units for these ranges' `lower_limit` and `upper_limit` properties are values in the storeʼs currency. |
        
        Example response: 
        
        This example sets free shipping above a certain order total:
        
        ```json
        {
          "name": "Per Total or Free",
          "type": "total",
          "settings": {
            "default_cost": 12,
            "default_cost_type": "fixed_amount",
            "include_order_total_taxes": 0,
            "range": [
              {
                "lower_limit": 0,
                "upper_limit": 5,
                "shipping_cost": 5
              },
              {
                "lower_limit": 5,
                "upper_limit": 10,
                "shipping_cost": 8
              },
              {
                "lower_limit": 10,
                "upper_limit": 20,
                "shipping_cost": 10
              },
              {
                "lower_limit": 20,
                "upper_limit": 49.99,
                "shipping_cost": 15
              },
              {
                "lower_limit": 50,
                "upper_limit": 100000,
                "shipping_cost": 0
              }       
            ]
          }
        }
        ```
        
        #### Range Object – Properties 
        
        Object model to define ranges for shipping quotes. Units are defined in the parent object.
        
        | Property | Type | Description |
        |:---------|:-----|:------------|
        | lower_limit | number | Lower limit for order total. |
        | upper_limit | number | Upper limit for order total. |
        | shipping_cost | number | Shipping cost for orders whose total falls between the lower and upper limits. |
        
        Example response: 
        
        ```json
        {
          "lower_limit": 0,
          "upper_limit": 20,
          "shipping_cost": 8
        }
        ```

      summary: Update a Shipping Method
      tags:
        - Shipping Method
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shippingMethod_Base'
            example:
              settings:
                rate: 11
              handling_fees:
                fixed_surcharge: "0"
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shippingMethod_Full'
              examples:
                Example 1:
                  value:
                    id: 5
                    name: Per Order
                    type: perorder
                    settings:
                      rate: 11
                    enabled: true
                    handling_fees:
                      fixed_surcharge: "0"
                Example 2:
                  value:
                    id: 8176684
                    name: in incididunt amet adipisicing
                    type: endicia
                    settings: {}
                    enabled: false
                    handling_fees:
                      fixed_surcharge: "0"
                    is_fallback: false
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      operationId: updateAShippingMethod
    delete:
      description: Deletes an *Shipping Method*. Real Time Carrier Connections can also be deleted.
      summary: Delete a Shipping Method
      tags:
        - Shipping Method
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      operationId: deleteAShippingMethod
    parameters:
      - $ref: '#/components/parameters/Accept'
      - name: zone_id
        in: path
        required: true
        description: ID of the shipping zone.
        schema:
          type: integer
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: method_id
        in: path
        required: true
        description: ID of the shipping method within the shipping zone.
        schema:
          type: integer
          exclusiveMinimum: false
          exclusiveMaximum: false
  '/shipping/carrier/connection':
    parameters:
      - $ref: '#/components/parameters/Accept'
    put:
      description: |-
        Updates a *Carrier Connection*.

        Updating the carrier connection is done using the same information as creating the connection. This endpoint can be used to update credentials.
      summary: Update a Carrier Connection
      tags:
        - Shipping Carrier
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/carrierConnection'
            example:
              carrier_id: endicia
              connection:
                account_id: yourEndiciaAccountId
                pass_phrase: yourEndiciaPassphrase
        description: The request body will vary by carrier. See [Create a Carrier Connection](/docs/rest-management/shipping-v2/shipping-carrier#create-a-carrier-connection).
      responses:
        '204':
          description: Returns if request was successful.
        '400':
          description: |-
            If a required field is not provided, the request will return a 400 response.

            [
                {
                    "status": 400,
                    "message": "Required fields missing [key]"
                }
            ]
          content:
            application/json:
              schema: {}
      operationId: updateACarrierConnection
    post:
      description: |-
        Creates a *Carrier Connection*. 
        
        Carrier connections refer to specific settings required to connect to a specific shipping carrier. Each carrier requires your app to supply a unique set of properties/fields to establish a connection with that carrier.
        
        *Notes:*
        
        - There is no `GET` with this resource. It has `PUT`, `POST` and `DELETE`.
            * `PUT` is used to update. The connection can be updated by API.
        
        - Connections created here do not enable the shipping method. To enable the carrier for a shipping zone, use the Shipping Methods API. 
        
        - The Carrier Connection resource returns a 204 for both successful and unsuccessful attempts to connect. If a field is missing, it will return a 400.
        
        ### Australia Post
        
        PUT or POST example request:
        
        ```json
        {
          "carrier_id" : "auspost",
          "connection" : {
            "auth_key" : "yourAusPostAuthKey",
            "test_mode" : false
          }
        }
        ```
        
        DELETE example request:
        
        ```json
        {
          "carrier_id" : "auspost"
        }
        ```
        
        #### Australia Post Connection Object – Properties
        
        Australia Post `PUT` or `POST` requests require all of the following properties. (These requests won’t be fulfilled unless these properties are valid.) `DELETE` requests require only a `carrier_id`.
        
        
        | Property | Type | Description |
        |:---------|:-----|:------------|
        | auth_key | string | Australia Post authorization key. |
        | test_mode | boolean | Whether or not to use Australia Post test-mode settings. Acceptable values are `true` or `false`. |
        
        
        ### Endicia
        USPS is connected through Endicia.
        
        PUT or POST example request:
        
        ```json
        {  "carrier_id" : "endicia",
          "connection": {
            "account_id" : "yourEndiciaAccountId",
            "pass_phrase" : "yourEndiciaPassphrase"
          }
        }
        ```
        
        DELETE example request:
        
        ```json
        {
          "carrier_id" : "endicia"
        }
        ```
        
        #### Endicia Connection Object – Properties
        
        Endicia `PUT` or `POST` requests require all of the following properties. (These requests won’t be fulfilled unless these properties are valid.) `DELETE` requests require only a `carrier_id`.
        
        
        | Property | Type | Description |
        |:---------|:-----|:------------|
        | account_id | string | Endicia account ID. |
        | passphrase | string | Endicia passphrase. |
        
        
        ### FedEx
        
        PUT or POST example request:
        
        ```json
        {
          "carrier_id" : "fedex",
          "connection" : {
            "key" : "yourFedexKey",
            "password" : "yourFedexPassword",
            "account_number" : "yourFedexAccountNumber",
            "meter_number" : "yourFedexMeterNumber"
          }
        }
        ```
        
        DELETE example request:
        
        ```json
        {
          "carrier_id" : "fedex"
        }
        ```
        
        #### FedEx Connection Object – Properties
        
        FedEx `PUT` or `POST` requests require all of the following properties. (These requests won’t be fulfilled unless these properties are valid.) `DELETE` requests require only a `carrier_id`.
        
        
        | Property | Type | Description |
        |:---------|:-----|:------------|
        | key | string | FedEx account ID. | 
        | password | string | FedEx passphrase. |
        | account_number | string | FedEx account number. |
        | meter_number | string | FedEx meter number. |
        
        ### Royal Mail
        
        PUT or POST example request:
        
        ```json
        {
            "carrier_id" : "royalmail",
            "connection" : {
        
            }
        }
        ```
        
        DELETE example request:
        
        ```json
        {
            "carrier_id" : "royalmail"
        }
        ```
        
        #### Royal Mail Connection Object - Properties
        
        Royal Mail has no connection object properties.
        
        ### Shipping Provider API
        
        Please note that this endpoint is not intended for adding connection settings. 
        
        Its purpose is solely to establish a connection between your BigCommerce store and the carrier. If the carrier has no connection settings configured, please leave the connection property empty. However, if the carrier already has connection settings configured, you can utilize this endpoint to establish the connection using the existing connection properties.
        
        PUT or POST example request when your carrier is not configured with any connection settings:
        
        ```json filename="No connection settings configured" showLineNumbers copy
        {
          "carrier_id" : "carrier_{your_carrier_id}",
          "connection" : {}
        }
        ```
        
        PUT or POST example request when your carrier is configured with connection settings:
        
        ```json filename="Connection settings configured" showLineNumbers copy
        {
          "carrier_id" : "carrier_{your_carrier_id}",
          "connection" : {
            "your_configured_key_1": "value_1",
            "your_configured_key_2": "value_2
          }
        }
        ```
        
        ### Zoom2U
        
        PUT or POST example request:
        
        ```json
        {
          "carrier_id" : "zoom2u",
          "connection" : {
            "auth_key" : "yourZoom2uAuthKey",
            "test_mode" : false
          }
        }
        ```
        
        DELETE example request:
        
        ```json
        {
          "carrier_id" : "zoom2u"
        }
        ```
        
        #### Zoom2U Connection Object – Properties
        
        Zoom2U `PUT` or `POST` requests require all of the following properties. (These requests won’t be fulfilled unless these properties are valid.) `DELETE` requests require only a `carrier_id`.
        
        
        | Property | Type | Description |
        |:---------|:-----|:------------|
        | auth_key | string | Zoom2U authorization key. |
        | test_mode | boolean | Whether or not to use Zoom2U test-mode settings. Acceptable values are `true` or `false`. |
      summary: Create a Carrier Connection
      operationId: createACarrierConnection
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/carrierConnection'
            example:
              carrier_id: auspost
              connection:
                auth_key: yourAusPostAuthKey
                test_mode: false
      responses:
        '204':
          description: Returns if request was successful.
        '400':
          description: |
            Invalid requests will return a 400 response.

                [
                  {
                    "status": 400,
                    "message": "The field 'id' cannot be written to. Please remove it from your request before trying again."
                  }
                ]

            If a required field is not provided, the request will return a 400 response.

                [
                  {
                    "status": 400,
                    "message": "Required fields missing [key]"
                  }
                ]
          content:
            application/json:
              schema: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Shipping Carrier
    delete:
      description: |-
        Deletes a *Carrier Connection*.

        **Required Fields**
        * carrier_id
      summary: Delete a Carrier Connection
      tags:
        - Shipping Carrier
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                carrier_id:
                  type: string
                  example: fedex
            example:
              carrier_id: fedex
        required: true
      responses:
        '204':
          description: Returns if request was successful.
        '400':
          description: |-
            If a required field is not provided, the request will return a 400 response.

            [
                {
                    "status": 400,
                    "message": "Required fields missing [key]"
                }
            ]
          content:
            application/json:
              schema: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      operationId: deleteCarrierConnection
components:
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.
      schema:
        type: string
        default: 'application/json'
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Information & Settings | modify | `store_v2_information` |
        |  Information & Settings | read-only | `store_v2_information_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header
  schemas:
    TrackingCarrier:
      title: Tracking Carrier
      example: auspost
      type: string
      enum:
        - auspost
        - canadapost
        - endicia
        - usps
        - fedex
        - royalmail
        - ups
        - upsready
        - shipperhq
      x-internal: false
    ShippingProvider:
      title: Shipping Provider
      type: string
      enum:
        - '``'
        - fedex
        - auspost
        - canadapost
        - endicia
        - usps
        - royalmail
        - ups
        - upsready
        - upsonline
        - shipperhq
      example: endicia
      x-internal: false
    ShippingZone:
      title: Shipping Zone
      type: object
      properties:
        id:
          type: integer
          description: Zone ID. Read-only.
          example: 1
          readOnly: true
        name:
          type: string
          description: Zone name. Required for PUT requests.
          example: United States
        type:
          type: string
          enum:
            - zip
            - country
            - state
            - global
        locations:
          description: Array of zone locations.
          type: array
          items:
            title: Shipping Zone Locations
            type: object
            properties:
              id:
                description: Location’s ID.
                example: 3
                type: integer
              zip:
                description: Location’s ZIP/postal code.
                example: '12345'
                type: string
              country_iso2:
                description: 2-letter ISO Alpha-2 code for the country.
                example: US
                type: string
              state_iso2:
                description: ISO Alpha-2 code for the state.
                example: TX
                type: string
        free_shipping:
          type: object
          properties:
            enabled:
              type: boolean
            minimum_sub_total:
              type: string
              example: '0.0000'
              description: '(Float, Float-As-String, Integer)'
            exclude_fixed_shipping_products:
              type: boolean
        handling_fees:
          title: Shipping Zone Handling Fees
          type: object
          oneOf:
            - properties:
                fixed_surcharge:
                  description: Flat-rate handling fee applied to shipping cost.
                  example: '0'
                  type: string
                display_separately:
                  description: Indicates whether store displays handling fee separately at checkout.
                  example: true
                  type: boolean
              title: fixed surcharge
            - properties:
                percentage_surcharge:
                  description: Percentage handling fee applied to shipping cost.
                  example: '5'
                  type: string
                display_separately:
                  description: Indicates whether store displays handling fee separately at checkout.
                  example: true
                  type: boolean
              title: percentage surcharge
        enabled:
          description: Whether this shipping zone is enabled.
          example: true
          type: boolean
      required:
        - name
      x-internal: false
    ShippingZoneLocations:
      title: Shipping Zone Locations
      type: object
      properties:
        id:
          description: Location’s ID.
          example: 3
          type: integer
        zip:
          description: Location’s ZIP/postal code.
          example: '12345'
          type: string
        country_iso2:
          description: 2-letter ISO Alpha-2 code for the country.
          example: US
          type: string
        state_iso2:
          description: ISO Alpha-2 code for the state.
          example: TX
          type: string
      x-internal: false
    HandlingFees:
      title: Shipping Zone Handling Fees
      type: object
      oneOf:
        - properties:
            fixed_surcharge:
              description: Flat-rate handling fee applied to shipping cost.
              example: '0'
              type: string
            display_separately:
              description: Indicates whether store displays handling fee separately at checkout.
              example: true
              type: boolean
          title: fixed surcharge
        - properties:
            percentage_surcharge:
              description: Percentage handling fee applied to shipping cost.
              example: '5'
              type: string
            display_separately:
              description: Indicates whether store displays handling fee separately at checkout.
              example: true
              type: boolean
          title: percentage surcharge
      x-internal: false
    shippingMethod_Full:
      title: shippingMethod_Full
      allOf:
        - type: object
          properties:
            id:
              description: Shipping method ID. Read-only.
              example: 1
              type: integer
              readOnly: true
        - $ref: '#/components/schemas/shippingMethod_Base'
      x-internal: false
    ShippingMethodType:
      title: Shipping Method Type
      example: perorder
      type: string
      enum:
        - perorder
        - peritem
        - weight
        - total
        - auspost
        - canadapost
        - endicia
        - usps
        - fedex
        - royalmail
        - upsready
        - freeshipping
      x-internal: false
    shippingMethod_Base:
      title: shippingMethod_Base
      type: object
      x-internal: false
      properties:
        name:
          description: Display name for shipping method.
          example: Flat Rate
          type: string
        type:
          $ref: '#/components/schemas/ShippingMethodType'
        settings:
          description: 'Depends on the shipping method type. See the [supported settings object](#supported-settings).'
          type: object
          properties:
            rate:
              type: number
              description: Flat rate per order.
              example: 7
        enabled:
          description: Whether or not this shipping zone method is enabled.
          example: true
          type: boolean
        handling_fees:
          oneOf:
            - title: fixed surcharge
              properties:
                fixed_surcharge:
                  type: number
                  description: Flat-rate handling fee applied to shipping cost.
                  example: 0
            - title: percentage surcharge
              properties:
                percentage_surcharge:
                  type: number
                  description: Percentage handling fee applied to shipping cost.
                  example: 0
          type: object
        is_fallback:
          description: Whether or not this shipping zone is the fallback if all others are not valid for the order.
          example: false
          type: boolean
    ShippingResponse:
      type: object
      properties: {}
      title: ShippingResponse
      x-internal: false
    carrierConnection:
      type: object
      title: Carrier Connection
      properties:
        carrier_id:
          type: string
        connection:
          type: object
          description: The `connection` object varies by carrier.
      x-internal: false
    metaCollection:
      title: metaCollection
      description: Meta data relating to pagination.
      type: object
      properties:
        pagination:
          type: object
          properties:
            total:
              type: integer
              description: Total number of items returned.
              example: 3
            count:
              type: integer
              description: Number of items returned on per page.
              example: 1
            per_page:
              type: integer
              description: Number of items to be displayed per page.
              example: 1
            current_page:
              type: integer
              description: Current page number.
              example: 2
            total_page:
              type: integer
              description: Total number of pages.
              example: 3
            links:
              type: object
              properties:
                previous:
                  type: string
                  description: Query string appended to the resource to return to the previous page.
                  example: '?limit=1&page=1'
                next:
                  type: string
                  description: Query string appended to the resource to proceed to the next page.
                  example: '?limit=1&page=3'
                current:
                  type: string
                  description: Query string appended to the resource to show the current page.
                  example: '?limit=1&page=2'
      x-internal: false


openapi: '3.0.3'
info:
  version: ''
  title: Shipping V3
  description: V3 REST API shipping endpoints.
  termsOfService: 'http://www.bigcommerce.com/terms' 
  contact: 
    name: BigCommerce 
    url: 'https://www.bigcommerce.com' 
    email: support@bigcommerce.com 
tags:
  - name: Customs Information
security:
  - X-Auth-Token: []
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
paths:
  '/shipping/products/customs-information':
    parameters:
      - $ref: '#/components/parameters/Accept'

    get:
      operationId: getCustomsInformation
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/customsInformation'
                  meta:
                    $ref: '#/components/schemas/metaCollection'
      description: |-
        Get customs information for products.

        This list can be filtered to return customs information objects specific to a list of requested product_ids. This is achieved by appending the query string `?product_id:in=4,5,6` to the resource `/shipping/products/customs-information`.

        ```http
        GET /shipping/products/customs-information?product_id:in=4,5,6
        ```
      tags:
        - Customs Information
      summary: Get Customs Information
      parameters:
        - in: query
          name: 'product_id:in'
          description: 'A comma-separated list of product IDs. For more information, see [Filtering](/api-docs/getting-started/filtering).'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
    delete:
      operationId: deleteCustomsInformation
      responses:
        '204':
          description: No Content
      summary: Delete Customs Information
      description: |-
        Deletes customs information objects for a product.

        ## Example

        This is a batch operation. The `product_id:in` query parameter is required.

        ```http
        DELETE /shipping/products/customs-information?product_id:in=4,5,6
        ```
      tags:
        - Customs Information
      parameters:
        - in: query
          name: 'product_id:in'
          required: true
          schema:
            type: string
            items:
              type: integer
    put:
      operationId: putCustomsInformation
      parameters:
        - $ref: '#/components/parameters/ContentType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/customsInformation'
              examples: {}
      summary: Upsert Customs Information
      description: |-
        Creates and updates product customs information.

        This is a batch operation where the creation of multiple customs information objects can be done with one `PUT` request.

        **Limits**
        * Limit of 50 customs information objects per `PUT` request.
      tags:
        - Customs Information
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/customsInformation_request'
            examples:
              Example:
                value:
                - product_id: 77
                  country_of_origin: US
                  commodity_description: Baseball caps
                  international_shipping: true
                  hs_codes:
                    CA: '508313'
                    AU: '817355'
                    ALL: '501000'
components:
  parameters:
    store_hash:
      name: store_hash
      in: path
      required: true
      description: Permanent ID of the BigCommerce store.
      schema:
        type: string
    Accept:
      in: header
      name: Accept
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: application/json
    ContentType:
      in: header
      name: Content-Type
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: application/json
  responses:
    502_GatewayError:
      description: If something happens during the request that causes it to fail, a 502 response will be returned. A new request should be made; however, it could fail.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 502
                title: A login URL could not be generated. Please try another request.
                type: /api-docs/getting-started/api-status-codes
                errors: {}
    504_GatewayTimeout:
      description: If this occurs, you should retry the request. Typically retrying the request several times will result in a successful request; however, if you are unable to successfully make a request, please check the [BigCommerce system status](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 504
                title: Gateway Timeout
                type: /api-docs/getting-started/api-status-codes
                errors: {}
    403_Unauthorized:
      description: Returned when permissions do not allow the operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 403
                title: Unauthorized Access. You do not have permission to make this request.
                type: /api-docs/getting-started/api-status-codes
                errors: {}
    400_BadRequest:
      description: 'Invalid syntax, required data missing, `content-type` header missing; Double-check request body for syntax errors and missing data; check `content-type` header.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 400
                title: Input is invalid.
                type: /api-docs/getting-started/api-status-codes
                errors: {}
    404_NotFound:
      description: 'If the requested account resource is not found for the franchise, return a 404 Not Found.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 404
                title: 'Account with {id} not found'
                type: /api-docs/getting-started/api-status-codes
                errors: {}
    422_UnprocessableEntity:
      description: This error occurs when missing or unacceptable data is passed for one or more fields. Please correct the values for the fields listed in the errors object.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 422
                title: JSON data is missing or invalid
                type: /api-docs/getting-started/api-status-codes
                errors: {}
    503_ServiceUnavailable:
      description: |-
        If this occurs, you should retry the request. If you are unable to successfully make a request, please check the [BigCommerce system status](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up.

        Occurs when the store is down for maintenance, is being upgraded to a new version, or is suspended for administrative or billing reasons.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 503
                title: Service Unavailable
                type: /api-docs/getting-started/api-status-codes
                errors: {}
    401_Unauthorized:
      description: API credentials are missing or invalid; Double-check the `access_token` and `client_id`.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
    415_Unsupported:
      description: Request headers specify an unsupported `content-type` (or header is missing). Double-check `content-type` request header.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
    429_Too_Many_Requests:
      description: 'When an OAuth client exceeds the [rate limit](/api-docs/getting-started/best-practices#api-rate-limits) for API requests to a store.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
    405_Method_Not_Allowed:
      description: The resource was found, but doesnʼt support the request method. Issued when either a specific method isnʼt yet implemented on a resource, or the resource doesnʼt support the method at all. For example, a PUT request to `/orders` is invalid, but a PUT request to `/orders/{order_id}` is valid. 
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
    500_Internal_Server_Error:
      description: Expensive API calls or an internal server error in BigCommerce; re-attempt the request three to five times, with increasing delays of at least a minute between attempts.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Products | modify | `store_v2_products` |
        |  Products | read-only | `store_v2_products_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header
  schemas:
    customsInformation_request:
      title: customsInformationRequest
      description: Data about the customs information object.
      type: object
      x-internal: false
      properties:
        product_id:
          description: The product ID to which the customs information data applies.
          type: integer
          format: int32
          example: 77
        country_of_origin:
          type: string
          description: 'The country of manufacture, production, or growth represented in ISO 3166-1 alpha-2 format.'
          example: US
        commodity_description:
          description: Description that provides information for customs to identify and verify the shapes, physical characteristics, and packaging of each shipment.
          type: string
          minLength: 0
          maxLength: 100
          example: Baseball caps
        international_shipping:
          description: Flag to determine whether this product will be shipped internationally.
          type: boolean
          enum:
            - true
            - false
          example: true
        hs_codes:
          $ref: '#/components/schemas/harmonizedSystemCodes'
      required:
        - product_id
        - country_of_origin
        - commodity_description
        - international_shipping
        - hs_codes
    customsInformation:
      title: customsInformation
      description: Data about the customs information object.
      type: object
      x-internal: false
      properties:
        product_id:
          description: The ID of the product which the customs information data will apply to.
          type: integer
          format: int32
          example: 77
        country_of_origin:
          type: string
          description: 'The country of manufacture, production, or growth represented in ISO 3166-1 alpha-2 format.'
          example: US
        commodity_description:
          description: Description that provides information for customs to identify and verify shapes physical characteristics and packaging of each shipment.
          type: string
          minLength: 0
          maxLength: 100
          example: Baseball caps
        international_shipping:
          description: Flag to determine whether this product will be shipped internationally.
          type: boolean
          enum:
            - true
            - false
          example: true
        hs_codes:
          $ref: '#/components/schemas/harmonizedSystemCodes'
        created_at:
          type: string
          description: Date and time when the customs information was created.
          readOnly: true
          format: date-time
          example: 2022-09-21T14:15:00+00:00
        updated_at:
          type: string
          description: Date and time when the customs information was last updated.
          readOnly: true
          format: date-time
          example: 2022-09-21T14:15:00+00:00
    harmonizedSystemCodes:
      title: harmonizedSystemCodes
      description: |-
        Key-value pairs that are commonly used in the following form:  
        
        `countryISO2: '/^[0-9A-Za-z]{6,14}$/'`
        
        This key-value pair represents a country and the associated `hs_code` that applies to that country. 

        You can also use the `ALL` key in place of an ISO2 key to specify that the `hs_code` applies to all countries. The `ALL` key can be combined with other countries in the `hs_code` object.
      type: object
      properties: {}
      additionalProperties: true
      example:
        ALL: '501000'
        CA: '508313'
        US: '641000'
        AU: '817355'
      x-internal: false
    metaCollection:
      title: metaCollection
      description: Meta data relating to pagination.
      type: object
      properties:
        pagination:
          type: object
          properties:
            total:
              type: integer
              description: Total number of items returned.
              example: 3
            count:
              type: integer
              description: Number of items returned on per page.
              example: 1
            per_page:
              type: integer
              description: Number of items to be displayed per page.
              example: 1
            current_page:
              type: integer
              description: Current page number.
              example: 2
            total_page:
              type: integer
              description: Total number of pages.
              example: 3
            links:
              type: object
              properties:
                previous:
                  type: string
                  description: Query string appended to the resource to return to the previous page.
                  example: '?limit=1&page=1'
                next:
                  type: string
                  description: Query string appended to the resource to proceed to the next page.
                  example: '?limit=1&page=3'
                current:
                  type: string
                  description: Query string appended to the resource to show the current page.
                  example: '?limit=1&page=2'
      x-internal: false
    error_Full:
      title: Error
      description: Meta data relating to pagination
      type: object
      x-internal: false

openapi: '3.0.0'
info:
  version: ''
  title: Shipping Providers
  description: |-
    Implement endpoints consumed by BigCommerce for custom shipping integrations. To learn more, see [Shipping Provider API Overview](/api-docs/store-management/shipping/shipping-provider-api).

    ## Authentication

    This specification file describes API requests BigCommerce will make to a registered shipping carrierʼs server to check connection options and retrieve rates. As such, the method of authentication is determined by the carrier server.

    For more, see [developer-configured authentication](/api-docs/getting-started/authentication#developer-configured-authentication) for provider APIs.

    ## Subresources

    ### Check Connection Options
    The Check Connection Options request is made by BigCommerce when checking for available shipping options. Each Shipping Provider will have different configurations for the payload.

    ### Rate
    The Rate request is made by BigCommerce to get shipping quotes from the provider.

    ## Additional Information

    ### Webhooks
    - [Shipment](/api-docs/store-management/webhooks/webhook-events#shipment)

    ### Related API Resources
    - [Shipping Provider](/docs/apps-api/shipping)
    - [Shipping V2 API](/docs/rest-management/shipping-v2)
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
tags:
  - name: Shipping Provider
servers:
  - url: 'https://{app_domain}'
    variables:
      app_domain:
        default: your_app.example.com
        description: 'The [URL authority](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_URL#authority) of your appʼs server.'
    description: The public URL of your shipping provider application.
paths:
  /rate:
    post:
      description: |-
        Request shipping rates. BigCommerce sends a request for shipping quotes to the shipping provider URL. The shipping provider responds with shipping quotes.

        > #### Note
        > * Substitute the host and path specific to the shipping provider for `your_app.example.com` and `rate`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateRequestPayload'
        description: Rate request object.
        required: true
      responses:
        '200':
          description: Quote response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateResponsePayload'
              examples:
                With shipping rates:
                  value:
                    quote_id: Lor
                    messages:
                      - text: ni
                        type: INFO
                    carrier_quotes:
                      - quotes:
                          - code: GND
                            display_name: cillum
                            cost:
                              currency: BEH
                              amount: 53116961.83460022
                            messages:
                              - text: deserunt
                                type: INFO
                              - text: ut
                                type: ERROR
                              - text: c
                                type: WARNING
                              - text: veniam
                                type: ERROR
                            description: el
                            rate_id: n
                            discounted_cost:
                              currency: VQD
                              amount: 16810732.187082157
                            dispatch_date: '1947-07-10'
                            transit_time:
                              units: DAYS
                              duration: 74
                          - code: GND
                            display_name: ''
                            cost:
                              currency: PRZ
                              amount: 85659359.530116
                            messages:
                              - text: consequat
                                type: ERROR
                              - text: eu e
                                type: WARNING
                              - text: adip
                                type: ERROR
                              - text: enim no
                                type: ERROR
                              - text: eu
                                type: ERROR
                            description: cillum ve
                            rate_id: ea ad
                            discounted_cost:
                              currency: XRQ
                              amount: 69218406.22440869
                            dispatch_date: '1954-03-05'
                            transit_time:
                              units: HOURS
                              duration: 21
                          - code: GND
                            display_name: dolor rep
                            cost:
                              currency: VOF
                              amount: 29865288.150019586
                            messages:
                              - text: in id
                                type: INFO
                              - text: et occa
                                type: ERROR
                              - text: esse dolo
                                type: INFO
                              - text: dolor
                                type: ERROR
                              - text: ex
                                type: ERROR
                            description: ullamco
                            rate_id: ''
                            discounted_cost:
                              currency: CKD
                              amount: 18401337.766514115
                            dispatch_date: '1993-06-23'
                            transit_time:
                              units: HOURS
                              duration: 54
                        carrier_info:
                          code: ''
                          display_name: c
                      - quotes:
                          - code: GND
                            display_name: labore
                            cost:
                              currency: OHQ
                              amount: 63679444.026082255
                            messages:
                              - text: offici
                                type: INFO
                              - text: dolore
                                type: ERROR
                              - text: nis
                                type: WARNING
                              - text: ma
                                type: WARNING
                            description: in r
                            rate_id: l
                            discounted_cost:
                              currency: UBE
                              amount: 40327578.11995282
                            dispatch_date: '1943-09-25'
                            transit_time:
                              units: DAYS
                              duration: 10
                          - code: GND
                            display_name: irure
                            cost:
                              currency: PEJ
                              amount: 56049316.6584908
                            messages:
                              - text: cillum a
                                type: INFO
                            description: nisi
                            rate_id: ''
                            discounted_cost:
                              currency: VFS
                              amount: 86177946.62739782
                            dispatch_date: '1999-01-13'
                            transit_time:
                              units: DAYS
                              duration: 11
                        carrier_info:
                          code: consect
                          display_name: eiusmod
                      - quotes:
                          - code: GND
                            display_name: ullamc
                            cost:
                              currency: NRB
                              amount: 75971681.09105605
                            messages:
                              - text: laborum
                                type: INFO
                              - text: proident i
                                type: WARNING
                              - text: sin
                                type: ERROR
                              - text: volup
                                type: ERROR
                              - text: deser
                                type: WARNING
                            description: am
                            rate_id: mo
                            discounted_cost:
                              currency: NPA
                              amount: 72743924.13626081
                            dispatch_date: '2006-01-17'
                            transit_time:
                              units: BUSINESS_DAYS
                              duration: 52
                          - code: GND
                            display_name: dolor
                            cost:
                              currency: RDZ
                              amount: 46371179.641438134
                            messages:
                              - text: ex
                                type: WARNING
                              - text: ipsum
                                type: WARNING
                            description: ''
                            rate_id: aute c
                            discounted_cost:
                              currency: SJL
                              amount: 60745150.4084129
                            dispatch_date: '1976-06-19'
                            transit_time:
                              units: DAYS
                              duration: 69
                          - code: GND
                            display_name: minim a
                            cost:
                              currency: SUR
                              amount: 97146769.48560241
                            messages:
                              - text: Lorem
                                type: INFO
                            description: de
                            rate_id: fu
                            discounted_cost:
                              currency: PCP
                              amount: 99728805.8108871
                            dispatch_date: '1962-05-18'
                            transit_time:
                              units: DAYS
                              duration: 10
                          - code: GND
                            display_name: ea occaeca
                            cost:
                              currency: YOG
                              amount: 51938381.743391246
                            messages:
                              - text: in irure
                                type: INFO
                              - text: c
                                type: INFO
                              - text: deserun
                                type: ERROR
                              - text: dolo
                                type: ERROR
                            description: dol
                            rate_id: U
                            discounted_cost:
                              currency: HMF
                              amount: 98693839.53819382
                            dispatch_date: '2010-08-15'
                            transit_time:
                              units: HOURS
                              duration: 31
                          - code: GND
                            display_name: sint
                            cost:
                              currency: TTO
                              amount: 65094224.57995142
                            messages:
                              - text: ut
                                type: INFO
                            description: labo
                            rate_id: anim ma
                            discounted_cost:
                              currency: ZMA
                              amount: 57479313.52475042
                            dispatch_date: '2008-10-24'
                            transit_time:
                              units: DAYS
                              duration: 55
                        carrier_info:
                          code: dol
                          display_name: commodo
                      - quotes:
                          - code: GND
                            display_name: sed
                            cost:
                              currency: BOE
                              amount: 9130506.016241236
                            messages:
                              - text: i
                                type: ERROR
                              - text: dolore
                                type: WARNING
                              - text: ut
                                type: INFO
                              - text: nos
                                type: ERROR
                            description: ''
                            rate_id: c
                            discounted_cost:
                              currency: QGD
                              amount: 81757709.40827666
                            dispatch_date: '1999-11-11'
                            transit_time:
                              units: HOURS
                              duration: 6
                          - code: GND
                            display_name: do aute
                            cost:
                              currency: IQW
                              amount: 83709032.8238562
                            messages:
                              - text: ess
                                type: ERROR
                              - text: an
                                type: WARNING
                              - text: Duis
                                type: ERROR
                              - text: ipsum
                                type: WARNING
                              - text: do
                                type: WARNING
                            description: amet
                            rate_id: veniam
                            discounted_cost:
                              currency: YYL
                              amount: 11005656.662449125
                            dispatch_date: '1980-05-16'
                            transit_time:
                              units: HOURS
                              duration: 32
                        carrier_info:
                          code: vel
                          display_name: laborum e
                Without shipping rates:
                  value:
                    quote_id: example_quote
                    messages: []
                    carrier_quotes: []
      summary: Request shipping rates
      tags:
        - Shipping Provider
      operationId: requestShippingRates
  /check_connection_options:
    post:
      description: |-
        Validate connection options. BigCommerce sends a request to the shipping provider URL to check a merchantʼs connection credentials. The shipping provider sends a response indicating whether a merchant has valid credentials. 

        > #### Note
        > * Substitute the host and path specific to the shipping provider for `your_app.example.com` and `check_connection_options`.  
        > * The Send a Test Request feature is not currently supported for this endpoint.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckConnectionOptionsRequestPayload'
        description: Check connection options request.
        required: true
      responses:
        '200':
          description: Check connection options response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConnectionOptionsResponsePayload'
              examples:
                response:
                  value:
                    valid: true
                    messages:
                      - text: adipi
                        type: WARNING
                      - text: nu
                        type: WARNING
                      - text: an
                        type: INFO
      summary: Validate connection options
      tags:
        - Shipping Provider
      operationId: validateConnectionOptions
components:
  schemas:
    RateRequestPayload:
      type: object
      title: Rate Request Payload
      description: Payload sent to a Shipping Provider to get quotes.
      properties:
        base_options:
          $ref: '#/components/schemas/BaseOptions'
        zone_options:
          $ref: '#/components/schemas/ZoneOptionsInstance'
        connection_options:
          $ref: '#/components/schemas/ConnectionOptionsInstance'
      required:
        - base_options
      x-internal: false
    BaseOptionsSchema:
      type: object
      title: Base Options
      description: Payload sent to a Shipping Provider in to get quotes.
      properties:
        base_options:
          description: The minimum required payload that is sent to retrieve rates.
          type: object
          title: Base Rate Request
          required:
            - origin
            - destination
            - items
            - store_id
          properties:
            origin:
              type: object
              title: Shipping Address
              description: Object representing a destination or origin address for items.
              required:
                - zip
                - country_iso2
              properties:
                street_1:
                  type: string
                  maxLength: 255
                street_2:
                  type: string
                  maxLength: 255
                zip:
                  type: string
                  maxLength: 20
                  example: '94105'
                city:
                  type: string
                  maxLength: 50
                  example: San Francisco
                state_iso2:
                  type: string
                  description: State in ISO_3166 2 format.
                  maxLength: 2
                country_iso2:
                  type: string
                  description: Country in ISO_3166 2 format.
                  maxLength: 2
                  example: US
                address_type:
                  description: 'Optional. Defaults to `RESIDENTIAL`.'
                  type: string
                  enum:
                    - RESIDENTIAL
                    - COMMERCIAL
            destination:
              type: object
              title: Shipping Address
              description: Object representing a destination or origin address for items.
              required:
                - zip
                - country_iso2
              properties:
                street_1:
                  type: string
                  maxLength: 255
                street_2:
                  type: string
                  maxLength: 255
                zip:
                  type: string
                  maxLength: 20
                  example: '94105'
                city:
                  type: string
                  maxLength: 50
                  example: San Francisco
                state_iso2:
                  type: string
                  description: State in ISO_3166 2 format.
                  maxLength: 2
                country_iso2:
                  type: string
                  description: Country in ISO_3166 2 format.
                  maxLength: 2
                  example: US
                address_type:
                  description: 'Optional. Defaults to `RESIDENTIAL`.'
                  type: string
                  enum:
                    - RESIDENTIAL
                    - COMMERCIAL
            items:
              type: array
              items:
                type: object
                description: A cart item along with its shipping-specific attributes.
                title: Rate Request Item
                properties:
                  sku:
                    type: string
                    description: The variant SKU.
                  variant_id:
                    type: string
                  product_id:
                    type: string
                  name:
                    type: string
                  length:
                    description: Value object for a length measurement.
                    type: object
                    title: Dimension Value
                    properties:
                      units:
                        type: string
                        enum:
                          - cm
                          - in
                      value:
                        type: number
                        minimum: 0
                    required:
                      - units
                      - value
                  width:
                    description: Value object for a width measurement.
                    type: object
                    title: Dimension Value
                    properties:
                      units:
                        type: string
                        enum:
                          - cm
                          - in
                      value:
                        type: number
                        minimum: 0
                    required:
                      - units
                      - value
                  height:
                    description: Value object for a height measurement.
                    type: object
                    title: Dimension Value
                    properties:
                      units:
                        type: string
                        enum:
                          - cm
                          - in
                      value:
                        type: number
                        minimum: 0
                    required:
                      - units
                      - value
                  weight:
                    description: Value object for a weight measurement.
                    type: object
                    title: Weight Value
                    properties:
                      units:
                        type: string
                        enum:
                          - oz
                          - g
                      value:
                        type: number
                        minimum: 0
                    required:
                      - units
                      - value
                  discounted_price:
                    description: Value object for a money amount.
                    type: object
                    title: Money Value
                    properties:
                      currency:
                        type: string
                        pattern: '^[A-Z]{3,3}$'
                      amount:
                        type: number
                        minimum: 0
                    required:
                      - currency
                      - amount
                  declared_value:
                    description: Value object for a money amount.
                    type: object
                    title: Money Value
                    properties:
                      currency:
                        type: string
                        pattern: '^[A-Z]{3,3}$'
                      amount:
                        type: number
                        minimum: 0
                    required:
                      - currency
                      - amount
                  quantity:
                    type: number
                    format: int32
                  attributes:
                    description: A list of arbitrary properties stored as part of the product or product variant meta fields. These consist of public fields specific to the carrier integration.
                    type: array
                    items:
                      type: object
                      title: Attribute Value
                      properties:
                        key:
                          type: string
                          description: The key associated with the meta field.
                        value:
                          type: string
                          description: The value associated with the meta field.
                        namespace:
                          type: string
                          description: 'The namespace associated with metafields for [products](/docs/rest-catalog/products/metafields#create-a-product-metafield) and [product variants](/docs/rest-catalog/product-variants/metafields). Save the metafield namespace using the format `shipping_carrier_{yourCarrierId}`; otherwise, it will not be recognized as a valid attribute.'
                        resource_type:
                          type: string
                          enum:
                            - product
                            - variant
                          description: The resource type associated with the metafield. Currently, the only values available are `product` and `variant`.
                        resource_id:
                          type: string
                          description: The resource ID of the meta field.
                        attribute_type:
                          type: string
                          enum:
                            - metafield
                          description: The attribute type associated with the product or product variant metafield. Currently, the only value available is `metafield`.
            customer:
              type: object
              title: Customer Details
              description: The details of the Customer that has made the purchase.
              properties:
                customer_groups:
                  type: array
                  items:
                    type: object
                    title: Customer Group
                    description: The Group (if any) that this customer is in. The value defaults to zero if the customer is not in a group or is a guest.
                    properties:
                      customer_group_id:
                        type: integer
                      customer_group_name:
                        type: string
                customer_id:
                  type: integer
            store_id:
              type: string
            request_context:
              type: object
              title: Request Context
              description: A collection of Reference Value objects.
              properties:
                reference_values:
                  type: array
                  items:
                    type: object
                    title: Reference Value
                    description: Value objects contained within the request context.
                    properties:
                      name:
                        type: string
                      value:
                        type: string
        zone_options:
          $ref: '#/components/schemas/ZoneOptionsInstance'
        connection_options:
          $ref: '#/components/schemas/ConnectionOptionsInstance'
      required:
        - base_options
      x-internal: false
    CustomerDetails:
      type: object
      properties:
        customer_groups:
          type: array
          items:
            type: object
            properties:
              customer_group_id:
                type: integer
              customer_group_name:
                type: string
            title: Customer Group
            description: The Group (if any) that this customer is in. The value will default to zero if the customer is not in a group or is a guest.
        customer_id:
          type: integer
      title: Customer Details
      description: The details of the Customer that has made the purchase.
      x-internal: false
    ZoneOptionsInstance:
      type: object
      description: Any zone-specific request options declared by the carrier and configured by the merchant to retrieve rates. Optional.
      title: Zone Options Instance
      x-internal: false
    ConnectionOptionsInstance:
      type: object
      description: Any global request options declared by the carrier and configured by the merchant to retrieve rates. Optional.
      title: Connection Options Instance
      x-internal: false
    RateOptionsInstance:
      description: Optional, any checkout specific request options to retrieve rates
      type: array
      items:
        type: object
        properties:
          key:
            type: string
          value:
            type: string
        required:
          - key
          - value
        title: Key Value Pair
      title: Rate Options Instance
      x-internal: false
    CustomerGroup:
      type: object
      properties:
        customer_group_id:
          type: integer
        customer_group_name:
          type: string
      title: Customer Group
      description: The Group (if any) that this customer is in. The value will default to zero if the customer is not in a group or is a guest.
      x-internal: false
    KeyValuePair:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      required:
        - key
        - value
      title: Key Value Pair
      x-internal: false
    RateResponsePayload:
      type: object
      properties:
        quote_id:
          type: string
          maxLength: 50
        messages:
          type: array
          items:
            type: object
            properties:
              text:
                type: string
                minLength: 1
                maxLength: 500
              type:
                type: string
                enum:
                  - INFO
                  - WARNING
                  - ERROR
            required:
              - text
              - type
            title: Message
            description: 'A simple string/type response for returning information.'
        carrier_quotes:
          type: array
          items:
            type: object
            description: A grouping of carrier rates and optionally, info about that carrier.
            properties:
              carrier_info:
                type: object
                properties:
                  code:
                    type: string
                    maxLength: 50
                  display_name:
                    type: string
                    minLength: 1
                    maxLength: 100
                required:
                  - code
                  - display_name
              quotes:
                type: array
                items:
                  type: object
                  properties:
                    code:
                      description: A code describing the service.
                      type: string
                      minLength: 1
                      maxLength: 50
                      example: GND
                    display_name:
                      description: A display name for the service.
                      type: string
                      maxLength: 100
                    cost:
                      description: Value object for a money amount.
                      type: object
                      properties:
                        currency:
                          type: string
                          pattern: '^[A-Z]{3,3}$'
                        amount:
                          type: number
                          minimum: 0
                      required:
                        - currency
                        - amount
                      title: Money Value
                    messages:
                      type: array
                      items:
                        type: object
                        properties:
                          text:
                            type: string
                            minLength: 1
                            maxLength: 500
                          type:
                            type: string
                            enum:
                              - INFO
                              - WARNING
                              - ERROR
                        required:
                          - text
                          - type
                        title: Message
                        description: 'A simple string/type response for returning information.'
                    description:
                      type: string
                      maxLength: 500
                    rate_id:
                      type: string
                      maxLength: 50
                    discounted_cost:
                      description: Value object for a money amount.
                      type: object
                      properties:
                        currency:
                          type: string
                          pattern: '^[A-Z]{3,3}$'
                        amount:
                          type: number
                          minimum: 0
                      required:
                        - currency
                        - amount
                      title: Money Value
                    dispatch_date:
                      type: string
                      format: date
                    transit_time:
                      type: object
                      properties:
                        units:
                          type: string
                          enum:
                            - BUSINESS_DAYS
                            - DAYS
                            - HOURS
                        duration:
                          type: integer
                          minimum: 1
                          maximum: 90
                      title: Transit Time Object
                      description: Value object for the length of time in transit.
                  required:
                    - code
                    - display_name
                    - cost
                  title: Rate Quote Object
                  description: A quote being returned as part of the rate request.
            required:
              - quotes
            title: Carrier Quote Object
      required:
        - quote_id
        - messages
        - carrier_quotes
      title: Rate Response Payload
      description: The response from the Shipping Service. Contains zero or more quotes.
      x-internal: false
    CarrierQuoteObject:
      type: object
      description: A grouping of carrier rates and optionally, info about that carrier.
      properties:
        carrier_info:
          type: object
          properties:
            code:
              type: string
              maxLength: 50
            display_name:
              type: string
              minLength: 1
              maxLength: 100
          required:
            - code
            - display_name
        quotes:
          type: array
          items:
            type: object
            properties:
              code:
                description: A code describing the service.
                type: string
                maxLength: 50
                example: GND
              display_name:
                description: A display name for the service.
                type: string
                maxLength: 100
              cost:
                description: Value object for a money amount.
                type: object
                properties:
                  currency:
                    type: string
                    pattern: '^[A-Z]{3,3}$'
                  amount:
                    type: number
                    minimum: 0
                required:
                  - currency
                  - amount
                title: Money Value
              messages:
                type: array
                items:
                  type: object
                  properties:
                    text:
                      type: string
                      minLength: 1
                      maxLength: 500
                    type:
                      type: string
                      enum:
                        - INFO
                        - WARNING
                        - ERROR
                  required:
                    - text
                    - type
                  title: Message
                  description: 'A simple string/type response for returning information.'
              description:
                type: string
                maxLength: 500
              rate_id:
                type: string
                maxLength: 50
              discounted_cost:
                description: Value object for a money amount.
                type: object
                properties:
                  currency:
                    type: string
                    pattern: '^[A-Z]{3,3}$'
                  amount:
                    type: number
                    minimum: 0
                required:
                  - currency
                  - amount
                title: Money Value
              dispatch_date:
                type: string
                format: date
              transit_time:
                type: object
                properties:
                  units:
                    type: string
                    enum:
                      - BUSINESS_DAYS
                      - DAYS
                      - HOURS
                  duration:
                    type: integer
                    minimum: 1
                    maximum: 90
                title: Transit Time Object
                description: Value object for the length of time in transit.
            required:
              - code
              - display_name
              - cost
            title: Rate Quote Object
            description: A quote being returned as part of the rate request.
      required:
        - quotes
      title: Carrier Quote Object
      x-internal: false
    RateRequestItem:
      type: object
      description: A cart item along with its shipping-specific attributes.
      properties:
        sku:
          type: string
          description: The variant SKU.
        variant_id:
          type: string
        product_id:
          type: string
        name:
          type: string
        length:
          description: Value object for a length measurement.
          type: object
          properties:
            units:
              type: string
              enum:
                - cm
                - in
            value:
              type: number
              minimum: 0
          required:
            - units
            - value
          title: Dimension Value
        width:
          description: Value object for a width measurement.
          type: object
          properties:
            units:
              type: string
              enum:
                - cm
                - in
            value:
              type: number
              minimum: 0
          required:
            - units
            - value
          title: Dimension Value
        height:
          description: Value object for a height measurement.
          type: object
          properties:
            units:
              type: string
              enum:
                - cm
                - in
            value:
              type: number
              minimum: 0
          required:
            - units
            - value
          title: Dimension Value
        weight:
          description: Value object for a weight measurement.
          type: object
          properties:
            units:
              type: string
              enum:
                - oz
                - g
            value:
              type: number
              minimum: 0
          required:
            - units
            - value
          title: Weight Value
        discounted_price:
          description: Value object for a money amount.
          type: object
          properties:
            currency:
              type: string
              pattern: '^[A-Z]{3,3}$'
            amount:
              type: number
              minimum: 0
          required:
            - currency
            - amount
          title: Money Value
        declared_value:
          description: Value object for a money amount.
          type: object
          properties:
            currency:
              type: string
              pattern: '^[A-Z]{3,3}$'
            amount:
              type: number
              minimum: 0
          required:
            - currency
            - amount
          title: Money Value
        quantity:
          type: number
          format: int32
        attributes:
          type: array
          description: A list of arbitrary properties stored as part of the product or product variant meta fields. These consist of any public fields specific to the carrier integration.
          items:
            type: object
            properties:
              key:
                type: string
                description: The key associated with the product or product variant meta field.
              value:
                type: string
                description: The value associated with the product or product variant meta field.
              namespace:
                type: string
                description: 'The namespace associated with metafields for [products](/docs/rest-catalog/products/metafields) and [product variants](/docs/rest-catalog/product-variants/metafields). Save the metafield namespace using the format `shipping_carrier_{yourCarrierId}`; otherwise, it will not be recognized as a valid attribute.'
              resource_type:
                type: string
                enum:
                  - product
                  - variant
                description: Resource type associated with the product or product variant meta field. Currently, the only values available are 'product' or 'variant'.
              resource_id:
                type: string
                description: The resource ID of the product or product variant meta field.
              attribute_type:
                type: string
                enum:
                  - metafield
                description: Attribute type associated with the product or product variant meta field. Currently, the only value for this is 'metafield'.
            title: Attribute Value
      title: Rate Request Item
      x-internal: false
    RequestContext:
      type: object
      properties:
        reference_values:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string
            title: Reference Value
            description: Value objects contained within the request context.
      title: Request Context
      description: A collection of Reference Value objects.
      x-internal: false
    ReferenceValue:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      title: Reference Value
      description: Value objects contained within the request context.
      x-internal: false
    Message:
      type: object
      properties:
        text:
          type: string
          minLength: 1
          maxLength: 500
        type:
          type: string
          enum:
            - INFO
            - WARNING
            - ERROR
      required:
        - text
        - type
      title: Message
      description: 'A simple string/type response for returning information.'
      x-internal: false
    RateQuoteObject:
      type: object
      properties:
        code:
          description: A code describing the service.
          type: string
          maxLength: 50
          example: GND
        display_name:
          description: A display name for the service.
          type: string
          maxLength: 100
        cost:
          description: Value object for a money amount.
          type: object
          properties:
            currency:
              type: string
              pattern: '^[A-Z]{3,3}$'
            amount:
              type: number
              minimum: 0
          required:
            - currency
            - amount
          title: Money Value
        messages:
          type: array
          items:
            type: object
            properties:
              text:
                type: string
                minLength: 1
                maxLength: 500
              type:
                type: string
                enum:
                  - INFO
                  - WARNING
                  - ERROR
            required:
              - text
              - type
            title: Message
            description: 'A simple string/type response for returning information.'
        description:
          type: string
          maxLength: 500
        rate_id:
          type: string
          maxLength: 50
        discounted_cost:
          description: Value object for a money amount.
          type: object
          properties:
            currency:
              type: string
              pattern: '^[A-Z]{3,3}$'
            amount:
              type: number
              minimum: 0
          required:
            - currency
            - amount
          title: Money Value
        dispatch_date:
          type: string
          format: date
        transit_time:
          type: object
          properties:
            units:
              type: string
              enum:
                - BUSINESS_DAYS
                - DAYS
                - HOURS
            duration:
              type: integer
              minimum: 1
              maximum: 90
          title: Transit Time Object
          description: Value object for the length of time in transit.
      required:
        - code
        - display_name
        - cost
      title: Rate Quote Object
      description: A quote being returned as part of the rate request.
      x-internal: false
    TransitTimeObject:
      type: object
      properties:
        units:
          type: string
          enum:
            - BUSINESS_DAYS
            - DAYS
            - HOURS
        duration:
          type: integer
          minimum: 1
          maximum: 90
      title: Transit Time Object
      description: Value object for the length of time in transit.
      x-internal: false
    AttributeValue:
      description: Value object for an attribute. This represents a product or product variant meta field.
      type: object
      properties:
        key:
          type: string
          description: The key associated with the product or product variant meta field.
        value:
          type: string
          description: The value associated with the product or product variant meta field.
        namespace:
          type: string
          description: 'The namespace associated with metafields for [products](/docs/rest-catalog/products/metafields) and [product variants](/docs/rest-catalog/product-variants/metafields). Save the metafield namespace using the format `shipping_carrier_{yourCarrierId}`; otherwise, it will not be recognized as a valid attribute.'
        resource_type:
          type: string
          description: Resource type associated with the product or product variant meta field. Currently, the only values available are 'product' or 'variant'.
          enum:
            - product
            - variant
        resource_id:
          type: string
          description: The resource ID of the product or product variant meta field.
        attribute_type:
          type: string
          description: Attribute type associated with the product or product variant meta field. Currently, the only value for this is 'metafield'.
          enum:
            - metafield
      title: Attribute Value
      x-internal: false
    MoneyValue:
      description: Value object for a money amount.
      type: object
      properties:
        currency:
          type: string
          pattern: '^[A-Z]{3,3}$'
        amount:
          type: number
          minimum: 0
      required:
        - currency
        - amount
      title: Money Value
      x-internal: false
    DimensionValue:
      description: Value object for a length measurement.
      type: object
      properties:
        units:
          type: string
          enum:
            - cm
            - in
        value:
          type: number
          minimum: 0
      required:
        - units
        - value
      title: Dimension Value
      x-internal: false
    WeightValue:
      description: Value object for a weight measurement.
      type: object
      properties:
        units:
          type: string
          enum:
            - oz
            - g
        value:
          type: number
          minimum: 0
      required:
        - units
        - value
      title: Weight Value
      x-internal: false
    RateOptionsSchema:
      description: A set of carrier-specific fields that will be displayed to shoppers at checkout.
      type: array
      items:
        description: Options, ranges, defaults, and validation for a carrier-defined field that displays at checkout.
        type: object
        properties:
          code:
            description: The internal code that represents this input field.
            type: string
          label:
            description: Display name for this input field.
            type: string
          description:
            description: Longer description text to be displayed as a tooltip at checkout.
            type: string
          validation:
            description: Placeholder for any validation we choose to implement.
            type: string
          type:
            description: How this input will be displayed.
            type: string
            enum:
              - date
              - string
              - select
              - code
          default_value:
            description: A valid default value for this field.
            type: string
          value_options:
            description: The list of options available for `select` type fields.
            type: array
            items:
              type: string
          date_ranges:
            description: The set of valid date ranges for `date` type fields.
            type: array
            items:
              type: object
              properties:
                from:
                  type: object
                  properties:
                    date:
                      type: string
                      format: date
                    timezone:
                      type: string
                  title: Date Value
                  description: Value Object representing a Date.
                to:
                  type: object
                  properties:
                    date:
                      type: string
                      format: date
                    timezone:
                      type: string
                  title: Date Value
                  description: Value Object representing a Date.
              title: Date Range
              description: Representation of a range of date objects.
        required:
          - code
          - label
          - type
          - default_value
        title: Key Value Pair Schema
      title: Rate Options Schema
      x-internal: false
    KeyValuePairSchema:
      description: Options, ranges, defaults, and validation for a carrier-defined field that displays at checkout.
      type: object
      properties:
        code:
          description: The internal code that represents this input field.
          type: string
        label:
          description: Display name for this input field.
          type: string
        description:
          description: Longer description text to be displayed as a tooltip at checkout.
          type: string
        validation:
          description: Placeholder for any validation we choose to implement.
          type: string
        type:
          description: How this input will be displayed.
          type: string
          enum:
            - date
            - string
            - select
            - code
        default_value:
          description: A valid default value for this field.
          type: string
        value_options:
          description: The list of options available for `select` type fields.
          type: array
          items:
            type: string
        date_ranges:
          description: 'For date type fields, a set of valid date ranges available to choose from'
          type: array
          items:
            type: object
            properties:
              from:
                type: object
                properties:
                  date:
                    type: string
                    format: date
                  timezone:
                    type: string
                title: Date Value
                description: Value Object representing a Date.
              to:
                type: object
                properties:
                  date:
                    type: string
                    format: date
                  timezone:
                    type: string
                title: Date Value
                description: Value Object representing a Date.
            title: Date Range
            description: Representation of a range of date objects.
      required:
        - code
        - label
        - type
        - default_value
      title: Key Value Pair Schema
      x-internal: false
    ShippingAddress:
      type: object
      title: Shipping Address
      description: Object representing a destination or origin address for items.
      properties:
        street_1:
          type: string
          maxLength: 255
        street_2:
          type: string
          maxLength: 255
        zip:
          type: string
          maxLength: 20
          example: '94105'
        city:
          type: string
          maxLength: 50
          example: San Francisco
        state_iso2:
          type: string
          description: State in ISO_3166 2 format.
          maxLength: 2
        country_iso2:
          type: string
          description: Country in ISO_3166 2 format.
          maxLength: 2
          example: US
        address_type:
          description: Optional. Defaults to `RESIDENTIAL`.
          type: string
          enum:
            - RESIDENTIAL
            - COMMERCIAL
      required:
        - zip
        - country_iso2
      x-internal: false
    CheckConnectionOptionsRequestPayload:
      type: object
      properties:
        connection_options:
          $ref: '#/components/schemas/ConnectionOptionsInstance'
      required:
        - connection_options
      title: Check Connection Options Request Payload
      description: |-
        The payload sent to a Shipping Provider to check that the store is connected to this provider.

        Each Shipping Provider will have different configurations for the payload.
      x-internal: false
    CheckConnectionOptionsResponsePayload:
      type: object
      properties:
        valid:
          type: boolean
          description: Indicates whether or not the connection options are valid.
        messages:
          type: array
          items:
            type: object
            properties:
              text:
                type: string
                minLength: 1
                maxLength: 500
              type:
                type: string
                enum:
                  - INFO
                  - WARNING
                  - ERROR
            required:
              - text
              - type
            title: Message
            description: 'A simple string/type response for returning information.'
      title: Check Connection Options Response Payload
      description: The response received back from the Shipping Provider connection check. This allows the store to understand whether the connection was successful.
      x-internal: false
    DateRange:
      type: object
      properties:
        from:
          type: object
          properties:
            date:
              type: string
              format: date
            timezone:
              type: string
          title: Date Value
          description: Value Object representing a Date.
        to:
          type: object
          properties:
            date:
              type: string
              format: date
            timezone:
              type: string
          title: Date Value
          description: Value Object representing a Date.
      title: Date Range
      description: Representation of a range of date objects.
      x-internal: false
    DateValue:
      type: object
      properties:
        date:
          type: string
          format: date
        timezone:
          type: string
      title: Date Value
      description: Value Object representing a Date.
      x-internal: false
    BaseOptions:
      description: The minimum required payload that is sent to retrieve rates.
      type: object
      title: Base Rate Request
      x-internal: false
      properties:
        origin:
          type: object
          title: Shipping Address
          description: Object representing a destination or origin address for items.
          required:
            - zip
            - country_iso2
          properties:
            street_1:
              type: string
              maxLength: 255
            street_2:
              type: string
              maxLength: 255
            zip:
              type: string
              maxLength: 20
              example: '94105'
            city:
              type: string
              maxLength: 50
              example: San Francisco
            state_iso2:
              type: string
              description: State in ISO_3166 2 format.
              maxLength: 2
            country_iso2:
              type: string
              description: Country in ISO_3166 2 format.
              maxLength: 2
              example: US
            address_type:
              description: 'Optional. Defaults to `RESIDENTIAL`.'
              type: string
              enum:
                - RESIDENTIAL
                - COMMERCIAL
        destination:
          type: object
          title: Shipping Address
          description: Object representing a destination or origin address for items.
          required:
            - zip
            - country_iso2
          properties:
            street_1:
              type: string
              maxLength: 255
            street_2:
              type: string
              maxLength: 255
            zip:
              type: string
              maxLength: 20
              example: '94105'
            city:
              type: string
              maxLength: 50
              example: San Francisco
            state_iso2:
              type: string
              description: State in ISO_3166 2 format
              maxLength: 2
            country_iso2:
              type: string
              description: Country in ISO_3166 2 format
              maxLength: 2
              example: US
            address_type:
              description: Defaults to residential. Optional.
              type: string
              enum:
                - RESIDENTIAL
                - COMMERCIAL
            form_fields:
              type: object
              example:
                "1": selected_value
                "3": checkbox_selection_1
              description: Describes one or more [custom form fields](/docs/rest-storefront/forms). Property key is the global ID of a shipping address form field. When no custom fields exist, the object is empty.
              properties:
                '<form field global ID>':
                  $ref: '#/components/schemas/FormFieldValue' 
        items:
          type: array
          items:
            type: object
            description: A cart item along with its shipping-specific attributes.
            title: Rate Request Item
            properties:
              sku:
                type: string
                description: The variant SKU.
              variant_id:
                type: string
              product_id:
                type: string
              name:
                type: string
              length:
                description: Value object for a length measurement.
                type: object
                title: Dimension Value
                properties:
                  units:
                    type: string
                    enum:
                      - cm
                      - in
                  value:
                    type: number
                    minimum: 0
                required:
                  - units
                  - value
              width:
                description: Value object for a length measurement.
                type: object
                title: Dimension Value
                properties:
                  units:
                    type: string
                    enum:
                      - cm
                      - in
                  value:
                    type: number
                    minimum: 0
                required:
                  - units
                  - value
              height:
                description: Value object for a length measurement.
                type: object
                title: Dimension Value
                properties:
                  units:
                    type: string
                    enum:
                      - cm
                      - in
                  value:
                    type: number
                    minimum: 0
                required:
                  - units
                  - value
              weight:
                description: Value object for a weight measurement.
                type: object
                title: Weight Value
                properties:
                  units:
                    type: string
                    enum:
                      - oz
                      - g
                  value:
                    type: number
                    minimum: 0
                required:
                  - units
                  - value
              discounted_price:
                description: Value object for a money amount.
                type: object
                title: Money Value
                properties:
                  currency:
                    type: string
                    pattern: '^[A-Z]{3,3}$'
                  amount:
                    type: number
                    minimum: 0
                required:
                  - currency
                  - amount
              declared_value:
                description: Value object for a money amount.
                type: object
                title: Money Value
                properties:
                  currency:
                    type: string
                    pattern: '^[A-Z]{3,3}$'
                  amount:
                    type: number
                    minimum: 0
                required:
                  - currency
                  - amount
              quantity:
                type: number
                format: int32
              attributes:
                description: A list of arbitrary properties stored as part of the product or product variant meta fields. These consist of public fields specific to the carrier integration.
                type: array
                items:
                  type: object
                  title: Attribute Value
                  properties:
                    key:
                      type: string
                      description: The key associated with the meta field.
                    value:
                      type: string
                      description: The value associated with the meta field.
                    namespace:
                      type: string
                      description: 'The namespace associated with a [product](/docs/rest-catalog/products/metafields) or [product variant](/docs/rest-catalog/product-variants/metafields) metafields. You should save a metafield namespace under this format `shipping_carrier_{yourCarrierId}`; otherwise, you will not be able to recognize it as an attribute.'
                    resource_type:
                      type: string
                      enum:
                        - product
                        - variant
                      description: Resource type associated with the meta field. Currently, the only values available are 'product' or 'variant'.
                    resource_id:
                      type: string
                      description: The resource ID of the meta field.
                    attribute_type:
                      type: string
                      enum:
                        - metafield
                      description: Attribute type associated with the product or product variant meta field. Currently, the only value for this is 'metafield'.
        customer:
          type: object
          title: Customer Details
          description: The details of the Customer that has made the purchase.
          properties:
            customer_groups:
              type: array
              items:
                type: object
                title: Customer Group
                description: The Group (if any) that this customer is in. This will default to zero if the customer is not in a group or is a guest.
                properties:
                  customer_group_id:
                    type: integer
                  customer_group_name:
                    type: string
            customer_id:
              type: integer
        store_id:
          type: string
        request_context:
          type: object
          title: Request Context
          description: A collection of Reference Value objects.
          properties:
            reference_values:
              type: array
              items:
                type: object
                title: Reference Value
                description: Value objects contained within the request context.
                properties:
                  name:
                    type: string
                    description: The property to which the reference value pertains. Examples include `channel_id` and `cart_id`.
                  value:
                    type: string
      required:
        - origin
        - destination
        - items
        - store_id
    FormFieldValue:
      type: string
      description: The value of a [shipping address](/docs/rest-management/orders/order-shipping-addresses#get-a-shipping-address) form field. Depending on the form field, this could be a user-defined value or the value of a hidden input.
      title: Form Field Value
       
openapi: '3.0.3'
info:
  title: Sites
  version: ''
  description: |-
    Create and manage [sites](#sites) and [routes](#routes) for [headless storefront](https://support.bigcommerce.com/s/article/The-Headless-Approach#what-mean) sales [channels](/docs/rest-management/channels).

    ## [Sites](/docs/rest-management/sites)

    Sites link [headless storefronts](/api-docs/storefronts/developers-guide-headless) to sales [channels](/docs/rest-management/channels). To [create a site](/docs/rest-management/sites#create-a-site), send a `POST` request to `/stores/{{STORE_HASH}}/v3/sites`.

    ```http
    POST https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/sites
    X-Auth-Token: {{ACCESS_TOKEN}}
    Content-Type: application/json
    Accept: application/json

    {
      "url": "http://store.example.com/",
      "channel_id": 5
    }
    ```

    **Response**

    ```json
    {
      "id": 1,
      "url": "http://store.example.com/",
      "channel_id": 5,
      "created_at": "2022-01-04T04:15:50.000Z",
      "updated_at": "2022-01-04T04:15:50.000Z"
    }
    ```

    To [get a list of sites](/docs/rest-management/sites#get-sites), send a `GET` request to `/stores/{{STORE_HASH}}/v3/sites`.

    ```http
    GET https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/sites
    X-Auth-Token: {{ACCESS_TOKEN}}
    Accept: application/json
    ```

    ## Site routes

    [Site routes](/docs/rest-management/sites/site-routes) tell BigCommerce how to link to pages on a [headless storefront](/api-docs/storefronts/developers-guide-headless). To [create a route](/docs/rest-management/sites/site-routes#create-a-site-route) for a [site](#sites), send a `POST` request to `/stores/{{STORE_HASH}}/v3/sites/{site_id}/routes`.

    ```http
    POST https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/sites/{site_id}/routes
    X-Auth-Token: {{ACCESS_TOKEN}}
    Content-Type: application/json
    Accept: application/json

    {
      "type": "product",
      "matching": "12",
      "route": "/en/product?id=12"
    }
    ```

    ## Route types

    The following route types are supported.

    | Type | Description |
    |-|-|
    |`product`|Route for product details pages |
    |`brand`|Route to brand pages |
    |`category`|Route to category pages |    
    |`blog`|Route to blog page|    
    |`home`|Route to storefront homepage|
    |`cart`|Route to shopper’s cart|
    |`checkout`|Route to checkout page|
    |`search`|Route to store search page|
    |`account`|Route to account profile page|
    |`login`|Route to account login page|
    |`returns`|Route for return policy page|
    |`static`|Route to a static page|    
    |`create_account`|Route to create new shopper account page|
    |`forgot_password`|Route to shopper forgot password page|
    |`account_order_status`|Route for order status page|
    |`account_new_return`|Route for product returns page|
    |`recover_abandoned_cart`|Route for URL in emails for a shopper to recover their abandoned cart|

    ## Route variables

    The following route variables are supported.

    |Variable|Description|
    |-|-|
    |`{id}`|The **ID** of the requested item|
    |`{slug}`|The **slug** for the requested item (if available). Note: the `slug` value may contain `/` slash|
    |`{lang}`|The **language** string that the client is using|

    **Example:**

    ```http
    POST https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/sites/{site_id}/routes
    X-Auth-Token: {{ACCESS_TOKEN}}
    Content-Type: application/json
    Accept: application/json

    {
      "type": "product",
      "matching": "*",
      "route": "/{lang}/{slug}?id={id}"
    }
    ```

    ## Additional Information

    ### Related resources
    * [Channels and Listings Reference](/docs/rest-management/channels)
    * [Channels Overview](/api-docs/channels/overview)
    * [Building Headless Storefronts Guide](/api-docs/storefronts/developers-guide-headless)
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Sites
    description: 'Enables creation and management of external sites (domains) where shoppers shop. Allows for the correct shopping experience to be delivered and maintained (i.e. redirect URLs, email links) when a shopper goes through the purchasing process.'
  - name: Site Routes
  - name: Site Certificate
paths:
  '/sites':
    parameters:
      - $ref: '#/components/parameters/Accept'
    post:
      summary: Create a Site
      operationId: post-site
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_Site'
        required: true
        x-examples:
          application/json:
            url: 'http://store.example.com/'
            channel_id: 2
      responses:
        '201':
          $ref: '#/components/responses/response_Site'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '403':
          $ref: '#/components/responses/403_Unauthorized'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '502':
          description: ''
        '504':
          $ref: '#/components/responses/504_GatewayTimeout'
      tags:
        - Sites
      description: 'Create a site that links a [headless storefront](/api-docs/storefronts/developers-guide-headless) to a sales [channel](/docs/rest-management/channels).'
    get:
      responses:
        '200':
          $ref: '#/components/responses/site_RespCollection'
      summary: Get Sites
      description: 'Get sites linked to a [headless storefront](/api-docs/storefronts/developers-guide-headless) sales channels.'
      tags:
        - Sites
      parameters:
        - in: query
          name: page
          description: Specifies the page number in a limited (paginated) list of items.
          schema:
            type: integer
        - in: query
          name: limit
          description: Controls the number of items per page in a limited (paginated) list of items.
          schema:
            type: integer
        - schema:
            type: integer
            example: 1
          in: query
          name: 'channel_id:in'
          description: Filters returned sites by channel ID.
        - schema:
            type: string
          in: query
          name: 'url_type:in'
          description: Filters sites returned in the `data.urls` array by their URL type.
  '/sites/{site_id}':
    get:
      summary: Get a Site
      operationId: getSite
      responses:
        '200':
          $ref: '#/components/responses/response_Site'
      tags:
        - Sites
      description: 'Get a site with site ID `{site_id}`.'
    put:
      summary: Update a Site
      operationId: putSite
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/put_Site'
        required: true
        x-examples:
          application/json:
            url: 'https://remote-site.com/'
      responses:
        '200':
          $ref: '#/components/responses/response_Site'
      tags:
        - Sites
      description: 'Update a site with site ID `{site_id}`.'
    delete:
      summary: Delete a Site
      operationId: deleteSite
      responses:
        '204':
          description: ''
      tags:
        - Sites
      description: 'Delete a site with site ID `{site_id}`.'
    parameters:
      - $ref: '#/components/parameters/Accept'
      - name: site_id
        in: path
        required: true
        schema:
          type: string
  '/sites/{site_id}/routes':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - name: site_id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: Get a Site’s Routes
      operationId: index-site-routes
      parameters:
        - name: type
          in: query
          description: Filter routes by a specified resource type.
          schema:
            type: string
        - in: query
          name: page
          description: Specifies the page number in a limited (paginated) list of items.
          schema:
            type: integer
        - in: query
          name: limit
          description: Controls the number of items per page in a limited (paginated) list of items.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/siteRoute_Full'
                  meta:
                    $ref: '#/components/schemas/_metaCollection'
              examples:
                response:
                  value:
                    data:
                      - id: 1
                        type: product
                        matching: '5'
                        route: '/products?id={id}'
                      - id: 2
                        type: category
                        matching: '44'
                        route: '/category/{slug}'
                    meta:
                      pagination:
                        total: 1
                        count: 1
                        per_page: 50
                        current_page: 1
                        total_pages: 1
      tags:
        - Site Routes
      description: Get a site’s routes.
    post:
      summary: Create a Site Route
      operationId: post-site-route
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/siteRoute_Base'
        required: true
        x-examples:
          application/json:
            type: returns
            matching: '5'
            route: /my-amazing-product
      responses:
        '201':
          $ref: '#/components/responses/siteRoute_Resp'
        '422':
          $ref: '#/components/responses/ErrorResponse'
        '502':
          $ref: '#/components/responses/502_GatewayError'
      tags:
        - Site Routes
      description: |-
        Create routes that tell BigCommerce how to link to pages on a [headless storefront](/api-docs/storefronts/developers-guide-headless).

        ## Usage Notes
        * For a list of supported route types, see [Route types](/docs/rest-management/sites#route-types).
    put:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/siteRoute_Full'
                  meta:
                    $ref: '#/components/schemas/_metaCollection'
              examples:
                response:
                  value:
                    data:
                      - id: 123
                        type: brand
                        matching: '5'
                        route: /my-amazing-product
                      - id: 345
                        type: blog
                        matching: '5'
                        route: /my-amazing-product
                      - id: 234
                        type: returns
                        matching: '5'
                        route: /my-amazing-product
                    meta:
                      pagination:
                        total: 80
                        count: 50
                        per_page: 50
                        current_page: 50
                        total_pages: 2
                        links:
                          current: '?page=1&limit=50'
                          next: '?page=2&limit=50'
        '422':
          $ref: '#/components/responses/BulkErrorResponse'
      description: |-
        Upsert routes for site with ID `{site_id}`.

        ## Usage Notes
        * `id` is required when updating an existing route.
      summary: Update a Site’s Routes
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/siteRoute_Full'
        x-examples:
          application/json:
            - id: 1
              type: product
              matching: '*'
              route: '/products/{id}'
            - id: 2
              type: product
              matching: '10'
              route: '/products?id={id}'
      tags:
        - Site Routes
  '/sites/{site_id}/routes/{route_id}':
    get:
      summary: Get a Site Route
      operationId: get-site-route
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/siteRoute_Full'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
              examples:
                response:
                  value:
                    data:
                      id: 60474753
                      type: checkout
                      matching: '5'
                      route: /my-amazing-product
                    meta: {}
      tags:
        - Site Routes
      description: Get a site’s route.
    put:
      summary: Update a Site Route
      operationId: put-site-route
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/siteRoutes_Route_Base'
        required: true
        x-examples:
          application/json:
            type: product
            matching: '*'
            route: '/products/{id}'
      responses:
        '201':
          $ref: '#/components/responses/siteRoute_Resp'
      tags:
        - Site Routes
      description: |
        Update a site’s route.
    delete:
      summary: Delete a Site Route
      operationId: delete-route
      responses:
        '204':
          description: ''
      tags:
        - Site Routes
      description: Delete a site’s route.
    parameters:
      - $ref: '#/components/parameters/Accept'
      - name: site_id
        in: path
        required: true
        schema:
          type: string
      - name: route_id
        in: path
        required: true
        schema:
          type: string
  '/sites/{site_id}/certificate':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - in: path
        name: site_id
        schema:
          type: integer
        required: true
    get:
      summary: Get a Site’s SSL/TLS Certificate Information
      description: Obtain information about a site’s SSL/TLS certificate.
      tags:
        - Site Certificate
      operationId: getSitesIdCertificate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateResponse'
              examples: {}
    put:
      summary: Upsert a Site’s SSL/TLS Certificate Information
      operationId: putSiteIdCertificate
      parameters:
        - $ref: '#/components/parameters/ContentType'
      tags:
        - Site Certificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstallCertificateData'
        description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
            Example:
              examples:
                response:
                  value: |-
                    {
                        "data": {},
                        "meta": {}
                    }
      description: |-
        - If a value for `url` is not supplied, the saved certificate is associated with the specified site’s `primary` URL.
        - Use caution. Because this endpoint upserts, supplying an SSL certificate for a domain that already has a certificate connected overwrites the domain’s extant certificate.'
  '/sites/certificates':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      summary: Get Site Certificates
      tags:
        - Site Certificate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCertificatesResponse'
      operationId: get-sites-certificates
      description: Return all SSL certificates connected to domains within a store.
      parameters:
        - schema:
            type: string
          in: query
          name: 'urls:in'
          description: Query certificates by one or more URLs
components:
  schemas:
    _metaCollection:
      title: metaCollection
      description: Meta data relating to pagination.
      type: object
      properties:
        pagination:
          type: object
          properties:
            total:
              type: integer
              description: Total number of items returned.
              example: 3
            count:
              type: integer
              description: Number of items returned on per page.
              example: 1
            per_page:
              type: integer
              description: Number of items to be displayed per page.
              example: 1
            current_page:
              type: integer
              description: Current page number.
              example: 2
            total_page:
              type: integer
              description: Total number of pages.
              example: 3
            links:
              type: object
              properties:
                previous:
                  type: string
                  description: Query string appended to the resource to return to the previous page.
                  example: '?limit=1&page=1'
                next:
                  type: string
                  description: Query string appended to the resource to proceed to the next page.
                  example: '?limit=1&page=3'
                current:
                  type: string
                  description: Query string appended to the resource to show the current page.
                  example: '?limit=1&page=2'
      x-internal: false
    siteRoute_Full:
      title: siteRoute_Full
      description: Route object used in responses.
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: Unique ID for this route. Required when updating an existing route.
        - $ref: '#/components/schemas/siteRoute_Base'
      x-internal: false
    put_Site:
      type: object
      properties:
        url:
          type: string
          description: The Fully Qualified URL (including host and scheme) where this site is hosted. All URLs generated for this site will be appended to this.
          example: 'http://kittens.mybigcommerce.com/'
      title: put_Site
      x-internal: false
    _site:
      type: object
      description: ''
      title: ''
      properties:
        id:
          type: integer
        url:
          type: string
          description: The fully qualified URL (including host and scheme) where this site is hosted. All URLs generated for this site will be appended to this.
          example: 'http://kittens.mybigcommerce.com/'
        channel_id:
          type: integer
          description: 'The channel to which this site is attached. Each site belongs to a single channel, and each channel can have either zero or more sites.'
        created_at:
          type: string
          description: 'The date-time that this site was created, formatted as an [RFC-3339](https://www.ietf.org/rfc/rfc3339.txt) string.'
          example: '2022-01-04T04:15:50.000Z'
        updated_at:
          type: string
          description: 'The date-time that this site was last updated, formatted as an [RFC-3339](https://www.ietf.org/rfc/rfc3339.txt) string.'
          example: '2022-01-04T04:15:50.000Z'
        ssl_status:
          type: string
          enum:
            - dedicated
            - shared
          description: Indicates whether a site is using a private/dedicated SSL or a shared SSL.
        urls:
          type: array
          description: 'All URLs that belong to the site, including `primary`, `canonical`, and `checkout` URLs.'
          items:
            $ref: '#/components/schemas/Url'
        is_checkout_url_customized:
          type: boolean
          description: 'Indicates whether the channel uses a custom checkout domain. When `false`, the checkout domain falls back to the default channel’s primary URL.'
    _metaEmpty:
      type: object
      properties: {}
      description: Empty meta object; may be used later.
      title: _metaEmpty
      x-internal: false
    _pagination:
      type: object
      description: |
        Data about the response, including pagination and collection totals.
      properties:
        total:
          type: integer
          description: |
            Total number of items in the result set.
        count:
          type: integer
          description: |
            Total number of items in the collection response.
        per_page:
          type: integer
          description: |
            The amount of items returned in the collection per page, controlled by the limit parameter.
        current_page:
          type: integer
          description: |
            The page you are currently on within the collection.
        total_pages:
          type: integer
          description: |
            The total number of pages in the collection.
        links:
          type: object
          description: |
            Pagination links for the previous and next parts of the whole collection.
          properties:
            previous:
              type: string
              description: |
                Link to the previous page returned in the response.
            current:
              type: string
              description: |
                Link to the current page returned in the response.
            next:
              type: string
              description: |
                Link to the next page returned in the response.
      title: _pagination
      x-internal: false
    _errors:
      type: object
      description: The keys and values in an errors object will vary depending on the error received.
      title: _errors
      x-internal: false
    EmptyResponse:
      type: object
      properties:
        data:
          type: object
          properties: {}
        meta:
          type: object
          properties: {}
    error_Full:
      type: object
      title: error_Full
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
      x-internal: false
    errorDetailed_Full:
      type: object
      properties:
        errors:
          type: object
          properties: {}
          additionalProperties: true
          title: DetailedErrors
      title: errorDetailed_Full
      x-internal: false
    post_Site:
      type: object
      properties:
        url:
          type: string
          description: The Fully Qualified URL (including host and scheme) where this site is hosted. All URLs generated for this site will be appended to this.
          example: 'http://kittens.mybigcommerce.com/'
        channel_id:
          type: integer
          description: 'The channel this site is attached to. Each site belongs to a single channel, and each channel can have either zero or one sites.'
      title: post_Site
      x-internal: false
    siteRoute_Base:
      type: object
      title: siteRoute_Base
      properties:
        type:
          type: string
          description: 'The type of resource being routed to; [supported types](/docs/rest-management/sites#route-types).'
          enum:
            - product
            - brand
            - category
            - page
            - blog
            - home
            - cart
            - checkout
            - search
            - account
            - login
            - returns
            - static
        matching:
          type: string
          description: |-
            Depending on the resource type, this can be an ID (matching a specific item), or a "*" wildcard (matching all items of that type).

            For example, a route with a type: "product" and matching: "5" will be used for the product with the ID of 5.
          example: '5'
        route:
          type: string
          description: |-
            The route template that will be used to generate the URL for the requested resource.

            Supports several tokens:
            - `{id}` The **ID** of the requested item.
            - `{slug}` The **slug** for the requested item (if available). Note: the `slug` value may contain `/` slash.
            - `{language}` The **language** string that the client is using.
          example: /my-amazing-product
      x-internal: false
    siteRoutes_Route_Base:
      title: siteRoutes_Route_Base
      type: object
      properties:
        type:
          type: string
          description: 'The type of resource being routed to; [supported types](/docs/rest-management/sites#route-types).'
          enum:
            - product
            - brand
            - category
            - page
            - blog
            - home
            - cart
            - checkout
            - search
            - account
            - login
            - returns
            - static
        matching:
          type: string
          example: '5'
          description: |-
            Depending on the resource type, this can be an ID (matching a specific item), or a "*" wildcard (matching all items of that type).

            For example, a route with a type: "product" and matching: "5" will be used for the product with the ID of 5.
        route:
          type: string
          example: /my-amazing-product
          description: |-
            The route template that will be used to generate the URL for the requested resource.

            Supports several tokens:
            - `{id}` The **ID** of the requested item.
            - `{slug}` The **slug** for the requested item (if available). Note: the `slug` value may contain `/` slash.
            - `{language}` The **language** string that the client is using.
      required:
        - type
        - matching
        - route
      x-internal: false
    IndexMeta:
      type: object
      description: BC Meta payload for collection-type responses.
      properties:
        pagination:
          type: object
          properties:
            total:
              type: integer
              example: 1
            count:
              type: integer
              example: 1
            per_page:
              type: integer
              example: 50
            current_page:
              type: integer
              example: 1
            total_pages:
              type: integer
              example: 1
            links:
              type: object
              properties:
                previous:
                  type: string
                  example: '?page=1&limit=50'
                current:
                  type: string
                  example: '?page=1&limit=50'
                next:
                  type: string
                  example: '?page=1&limit=50'
      x-tags:
        - Models
    Url:
      type: object
      properties:
        url:
          type: string
          description: URL of site.
        type:
          type: string
          description: Specifies the URL type.
          enum:
            - primary
            - canonical
            - checkout
        created_at:
          type: string
          description: 'The date-time that this URL was created, formatted as an [RFC-3339](https://www.ietf.org/rfc/rfc3339.txt) string.'
          example: '2018-01-04T04:15:50.000Z'
          format: date-time
        updated_at:
          type: string
          description: 'The date-time that this URL was last updated, formatted as an [RFC-3339](https://www.ietf.org/rfc/rfc3339.txt) string.'
          example: '2018-01-04T04:15:50.000Z'
          format: date-time
    SiteCreate:
      type: object
      properties:
        url:
          type: string
          description: The Fully Qualified URL (including host and scheme) where this site is hosted. All URLs generated for this site will be appended to this.
          example: 'http://kittens.mybigcommerce.com/'
        channel_id:
          type: integer
          description: 'The channel this site is attached to. Each site belongs to a single channel, and each channel can have either zero or one sites.'
        certificate:
          $ref: '#/components/schemas/CertificateWrite'
      x-tags:
        - Models
    CertificateWrite:
      title: CertificateWrite
      type: object
      description: ''
      properties:
        certificate:
          type: string
          description: 'The primary certificate, as a string.'
        private_key:
          type: string
          description: 'The private key, as a string. Is a "write-only" field, will never be returned after write.'
        intermediate_certificates:
          type: string
          description: 'The intermediate certificate(s), as a string.'
      x-tags:
        - Models
    CertificateResponse:
      title: CertificateResponse
      type: object
      description: ''
      properties:
        data:
          type: object
          properties:
            status:
              type: string
              enum:
                - shared
                - dedicated
            installed_certificate:
              $ref: '#/components/schemas/InstalledCertificateDetail'
        meta:
          $ref: '#/components/schemas/MetaOpen'
      x-tags:
        - Models
    InstallCertificateData:
      type: object
      properties:
        url:
          type: string
          description: URL for the site.
          example: kittens.mybigcommerce.com
        certificate:
          $ref: '#/components/schemas/CertificateWrite'
    InstalledCertificateDetail:
      title: CertificateInfo
      description: 'Details about the installed certificate, including the raw certificate data, without the private key.'
      type: object
      nullable: true
      properties:
        common_name:
          type: string
          example: store.com
          description: Common Name on the TLS certificate.
        subject_alternative_names:
          type: array
          example:
            - store.com
            - www.store.com
          description: Subject Alternative Names for which the certificate is also valid.
          items:
            type: string
        validity_not_before:
          type: string
          example: '2018-01-04T04:15:50.000Z'
          description: When does the validity period of this certificate begin? RFC 3339.
        validity_not_after:
          type: string
          example: '2018-01-04T04:15:50.000Z'
          description: 'When does the validity period of this certificate end? If this date is in the past, the certificate has expired. RFC 3339.'
        signing_algorithm:
          type: string
          description: Signing algorithm used to sign the certificate.
        issuer:
          type: string
        certificate:
          type: string
          description: 'The primary certificate, as a string.'
        intermediate_certificates:
          type: string
          description: 'The intermediate certificate(s), as a string.'
      x-tags:
        - Models
    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            errors:
              $ref: '#/components/schemas/DetailedErrors'
      x-tags:
        - Models
    BaseError:
      type: object
      description: |
        Error payload for the BigCommerce API.
      x-tags:
        - Models
      properties:
        status:
          type: integer
          description: |
            The HTTP status code.
          example: 404
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
    DetailedErrors:
      type: object
      properties: {}
      additionalProperties: true
      title: Detailed Errors
      x-tags:
        - Models
    GetCertificatesResponse:
      title: GetCertificatesResponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/InstalledCertificateDetail'
        meta:
          $ref: '#/components/schemas/MetaOpen'
    MetaOpen:
      title: Response meta
      type: object
      properties: {}
      additionalProperties: true
      description: Response metadata.
  responses:
    502_GatewayError:
      description: 'If something happens during the request that causes it to fail, a 502 response will be returned. A new request should be made; however, it could fail.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
    504_GatewayTimeout:
      description: 'If this occurs, you should retry the request. Typically retrying the request several times will result in a successful request; However, if you are unable to successfully make a request, please check the BigCommerce system status [here](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up (in several hours usually).'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 504
                title: Gateway Timeout
                type: /api-docs/getting-started/api-status-codes
                errors: {}
    403_Unauthorized:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 403
                title: Unauthorized Access. You do not have permission to make this request.
                type: /api-docs/getting-started/api-status-codes
    400_BadRequest:
      description: |-
        Malformed request syntax. Typically need to fix the JSON
        request body to resend successfully.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 400
                title: Input is invalid.
                type: /api-docs/getting-started/api-status-codes
    404_NotFound:
      description: Requested resource not founded.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
    422_UnprocessableEntity:
      description: This occurs when missing or unacceptable data is passed for one or more fields. Please correct the values for the fields listed in the errors object.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorDetailed_Full'
          examples:
            response:
              value:
                status: 422
                title: JSON data is missing or invalid
                type: /api-docs/getting-started/api-status-codes
                errors: {}
    503_ServiceUnavailable:
      description: 'If this occurs, you should retry the request. If you are unable to successfully make a request, please check the BigCommerce system status [here](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up (in several hours usually).'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 503
                title: Service Unavailable
                type: /api-docs/getting-started/api-status-codes
    response_Site:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/_site'
              meta:
                $ref: '#/components/schemas/_metaCollection'
          examples:
            Example:
              value:
                data:
                  id: 23
                  url: 'https://example.com'
                  channel_id: 234
                  created_at: '2018-01-04T04:15:50.000Z'
                  updated_at: '2018-01-04T04:15:50.000Z'
                  ssl_status: dedicated
                  urls:
                    - url: 'https://example.com'
                      type: primary
                      created_at: '2020-11-03T19:26:12Z'
                      updated_at: '2021-08-31T21:46:50Z'
                    - url: 'https://store-29i23fcz6.mybigcommerce.com'
                      type: canonical
                      created_at: '2020-11-03T19:26:12Z'
                      updated_at: '2020-11-03T19:26:12Z'
                    - url: 'https://checkout.example.com'
                      type: checkout
                      created_at: '2020-11-03T19:26:12Z'
                      updated_at: '2021-08-31T21:46:50Z'
                  is_checkout_url_customized: true
                meta:
                  pagination:
                    offset: 0
                    limit: 50
                    total_items: 1
    BulkErrorResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                description: The HTTP status code.
              title:
                type: string
              errors:
                $ref: '#/components/schemas/_errors'
              meta:
                $ref: '#/components/schemas/_metaEmpty'
              type:
                type: string
          examples:
            response:
              value:
                meta:
                  saved_records: 0
                title: Bulk operation has failed
                type: /api-docs/getting-started/api-status-codes
                errors:
                  0.matching.type: Route already exists for site 1 matching 5 for type product
                  1.matching.type: Route already exists for site 1 matching * for type home
                status: 422
    ErrorResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
                description: General error message
              status:
                type: string
                description: HTTP status code
              errors:
                $ref: '#/components/schemas/_errors'
              type:
                type: string
    site_RespCollection:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/_site'
              meta:
                $ref: '#/components/schemas/_metaCollection'
          examples: {}
    siteRoute_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/siteRoute_Full'
              meta:
                $ref: '#/components/schemas/MetaOpen'
          examples:
            response:
              value:
                data:
                  id: 123
                  type: checkout
                  matching: '5'
                  route: /my-amazing-product
                meta: {}
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Channel Listings | modify | `store_channel_listings` |
        |  Channel Listings | read-only | `store_channel_listings_read_only` |
        |  Channel Settings | modify | `store_channel_settings` |
        |  Channel Settings | read-only | `store_channel_settings_read_only` |
        |  Sites & Routes | modify | `store_sites` |
        |  Sites & Routes | read-only | `store_sites_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
    SiteIdPathParam:
      in: path
      name: site_id
      schema:
        type: integer
      required: true


openapi: '3.0.1'
info:
  title: Content
  description: |-
    Manage blog posts, blog tags, content pages, and redirects.

    > #### Warning
    > **Deprecations**
    > * Redirects V2 are deprecated; use [Redirects V3](/docs/rest-management/redirects) instead. 
    > * Pages V2 are deprecated; use [Pages V3](/docs/rest-content/pages) instead.
  version: ''
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v2'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Blog Posts
  - name: Blog Tags
  - name: Pages
  - name: Redirects
paths:
  '/blog/tags':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
        - Blog Tags
      summary: Get All Blog Tags
      description: Returns a list of *Blog Tags*.
      operationId: getAllBlogTags
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/blogTags'
  '/blog/posts':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
        - Blog Posts
      summary: Get All Blog Posts
      description: 'Returns all *Blog Posts*. Default sorting is by published_date, beginning with the most recent post.'
      operationId: getAllBlogPosts
      parameters:
        - name: is_published
          in: query
          description: Filter param.
          schema:
            type: string
        - name: url
          in: query
          description: Filter param. Value must be URL encoded.
          schema:
            type: string
        - name: tag
          in: query
          description: Filter param.
          schema:
            type: string
        - name: published_date
          in: query
          description: Filter param.
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          description: Filter param.
          schema:
            maximum: 50
            exclusiveMinimum: false
            type: number
        - name: limit
          in: query
          description: Filter param.
          schema:
            maximum: 250
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/blogPost_Full'
              example:
                - id: 3
                  title: Hello Again
                  url: /blog/hello-again/
                  preview_url: /blog/hello-again/
                  body: "<p>Jelly beans muffin marzipan gingerbread donut dessert. Cheesecake cheesecake sugar plum cookie cake tart. Soufflé sesame snaps jelly beans brownie chocolate tart. Marshmallow jujubes candy pie. Gummies lemon drops tart soufflé pastry pie. Caramels wafer biscuit gummi bears. Liquorice toffee wafer bear claw marzipan jelly-o. Dessert bear claw topping icing croissant. Pie bonbon chocolate bar chocolate bar tiramisu chocolate lemon drops candy.</p><p>Marshmallow cupcake sweet roll candy marshmallow caramels cotton candy pie icing. Powder jelly beans chupa chups lollipop liquorice marzipan dessert soufflé sesame snaps. Macaroon chupa chups gummies cheesecake ice cream caramels sesame snaps cotton candy gingerbread. Chocolate cake fruitcake tart bear claw lemon drops tart dragée tart apple pie. Halvah chupa chups soufflé jelly soufflé marshmallow. Croissant tart tart. Gingerbread apple pie biscuit.</p><p>Wafer lemon drops tart pastry brownie chocolate bar jelly. Dragée muffin cupcake liquorice caramels marzipan gingerbread marzipan. Apple pie pudding jelly sweet roll croissant bonbon wafer. Cookie chocolate bar sesame snaps bonbon macaroon candy canes donut sugar plum. Bear claw bonbon tootsie roll bonbon. Apple pie gummies donut sweet. Marzipan bear claw cotton candy topping dragée bonbon danish powder.</p>"
                  tags:
                    - sugar
                    - sweet
                    - spice
                    - everything
                    - nice
                  summary: 'Jelly beans muffin marzipan gingerbread donut dessert. Cheesecake cheesecake sugar plum cookie cake tart. Soufflé sesame snaps jelly beans brownie chocolate tart. Marshmallow jujubes candy pie. Gummies lemon drops tart soufflé pastry pie. Caramels wafer biscuit gummi bears. Liquorice toffee wafer bear claw marzipan jelly-o. Dessert bear claw topping icing croissant. Pie bonbon chocolate bar [...]'
                  is_published: true
                  published_date:
                    date: '2018-05-18 08:26:42.000000'
                    timezone_type: 1
                    timezone: '+00:00'
                  published_date_iso8601: '2018-05-18T13:26:42+0000'
                  meta_description: Cupcakes post 2
                  meta_keywords: 'sugar,sweet,spice,everything,nice'
                  author: ''
                  thumbnail_path: ''
                - id: 2
                  title: Hello
                  url: /blog/hello/
                  preview_url: /blog/hello/
                  body: "<p>Jelly beans muffin marzipan gingerbread donut dessert. Cheesecake cheesecake sugar plum cookie cake tart. Soufflé sesame snaps jelly beans brownie chocolate tart. Marshmallow jujubes candy pie. Gummies lemon drops tart soufflé pastry pie. Caramels wafer biscuit gummi bears. Liquorice toffee wafer bear claw marzipan jelly-o. Dessert bear claw topping icing croissant. Pie bonbon chocolate bar chocolate bar tiramisu chocolate lemon drops candy.</p><p>Marshmallow cupcake sweet roll candy marshmallow caramels cotton candy pie icing. Powder jelly beans chupa chups lollipop liquorice marzipan dessert soufflé sesame snaps. Macaroon chupa chups gummies cheesecake ice cream caramels sesame snaps cotton candy gingerbread. Chocolate cake fruitcake tart bear claw lemon drops tart dragée tart apple pie. Halvah chupa chups soufflé jelly soufflé marshmallow. Croissant tart tart. Gingerbread apple pie biscuit.</p><p>Wafer lemon drops tart pastry brownie chocolate bar jelly. Dragée muffin cupcake liquorice caramels marzipan gingerbread marzipan. Apple pie pudding jelly sweet roll croissant bonbon wafer. Cookie chocolate bar sesame snaps bonbon macaroon candy canes donut sugar plum. Bear claw bonbon tootsie roll bonbon. Apple pie gummies donut sweet. Marzipan bear claw cotton candy topping dragée bonbon danish powder.</p>"
                  tags:
                    - cupcakes
                    - sugar
                    - sweet
                  summary: 'Jelly beans muffin marzipan gingerbread donut dessert. Cheesecake cheesecake sugar plum cookie cake tart. Soufflé sesame snaps jelly beans brownie chocolate tart. Marshmallow jujubes candy pie. Gummies lemon drops tart soufflé pastry pie. Caramels wafer biscuit gummi bears. Liquorice toffee wafer bear claw marzipan jelly-o. Dessert bear claw topping icing croissant. Pie bonbon chocolate bar [...]'
                  is_published: true
                  published_date:
                    date: '2018-05-18 08:26:00.000000'
                    timezone_type: 1
                    timezone: '+00:00'
                  published_date_iso8601: '2018-05-18T13:26:00+0000'
                  meta_description: cupcake blog post
                  meta_keywords: 'cupcakes,sugar,sweet'
                  author: ''
                  thumbnail_path: ''
                - id: 1
                  title: Your first blog post!
                  url: /your-first-blog-post/
                  preview_url: /your-first-blog-post/
                  body: "<p><strong>Welcome to your blog!</strong><br> A blog is a great place to share details on your products, business and whatever else you think your shoppers might like to hear from you. You can include photos in your blog posts and even videos. For ideas and inspiration on how to structure your blog, take a look at the BigCommerce <a href='http://blog.bigcommerce.com/' target='_blank' rel='nofollow'>ecommerce blog</a>.</p><p><strong>How can I delete this post?</strong><br>To delete this post and add your own, login to your <a href='/admin' target='_blank'>admin area</a> and go to Storefront > Blog in the left hand menu.</p><p><strong>Powered by BigCommerce</strong><br>Your website, online store and blog are powered by BigCommerce <a href='http://www.bigcommerce.com/' target='_blank' rel='nofollow'>ecommerce software</a>. It includes everything you need to run a beautiful online store including <a href='http://www.bigcommerce.com/templates/' target='_blank' rel='nofollow'>ecommerce website templates</a>, <a href='http://www.bigcommerce.com/features/hosting/' target='_blank' rel='nofollow'>ecommerce hosting</a>, an <a href='http://www.bigcommerce.com/features/setup/' target='_blank' rel='nofollow'>online shopping cart</a> and more.</p>"
                  tags:
                    - Blog
                    - SEO
                  summary: ' Welcome to your blog! A blog is a great place to share details on your products, business and whatever else you think your shoppers might like to hear from you. You can include photos in your blog posts and even videos. For ideas and inspiration on how to structure your blog, take a look [...]'
                  is_published: true
                  published_date:
                    date: '2014-02-15 14:46:34.000000'
                    timezone_type: 1
                    timezone: '+00:00'
                  published_date_iso8601: '2014-02-15T19:46:34+0000'
                  meta_description: ''
                  meta_keywords: 'Blog,SEO'
                  author: ''
                  thumbnail_path: ''
    post:
      tags:
        - Blog Posts
      summary: Create a Blog Post
      description: |-
        Creates a *Blog Post*.

        **Required Fields**
        *   `title`
        *   `body`

        **Notes**

        * When including `published_date` in a request, supply it as a flat date string (not an object) in valid <a href="http://tools.ietf.org/html/rfc2822#section-3.3" target="_blank">RFC 2822</a>. The&#160;example request below includes a `published_date` in RFC 2822 format.
        * Blog posts default to draft status. To publish blog posts to the storefront, set the `is_published` property to `true`.
        * If a custom URL is not provided, the post’s URL will be generated based on the value of `title`.
      operationId: createABlogPosts
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/blogPost_Base_Post'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/blogPost_Base_Res'
              example:
                id: 3
                title: Welcome to BigCommerce
                url: /blog/welcome-bigcommerce/
                preview_url: /blog/welcome-bigcommerce/
                body: '<p>Customize your site, manage shipping and payments, and list your products on Amazon, eBay, and Facebook by Meta with the #1 ecommerce platform. </p>'
                tags:
                  - BigCommerce
                  - welcome
                  - ecommerce
                summary: <p>We power ecommerce websites for successful retailers all over the world</p>
                is_published: true
                published_date:
                  date: '2018-05-18T08:26:42.000Z'
                  timezone_type: 1
                  timezone: '+00:00'
                published_date_iso8601: '2018-05-18T13:26:42.000Z'
                meta_description: Welcome Post
                meta_keywords: 'BigCommerce, welcome, ecommerce'
                author: BigCommerce
                thumbnail_path: ''
        '207':
          description: 'Multiple operations have taken place and the status for each operation can be viewed in the body of the response. Typically indicates that a partial failure has occured, such as when a `POST` or `PUT` request is successful, but saving the URL has failed.'
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - Blog Posts
      summary: Delete Blog Posts
      description: Deletes a page of `Blog Posts`.
      operationId: deleteAllBlogPosts
      parameters:
        - name: page
          in: query
          description: Filter param.
          schema:
            maximum: 250
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: number
        - name: limit
          in: query
          description: Filter param.
          schema:
            maximum: 50
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: number
      responses:
        '204':
          description: ''
          content: {}
  '/blog/posts/{id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - name: id
        in: path
        description: ID of the blog post.
        required: true
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          type: integer
    get:
      tags:
        - Blog Posts
      summary: Get a Blog Post
      description: Returns a single *Blog Post*.
      operationId: getABlogPost
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/blogPost_Full'
              example:
                id: 3
                title: Welcome to BigCommerce
                url: /blog/welcome-bigcommerce/
                preview_url: /blog/welcome-bigcommerce/
                body: '<p>Customize your site, manage shipping and payments, and list your products on Amazon, eBay, and Facebook by Meta with the #1 ecommerce platform. </p>'
                tags:
                  - BigCommerce
                  - welcome
                  - ecommerce
                summary: <p>We power ecommerce websites for successful retailers all over the world</p>
                is_published: true
                published_date:
                  date: '2018-05-18T08:26:42.000Z'
                  timezone_type: 1
                  timezone: '+00:00'
                published_date_iso8601: '2018-05-18T13:26:42.000Z'
                meta_description: Welcome Post
                meta_keywords: 'BigCommerce, welcome, ecommerce'
                author: BigCommerce
                thumbnail_path: ''
    put:
      tags:
        - Blog Posts
      summary: Update a Blog Post
      description: |-
        Updates a *Blog Post*.

        **Notes**

        * When including `published_date` in a request, supply it as a flat date string (not an object) in valid <a href="http://tools.ietf.org/html/rfc2822#section-3.3" target="_blank">RFC 2822</a>. The&#160;example request below includes a `published_date` in RFC 2822 format.

        * Blog posts default to draft status. To publish blog posts to the storefront, set the `is_published` property to `true`.
      operationId: updateABlogPost
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/blogPost_Base_Post'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/blogPost_Base_Res'
              example:
                id: 3
                title: Welcome to BigCommerce
                url: /blog/welcome-bigcommerce/
                preview_url: /blog/welcome-bigcommerce/
                body: '<p>Customize your site, manage shipping and payments, and list your products on Amazon, eBay, and Facebook by Meta with the #1 ecommerce platform. </p>'
                tags:
                  - BigCommerce
                  - welcome
                  - ecommerce
                summary: <p>We power ecommerce websites for successful retailers all over the world</p>
                is_published: true
                published_date:
                  date: '2018-05-18T08:26:42.000Z'
                  timezone_type: 1
                  timezone: '+00:00'
                published_date_iso8601: '2018-05-18T13:26:42.000Z'
                meta_description: Welcome Post
                meta_keywords: 'BigCommerce, welcome, ecommerce'
                author: BigCommerce
                thumbnail_path: ''
        '207':
          description: 'Multiple operations have taken place and the status for each operation can be viewed in the body of the response. Typically indicates that a partial failure has occurred, such as when a `POST` or `PUT` request is successful, but saving the URL has failed.'
          content:
            application/json:
              schema:
                type: object
      x-codegen-request-body-name: body
    delete:
      tags:
        - Blog Posts
      summary: Delete a Blog Post
      description: Deletes a *Blog Post*.
      operationId: deleteABlogPost
      responses:
        '204':
          description: ''
          content: {}
  '/blog/posts/count':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
        - Blog Posts
      summary: Get A Count of All Blog Posts
      description: Returns a count of all *Blog Posts*.
      operationId: getACountOfAllBlogPosts
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/count_Response'
              example:
                count: 27
  '/pages':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      deprecated: true
      tags:
        - Pages
      summary: Get All Pages
      description: | 
        Returns a list of *Pages*. Default sorting is by auto-generated ID from oldest to newest.

        > #### Warning
        > **Deprecated**
        > * This API operation is deprecated. Avoid using this API operation if possible. It will be removed in a future version.
        > * To get one or more pages, use Pages V3ʼs [Get pages](/docs/rest-content/pages#get-pages) endpoint. To get a single page, use Pages V3ʼs [Get a page](/docs/rest-content/pages#get-a-page) endpoint.
      operationId: getAllPages
      parameters:
        - name: page
          in: query
          description: Filter param.
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: number
        - name: limit
          in: query
          description: Filter param.
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/page_Full'
            Example:
              example:
                - id: 6
                  parent_id: 5
                  type: page
                  contact_fields: 'fullname,companyname,phone,orderno,rma'
                  email: janedoes@example.com
                  name: Contact Form
                  url: /contact-us/
                  meta_description: ''
                  body: We are happy to answer questions or help you with...
                  mobile_body: ''
                  feed: ''
                  link: ''
                  has_mobile_version: false
                  is_visible: true
                  is_homepage: false
                  layout_file: page.html
                  sort_order: 3
                  meta_title: ''
                  search_keywords: ''
                  meta_keywords: ''
    post:
      deprecated: true
      tags:
        - Pages
      summary: Create a Page
      description: |-
        Creates a *Page*. The request payload limit is 1MB.

        **Required Fields**
        *   `type`
        *   `name`
        *   `link` (for a page of `type: link`)
        *   `feed` (for a page of `type: rss_feed`)
        *   `body` (for a page of `type: raw`)

        **Read Only Fields**
        *   `id`

        ## Content Type

        The default value for `content_type` is `text/html`; however, if `page_type` is set to `raw`, `content_type` can be changed to `text/javascript` or `application/json`. Updating this field allows you to place a JavaScript or a JSON file in the root directory.

        > #### Warning
        > **Deprecated**
        > * This API operation is deprecated. Avoid using this API operation if possible. It will be removed in a future version.
        > * To create one or more pages, use Pages V3ʼs [Create pages](/docs/rest-content/pages#create-pages) endpoint. 
      operationId: createAPage
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/page_Base'
            examples:
              example-1:
                value:
                  parent_id: 5
                  type: page
                  contact_fields: 'fullname,companyname,phone,orderno,rma'
                  email: janedoes@example.com
                  name: Contact Form
                  url: /contact-us/
                  meta_description: string
                  body: "<p>We're happy to answer questions or help you with returns.<br />Please fill out the form below if you need assistance.</p>"
                  mobile_body: '0'
                  has_mobile_version: false
                  is_visible: true
                  is_homepage: false
                  meta_title: string
                  layout_file: page.html
                  sort_order: 3
                  search_keywords: string
                  meta_keywords: string
                  feed: string
                  link: string
                  content_type: text/html
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page_Full'
              example:
                id: 6
                parent_id: 5
                type: page
                contact_fields: 'fullname,companyname,phone,orderno,rma'
                email: janedoes@example.com
                name: Contact Form
                url: /contact-us/
                meta_description: ''
                body: "We're happy to answer questions or help you with returns.<br />Please fill out the form below if you need assistance."
                mobile_body: ''
                has_mobile_version: false
                feed: ''
                link: ''
                is_visible: true
                is_homepage: false
                layout_file: page.html
                sort_order: 3
                meta_title: ''
                search_keywords: ''
                meta_keywords: ''
        '207':
          description: 'Multiple operations have taken place and the status for each operation can be viewed in the body of the response. Typically indicates that a partial failure has occurred, such as when a `POST` or `PUT` request is successful, but saving the URL has failed.'
          content:
            application/json:
              schema:
                type: object
      x-codegen-request-body-name: body
  '/pages/{id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - name: id
        in: path
        description: ID of the page.
        required: true
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          type: integer
    get:
      deprecated: true
      tags:
        - Pages
      summary: Get A Page
      description: |
        Returns a *Page*. 

        > #### Warning
        > **Deprecated**
        > * This API operation is deprecated. Avoid using this API operation if possible. It will be removed in a future version.
        > * To get a single page, use Pages V3ʼs [Get a page](/docs/rest-content/pages#get-a-page) endpoint.
      operationId: getAPage
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page_Full'
              example:
                id: 1
                name: RSS Syndication
                meta_title: ''
                body: '%%Syndicate%%'
                is_visible: true
                parent_id: 0
                sort_order: 5
                meta_keywords: '0'
                type: page
                meta_description: ''
                is_homepage: false
                layout_file: ''
                is_customers_only: false
                search_keywords: '0'
                has_mobile_version: false
                feed: ''
                link: ''
                mobile_body: '0'
                url: /rss-syndication/
    put:
      deprecated: true
      tags:
        - Pages
      summary: Update a Page
      description: |-
        Updates a *Page*. The request payload limit is 1MB.

        **Read Only Fields**
        * id

        > #### Warning
        > **Deprecated**
        > * This API operation is deprecated. Avoid using this API operation if possible. It will be removed in a future version.
        > * To update multiple pages, use Pages V3ʼs [Update pages](/docs/rest-content/pages#update-pages) endpoint. To update a single page, use Pages V3ʼs [Update a page](/docs/rest-content/pages#update-a-page) endpoint.
      operationId: updateAPage
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/page_Base'
        required: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page_Base'
              example:
                id: 2
                name: Shipping & Returns
                meta_title: ''
                body: "<em>To edit this page simply login to the control panel, click the <strong style='font-weight: 400'>Website Content</strong> tab and choose the </em> <strong style='font-weight: 400'><em>View Web Pages option. Click Edit next to the Shipping & Returns page and you can change this text. A sample returns policy is shown below which you can edit as needed.</em><em style='font-style: normal'><br/><br/></em></strong><em style='font-style: normal'><strong>Returns Policy</strong></em><strong style='font-weight: 400'></em></em><em style='font-style: normal'><br/><br/></em>You may return most new, unopened items within 30 days of delivery for a full refund. We'll also pay the return shipping costs if the return is a result of our error (you received an incorrect or defective item, etc.).<br/><br/>You should expect to receive your refund within four weeks of giving your package to the return shipper, however, in many cases you will receive a refund more quickly. This time period includes the transit time for us to receive your return from the shipper (5 to 10 business days), the time it takes us to process your return once we receive it (3 to 5 business days), and the time it takes your bank to process our refund request (5 to 10 business days).<br/><br/>If you need to return an item, please <a href='/contact-us/'>Contact Us</a> with your order number and details about the product you would like to return. We will respond quickly with instructions for how to return items from your order.<br/><br/></strong><strong>Shipping</em></em></em></strong><strong style='font-weight: 400'><em style='font-style: normal'><br/><br/></em>We can ship to virtually any address in the world. Note that there are restrictions on some products, and some products cannot be shipped to international destinations.<br/><br/>When you place an order, we will estimate shipping and delivery dates for you based on the availability of your items and the shipping options you choose. Depending on the shipping provider you choose, shipping date estimates may appear on the shipping quotes page.<br/><br/>Please also note that the shipping rates for many items we sell are weight-based. The weight of any such item can be found on its detail page. To reflect the policies of the shipping companies we use, all weights will be rounded up to the next full pound.<br/>"
                is_visible: true
                parent_id: 0
                sort_order: 2
                meta_keywords: ''
                type: page
                meta_description: ''
                is_homepage: false
                layout_file: page.html
                is_customers_only: false
                search_keywords: ''
                has_mobile_version: false
                feed: ''
                link: ''
                mobile_body: ''
                url: /shipping-returns/
        '207':
          description: 'Multiple operations have taken place and the status for each operation can be viewed in the body of the response. Typically indicates that a partial failure has occurred, such as when a `POST` or `PUT` request is successful, but saving the URL has failed.'
          content:
            application/json:
              schema:
                type: object
      x-codegen-request-body-name: body
    delete:
      deprecated: true
      tags:
        - Pages
      summary: Delete a Page
      description: |
        Deletes a *Page*.

        > #### Warning
        > **Deprecated**
        > * This API operation is deprecated. Avoid using this API operation if possible. It will be removed in a future version.
        > * To delete multiple pages, use Pages V3ʼs [Delete pages](/docs/rest-content/pages#delete-pages) endpoint. To delete a single page, use Pages V3ʼs [Delete a page](/docs/rest-content/pages#delete-a-page) endpoint. 
      operationId: deleteAPage
      responses:
        '204':
          description: ''
          content: {}
  '/redirects':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      deprecated: true
      tags:
        - Redirects
      summary: Get All Redirects
      description: |-
        Returns a list all *Redirect URLs*. 

        > #### Warning
        > **Deprecated**
        > * This API operation is deprecated. Avoid using this API operation if possible. It will be removed in a future version.
        > * To get redirect URLs, use Redirects V3ʼs [Get redirects](/docs/rest-management/redirects#get-redirects) endpoint.
      operationId: getAListofRedirects
      parameters:
        - name: page
          in: query
          description: Filter param.
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: integer
        - name: limit
          in: query
          description: Filter param.
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/redirect'
            Response Schema:
              example: ''
    post:
      tags:
        - Redirects
      summary: Create a Redirect
      description: |-
        Creates a *Redirect URL*.

        **Required Fields**
        *   path
        *   forward

        **Read Only**
        *   url


        > #### Warning
        > **Deprecated**
        > * This API operation is deprecated. Avoid using this API operation if possible. It will be removed in a future version.
        > * To upsert new redirect data, use Redirects V3ʼs [Upsert redirects](/docs/rest-management/redirects#upsert-redirects) endpoint.
      operationId: createARedirect
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/redirect'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/redirect'
              example:
                id: 3
                path: /mens_clothing
                forward:
                  type: category
                  ref: 3
                url: 'http://store.example.com/mens'
      x-codegen-request-body-name: body
    delete:
      deprecated: true
      tags:
        - Redirects
      summary: Delete All Redirects
      description: |-
        By default, it deletes all *Redirect URLs* in a store. 


        > #### Warning
        > **Deprecated**
        > * This API operation is deprecated. Avoid using this API operation if possible. It will be removed in a future version.
        > * To delete redirect URLs, use Redirects V3ʼs [Delete redirects](/docs/rest-management/redirects#delete-redirects) endpoint.
      operationId: deleteAllRedirects
      responses:
        '204':
          description: ''
          content: {}
  '/redirects/{id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - name: id
        in: path
        description: ID of the redirect URL.
        required: true
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          type: integer
    get:
      deprecated: true
      tags:
        - Redirects
      summary: Get a Redirect
      description: |-
        Returns a single *Redirect URL*.

        > #### Warning
        > **Deprecated** 
        > * This API operation is deprecated. Avoid using this API operation if possible. It will be removed in a future version.
        > * To get a redirect URL, use Redirects V3ʼs [Get redirects](/docs/rest-management/redirects#get-redirects) endpoint.
      operationId: getARedirectURL
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/redirect'
              example:
                id: 1
                path: /smith-journal-13/
                forward:
                  type: product
                  ref: 111
                url: 'http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/'
    put:
      tags:
        - Redirects
      summary: Update a Redirect
      description: |-
        Updates a *Redirect URL*.

        **Required Fields**
        *   path
        *   forward

        **Read Only Fields**
        *   url


        > #### Warning
        > **Deprecated**
        > * This API operation is deprecated. Avoid using this API operation if possible. It will be removed in a future version.
        > * To update redirect data, use Redirects V3ʼs [Upsert redirects](/docs/rest-management/redirects#upsert-redirects) endpoint.
      operationId: updateARedirectURL
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Redirect
              required:
                - forward
                - path
              type: object
              properties:
                id:
                  type: integer
                  description: Numeric ID of the redirect.
                  example: 1
                path:
                  type: string
                  description: The path from which to redirect.
                  example: /smith-journal-13/
                forward:
                  type: object
                  properties:
                    type:
                      type: string
                      description: |
                        The type of redirect. If it is a manual redirect then type will always be manual. Dynamic redirects will have the type of the page. Such as product or category.
                      example: product
                    ref:
                      type: string
                      description: Reference of the redirect. Dynamic redirects will have the category or product number. Manual redirects will have the url that is being directed to.
                      example: '111'
                url:
                  type: string
                  description: URL of the redirect. READ-ONLY
                  example: 'http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/'
              example:
                id: 1
                path: /smith-journal-13/
                forward:
                  type: product
                  ref: '111'
                url: 'http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/redirect'
              example:
                id: 1
                path: /smith-journal-13/
                forward:
                  type: product
                  ref: 111
                url: 'http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/'
      x-codegen-request-body-name: body
    delete:
      tags:
        - Redirects
      summary: Delete a Redirect
      description: |-
        Deletes a *Redirect URL*.

        > #### Warning
        > **Deprecated** 
        > * This API operation is deprecated. Avoid using this API operation if possible. It will be removed in a future version.
        > * To delete a redirect URL, use Redirects V3ʼs [Delete redirects](/docs/rest-management/redirects#delete-redirects) endpoint.
      operationId: deleteARedirect
      responses:
        '204':
          description: ''
          content: {}
  '/redirects/count':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      deprecated: true
      tags:
        - Redirects
      summary: Get a Count of Redirects
      description: |-
        Gets a count of *Redirect URLs* in a store.

        > #### Warning
        > **Deprecated**
        > * This API operation is deprecated. Avoid using this API operation if possible. It will be removed in a future version.
        > * To get a count of redirects, use the `meta` object data returned with the Redirects V3ʼs [Get redirects](/docs/rest-management/redirects#get-redirects) endpoint.
      operationId: getACountOfRedirects
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/count_Response'
              example:
                count: 27
components:
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
  schemas:
    blogPost_Full:
      title: blogPost_Full
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: ID of this blog post. (READ-ONLY)
              example: 3
        - $ref: '#/components/schemas/blogPost_Base_Res'
      x-internal: false
      x-examples:
        example-1:
          id: 3
          title: Welcome to BigCommerce
          url: /blog/welcome-bigcommerce/
          preview_url: /blog/welcome-bigcommerce/
          body: '<p>Customize your site, manage shipping and payments, and list your products on Amazon, eBay, and Facebook by Meta with the #1 ecommerce platform. </p>'
          tags:
            - string
          summary: <p>We power ecommerce websites for successful retailers all over the world</p>
          is_published: true
          published_date:
            timezone_type: '1'
            date: '2018-05-18T08:26:42Z'
            timezone: '+00:00'
          published_date_iso8601: '5/18/2018 1:26:42 PM'
          meta_description: Welcome Post
          meta_keywords: 'BigCommerce, welcome, ecommerce'
          author: BigCommerce
          thumbnail_path: string
    addresses:
      title: addresses
      type: object
      properties:
        url:
          type: string
          description: Full URL of where the resource is located.
          example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/customers/5/addresses'
        resource:
          type: string
          description: Resource being accessed.
          example: /customers/5/addresses
      x-internal: false
    formField:
      title: formField
      type: object
      properties:
        name:
          type: string
          description: Name of the form field
          example: License Id
        value:
          type: string
          description: Value of the form field
          example: 123BAF
      x-internal: false
    page_Full:
      title: page_Full
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: ID of the page.
              example: 44
        - $ref: '#/components/schemas/page_Base_Res'
      x-internal: false
    redirect:
      title: redirect
      required:
        - forward
        - path
      type: object
      properties:
        id:
          type: integer
          description: Numeric ID of the redirect.
          example: 1
        path:
          type: string
          description: The path from which to redirect.
          example: /smith-journal-13/
        forward:
          $ref: '#/components/schemas/forward'
        url:
          type: string
          description: URL of the redirect. READ-ONLY
          example: 'http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/'
      example:
        id: 1
        path: /smith-journal-13/
        forward:
          type: product
          ref: 111
        url: 'http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/'
      x-internal: false
    forward:
      title: forward
      type: object
      x-internal: false
      properties:
        type:
          type: string
          description: The type of redirect. If it is a `manual` redirect then type will always be manual. Dynamic redirects will have the type of the page. Such as product or category.
          example: product
        ref:
          type: integer
          description: Reference of the redirect. Dynamic redirects will have the category or product number. Manual redirects will have the url that is being directed to.
          example: 111
    customer_Full:
      title: customer_Full
      required:
        - email
        - first_name
        - last_name
      type: object
      properties:
        id:
          type: integer
          description: Unique numeric ID of this customer. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.
          example: 1
        _authentication:
          type: object
          properties:
            force_reset:
              type: string
            password:
              type: string
            password_confirmation:
              type: string
          description: 'Not returned in any responses, but accepts up to two fields allowing you to set the customer’s password. If a password is not supplied, it is generated automatically. For further information about using this object, please see the Customers resource documentation.'
        company:
          type: string
          description: The name of the company for which the customer works.
          example: BigCommerce
        first_name:
          type: string
          description: First name of the customer.
          example: Jane
        last_name:
          type: string
          description: Last name of the customer.
          example: Doe
        email:
          type: string
          description: Email address of the customer.
          example: janedoe@example.com
        phone:
          type: string
          description: Phone number of the customer.
          example: '1234567890'
        date_created:
          type: string
          description: Date on which the customer registered from the storefront or was created in the control panel. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.
          format: date-time
        date_modified:
          type: string
          description: |
            Date on which the customer updated their details in the storefront or was updated in the control panel. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.
          format: date-time
        store_credit:
          type: string
          description: 'The amount of credit the customer has. (Float, Float as String, Integer)'
          example: '0'
        registration_ip_address:
          type: string
          description: The customer’s IP address when they signed up.
          example: 12.345.678.910
        customer_group_id:
          type: integer
          description: The group to which the customer belongs.
          example: 2
        notes:
          type: string
          description: Store-owner notes on the customer.
        tax_exempt_category:
          type: string
          description: If applicable, the tax-exempt category of the shopperʼs customer account. You can apply a tax-exempt category to multiple customers. This code should match the exemption codes provided by the third-party integration.
        accepts_marketing:
          type: boolean
          description: |
            Records whether the customer would like to receive marketing content from this store. READ-ONLY.This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.
          example: true
        addresses:
          $ref: '#/components/schemas/addresses'
        form_fields:
          type: array
          description: Array of custom fields. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.
          items:
            $ref: '#/components/schemas/formField'
        reset_pass_on_login:
          type: boolean
          description: Force a password change on next login.
          example: false
      x-internal: false
    categoryAccessLevel:
      title: categoryAccessLevel
      type: object
      properties:
        type:
          type: string
          description: |-
            + `all` - Customers can access all categories
             + `specific`  - Customers can access a specific list of categories
            + `none` - Customers are prevented from viewing any of the categories in this group.
          enum:
            - all
            - specific
            - none
        categories:
          type: array
          description: Is an array of category IDs and should be supplied only if `type` is specific.
          example:
            - '18,19,23,34'
          items:
            type: string
      x-internal: false
    timeZone:
      title: timeZone
      type: object
      properties:
        name:
          type: string
          description: 'A string identifying the time zone, in the format: <Continent-name>/<City-name>.'
          example: America/Chicago
        raw_offset:
          type: integer
          description: 'A negative or positive number, identifying the offset from UTC/GMT, in seconds, during winter/standard time.'
          example: -21600
        dst_offset:
          type: integer
          description: 'A negative or positive number, identifying the offset from UTC/GMT, in seconds, during summer/daylight saving time.'
          example: -18000
        dst_correction:
          type: boolean
          description: A boolean indicating whether this time zone observes daylight saving time.
          example: true
        date_format:
          $ref: '#/components/schemas/dateFormat'
      x-internal: false
    count_Response:
      title: count_Response
      type: object
      properties:
        count:
          type: number
          description: ''
          example: 27
      example:
        count: 27
      x-internal: false
    dateFormat:
      title: dateFormat
      type: object
      properties:
        display:
          type: string
          description: 'A string that defines dates’ display formats, in the pattern: M jS Y'
          example: M jS Y
        export:
          type: string
          description: 'A string that defines the CSV export format for orders, customers, and products, in the pattern: M jS Y'
          example: M jS Y
        extended_display:
          type: string
          description: 'A string that defines dates’ extended-display format, in the pattern: M jS Y @ g:i A.'
          example: 'M jS Y @ g:i A'
      x-internal: false
    blogTags:
      title: blogTags
      type: array
      items:
        type: object
        properties:
          tag:
            type: string
            example: Blog
          post_ids:
            type: array
            example:
              - 1
              - 2
              - 4
            items:
              type: integer
      x-internal: false
    blogPost_Base_Post:
      title: blogPost_Base_Post
      type: object
      x-internal: false
      x-examples:
        example-1:
          title: Welcome to BigCommerce
          url: /blog/welcome-bigcommerce/
          preview_url: /blog/welcome-bigcommerce/
          body: '<p>Customize your site, manage shipping and payments, and list your products on Amazon, eBay, and Facebook by Meta with the #1 ecommerce platform. </p>'
          tags:
            - string
          summary: <p>We power ecommerce websites for successful retailers all over the world</p>
          is_published: true
          published_date:
            timezone_type: '1'
            date: '2018-05-18T08:26:42Z'
            timezone: '+00:00'
          published_date_iso8601: '5/18/2018 1:26:42 PM'
          meta_description: Welcome Post
          meta_keywords: 'BigCommerce, welcome, ecommerce'
          author: BigCommerce
          thumbnail_path: string
      description: blogPost base for POST requests
      properties:
        title:
          type: string
          description: Title of this blog post.
          example: Welcome to BigCommerce
        url:
          type: string
          description: URL for the public blog post.
          example: /blog/welcome-bigcommerce/
        body:
          type: string
          description: Text body of the blog post.
          example: '<p>Customize your site, manage shipping and payments, and list your products on Amazon, eBay, and Facebook by Meta with the #1 ecommerce platform. </p>'
        tags:
          type: array
          description: Tags to characterize the blog post.
          items:
            type: string
        is_published:
          type: boolean
          description: Whether the blog post is published.
          example: true
        meta_description:
          type: string
          description: Description text for this blog post’s `<meta/>` element.
          example: Welcome Post
        meta_keywords:
          type: string
          description: Keywords for this blog post’s `<meta/>` element.
          example: 'BigCommerce, welcome, ecommerce'
        author:
          type: string
          description: Name of the blog post’s author.
          example: BigCommerce
        thumbnail_path:
          type: string
          description: 'Local path to a thumbnail uploaded to `/product_images/` via [WebDav](https://support.bigcommerce.com/s/article/File-Access-WebDAV).'
        published_date:
          type: string
          example: 'Wed, 10 Aug 2022 15:39:15 -0500'
      required:
        - title
        - body
    blogPost_Base:
      title: blogPost_Base
      type: object
      x-internal: false
      x-examples:
        example-1:
          title: Welcome to BigCommerce
          url: /blog/welcome-bigcommerce/
          preview_url: /blog/welcome-bigcommerce/
          body: '<p>Customize your site, manage shipping and payments, and list your products on Amazon, eBay, and Facebook by Meta with the #1 ecommerce platform. </p>'
          tags:
            - string
          summary: <p>We power ecommerce websites for successful retailers all over the world</p>
          is_published: true
          published_date:
            timezone_type: '1'
            date: '2018-05-18T08:26:42Z'
            timezone: '+00:00'
          published_date_iso8601: '5/18/2018 1:26:42 PM'
          meta_description: Welcome Post
          meta_keywords: 'BigCommerce, welcome, ecommerce'
          author: BigCommerce
          thumbnail_path: string
      properties:
        title:
          type: string
          description: Title of this blog post.
          example: Welcome to BigCommerce
        url:
          type: string
          description: URL for the public blog post.
          example: /blog/welcome-bigcommerce/
        preview_url:
          type: string
          description: URL to preview the blog post. (READ-ONLY)
          example: /blog/welcome-bigcommerce/
        body:
          type: string
          description: Text body of the blog post.
          example: '<p>Customize your site, manage shipping and payments, and list your products on Amazon, eBay, and Facebook by Meta with the #1 ecommerce platform. </p>'
        tags:
          type: array
          description: Tags to characterize the blog post.
          items:
            type: string
        summary:
          type: string
          description: Summary of the blog post. (READ-ONLY)
          example: <p>We power ecommerce websites for successful retailers all over the world</p>
        is_published:
          type: boolean
          description: Whether the blog post is published.
          example: true
        published_date:
          $ref: '#/components/schemas/publishedDate'
        published_date_iso8601:
          type: string
          description: Published date in `ISO 8601` format.
          example: '5/18/2018 1:26:42 PM'
        meta_description:
          type: string
          description: Description text for this blog post’s `<meta/>` element.
          example: Welcome Post
        meta_keywords:
          type: string
          description: Keywords for this blog post’s `<meta/>` element.
          example: 'BigCommerce, welcome, ecommerce'
        author:
          type: string
          description: Name of the blog post’s author.
          example: BigCommerce
        thumbnail_path:
          type: string
          description: 'Local path to a thumbnail uploaded to `/product_images/` via [WebDav](https://support.bigcommerce.com/s/article/File-Access-WebDAV).'
      required:
        - title
        - body
    blogPost_Base_Res:
      title: blogPost_Base_Res
      type: object
      x-internal: false
      x-examples: {}
      description: blog post base response
      properties:
        title:
          type: string
          description: Title of this blog post.
          example: Welcome to BigCommerce
        url:
          type: string
          description: URL for the public blog post.
          example: /blog/welcome-bigcommerce/
        preview_url:
          type: string
          description: URL to preview the blog post. (READ-ONLY)
          example: /blog/welcome-bigcommerce/
        body:
          type: string
          description: Text body of the blog post.
          example: '<p>Customize your site, manage shipping and payments, and list your products on Amazon, eBay, and Facebook by Meta with the #1 ecommerce platform. </p>'
        tags:
          type: array
          description: Tags to characterize the blog post.
          items:
            type: string
        summary:
          type: string
          description: Summary of the blog post. (READ-ONLY)
          example: <p>We power ecommerce websites for successful retailers all over the world</p>
        is_published:
          type: boolean
          description: Whether the blog post is published.
          example: true
        published_date:
          $ref: '#/components/schemas/publishedDate'
        published_date_iso8601:
          type: string
          description: Published date in `ISO 8601` format.
          example: '5/18/2018 1:26:42 PM'
        meta_description:
          type: string
          description: Description text for this blog post’s `<meta/>` element.
          example: Welcome Post
          nullable: true
        meta_keywords:
          type: string
          description: Keywords for this blog post’s `<meta/>` element.
          example: 'BigCommerce, welcome, ecommerce'
          nullable: true
        author:
          type: string
          description: Name of the blog post’s author.
          example: BigCommerce
          nullable: true
        thumbnail_path:
          type: string
          description: 'Local path to a thumbnail uploaded to `/product_images/` via [WebDav](https://support.bigcommerce.com/s/article/File-Access-WebDAV).'
          nullable: true
    publishedDate:
      type: object
      x-internal: false
      properties:
        timezone_type:
          type: integer
          example: 1
        date:
          type: string
          format: date-time
          example: '2022-08-10 14:39:15.000000'
        timezone:
          type: string
          example: '+00:00'
    authentication:
      type: object
      properties:
        force_reset:
          type: string
        password:
          type: string
        password_confirmation:
          type: string
      description: 'Not returned in any responses, but accepts up to two fields allowing you to set the customer’s password. If a password is not supplied, it is generated automatically. For further information about using this object, please see the Customers resource documentation.'
      x-internal: false
    customer_Base:
      title: customer_Base
      type: object
      x-internal: false
    page_Base:
      title: page_Base
      type: object
      x-internal: false
      properties:
        parent_id:
          type: integer
          description: ID of any parent Web page.
          example: 5
        type:
          type: string
          description: "`page`: free-text page  \n`link`: link to another web address  \n`rss_feed`: syndicated content from an RSS feed  \n`contact_form`: When the store's contact form is used.\n\n\t"
          enum:
            - page
            - rss_feed
            - contact_form
            - raw
            - link
        contact_fields:
          type: string
          description: 'Where the page’s type is a contact form: object whose members are the fields enabled (in the control panel) for storefront display. Possible members are:`fullname`: full name of the customer submitting the form; `phone`: customer’s phone number, as submitted on the form; `companyname`: customer’s submitted company name; `orderno`: customer’s submitted order number; `rma`: customer’s submitted RMA (Return Merchandise Authorization) number.'
          example: 'fullname,companyname,phone,orderno,rma'
        email:
          type: string
          description: 'Where the page’s type is a contact form: email address that receives messages sent via the form.'
          example: janedoes@example.com
        name:
          type: string
          description: 'Page name, as displayed on the storefront.'
          example: Contact Form
        url:
          type: string
          description: Relative URL on the storefront for this page.
          example: /contact-us/
        meta_description:
          type: string
          description: Description contained within this page’s `<meta/>` element.
        body:
          type: string
          description: 'HTML or variable that populates this page’s `<body>` element, in default/desktop view. Required in POST if page type is `raw`.'
          example: "<p>We're happy to answer questions or help you with returns.<br />Please fill out the form below if you need assistance.</p>"
        mobile_body:
          type: string
          description: HTML to use for this page's body when viewed in the mobile template (deprecated).
          example: '0'
        has_mobile_version:
          type: boolean
          description: 'If true, this page has a mobile version.'
          example: false
        is_visible:
          type: boolean
          description: 'If true, this page appears in the storefront’s navigation menu.'
          example: true
        is_homepage:
          type: boolean
          description: 'If true, this page is the storefront’s home page.'
          example: false
        meta_title:
          type: string
          description: 'Text specified for this page’s `<title>` element. (If empty, the value of the name property is used.)'
        layout_file:
          type: string
          description: Layout template for this page. This field is writable only for stores with a Blueprint theme applied.
          example: page.html
        sort_order:
          type: integer
          description: Order in which this page should display on the storefront. (Lower integers specify earlier display.)
          example: 3
        search_keywords:
          type: string
          description: Comma-separated list of keywords that shoppers can use to locate this page when searching the store.
        meta_keywords:
          type: string
          description: Comma-separated list of SEO-relevant keywords to include in the page’s `<meta/>` element.
        feed:
          type: string
          description: If page type is `rss_feed` then this field is visible. Required in POST required for `rss page` type.
        link:
          type: string
          description: If page type is `link` this field is returned. Required in  POST to create a `link` page.
        content_type:
          type: string
          example: text/html
          enum:
            - application/json
            - text/javascript
            - text/html
      required:
        - type
        - name
        - body
    page_Base_Res:
      title: page_Base_Res
      type: object
      x-internal: false
      properties:
        parent_id:
          type: integer
          description: ID of any parent Web page.
          example: 5
        type:
          type: string
          description: "`page`: free-text page  \n`link`: link to another web address  \n`rss_feed`: syndicated content from an RSS feed  \n`contact_form`: When the store's contact form is used.\n\n\t"
          enum:
            - page
            - rss_feed
            - contact_form
            - raw
            - link
        contact_fields:
          type: string
          description: 'Where the page’s type is a contact form: object whose members are the fields enabled (in the control panel) for storefront display. Possible members are:`fullname`: full name of the customer submitting the form; `phone`: customer’s phone number, as submitted on the form; `companyname`: customer’s submitted company name; `orderno`: customer’s submitted order number; `rma`: customer’s submitted RMA (Return Merchandise Authorization) number.'
          example: 'fullname,companyname,phone,orderno,rma'
        email:
          type: string
          description: 'Where the page’s type is a contact form: email address that receives messages sent via the form.'
          example: janedoes@example.com
        name:
          type: string
          description: 'Page name, as displayed on the storefront.'
          example: Contact Form
        url:
          type: string
          description: Relative URL on the storefront for this page.
          example: /contact-us/
        meta_description:
          type: string
          description: Description contained within this page’s `<meta/>` element.
        body:
          type: string
          description: 'HTML or variable that populates this page’s `<body>` element, in default/desktop view. Required in POST if page type is `raw`.'
          example: "<p>We're happy to answer questions or help you with returns.<br />Please fill out the form below if you need assistance.</p>"
        mobile_body:
          type: string
          description: HTML to use for this page's body when viewed in the mobile template (deprecated).
          example: '0'
        has_mobile_version:
          type: boolean
          description: 'If true, this page has a mobile version.'
          example: false
        is_visible:
          type: boolean
          description: 'If true, this page appears in the storefront’s navigation menu.'
          example: true
        is_homepage:
          type: boolean
          description: 'If true, this page is the storefront’s home page.'
          example: false
        meta_title:
          type: string
          description: 'Text specified for this page’s `<title>` element. (If empty, the value of the name property is used.)'
        layout_file:
          type: string
          description: Layout template for this page. This field is writable only for stores with a Blueprint theme applied.
          example: page.html
        sort_order:
          type: integer
          description: Order in which this page should display on the storefront. (Lower integers specify earlier display.)
          example: 3
        search_keywords:
          type: string
          description: Comma-separated list of keywords that shoppers can use to locate this page when searching the store.
        meta_keywords:
          type: string
          description: Comma-separated list of SEO-relevant keywords to include in the page’s `<meta/>` element.
        feed:
          type: string
          description: If page type is `rss_feed` then this field is visible.
        link:
          type: string
          description: If page type is `link` this field is returned.
        content_type:
          type: string
          example: text/html
          enum:
            - application/json
            - text/javascript
            - text/html
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Content | modify | `store_v2_content` |
        |  Content | read-only | `store_v2_content_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header

openapi: '3.0.0'
info:
  version: ''
  title: Store Information
  description: Get Store Information endpoint, manage store profile settings.
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
paths:
  '/store':
    get:
      description: Returns metadata about a store.
      summary: Get Store Information
      tags:
        - Store Information
      parameters:
        - name: Accept
          in: header
          required: true
          description: ''
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          description: ''
          schema:
            type: string
            default: application/json
      responses:
        '200':
          description: ''
          content:
            Time:
              schema:
                $ref: '#/components/schemas/StoreInformation'
            application/json:
              examples:
                response:
                  value:
                    id: abc123
                    domain: my-awesome.store
                    secure_url: 'https://my-awesome.stor'
                    control_panel_base_url: 'https://store-{store_hash}.mybigcommerce.com'
                    status: live
                    name: BigCommerce
                    first_name: Jane
                    last_name: Doe
                    address: BigCommerce
                    country: United States
                    country_code: US
                    phone: ''
                    admin_email: jane.does@example.com
                    order_email: info@janedoes.mybigcommerce.com
                    favicon_url: 'https://cdn8.bigcommerce.com/r-8816ba2f48b0bcf4bec0c1a954c00e0fc36b/img/bc_favicon.ico'
                    timezone:
                      name: America/Chicago
                      raw_offset: -21600
                      dst_offset: -18000
                      dst_correction: true
                      date_format:
                        display: M jS Y
                        export: M jS Y
                        extended_display: 'M jS Y @ g:i A'
                    language: en
                    currency: USD
                    currency_symbol: $
                    decimal_separator: .
                    thousands_separator: ','
                    decimal_places: 2
                    currency_symbol_location: left
                    weight_units: Ounces
                    dimension_units: Inches
                    dimension_decimal_places: 2
                    dimension_decimal_token: .
                    dimension_thousands_token: ','
                    plan_name: Standard
                    plan_level: Standard
                    industry: ''
                    logo:
                      url: 'https://cdn8.bigcommerce.com/s-{store_hash}/product_images/screen_shot_2018-05-15_at_12.22.26_pm__05547_1529512135.png'
                    is_price_entered_with_tax: false
                    active_comparison_modules: []
                    features:
                      stencil_enabled: true
                      sitewidehttps_enabled: false
                      facebook_catalog_id: ''
                      checkout_type: optimized
            Response Schema:
              examples:
                response:
                  value:
                    id: nostrud pariatur incididunt
                    domain: consequat ut amet
                    secure_URL: consectetur ullamco ut Excepteur
                    name: id qui cupidatat anim tempor
                    first_name: ut dolore elit
                    last_name: cupidatat minim
                    address: tempor
                    country: ex cupidatat
                    phone: aliquip dolore pariatur
                    admin_email: dolor commodo elit do
                    order_email: ea qui
                    timezone:
                      name: 'Australia/Sydney'
                      raw_offset: 39600
                      dst_offset: 36000
                      dst_correction: true
                      date_format:
                        display: cupidatat
                        export: est
                        extended_display: cillum qui esse aliquip culpa
                    language: nulla commodo incididunt dolor ipsum
                    currency: amet in
                    currency_symbol: cupidatat deserunt est pariatur
                    decimal_separator: in consectetur nisi officia
                    thousands_separator: ea irure occaecat qui
                    decimal_places: {}
                    currency_symbol_location: est cupidatat
                    weight_units: minim adipisicing do
                    dimension_units: deserunt
                    dimension_decimal_places: 50514826
                    dimension_decimal_token: deserunt est aliqua Duis
                    'dimension_thousands_token:': sint voluptate esse tempor
                    plan_name: Ut
                    plan_level: pariatur ullamco veniam ad
                    industry: pariatur culpa est
                    logo:
                      url: aliquip in aliqua consectetur ullamco
                    is_price_entered_with_tax: false
                    features:
                      stencil_enabled: true
                      sitewidehttps_enabled: anim occaecat exercitation conse
                      facebook_catalog_id: aliquip sed adipisicing quis
                      checkout_type: qui mollit id aliqua ut
  '/time':
    get:
      description: Returns the system timestamp at the time of the request. The time resource is useful for validating API authentication details and testing client connections.
      summary: Get System Timestamp
      parameters:
        - name: Accept
          in: header
          required: true
          description: ''
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          description: ''
          schema:
            type: string
            default: application/json
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timeStamp_Full'
              examples:
                response:
                  value:
                    time: 1529512970
      tags:
        - Time Zone
tags:
  - name: Store Information
  - name: Time Zone
security:
  - X-Auth-Token: []

servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v2'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
components:
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Information & Settings | modify | `store_v2_information` |
        |  Information & Settings | read-only | `store_v2_information_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header
  schemas:
    StoreInformation:
      title: Store Information
      type: object
      x-tags:
        - Models
      properties:
        id:
          description: Unique store identifier.
          example: store_hash
          type: string
        domain:
          description: Primary domain name.
          example: your-store-url.com
          type: string
        secure_url:
          description: Store’s current HTTPS URL.
          example: 'https://your-store-url.com'
          type: string
        control_panel_base_url:
          type: string
          example: '"https://store-abc123.mybigcommerce.com"'
          description: The secure hostname of the control panel.
        name:
          description: Store's name.
          example: BigCommerce
          type: string
        first_name:
          description: Primary contact’s first name (as defined during the store sign-up process).
          example: Jane
          type: string
        last_name:
          description: Primary contact’s last name (as defined during the store sign-up process).
          example: Doe
          type: string
        address:
          description: Display address.
          example: BigCommerce
          type: string
        country:
          description: Country where the store is located (as defined during the store sign-up process).
          example: United States
          type: string
        phone:
          description: Display phone number.
          type: string
        admin_email:
          description: Email address of the store administrator/owner.
          example: janedoes@example.com
          type: string
        order_email:
          description: Email address for orders and fulfillment.
          example: orders@emai
          type: string
        timezone:
          $ref: '#/components/schemas/Timezone'
        language:
          description: Default language code.
          example: en
          type: string
        currency:
          description: Default currency code
          example: USD
          type: string
        currency_symbol:
          description: Default symbol for values in the currency.
          example: $
          type: string
        decimal_separator:
          description: Default decimal separator for values in the currency.
          example: .
          type: string
        thousands_separator:
          description: Default thousands separator for values in the currency.
          example: ','
          type: string
        decimal_places:
          description: Default decimal places for values in the currency.
          example: 2
          type: integer
        currency_symbol_location:
          description: Default position of the currency symbol (left or right).
          example: left
          type: string
        weight_units:
          description: Default weight units (metric or imperial).
          example: Ounces
          type: string
        dimension_units:
          description: Default dimension units (metric or imperial).
          example: Inches
          type: string
        dimension_decimal_places:
          description: The number of decimal places.
          example: 2
          type: integer
        dimension_decimal_token:
          description: The symbol that separates the whole numbers from the decimal points.
          example: .
          type: string
        'dimension_thousands_token:':
          description: The symbol used to denote thousands.
          type: string
        plan_name:
          description: Name of the BigCommerce plan to which this store is subscribed.
          example: Standard
          type: string
        plan_level:
          description: Level of the BigCommerce plan to which this store is subscribed.
          example: Standard
          type: string
        industry:
          description: 'Industry, or vertical category, in which the business operates. (As selected from drop-down list during the store sign-up process.)'
          example: Technology
          type: string
        logo:
          type: object
          properties:
            url:
              type: string
              example: 'https://cdn8.bigcommerce.com/s-{store_hash}/product_images/screen_shot_2018-05-15_at_12.22.26_pm__05547_1529512135.png"'
        is_price_entered_with_tax:
          description: A Boolean value that indicates whether or not prices are entered with tax.
          example: false
          type: boolean
        active_comparison_modules:
          description: ''
          type: array
          items: {}
        features:
          description: |-
            + `stencil_enabled`: `true` (boolean)
            + `sitewidehttps_enabled`: `false` (boolean)
            + `facebook_catalog_id` (string)
          type: object
          properties:
            checkout_type:
              type: string
              example: optimized
              description: 'What type of checkout is enabled on the store. Possible values returned are optimized, single (one page), single_customizable (one page for developers), klarna.'
            facebook_catalog_id:
              type: string
              description: 'Id of the facebook by meta catalog. If there is none, it returns an empty string.'
            graphql_storefront_api_enabled:
              type: boolean
            stencil_enabled:
              type: boolean
              example: true
              description: Indicates whether a store is using a Stencil theme.
            sitewidehttps_enabled:
              type: boolean
              example: false
              description: Indicates if there is sitewide https.
            multi_storefront_enabled:
              type: boolean
              description: |-
                Indicates whether MSF feature flag is enabled on a store.

                Returns `true` when MSF feature flag is enabled.
                Returns `false` when MSF feature flag is disabled.
            shopper_consent_tracking_enabled:
              type: boolean
            wishlists_enabled:
              type: boolean
        account_uuid:
          type: string
        default_channel_id:
          type: integer
        default_site_id:
          type: integer
        plan_is_trial:
          type: boolean
        store_id:
          type: integer
        status:
          type: string
          example: live
    Timezone:
      title: Time Zone
      type: object
      properties:
        name:
          description: 'a string identifying the time zone, in the format: /.'
          example: America/Chicago
          type: string
        raw_offset:
          description: 'A negative or positive number, identifying the offset from UTC/GMT, in seconds, during winter/standard time.'
          example: -21600
          type: integer
        dst_offset:
          description: 'A negative or positive number, identifying the offset from UTC/GMT, in seconds, during summer/daylight saving time.'
          example: -18000
          type: integer
        dst_correction:
          description: A boolean indicating whether this time zone observes daylight saving time.
          example: true
          type: boolean
        date_format:
          $ref: '#/components/schemas/DateFormat'
      x-internal: false
    DateFormat:
      title: Date Format
      type: object
      properties:
        display:
          description: 'string that defines dates’ display format, in the pattern: M jS Y'
          example: M jS Y
          type: string
        export:
          description: 'string that defines the CSV export format for orders, customers, and products, in the pattern: M jS Y'
          example: M jS Y
          type: string
        extended_display:
          description: 'string that defines dates’ extended-display format, in the pattern: M jS Y @ g:i A.'
          example: 'M jS Y @ g:i A'
          type: string
      x-internal: false
    timeStamp_Full:
      type: object
      properties:
        time:
          type: integer
          format: int64
          minimum: 0
      description: Store Time in Unix format.
      title: timeStamp_Full
      x-internal: false

openapi: '3.0.0'
info:
  title: Store Logs V3 API
  version: ''
  description: This API can be used to retrieve and filter for specific store logs.
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
paths:
  '/store/systemlogs':
    get:
      summary: Get System Logs
      description: 'Get system logs '
      tags:
        - System Logs
      operationId: get-sites
      responses:
        '200':
          description: The request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SystemLog'
                  meta:
                    $ref: '#/components/schemas/IndexMeta'
      parameters:
        - schema:
            type: integer
            default: 50
          in: query
          name: limit
          description: Query parameter that lets you return the number of results displayed per page.
        - schema:
            type: integer
            default: 1
          in: query
          name: page
          description: Query parameter that lets you specify the starting page in which results are returned.
        - schema:
            type: string
            enum: 
              - general
              - payment
              - shipping
              - tax
              - notification
              - emailintegration
              - ordersettings
              - design
          in: query
          name: type
          description: Query parameter that lets you filter the results by log type.
        - schema:
            type: string
          in: query
          name: 'type:not'
          description: Query parameter that lets you exclude a log type from the results.
        - schema:
            type: string
            enum:
              - export+only
              - email+message
              - theme+download
              - order+status
              - optimized+checkout
          in: query
          name: module
          description: Query parameter that lets you filter the results by module.
        - schema:
            type: string
          in: query
          name: 'module:not'
          description: Query parameter that lets you exclude a log module from the results.
        - schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
          in: query
          name: severity
          description: 'Query parameter that lets you filter results by severity level, as an integer. The following values are possible: Success = 1, Notice = 2, Warning = 3, Error = 4'
        - schema:
            type: integer
          in: query
          name: 'severity:min'
          description: 'Query parameter that lets you filter by minimum severity, as an integer.'
        - schema:
            type: integer
          in: query
          name: 'severity:max'
          description: 'Query parameter that lets you filter by maximum severity, as an integer.'
        - schema:
            type: string
          in: query
          name: 'id:in'
          description: 'Query parameter that lets you filter by a list of log IDs, as a CSV. For example ?id:in=3,4,6'
    parameters: []
components:
  schemas:
    IndexMeta:
      type: object
      description: BigCommerce meta payload for collection-type responses.
      properties:
        pagination:
          type: object
          properties:
            total:
              type: integer
              example: 1
            count:
              type: integer
              example: 1
            per_page:
              type: integer
              example: 50
            current_page:
              type: integer
              example: 1
            total_pages:
              type: integer
              example: 1
            links:
              type: object
              properties:
                previous:
                  type: string
                  example: '?page=1&limit=50'
                current:
                  type: string
                  example: '?page=1&limit=50'
                next:
                  type: string
                  example: '?page=1&limit=50'
    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            errors:
              $ref: '#/components/schemas/DetailedErrors'
    BaseError:
      type: object
      description: |
        Error payload for the BigCommerce API.
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The title of the message describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
    DetailedErrors:
      type: object
      additionalProperties:
        type: string
    SystemLog:
      title: SystemLog
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
        module:
          type: string
        severity:
          type: string
        summary:
          type: string
        message:
          type: string
        date_created:
          type: string
          format: date-time
  parameters: {}
  requestBodies: {}
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Store logs | read-only | store_logs_read_only |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header
tags:
  - name: System Logs
security:
  - X-Auth-Token: []

openapi: '3.0.1'
info:
  title: Storefront Token
  description: |-
    Get and manage tokens used to authenticate cross-origin requests to the [GraphQL Storefront API](/api-docs/storefront/graphql/graphql-storefront-api-overview).

    ## [API tokens](/docs/storefront-auth/tokens#create-a-token)

    Generate tokens (JWT) for authenticating cross-origin requests to the [GraphQL Storefront API](/api-docs/storefront/graphql/graphql-storefront-api-overview). To [create a token](/docs/storefront-auth/tokens#create-a-token), send a `POST` request to `/stores/{{STORE_HASH}}/v3/storefront/api-token`.

    ```http
    POST https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/storefront/api-token
    X-Auth-Token: {{ACCESS_TOKEN}}
    Content-Type: application/json
    Accept: application/json

    {
      "channel_id": 1,
      "expires_at": 1602288000,
      "allowed_cors_origins": 
        ["https://store.example.com"]
      
    }
    ```

    |Property|Type|Description|
    |-|-|-|
    |`channel_id`|int| Must be a valid channel ID on the store (required) |
    |`expires_at`|int| Unix timestamp in seconds (required). Does not support milliseconds, microseconds, or nanoseconds. |
    |`allowed_cors_origins`|array[str]| Allowed origins for cross origin requests (required) |

    [**Response:**](/docs/storefront-auth/tokens#create-a-token)

    ```json
    {
      "token":"...eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NiJ9...",
      "meta": {
        // ...
      }
    }
    ```



    ## [Customer impersonation tokens](/docs/storefront-auth/tokens/customer-impersonation-token#create-a-token)

    Generate tokens that can make queries from the perspective of a particular customer in headless or server-side code using the [GraphQL Storefront API](/api-docs/storefront/graphql/graphql-storefront-api-overview#customer-impersonation-tokens). To [create a customer impersonation token](/docs/storefront-auth/tokens/customer-impersonation-token#create-a-token), send a `POST` request to `/v3/storefront/api-token-customer-impersonation`.

    ```http
    POST https://api.bigcommerce.com/stores/{STORE_HASH}/v3/storefront/api-token-customer-impersonation
    X-Auth-Token: {{ACCESS_TOKEN}}
    Accept: application/json
    Content-Type: application/json
    ```

    [**Response:**](/docs/storefront-auth/tokens/customer-impersonation-token#create-a-token)

    ```json
    {
      "data":
      {
        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
      }
      "meta": {}
    }
    ```

    Customer impersonation token authenticated requests made to the GraphQL API receive store information from the perspective of the customer with the ID specified in the `X-Bc-Customer-Id` header sent with the GraphQL `POST` request. Pricing, product availability, customer account, and customer details will be reflected. Consider this sample request using a [customer impersonation token](/docs/storefront-auth/tokens/customer-impersonation-token#create-a-token) to run a request in the context of customer ID `123`.

    ```http
    POST https://store.example.com/graphql
    Authorization: Bearer {{CUSTOMER_IMPERSONATION_TOKEN}}
    X-Bc-Customer-Id: 123

    {
        "query": "query CustomerInformation {\n  customer {\n    firstName\n    lastName\n    email\n  }\n}"
    }
    ```


    > #### Warning
    > * Customer impersonation tokens should **never** be exposed publicly, for example, to JavaScript or HTML. These tokens should **not** be used for frontend requests.
    > * Unlike normal GraphQL API tokens, these tokens are sensitive and should be treated like secrets, just as you might treat an OAuth token.
    > * Attempts to run requests using these tokens from a web browser will be rejected.


    ## Revoking tokens
    To [revoke a token](/docs/storefront-auth/tokens#revoke-a-token), send a `DELETE` request to `/v3/storefront/api-token`.

    ```http
    DELETE /stores/{{STORE_HASH}}/v3/storefront/api-token-customer-impersonation
    host: api.bigcommerce.com
    x-Auth-Token: {{ACCESS_TOKEN}}
    Sf-Api-Token: {{CUSTOMER_ID}}
    ```

    ## Additional information

    * [GraphQL API Overview](/api-docs/storefront/graphql/graphql-storefront-api-overview)
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  version: ''
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: API Token
  - name: Customer Impersonation Token
paths:
  '/storefront/api-token':
    parameters:
      - $ref: '#/components/parameters/Accept'
    post:
      tags:
        - API Token
      summary: Create a Token
      description: |-
        Creates a Storefront API token.

        **Required Scopes**
        * `Manage` `Storefront API Tokens`
      operationId: createToken
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/TokenPostSimple'
                - $ref: '#/components/schemas/TokenPostImpersonation'
        required: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token_Full'
        '401':
          description: Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.
          content: {}
        '403':
          description: Missing scope - the v3 Auth token is valid but does not have proper permissions to access this endpoint.
          content: {}
        '422':
          description: Invalid JSON request body - missing or invalid data.
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
        - API Token
      summary: Revoke a Token
      description: Revoke access for a Storefront API token. Only revoke compromised tokens under emergency situations. Let uncompromised short-lived tokens expire naturally, as you do not need to revoke these.
      operationId: revokeToken
      parameters:
        - name: Sf-Api-Token
          in: header
          description: An existing JWT token that you want to revoke.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A storefront API token revocation has been scheduled.
          content: {}
        '401':
          description: Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.
          content: {}
        '403':
          description: Missing scope - the v3 Auth token is valid but does not have proper permissions to access this endpoint.
          content: {}
        '422':
          description: Invalid JWT Token provided or missing JWT token header
          content: {}
  '/storefront/api-token-customer-impersonation':
    parameters:
      - $ref: '#/components/parameters/Accept'
    post:
      tags:
        - Customer Impersonation Token
      summary: Create a Token
      description: |-
        Returns a Storefront API token that allows your application to impersonate customers when making GraphQL `POST` requests. For more information on how to use the returned token, see [customer impersonation tokens](/docs/storefront-auth/tokens/customer-impersonation-token#create-a-token).

        **Required Scopes**
        * `Manage` `Storefront API Customer Impersonation Tokens`
      operationId: createTokenWithCustomerImpersonation
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenPostImpersonation'
        required: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token_Full'
        '401':
          description: Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.
          content: {}
        '403':
          description: Missing scope - the v3 Auth token is valid but does not have proper permissions to access this endpoint.
          content: {}
        '422':
          description: Invalid JSON request body - missing or invalid data
          content: {}
components:
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
  schemas:
    TokenPostImpersonation:
      type: object
      x-internal: false
      x-examples: {}
      properties:
        channel_id:
          type: integer
          minimum: 1
          description: Channel ID for requested token
          example: 1
        expires_at:
          type: integer
          description: Unix timestamp (UTC time) defining when the token should expire. Supports seconds, but does not support milliseconds, microseconds, or nanoseconds.
          example: 1885635176
          minimum: 0
      required:
        - channel_id
        - expires_at
    TokenPostSimple:
      type: object
      properties:
        allowed_cors_origins:
          maxItems: 1
          minItems: 1
          type: array
          description: List of allowed domains for Cross-Origin Request Sharing. Currently only accepts a single element.
          items:
            maxLength: 1
            minLength: 1
            pattern: '/^https?:\/\/(?=.{1,254}(?::|$))(?:(?!\d|-)(?![a-z0-9\-]{1,62}-(?:\.|:|$))[a-z0-9\-]{1,63}\b(?!\.$)\.?)+(:\d+)?$/i;'
            type: string
      x-internal: false
      x-examples:
        example-1:
          allowed_cors_origins:
            - 'https://www.yourstorefront.com/'
    Token_Full:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Token_Base'
        meta:
          type: object
          properties: {}
          additionalProperties: true
          description: Response metadata.
    Token_Base:
      type: object
      properties:
        token:
          type: string
          description: JWT Token for accessing the Storefront API
      x-internal: false
    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            errors:
              $ref: '#/components/schemas/DetailedErrors'
      x-internal: false
    BaseError:
      type: object
      properties:
        status:
          type: integer
          description: |
            The HTTP status code.
        title:
          type: string
          description: |
            The error title describing the particular error.
        type:
          type: string
      description: |
        Error payload for the BigCommerce API.
      x-internal: false
    DetailedErrors:
      type: object
      additionalProperties:
        type: string
      x-internal: false
  responses:
    TokenResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Token_Full'
  securitySchemes:
    X-Auth-Token:
      type: apiKey
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        | Storefront API Customer Impersonation Tokens | manage | `store_storefront_api_customer_impersonation` |
        | Storefront API Tokens | manage | `store_storefront_api` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |

        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      name: X-Auth-Token
      in: header


openapi: '3.0.1'
info:
  title: Subscribers
  description: |-
    Manage subscribers.

  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  license:
    name: ''
  version: ''
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
- X-Auth-Token: []
tags:
- name: Subscribers
  description: BigCommerce Customers API Definition.
paths:
  '/customers/subscribers':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
      - Subscribers
      summary: Get Subscribers
      description: Returns a list of *Subscribers*. Optional filter parameters can
        be passed in.
      operationId: getSubscribers
      parameters:
      - name: email
        in: query
        description: |
          Filter items by email.
        schema:
          type: string
      - name: first_name
        in: query
        description: |
          Filter items by first_name.
        schema:
          type: string
      - name: last_name
        in: query
        description: |
          Filter items by last_name.
        schema:
          type: string
      - name: source
        in: query
        description: |
          Filter items by source.
        schema:
          type: string
      - name: order_id
        in: query
        description: |
          Filter items by order_id.
        schema:
          type: integer
      - name: date_created
        in: query
        description: |
          Filter items by date_created.
        schema:
          type: string
          format: date-time
      - name: date_modified
        in: query
        description: Filter items by date_modified. For example `v3/catalog/products?date_last_imported:min=2018-06-15`
        schema:
          type: string
          format: date-time
      - name: page
        in: query
        description: Specifies the page number in a limited (paginated) list of products.
        schema:
          type: integer
      - name: limit
        in: query
        description: Controls the number of items per page in a limited (paginated)
          list of products.
        schema:
          type: integer
      - name: id
        in: query
        description: Filter items by id.
        schema:
          type: integer
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                title: Subscriber Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/subscriber_Full'
                  meta:
                    $ref: '#/components/schemas/CollectionMeta'
                description: |
                  Response payload for the BigCommerce API.
    post:
      tags:
      - Subscribers
      summary: Create a Subscriber
      description: |-
        Creates a *Subscriber*.

        **Required Fields**
        * email

        **Read Only Fields**
        * id
      operationId: createSubscriber
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscriber_Post'
        required: true
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                title: Subscriber Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/subscriber_Full'
                  meta:
                    $ref: '#/components/schemas/OpenMeta'
        '409':
          description: |
            The `Subscriber` was in conflict with another subscriber. This is the result of duplicate unique values, such as email.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `Subscriber` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: subscriber
    delete:
      tags:
      - Subscribers
      summary: Delete Subscribers
      description: By default, it deletes all *Subscribers*. A filter should be added
        to avoid deleting all subscribers in a store.
      operationId: deleteSubscribers
      parameters:
      - name: email
        in: query
        description: |
          Filter items by email.
        schema:
          type: string
      - name: first_name
        in: query
        description: |
          Filter items by first_name.
        schema:
          type: string
      - name: last_name
        in: query
        description: |
          Filter items by last_name.
        schema:
          type: string
      - name: source
        in: query
        description: |
          Filter items by source.
        schema:
          type: string
      - name: order_id
        in: query
        description: |
          Filter items by order_id.
        schema:
          type: integer
      - name: date_created
        in: query
        description: |
          Filter items by date_created.
        schema:
          type: string
          format: date-time
      - name: date_modified
        in: query
        description: Filter items by date_modified. For example `v3/catalog/products?date_last_imported:min=2018-06-15`
        schema:
          type: string
          format: date-time
      responses:
        '204':
          description: ""
          content: {}
  '/customers/subscribers/{subscriber_id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
      - Subscribers
      summary: Get a Subscriber
      description: Returns a *Subscriber*.
      operationId: getSubscriberById
      parameters:
      - name: subscriber_id
        in: path
        description: |
          The ID of the `Subscriber` requested.
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                title: Subscriber Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/subscriber_Full'
                  meta:
                    $ref: '#/components/schemas/OpenMeta'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
      - Subscribers
      summary: Update a Subscriber
      description: |-
        Updates a *Subscriber*.

        **Read Only Fields**
        * id
      operationId: updateSubscriber
      parameters:
      - name: subscriber_id
        in: path
        description: |
          The ID of the `Subscriber` requested.
        required: true
        schema:
          type: integer
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscriber_Put'
        required: true
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                title: Subscriber Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/subscriber_Full'
                  meta:
                    $ref: '#/components/schemas/OpenMeta'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '409':
          description: |
            The `Subscriber` was in conflict with another subscriber. This is the result of duplicate unique values, such as `email`.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `Subscriber` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties:
                      additionalProperties:
                        type: string
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: subscriber
    delete:
      tags:
      - Subscribers
      summary: Delete a Subscriber
      description: Deletes a *Subscriber*.
      operationId: deleteSubscriberById
      parameters:
      - name: subscriber_id
        in: path
        description: |
          The ID of the `Subscriber` requested.
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: ""
          content: {}
components:
  schemas:
    subscriber_Full:
      title: subscriber_Full
      description: Full subscriber object returned in responses.
      allOf:
      - $ref: '#/components/schemas/subscriber_Base'
      - type: object
        properties:
          id:
            type: integer
            description: The unique numeric ID of the subscriber; increments sequentially.
          date_modified:
            type: string
            description: |
              The date on which the subscriber was modified.
            format: date-time
          date_created:
            type: string
            description: |
              The date of which the subscriber was created.
            format: date-time
      x-internal: false
    subscriber_Base:
      title: subscriber_Base
      type: object
      properties:
        email:
          type: string
          description: |
            The email of the subscriber. Must be unique.
          x-required:
          - post
        first_name:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            The first name of the subscriber.
        last_name:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            The last name of the subscriber.
        source:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            The source of the subscriber. Values are: `storefront`, `order`, or `custom`.
        order_id:
          maximum: 2147483647
          minimum: 1
          type: integer
          description: |
            The ID of the source order, if source was an order.
          nullable: true
        channel_id:
          maximum: 2147483647
          minimum: 1
          type: integer
          description: The channel ID where the subscriber was created.
      description: Common Subscriber properties.
      x-internal: false
    Subscriber:
      allOf:
      - title: Subscriber Base
        type: object
        properties:
          id:
            type: integer
            description: |
              The unique numeric ID of the subscriber; increments sequentially.
            x-required:
            - put
          email:
            type: string
            description: |
              The email of the subscriber. Must be unique.
            x-required:
            - post
          first_name:
            maxLength: 255
            minLength: 0
            type: string
            description: |
              The first name of the subscriber.
          last_name:
            maxLength: 255
            minLength: 0
            type: string
            description: |
              The last name of the subscriber.
          source:
            maxLength: 255
            minLength: 0
            type: string
            description: |
              The source of the subscriber. Values are: `storefront`, `order`, or `custom`.
          order_id:
            maximum: 2147483647
            minimum: 1
            type: integer
            description: |
              The ID of the source order, if source was an order.
            nullable: true
        description: Common Subscriber properties.
      - type: object
        properties:
          date_modified:
            type: string
            description: |
              The date on which the subscriber was modified.
            format: date-time
          date_created:
            type: string
            description: |
              The date of which the subscriber was created.
            format: date-time
      x-internal: false
    subscriber_Post:
      title: subscriber_Post
      description: |
        The model for a POST to create a subscriber.
      allOf:
      - $ref: '#/components/schemas/subscriber_Base'
      x-internal: false
    subscriber_Put:
      title: subscriber_Put
      description: |
        The model for a PUT to update a subscriber.
      allOf:
      - $ref: '#/components/schemas/subscriber_Base'
      x-internal: false
    CollectionMeta:
      title: Collection Meta
      type: object
      properties:
        pagination:
          title: Pagination
          type: object
          properties:
            total:
              type: integer
              description: |
                Total number of items in the result set.
              example: 36
            count:
              type: integer
              description: |
                Total number of items in the collection response.
              example: 36
            per_page:
              type: integer
              description: |
                The amount of items returned in the collection per page, controlled by the limit parameter.
              example: 50
            current_page:
              type: integer
              description: |
                The page you are currently on within the collection.
              example: 1
            total_pages:
              type: integer
              description: |
                The total number of pages in the collection.
              example: 1
            links:
              type: object
              properties:
                previous:
                  type: string
                  description: |
                    Link to the previous page returned in the response.
                current:
                  type: string
                  description: |
                    Link to the current page returned in the response.
                  example: ?page=1&limit=50
                next:
                  type: string
                  description: |
                    Link to the next page returned in the response.
              description: |
                Pagination links for the previous and next parts of the whole collection.
          description: Data about the response, including pagination and collection
            totals.
      description: Data about the response, including pagination and collection totals.
      x-internal: false
    Pagination:
      title: Pagination
      type: object
      properties:
        total:
          type: integer
          description: |
            Total number of items in the result set.
          example: 36
        count:
          type: integer
          description: |
            Total number of items in the collection response.
          example: 36
        per_page:
          type: integer
          description: |
            The amount of items returned in the collection per page, controlled by the limit parameter.
          example: 50
        current_page:
          type: integer
          description: |
            The page you are currently on within the collection.
          example: 1
        total_pages:
          type: integer
          description: |
            The total number of pages in the collection.
          example: 1
        links:
          type: object
          properties:
            previous:
              type: string
              description: |
                Link to the previous page returned in the response.
            current:
              type: string
              description: |
                Link to the current page returned in the response.
              example: ?page=1&limit=50
            next:
              type: string
              description: |
                Link to the next page returned in the response.
          description: |
            Pagination links for the previous and next parts of the whole collection.
      description: Data about the response, including pagination and collection totals.
      x-internal: false
    OpenMeta:
      title: Response meta
      type: object
      properties: {}
      additionalProperties: true
      description: Response metadata.
    ErrorResponse:
      title: Error Response
      allOf:
      - title: Base Error
        type: object
        properties:
          status:
            type: integer
            description: |
              The HTTP status code.
          title:
            type: string
            description: |
              The error title describing the particular error.
          type:
            type: string
          instance:
            type: string
        description: |
          Error payload for the BigCommerce API.
      - type: object
        properties:
          errors:
            title: Detailed Errors
            type: object
            properties: {}
            additionalProperties: true
      x-internal: false
    BaseError:
      title: Base Error
      type: object
      properties:
        status:
          type: integer
          description: |
            The HTTP status code.
        title:
          type: string
          description: |
            The error title describing the particular error.
        type:
          type: string
        instance:
          type: string
      description: |
        Error payload for the BigCommerce API.
      x-internal: false
    NotFound:
      title: Not Found
      type: object
      properties:
        status:
          type: integer
          description: |
            404 HTTP status code.
        title:
          type: string
          description: The error title describing the particular error.
        type:
          type: string
        instance:
          type: string
      description: Error payload for the BigCommerce API.
      x-internal: false
    DetailedErrors:
      title: Detailed Errors
      type: object
      properties: {}
      additionalProperties: true
      x-internal: false
  responses:
    subrscriberCollection_Resp:
      description: ""
      content:
        application/json:
          schema:
            title: Subscriber Collection Response
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/subscriber_Full'
              meta:
                $ref: '#/components/schemas/CollectionMeta'
            description: |
              Response payload for the BigCommerce API.
    subscriber_Resp:
      description: ""
      content:
        application/json:
          schema:
            title: Subscriber Response
            type: object
            properties:
              data:
                $ref: '#/components/schemas/subscriber_Full'
              meta:
                $ref: '#/components/schemas/OpenMeta'
  parameters:
    FilterEmailParam:
      name: email
      in: query
      description: |
        Filter items by email.
      schema:
        type: string
    FilterFirstNameParam:
      name: first_name
      in: query
      description: |
        Filter items by first_name.
      schema:
        type: string
    FilterLastNameParam:
      name: last_name
      in: query
      description: |
        Filter items by last_name.
      schema:
        type: string
    FilterSourceParam:
      name: source
      in: query
      description: |
        Filter items by source.
      schema:
        type: string
    FilterOrderIdParam:
      name: order_id
      in: query
      description: |
        Filter items by order_id.
      schema:
        type: integer
    FilterDateModifiedParam:
      name: date_modified
      in: query
      description: Filter items by date_modified. For example `v3/catalog/products?date_last_imported:min=2018-06-15`
      schema:
        type: string
        format: date-time
    FilterDateCreatedParam:
      name: date_created
      in: query
      description: |
        Filter items by date_created.
      schema:
        type: string
        format: date-time
    PageParam:
      name: page
      in: query
      description: Specifies the page number in a limited (paginated) list of products.
      schema:
        type: integer
    LimitParam:
      name: limit
      in: query
      description: Controls the number of items per page in a limited (paginated)
        list of products.
      schema:
        type: integer
    ScriptsSortKeyParam:
      name: sort
      in: query
      description: |
        Scripts field name to sort by.
      schema:
        type: string
        enum:
        - name
        - description
        - date_created
        - date_modified
    DirectionParam:
      name: direction
      in: query
      description: |
        Sort direction. Acceptable values are: `asc`, `desc`.
      schema:
        type: string
        enum:
        - asc
        - desc
    SubscriberIdParam:
      name: subscriber_id
      in: path
      description: |
        The ID of the `Subscriber` requested.
      required: true
      schema:
        type: integer
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Customers | modify | `store_v2_customers` |
        |  Customers | read-only | `store_v2_customers_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header


openapi: '3.0.1'
info:
  title: Storefront Subscriptions
  description: |-
    Manage newsletter and marketing email subscriptions on the storefront.

    For info about API accounts, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts).
        
    For info about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#same-origin-cors-authentication).

    ## Additional Information

    * [Collecting Newsletter Subscriptions](https://support.bigcommerce.com/s/article/Collecting-Newsletter-Subscriptions) (support.bigcommerce.com)
    * [Customers Overview](/api-docs/customers/customers-subscribers-overview)
    * [Working with Storefront APIs](/api-docs/cart-and-checkout/working-sf-apis)
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  version: ''
servers:
  - url: 'https://{store_domain}/api/storefront'
    variables:
      store_domain:
        default: your_store.example.com
        description: 'The [URL authority](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_URL#authority) of the storefront.'
tags:
  - name: Subscription
paths:
  /subscriptions:
    post:
      tags:
        - Subscription
      summary: Create a Subscription
      operationId: createASubscription
      description: |-
        Creates or updates an email subscription.

        By default, customers receive abandoned cart emails as soon as they provide their email address in the checkout flow. They can opt out using this endpoint.

        However, if **Store Settings > Miscellaneous > Require Consent** is enabled, Abandoned Cart Emails are not sent by default, and the customer should opt-in.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
        required: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
components:
  schemas:
    SubscriptionRequest:
      type: object
      properties:
        email:
          type: string
          description: Email of subscriber
        acceptsMarketingNewsletter:
          type: boolean
          description: Describes whether subscriber has consented to receive Marketing emails.
        acceptsAbandonedCartEmails:
          type: boolean
          description: Describes whether subscriber has consented to receive Abandoned Cart emails.
      x-internal: false
    Subscription:
      type: object
      properties:
        id:
          type: integer
          description: |
            The unique numeric ID of the subscriber; increments sequentially.
        email:
          type: string
          description: |
            The email of the subscriber. Must be unique.
        firstName:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            The first name of the subscriber.
        lastName:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            The last name of the subscriber.
        source:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            The source of the subscriber. Values are: `storefront`, `order`, or `custom`.
        orderId:
          maximum: 2147483647
          minimum: 1
          type: integer
          description: |
            The ID of the source order, if source was an order.
          nullable: true
        consents:
          type: array
          items: {}
          description: |
            The collection of consents the shopper is subscribing to.
      description: Subscription properties.
      x-internal: false

openapi: '3.0.0'
info:
  title: Tax Provider Connection
  version: '3'
  description: 'Manage the connection between a merchantʼs BigCommerce store and a third party tax provider. For more information, see [Tax Provider API Overview](/api-docs/providers/tax).'
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
security:
  - X-Auth-Token: []
tags:
  - name: Tax Provider Connection
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
paths:
  '/tax/providers/{provider_id}/connection':
    get:
      summary: Get Connection Status
      description: |
        Retrieve the connection status of the specified tax provider in the context of a store.

        > #### Note
        > * Requires **read** permissions on the **Information and Settings** scope.
      operationId: provider-connection-get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-connection'
              examples:
                response:
                  value:
                    data:
                      username: MyConnectedTaxProviderAccount
                      configured: true
        '404':
          description: Provider does not exist
      tags:
        - Tax Provider Connection
    delete:
      summary: Delete a Connection
      description: |
        Remove any previously set basic connection credentials for the specified provider. If the specified provider is the active tax provider on the store, the store's active tax provider will be reset to BigCommerce Manual Tax. It is suggested to call this endpoint during a single-click app [uninstall callback](/api-docs/apps/guide/callbacks#uninstall-callback).

        > #### Note
        > * This operation will be logged in [Store Logs](https://support.bigcommerce.com/s/article/Using-Store-Logs) under **Staff Actions**.
        > * Requires **write** permissions on the **Information and Settings** [scope](/api-docs/getting-started/api-accounts#oauth-scopes).
      operationId: provider-connection-delete
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-connection'
              examples:
                response:
                  value:
                    data:
                      username: MyDisconnectedTaxProviderAccount
                      configured: false
        '404':
          description: Provider or provider connection does not exist
      tags:
        - Tax Provider Connection
    put:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-connection'
              examples:
                response:
                  value:
                    data:
                      username: MyUpdatedTaxProviderAccount
                      configured: true
        '404':
          description: Provider does not exist
        '422':
          description: 'Unprocessable Entity, will include a specific error message referencing the issue.'
      description: |-
        Set authentication information associated with a merchant's account on the tax provider's infrastructure:
        - [HTTP Basic Authentication](https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication) (developer.mozilla.org) credentials
        - (optional) Tax provider profile used in customized endpoint urls for tax provider calls. This is only available for tax providers that support this feature.
        
        The configured `username`, `password`, and `profile` (if available) is used to authenticate each API request to the Tax Provider from the associated store. 
        The tax provider's `profile` will be included in the url for [Tax Provider API](/docs/apps-api/tax) endpoints. 

        > #### Note
        > * This operation will be logged in [Store Logs](https://support.bigcommerce.com/s/article/Using-Store-Logs) under **Staff Actions**.
        > * Requires **write** permissions on the **Information and Settings** [scope](/api-docs/getting-started/api-accounts#oauth-scopes).
      summary: Update a Connection
      parameters:
        - $ref: '#/components/parameters/ContentType'
      operationId: provider-connection-put
      tags:
        - Tax Provider Connection
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Public identifying information representing a unique account on the tax provider's infrastructure. Should not contain any personal identifying information (e.g. a personal email address).
                  example: MyTaxProviderAccount
                password:
                  type: string
                  example: h6eSgKLN72q7jYTW
                profile:
                  type: string
                  example: your_app_name
                  description: Optional field that allows merchants to customize Tax Provider API endpoint URLs. Only available for supporting providers.
            examples:
              Example:
                value:
                  username: MyTaxProviderAccount
                  password: h6eSgKLN72q7jYTW
                  profile: test-profile
        description: Basic authentication information, associated with a merchant account on the third-party tax providerʼs infrastructure.
    parameters:
      - $ref: '#/components/parameters/Accept'
      - name: provider_id
        in: path
        required: true
        schema:
          type: string
        description: 'The Tax Providerʼs `provider_id` provided by BigCommerce after the provider [shares their provider details](/api-docs/providers/tax#sharing-provider-details-with-bigcommerce).'
components:
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
    provider_id:
      name: Tax Provider ID
      in: path
      description: Unique key that identifies the Tax Provider on the BigCommerce platform.
      required: true
      schema:
        type: string
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Information & Settings | modify | `store_v2_information` |
        |  Information & Settings | read-only | `store_v2_information_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header
  schemas:
    response-connection:
      type: object
      title: Connection Status
      properties:
        data:
          type: object
          properties:
            username:
              type: string
              description: Identifies a unique account on the external tax provider infrastructure. May be used to reconcile the two platforms.
            configured:
              type: boolean
              description: |-
                Describes whether the stored credentials are considered complete and configured, ready to be used for Tax Provider API requests.

                Merchants may enable any **configured** tax provider for storefront tax quotation.
      x-internal: false

openapi: '3.0.1'
info:
  title: Tax Classes
  description: Manage tax calculations applied to sales. Tax classes are used to apply
    different tax rates for specific types of products and orders. This API is read
    only. Classes must be set using the [Control Panel](https://forum.bigcommerce.com/s/article/Taxes-Video#).
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  version: ""
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v2'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
- X-Auth-Token: []
tags:
- name: Taxes
paths:
  '/tax_classes':
    get:
      tags:
      - Taxes
      summary: Get All Tax Classes
      description: |-
        Returns a list of all *Tax Classes* in a store.

        Default sorting is by tax-class id, from lowest to highest.
      operationId: getAllTaxClasses
      parameters:
      - $ref: '#/components/parameters/Accept'
      - name: page
        in: query
        description: Optional filter param. Number of pages.
        schema:
          maximum: 50
          exclusiveMaximum: false
          exclusiveMinimum: false
          type: number
      - name: limit
        in: query
        description: Optional filter param. Number of items per page
        schema:
          maximum: 250
          exclusiveMaximum: false
          exclusiveMinimum: false
          type: number
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/taxClass_Full'
              example:
              - id: '1'
                name: Non-Taxable Products
                created_at: 1973-01-20T21:34:57.903+00:00
                updated_at: 1990-12-30T00:29:23.515+00:00
              - id: '2'
                name: Shipping
                created_at: 1973-01-20T21:34:57.903+00:00
                updated_at: 1990-12-30T00:29:23.515+00:00
              - id: '3'
                name: Gift Wrapping
                created_at: 1973-01-20T21:34:57.903+00:00
                updated_at: 1990-12-30T00:29:23.515+00:00
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/tax_classes/{id}':
    get:
      tags:
      - Taxes
      summary: Get a Tax Class
      description: Returns a single *Tax Class*.
      operationId: getATaxClass
      parameters:
        - $ref: '#/components/parameters/Accept'
        - name: id
          in: path
          description: ID of the tax class.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/taxClass_Full'
              example:
                id: '1'
                name: Shipping
                created_at: 1973-01-20T21:34:57.903+00:00
                updated_at: 1990-12-30T00:29:23.515+00:00
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
components:
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
  schemas:
    taxClass_Full:
      title: taxClass_Full
      type: object
      properties:
        id:
          type: string
          description: The unique numerical ID of the tax class. A read-only value
            which is automatically assigned and increments sequentially.
          example: "1"
        name:
          type: string
          description: The name of the tax class.
          example: Shipping
        created_at:
          type: string
          description: Date and time of the tax class' creation. Read-Only.
          format: date-time
          example: 2018-05-07T20:14:17+00:00
        updated_at:
          type: string
          description: Date and time when the tax class was last updated. Read-Only.
          format: date-time
          example: 2018-05-07T20:14:17+00:00
      example:
        id: '1'
        name: Shipping
        created_at: 1973-01-20T21:34:57.903+00:00
        updated_at: 1990-12-30T00:29:23.515+00:00
      x-internal: false
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Information & Settings | modify | `store_v2_information` |
        |  Information & Settings | read-only | `store_v2_information_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header


openapi: '3.0.0'
info:
  title: Tax Properties
  description: Include tax properties and product tax properties in tax calculations.
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  version: ''
security:
  - X-Auth-Token: []
tags:
  - name: Tax Properties
  - name: Product Tax Properties
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
paths:
  "/tax/properties":
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
        - Tax Properties
      summary: Get Tax Properties
      description: Retrieve all tax properties defined in this store.
      operationId: get-tax-properties
      parameters:
        - $ref: "#/components/parameters/idin"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Property"
                  meta:
                    $ref: "#/components/schemas/MetaOpen"
        "400":
          description: Request parameters invalid
    put:
      tags:
        - Tax Properties
      summary: Update Tax Properties
      description: Update one or more tax properties. Only fields specified will be
        adjusted.
      operationId: update-tax-properties
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/PropertyPUT"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Property"
                  meta:
                    $ref: "#/components/schemas/MetaOpen"
        "422":
          description: The request body does not meet specifications.
    post:
      tags:
        - Tax Properties
      summary: Create Tax Properties
      description: Create one or more tax properties. A **code** and a **display name**
        must be included when creating tax properties.
      operationId: create-tax-properties
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/PropertyPOST"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Property"
                  meta:
                    $ref: "#/components/schemas/MetaOpen"
        "422":
          description: The request body does not meet specifications.
    delete:
      tags:
        - Tax Properties
      summary: Delete Tax Properties
      description: Delete one or multiple tax properties. A tax property must have zero
        usages within product tax properties before you can delete it.
      operationId: delete-tax-properties
      parameters:
        - $ref: "#/components/parameters/idin_required"
      responses:
        "204":
          description: No Content
        "400":
          description: Request parameters invalid
        "409":
          description: Tax Property is in use and cannot be deleted.
  "/tax/products/properties":
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
        - Product Tax Properties
      summary: Get Product Tax Properties
      description: Retrieve the tax properties that are associated with one or more
        products.
      operationId: get-product-tax-properties
      parameters:
        - $ref: "#/components/parameters/product_idin"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProductTaxProperty"
                  meta:
                    $ref: "#/components/schemas/MetaOpen"
        "400":
          description: Request parameters invalid
    put:
      tags:
        - Product Tax Properties
      summary: Update Product Tax Properties
      description: Update the tax properties associated with one or more products. This
        operation will be additive to any tax property values already associated
        with the product, overwriting any existing tax property values.
      operationId: update-product-tax-properties
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ProductTaxProperty"
            examples:
              Example:
                value:
                  - product_id: 157
                    tax_properties:
                      A-123456789: "26"
                      B-6731789: "200"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProductTaxProperty"
                  meta:
                    $ref: "#/components/schemas/MetaOpen"
        "422":
          description: The request body does not meet specifications.
    delete:
      tags:
        - Product Tax Properties
      summary: Delete Product Tax Properties
      description: Delete tax properties that are associated with one or more products.
      operationId: delete-product-tax-properties
      parameters:
        - $ref: "#/components/parameters/product_idin"
      responses:
        "204":
          description: No Content
        "400":
          description: Request parameters invalid
components:
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
    product_idin:
      name: product_id:in
      in: query
      required: true
      description: ID of product. To target multiple products, provide a comma-separated
        list of IDs such as `12,34,56`
      schema:
        type: string
    idin:
      name: id:in
      in: query
      required: false
      description: ID of tax property. To target multiple tax properties, provide a
        comma-separated list of IDs such as `12,34,56`
      schema:
        type: string
    idin_required:
      name: id:in
      in: query
      required: true
      description: ID of tax property. To target multiple tax properties, provide a
        comma-separated list of IDs such as `12,34,56`
      schema:
        type: string
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Information & Settings | modify | `store_v2_information` |
        |  Information & Settings | read-only | `store_v2_information_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header
  schemas:
    Property:
      type: object
      properties:
        id:
          type: integer
          description: An internal identifier used by other operations.
          example: 1
          readOnly: true
        code:
          type: string
          description: The unique string programmatically references this unique tax
            property by the tax provider. Merchants should liaise with their tax
            provider to explore supported values and functions.
          example: A-123456789
        display_name:
          type: string
          description: The human-readable name for this property. This string will be
            displayed on the Products screen as a field label.
          example: Example Tax Property 1
        description:
          type: string
          description: Optional. Additional detail about this tax property may help guide
            merchants. This string will be displayed on the Products screen as a
            tooltip associated with the relevant field.
          example: Food Industry
        created_at:
          type: string
          description: Datetime.
          format: date-time
          example: 2022-07-21T19:33:57+00:00
          readOnly: true
        updated_at:
          type: string
          description: Datetime.
          format: date-time
          example: 2022-07-21T19:33:57+00:00
          readOnly: true
    PropertyPOST:
      type: object
      properties:
        code:
          type: string
          description: The unique string programmatically references this unique tax
            property by the tax provider. Merchants should liaise with their tax
            provider to explore supported values and functions.
          example: A-123456789
        display_name:
          type: string
          description: The human-readable name for this property. This string will be
            displayed on the Products screen as a field label.
          example: Example Tax Property 1
        description:
          type: string
          description: Additional detail about this tax property may help guide merchants.
            This string will be displayed on the Products screen as a tooltip
            associated with the relevant field.
          example: Food Industry
      required:
        - code
        - display_name
    PropertyPUT:
      type: object
      properties:
        id:
          type: integer
          description: An internal identifier used by other operations.
          example: 1
        code:
          type: string
          description: The unique string programmatically references this unique tax
            property by the tax provider. Merchants should liaise with their tax
            provider to explore supported values and functions.
          example: A-123456789
        display_name:
          type: string
          description: The human-readable name for this property. This string will be
            displayed on the Products screen as a field label.
          example: Example Tax Property 1
        description:
          type: string
          description: Optional. Additional detail about this tax property may help guide
            merchants. This string will be displayed on the Products screen as a
            tooltip associated with the relevant field.
          example: Food Industry
      required:
        - id
    ProductTaxProperty:
      type: object
      description: A collection of tax property values associated with a product.
      properties:
        product_id:
          type: integer
          description: A reference to the product that the product tax properties are
            associated with.
          example: 157
        tax_properties:
          type: object
          description: A simple key-value pairing. The tax property must be defined to
            associate a value. These values will be sent to the active tax
            provider during Tax Provider API operations whenever the associated
            product is included in the operation.
          example:
            A-123456789: "26"
            B-6731789: "200"
      required:
        - product_id
        - tax_properties
    MetaOpen:
      title: Response meta
      type: object
      properties: {}
      additionalProperties: true
      description: Response metadata.

openapi: '3.0.3'
info:
  title: Tax Provider API
  version: '1.0'
  description: 'Use BigCommerce’s platform-to-platform Tax Provider API to integrate a tax calculation engine into the BigCommerce storefront and control panel. Supports [estimate](/docs/apps-api/tax#estimate-taxes), [adjust](/docs/apps-api/tax#adjust-tax-quote), [commit](/docs/apps-api/tax#commit-tax-quote), and [void](/docs/apps-api/tax#void-tax-quote) operations. For more information, see [Tax Provider API Overview](/api-docs/providers/tax).'
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
tags:
  - name: Tax Provider
servers:
  - url: 'https://{app_domain}'
    variables:
      app_domain:
        default: your_app.example.com
        description: 'The [URL authority](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_URL#authority) of your appʼs server.'
paths:
  /estimate:
    post:
      summary: Estimate Taxes
      tags:
        - Tax Provider
      description: |-
        Submit the quote request to retrieve an estimate from the enabled third-party tax provider. Estimates are not expected to be persisted by the tax provider.

        > Server URL
        > - For supporting tax providers, the server URL contains the tax provider's profile field; for example, `your_profile.example.com`.
        > - The Try it feature is not currently supported for this endpoint.

        The following actions can trigger tax estimate requests multiple times during a standard checkout on a BigCommerce storefront, depending on the BigCommerce merchant’s settings.

        - After selecting a Shipping Method during the “Estimate Shipping & Tax” facility on the Cart page.
        - After specifying a Shipping Address during a Checkout.
        - After selecting a Shipping Method during a Checkout.
        - After specifying a Billing Address during a Checkout.

        The following actions are not expected to trigger estimate requests.

        - While anonymously browsing a store’s product catalog.
        - On the Cart page prior to a Shopper selecting a Shipping Method via “Estimate Shipping & Tax”.
        - On the Checkout page prior to specifying a Shipping Address.
        - On the Checkout page, when toggling any option related to using the shopper’s Shipping Address as their Billing Address.

        The following control panel actions can also trigger tax estimate requests.

        - Order refund.
        - Edit order.
        - Test connection feature in Tax Settings.
      operationId: estimate
      parameters:
        - $ref: '#/components/parameters/header-storehash'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/request-quote'
            examples:
              example:
                value:
                  id: 3f0c857e-2c55-443e-a89b-c3c4d8a29605
                  currency_code: USD
                  customer:
                    customer_id: '0'
                    customer_group_id: '0'
                    taxability_code: ''
                  transaction_date: '2019-08-13T03:17:37+00:00'
                  documents:
                    - id: 5d522b889d3d9
                      billing_address:
                        line1: ''
                        line2: ''
                        city: ''
                        region_name: ''
                        region_code: ''
                        country_name: ''
                        country_code: ''
                        postal_code: ''
                        company_name: ''
                        type: RESIDENTIAL
                      destination_address:
                        line1: ''
                        line2: ''
                        city: Van Wert
                        region_name: Ohio
                        region_code: OH
                        country_name: United States
                        country_code: US
                        postal_code: '45892'
                        company_name: ''
                        type: RESIDENTIAL
                      origin_address:
                        line1: 2139 W ANDERSON LN
                        line2: ''
                        city: AUSTIN
                        region_name: Texas
                        region_code: TX
                        country_name: United States
                        country_code: US
                        postal_code: '78757'
                        company_name: ''
                        type: COMMERCIAL
                      shipping:
                        id: 5d522b889d3d9
                        item_code: Flat Rate
                        name: 'Shipping to Van Wert, United States 45891'
                        price:
                          amount: 10
                          tax_inclusive: false
                        quantity: 1
                        tax_class:
                          code: ''
                          class_id: '6'
                          name: Shipping
                        tax_exempt: false
                        type: shipping
                      handling:
                        id: 5d522b889d3d9
                        item_code: Flat Rate
                        name: 'Handling for Van Wert, United States 45891'
                        price:
                          amount: 0
                          tax_inclusive: false
                        quantity: 1
                        tax_class:
                          code: ''
                          class_id: '6'
                          name: Handling
                        tax_exempt: false
                        type: handling
                      items:
                        - id: 088c7465-e5b8-4624-a220-0d9faa82e7cb
                          item_code: ABS
                          name: '[Sample] Able Brewing System'
                          price:
                            amount: 450
                            tax_inclusive: false
                          quantity: 2
                          tax_class:
                            code: ''
                            class_id: '0'
                            name: Default Tax Class
                          tax_exempt: false
                          type: item
                          wrapping:
                            id: d2675662-6326-4a23-9107-ab71fa6a21a1
                            item_code: ''
                            name: 'Wrapping: [Sample] Canvas Laundry Cart'
                            price:
                              amount: 5
                              tax_inclusive: false
                            quantity: 1
                            tax_class:
                              code: ''
                              class_id: '6'
                              name: Wrapping
                            tax_exempt: false
                            type: wrapping
                        - id: d2675662-6326-4a23-9107-ab71fa6a21a1
                          item_code: CLC
                          name: '[Sample] Canvas Laundry Cart'
                          price:
                            amount: 200
                            tax_inclusive: false
                          quantity: 1
                          tax_class:
                            code: ''
                            class_id: '0'
                            name: Default Tax Class
                          tax_exempt: false
                          type: item
                          wrapping:
                            id: d2675662-6326-4a23-9107-ab71fa6a21a1
                            item_code: ''
                            name: 'Wrapping: [Sample] Canvas Laundry Cart'
                            price:
                              amount: 5
                              tax_inclusive: false
                            quantity: 1
                            tax_class:
                              code: ''
                              class_id: '6'
                              name: Wrapping
                            tax_exempt: false
                            type: wrapping
        description: 'Estimates may not always contain complete data as these requests will be fired at different stages of the shopper checkout. For example, the **Estimate Shipping & Tax** function on the **Cart** page is not expected to provide any billing address data, but the tax provider will still be expected to return a valid estimate.'
        required: true
      responses:
        '200':
          description: Noteworthy is that the estimate response does not contain an **external ID** since there is no expectation that an estimate will result in any persisted tax documents by the tax provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-quote'
              examples:
                response:
                  value:
                    documents:
                      - id: 5d522b889d3d9
                        items:
                          - id: 088c7465-e5b8-4624-a220-0d9faa82e7cb
                            price:
                              amount_inclusive: 675
                              amount_exclusive: 450
                              total_tax: 225
                              tax_rate: 0.5
                              sales_tax_summary:
                                - name: Brutal Tax
                                  rate: 0.5
                                  amount: 225
                                  tax_class:
                                    class_id: '0'
                                    name: Brutal Tax
                                    code: US
                                  id: Brutal Tax
                            type: item
                            wrapping:
                              id: d2675662-6326-4a23-9107-ab71fa6a21a1
                              price:
                                amount_exclusive: 5
                                amount_inclusive: 7.5
                                sales_tax_summary:
                                  - amount: 2.5
                                    id: '1'
                                    name: BRUTAL TAX
                                    rate: 0.5
                                    tax_class:
                                      class_id: '6'
                                      code: US
                                      name: Wrapping
                                tax_rate: 0.5
                                total_tax: 2.5
                              type: wrapping
                          - id: d2675662-6326-4a23-9107-ab71fa6a21a1
                            price:
                              amount_inclusive: 300
                              amount_exclusive: 200
                              total_tax: 100
                              tax_rate: 0.5
                              sales_tax_summary:
                                - name: Brutal Tax
                                  rate: 0.5
                                  amount: 100
                                  tax_class:
                                    class_id: '0'
                                    name: Brutal Tax
                                    code: US
                                  id: Brutal Tax
                            type: item
                            wrapping:
                              id: d2675662-6326-4a23-9107-ab71fa6a21a1
                              price:
                                amount_exclusive: 5
                                amount_inclusive: 7.5
                                sales_tax_summary:
                                  - amount: 2.5
                                    id: '1'
                                    name: BRUTAL TAX
                                    rate: 0.5
                                    tax_class:
                                      class_id: '6'
                                      code: US
                                      name: Wrapping
                                tax_rate: 0.5
                                total_tax: 2.5
                              type: wrapping
                        shipping:
                          id: 5d522b889d3d9
                          price:
                            amount_inclusive: 15
                            amount_exclusive: 10
                            total_tax: 5
                            tax_rate: 0.5
                            sales_tax_summary:
                              - name: Brutal Tax
                                rate: 0.5
                                amount: 5
                                tax_class:
                                  class_id: '0'
                                  name: Brutal Tax
                                  code: US
                                id: Brutal Tax
                          type: shipping
                        handling:
                          id: 5d522b889d3d9
                          price:
                            amount_inclusive: 0
                            amount_exclusive: 0
                            total_tax: 0
                            tax_rate: 0.5
                            sales_tax_summary:
                              - name: Brutal Tax
                                rate: 0.5
                                amount: 0
                                tax_class:
                                  class_id: '0'
                                  name: Brutal Tax
                                  code: US
                                id: Brutal Tax
                          type: handling
                    id: 3f0c857e-2c55-443e-a89b-c3c4d8a29605
        '400':
          description: Fallback Tax will be used for this transaction. General response that points to an issue with the incoming request that means a valid response is unable to be returned.
        '401':
          description: Response to indicate that the merchant’s authentication credentials are invalid. The merchant will receive an update in their Store Logs.
        '500':
          description: Fallback Tax will be used for this transaction. General response that points to an error on the tax provider side. These types of errors should be promptly resolved by the tax provider.
  /void:
    post:
      summary: Void Tax Quote
      description: |- 
        Invalidate the persisted tax quote as identified by the given unique ID. Relevant to order cancellations or when moving an order from a paid status to an unpaid status.

        > Server URL
        > - For supporting tax providers, the server URL contains the tax provider's profile field; for example, `your_profile.example.com`.
        > - The Try it feature is not currently supported for this endpoint.

      operationId: void
      parameters:
        - name: id
          in: query
          description: 'Unique ID identifying the existing, persisted Tax Quote that will be voided.'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/header-storehash'
      responses:
        '200':
          description: OK
        '400':
          description: General response that points to an issue with the incoming request that means a valid response is unable to be returned.
        '401':
          description: Response to indicate that the merchant’s authentication credentials are invalid. The merchant will receive an update in their Store Logs.
        '500':
          description: General response that points to an error on the tax provider side. These types of errors should be promptly resolved by the tax provider.
      tags:
        - Tax Provider
  /commit:
    post:
      summary: Commit Tax Quote
      description: |-
        Submit the quote request to be persisted by the enabled third-party tax provider. A commit operation is intended to be submitted once only, when the Order has been confirmed and paid.

        > Server URL
        > - For supporting tax providers, the server URL contains the tax provider's profile field; for example, `your_profile.example.com`.
        > - The Try it feature is not currently supported for this endpoint.

      operationId: commit
      parameters:
        - $ref: '#/components/parameters/header-storehash'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/request-quote'
            examples:
              example:
                value:
                  id: '113'
                  currency_code: USD
                  customer:
                    customer_id: '0'
                    customer_group_id: '0'
                    taxability_code: ''
                  transaction_date: '2019-08-13T03:40:15+00:00'
                  documents:
                    - id: shipping_14
                      billing_address:
                        line1: 402 S Vine St
                        line2: ''
                        city: Van Wert
                        region_name: Ohio
                        region_code: OH
                        country_name: United States
                        country_code: US
                        postal_code: '45891'
                        company_name: ''
                        type: RESIDENTIAL
                      destination_address:
                        line1: 402 S Vine St
                        line2: ''
                        city: Van Wert
                        region_name: Ohio
                        region_code: OH
                        country_name: United States
                        country_code: US
                        postal_code: '45891'
                        company_name: ''
                        type: RESIDENTIAL
                      origin_address:
                        line1: 2139 W ANDERSON LN
                        line2: ''
                        city: AUSTIN
                        region_name: Texas
                        region_code: TX
                        country_name: United States
                        country_code: US
                        postal_code: '78757'
                        company_name: ''
                        type: COMMERCIAL
                      shipping:
                        id: shipping_14
                        item_code: Flat Rate
                        name: 'Shipping to Van Wert, United States 45891'
                        price:
                          amount: 10
                          tax_inclusive: false
                        quantity: 1
                        tax_class:
                          code: ''
                          class_id: '6'
                          name: Shipping
                        tax_exempt: false
                        type: shipping
                      handling:
                        id: handling_14
                        item_code: Flat Rate
                        name: 'Handling for Van Wert, United States 45891'
                        price:
                          amount: 0
                          tax_inclusive: false
                        quantity: 1
                        tax_class:
                          code: ''
                          class_id: '6'
                          name: Handling
                        tax_exempt: false
                        type: handling
                      items:
                        - id: product_13
                          item_code: ABS
                          name: '[Sample] Able Brewing System'
                          price:
                            amount: 450
                            tax_inclusive: false
                          quantity: 2
                          tax_class:
                            code: ''
                            class_id: '0'
                            name: Default Tax Class
                          tax_exempt: false
                          type: item
                          wrapping:
                            id: product_14
                            item_code: ''
                            name: 'Wrapping: Holiday'
                            price:
                              amount: 5
                              tax_inclusive: false
                            quantity: 1
                            tax_class:
                              code: ''
                              class_id: '6'
                              name: Wrapping
                            tax_exempt: false
                            type: wrapping
                        - id: product_14
                          item_code: CLC
                          name: '[Sample] Canvas Laundry Cart'
                          price:
                            amount: 200
                            tax_inclusive: false
                          quantity: 1
                          tax_class:
                            code: ''
                            class_id: '0'
                            name: Default Tax Class
                          tax_exempt: false
                          type: item
                          wrapping:
                            id: product_14
                            item_code: ''
                            name: 'Wrapping: Holiday'
                            price:
                              amount: 5
                              tax_inclusive: false
                            quantity: 1
                            tax_class:
                              code: ''
                              class_id: '6'
                              name: Wrapping
                            tax_exempt: false
                            type: wrapping
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-quote'
              examples:
                response:
                  value:
                    documents:
                      - external_id: sample-doc-123456789
                        id: shipping_14
                        items:
                          - id: product_13
                            price:
                              amount_inclusive: 675
                              amount_exclusive: 450
                              total_tax: 225
                              tax_rate: 0.5
                              sales_tax_summary:
                                - name: Brutal Tax
                                  rate: 0.5
                                  amount: 225
                                  tax_class:
                                    class_id: '0'
                                    name: Brutal Tax
                                    code: US
                                  id: Brutal Tax
                            type: item
                            wrapping:
                              id: product_14
                              price:
                                amount_exclusive: 5
                                amount_inclusive: 7.5
                                sales_tax_summary:
                                  - amount: 2.5
                                    id: '1'
                                    name: BRUTAL TAX
                                    rate: 0.5
                                    tax_class:
                                      class_id: '6'
                                      code: US
                                      name: Wrapping
                                tax_rate: 0.5
                                total_tax: 2.5
                              type: wrapping
                          - id: product_14
                            price:
                              amount_inclusive: 300
                              amount_exclusive: 200
                              total_tax: 100
                              tax_rate: 0.5
                              sales_tax_summary:
                                - name: Brutal Tax
                                  rate: 0.5
                                  amount: 100
                                  tax_class:
                                    class_id: '0'
                                    name: Brutal Tax
                                    code: US
                                  id: Brutal Tax
                            type: item
                            wrapping:
                              id: product_14
                              price:
                                amount_exclusive: 5
                                amount_inclusive: 7.5
                                sales_tax_summary:
                                  - amount: 2.5
                                    id: '1'
                                    name: BRUTAL TAX
                                    rate: 0.5
                                    tax_class:
                                      class_id: '6'
                                      code: US
                                      name: Wrapping
                                tax_rate: 0.5
                                total_tax: 2.5
                              type: wrapping
                        shipping:
                          id: shipping_14
                          price:
                            amount_inclusive: 15
                            amount_exclusive: 10
                            total_tax: 5
                            tax_rate: 0.5
                            sales_tax_summary:
                              - name: Brutal Tax
                                rate: 0.5
                                amount: 5
                                tax_class:
                                  class_id: '0'
                                  name: Brutal Tax
                                  code: US
                                id: Brutal Tax
                          type: shipping
                        handling:
                          id: handling_14
                          price:
                            amount_inclusive: 0
                            amount_exclusive: 0
                            total_tax: 0
                            tax_rate: 0.5
                            sales_tax_summary:
                              - name: Brutal Tax
                                rate: 0.5
                                amount: 0
                                tax_class:
                                  class_id: '0'
                                  name: Brutal Tax
                                  code: US
                                id: Brutal Tax
                          type: handling
                    id: '113'
        '400':
          description: General response that points to an issue with the incoming request that means a valid response is unable to be returned.
        '401':
          description: Response to indicate that the merchant’s authentication credentials are invalid. The merchant will receive an update in their Store Logs.
        '500':
          description: General response that points to an error on the tax provider side. These types of errors should be promptly resolved by the tax provider.
      tags:
        - Tax Provider
  /adjust:
    post:
      responses:
        '200':
          description: Returned Tax Quote response matches the updated QuoteRequest provided to the service method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/request-adjust'
              examples:
                example-1:
                  value:
                    adjust_description: string
                    id: string
                    currency_code: string
                    customer:
                      customer_id: string
                      customer_group_id: '0'
                      taxability_code: string
                    transaction_date: '2019-08-24T14:15:22Z'
                    documents:
                      - id: string
                        billing_address:
                          line1: string
                          line2: string
                          city: Sydney
                          region_name: New South Wales
                          region_code: NSW
                          country_name: Australia
                          country_code: AU
                          postal_code: '2007'
                          company_name: string
                          type: RESIDENTIAL
                        destination_address:
                          line1: string
                          line2: string
                          city: Sydney
                          region_name: New South Wales
                          region_code: NSW
                          country_name: Australia
                          country_code: AU
                          postal_code: '2007'
                          company_name: string
                          type: RESIDENTIAL
                        origin_address:
                          line1: string
                          line2: string
                          city: Sydney
                          region_name: New South Wales
                          region_code: NSW
                          country_name: Australia
                          country_code: AU
                          postal_code: '2007'
                          company_name: string
                          type: RESIDENTIAL
                        shipping:
                          id: string
                          item_code: Flat Rate
                          item_reference: '12345678'
                          name: string
                          price:
                            amount: 0
                            tax_inclusive: false
                          quantity: 0
                          tax_class:
                            code: string
                            class_id: string
                            name: string
                          tax_exempt: false
                          type: shipping
                        handling:
                          id: string
                          item_code: Flat Rate
                          item_reference: '12345678'
                          name: string
                          price:
                            amount: 0
                            tax_inclusive: false
                          quantity: 0
                          tax_class:
                            code: string
                            class_id: string
                            name: string
                          tax_exempt: false
                          type: handling
                        items:
                          - id: string
                            item_code: Flat Rate
                            item_reference: '12345678'
                            name: string
                            price:
                              amount: 0
                              tax_inclusive: false
                            quantity: 0
                            tax_class:
                              code: string
                              class_id: string
                              name: string
                            tax_exempt: false
                            type: item
                            wrapping:
                              id: string
                              item_code: Flat Rate
                              item_reference: '12345678'
                              name: string
                              price:
                                amount: 0
                                tax_inclusive: false
                              quantity: 0
                              tax_class:
                                code: string
                                class_id: string
                                name: string
                              tax_exempt: false
                              type: wrapping
        '400':
          description: General response that points to an issue with the incoming request that means a valid response is unable to be returned.
        '401':
          description: Response to indicate that the merchant’s authentication credentials are invalid. The merchant will receive an update in their Store Logs.
        '500':
          description: General response that points to an error on the tax provider side. These types of errors should be promptly resolved by the tax provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-quote'
              examples:
                response:
                  value:
                    documents:
                      - external_id: sample-doc-123456789
                        id: shipping_14
                        items:
                          - id: product_13
                            price:
                              amount_inclusive: 337.5
                              amount_exclusive: 225
                              total_tax: 112.5
                              tax_rate: 0.5
                              sales_tax_summary:
                                - name: Brutal Tax
                                  rate: 0.5
                                  amount: 112.5
                                  tax_class:
                                    class_id: '0'
                                    name: Brutal Tax
                                    code: US
                                  id: Brutal Tax
                            type: item
                            wrapping:
                              id: d2675662-6326-4a23-9107-ab71fa6a21a1
                              price:
                                amount_exclusive: 5
                                amount_inclusive: 7.5
                                sales_tax_summary:
                                  - amount: 2.5
                                    id: '1'
                                    name: BRUTAL TAX
                                    rate: 0.5
                                    tax_class:
                                      class_id: '6'
                                      code: US
                                      name: Wrapping
                                tax_rate: 0.5
                                total_tax: 2.5
                              type: wrapping
                          - id: product_14
                            price:
                              amount_inclusive: 300
                              amount_exclusive: 200
                              total_tax: 100
                              tax_rate: 0.5
                              sales_tax_summary:
                                - name: Brutal Tax
                                  rate: 0.5
                                  amount: 100
                                  tax_class:
                                    class_id: '0'
                                    name: Brutal Tax
                                    code: US
                                  id: Brutal Tax
                            type: item
                            wrapping:
                              id: d2675662-6326-4a23-9107-ab71fa6a21a1
                              price:
                                amount_exclusive: 5
                                amount_inclusive: 7.5
                                sales_tax_summary:
                                  - amount: 2.5
                                    id: '1'
                                    name: BRUTAL TAX
                                    rate: 0.5
                                    tax_class:
                                      class_id: '6'
                                      code: US
                                      name: Wrapping
                                tax_rate: 0.5
                                total_tax: 2.5
                              type: wrapping
                        shipping:
                          id: shipping_14
                          price:
                            amount_inclusive: 7.5
                            amount_exclusive: 5
                            total_tax: 2.5
                            tax_rate: 0.5
                            sales_tax_summary:
                              - name: Brutal Tax
                                rate: 0.5
                                amount: 2.5
                                tax_class:
                                  class_id: '0'
                                  name: Brutal Tax
                                  code: US
                                id: Brutal Tax
                          type: shipping
                        handling:
                          id: handling_14
                          price:
                            amount_inclusive: 0
                            amount_exclusive: 0
                            total_tax: 0
                            tax_rate: 0.5
                            sales_tax_summary:
                              - name: Brutal Tax
                                rate: 0.5
                                amount: 0
                                tax_class:
                                  class_id: '0'
                                  name: Brutal Tax
                                  code: US
                                id: Brutal Tax
                          type: handling
                    id: '113'
      summary: Adjust Tax Quote
      description: |-
        Replace the persisted tax quote (identified by the given unique ID) with the provided quote request (represented by the **AdjustRequest**).

        Relevant for partial refunds, full refunds, returns, and other Order modifications where there have been changes to the tax liabilities.

        The returned **Tax Quote** response is expected to be the same to a response returned by an equivalent response to **estimate** or **commit** methods.

        > Server URL
        > - For supporting tax providers, the server URL contains the tax provider's profile field; for example, `your_profile.example.com`.
        > - The Try it feature is not currently supported for this endpoint.
        
      operationId: adjust
      tags:
        - Tax Provider
      parameters:
        - $ref: '#/components/parameters/header-storehash'
        - in: query
          name: id
          required: true
          description: 'Unique ID identifying the existing, persisted Tax Quote that will be adjusted.'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/request-adjust'
components:
  parameters:
    header-storehash:
      name: X-BC-Store-Hash
      in: header
      description: BigCommerce will send through the Store Hash as part of all Tax Provider API operations. Each BigCommerce store on the platform has a unique Store Hash value for the store’s lifetime. This value can assist in account verification or profile matching responsibilities.
      required: true
      schema:
        type: string
  schemas:
    request-item:
      type: object
      description: An **ItemRequest** represents required information relating to completing tax calculations for a specific line item.
      title: ItemRequest
      x-internal: false
      properties:
        id:
          type: string
          description: A unique identifier for this item used to map responses back to the corresponding item on the order.
        item_code:
          type: string
          description: 'The UPC or SKU of the item. The UPC is used when both UPC and SKU values are available on the item. Empty string if both UPC and SKU are not available.'
        item_reference:
          type: string
          description: 'The SKU of the item. Empty string if SKU is not available.'
        name:
          type: string
          description: A display name for this item.
        price:
          type: object
          description: 'The final sale price (after discounts, bulk pricing, price lists, etc.) prior to having taxes calculated. If the merchant lists prices inclusive of tax, this price will already be tax inclusive, and so the tax provider will instead calculate the amount of tax that was already included in this price. For multiple quantities, this price includes that multiplication.'
          required:
            - amount
            - tax_inclusive
          properties:
            amount:
              type: number
              description: 'Note: This amount will be **negative** for order-level refunds and may be **zero** for line item refunds.'
              format: double
              example: 1.5
            tax_inclusive:
              type: boolean
              description: 'Note: **Tax Inclusive** and **Tax Exclusive** prices cannot be added together.'
              default: false
        quantity:
          type: integer
          minimum: 0
        tax_class:
          $ref: '#/components/schemas/TaxClass'
        tax_exempt:
          type: boolean
          description: 'Flag whether or not this item is always tax-exempt. For example, gift certificate purchases and order-level refunds are tax-exempt. Tax-exempt items are included in the request for auditing purposes.'
          default: false
        tax_properties:
          type: array
          description: Merchants may opt to include additional properties that a tax provider can choose to support, factoring these values into tax calculation.
          items:
            $ref: '#/components/schemas/request-item-tax-property'
      required:
        - id
        - price
        - quantity
    request-item-tax-property:
      type: object
      description: A simple key value pairing allowing merchants to provide an additional input into a tax providerʼs tax calculation.
      title: TaxProperty
      properties:
        code:
          type: string
          description: Used by tax providers to programmatically identify a specific calculation input.
          example: alcohol-percentage
        value:
          type: string
          description: The value that will be factored into the tax providerʼs tax calculation rules, where supported.
          example: '4.9'
      required:
        - code
        - value
      x-internal: false
    request-document:
      type: object
      description: 'Each **DocumentRequest** represents an order or part of an order of items fulfilled from a single origin address to a single destination address. In addition to shipping and billing details, a document request includes the collection of items in the shipment, with tax-relevant information for each item. Multi-address orders, in which items ship to or from multiple addresses, require at least one **DocumentRequest** per combination of sender-recipient addresses. These are similar to "consignments" or "shipments" in other BigCommerce APIs.'
      title: DocumentRequest
      properties:
        id:
          type: string
          description: A unique identifier for this consignment. This value can be expected to be unique within an individual quote request but may be duplicated within subsequent quote requests. A digital consignment will see a prefix **DigitalDelivery_** followed by the Order ID.
        billing_address:
          $ref: '#/components/schemas/Address'
        destination_address:
          $ref: '#/components/schemas/Address'
        origin_address:
          $ref: '#/components/schemas/Address'
        shipping:
          type: object
          description: Shipping line item present in each document request.
          allOf:
            - $ref: '#/components/schemas/request-item'
            - type: object
              properties:
                type:
                  $ref: '#/components/schemas/shipping_type'
              required:
                - type
        handling:
          type: object
          description: Handling line item present in each document request.
          allOf:
            - $ref: '#/components/schemas/request-item'
            - type: object
              properties:
                type:
                  $ref: '#/components/schemas/handling_type'
              required:
                - type
        items:
          type: array
          description: Collection of one or more items contained within this consignment that need to be assessed for tax liabilities. An item may or may not have gift wrapping.
          items:
            allOf:
              - $ref: '#/components/schemas/request-item'
              - type: object
                properties:
                  type:
                    $ref: '#/components/schemas/item_type'
                  wrapping:
                    type: object
                    description: Optional gift wrapping for items in the consignment.
                    nullable: true
                    allOf:
                      - $ref: '#/components/schemas/request-item'
                      - type: object
                        properties:
                          type:
                            $ref: '#/components/schemas/wrapping_type'
                        required:
                          - type
                required:
                  - type
      required:
        - id
        - destination_address
        - origin_address
        - shipping
        - handling
        - items
      x-internal: false
    request-quote:
      type: object
      description: 'Each **QuoteRequest** represents an order. In addition to transaction details, it contains a `documents` array of one or more **DocumentRequest** objects, which represent distinct combinations of origin and fulfillment addresses and the tax-relevant contents of those consignments. This is similar to an "order" in other BigCommerce APIs.'
      title: QuoteRequest
      properties:
        id:
          type: string
          description: 'Unique ID of the taxable document (order, cart, quote, etc) this tax quote request is being generated for. Will remain consistent for the lifetime of the entity being estimated.'
        currency_code:
          type: string
          description: ISO 4217 3 character currency code that all prices on this request are in.
        customer:
          type: object
          description: 'If the shopper is a registered customer in the merchant’s store, basic details for that customer.'
          required:
            - customer_id
            - customer_group_id
          properties:
            customer_id:
              type: string
              description: The ID of the shoppers customer account in BigCommerce. May be provided as a UUID.
            customer_group_id:
              type: string
              description: The BigCommerce customer group ID assigned to this customer. The default value will be provided if the customer has no group assigned. May be provided as a UUID.
              default: '0'
            taxability_code:
              type: string
              description: 'If applicable, the tax exemption code of the shopper’s customer account. A taxability code is intended to apply to multiple customers. This code should match the exemption codes provided by the third-party integration.'
        transaction_date:
          type: string
          format: date-time
          description: ISO 8601 formatted date the shopper placed this order. Dates will be provided in UTC.
        documents:
          type: array
          description: 'One or more consignments containing items being purchased by the shopper, including shipping and handling fees that are charged for each consignment. Most orders will contain a single consignment (to a single shipping address), however the BigCommerce platform also supports "Multi-address orders" which allow shoppers to place a single order with items shipped to different addresses.'
          items:
            $ref: '#/components/schemas/request-document'
      required:
        - id
        - currency_code
        - customer
        - transaction_date
        - documents
      x-internal: false
    request-adjust:
      description: An **AdjustRequest** contains the same data as a standard **QuoteRequest** with added detail of the adjustment operation.
      allOf:
        - type: object
          properties:
            adjust_description:
              type: string
              description: 'Specifies the reason for the adjustment operation, for auditing purposes. May be a custom, user-entered description.'
        - $ref: '#/components/schemas/request-quote'
      title: AdjustRequest
      x-internal: false
    Address:
      type: object
      description: 'Requests may have partial Address data. For example, the BigCommerce Cart page has the "Estimate Shipping & Tax" feature which is only expected to supply Country, Region and Postal Code.'
      properties:
        line1:
          type: string
          description: Primary street address.
        line2:
          type: string
          description: 'Apartment, unit, suite, building, floor, etc.'
        city:
          type: string
          description: 'City, suburb, township, etc.'
          example: Sydney
        region_name:
          type: string
          description: 'State, province, territory, etc.'
          example: New South Wales
        region_code:
          type: string
          description: 'If available, the short code/acronym for the region. For example, "CA" for "California" or "NSW" for "New South Wales".'
          example: NSW
        country_name:
          type: string
          example: Australia
          description: The human-readable country name.
        country_code:
          type: string
          description: ISO 3166-1 alpha-2 format country code.
          example: AU
        postal_code:
          type: string
          description: 'Postcode, ZIP, etc. Optional.'
          example: '2007'
        company_name:
          type: string
          description: 'If this is a commercial address, the associated company’s name.'
          deprecated: true
        type:
          type: string
          enum:
            - RESIDENTIAL
            - COMMERCIAL
      x-internal: false
    TaxClass:
      type: object
      properties:
        code:
          type: string
          description: 'The provider-specific tax code for this item. Items can be classified with tax codes relevant to each Tax Provider, configured by the merchant, and assigned to their products within BigCommerce. A tax code is intended to apply to multiple products. This code should match the tax codes provided by the third-party integration.'
        class_id:
          type: string
          description: The ID of the tax class defined in the merchant’s BigCommerce store. May have a UUID value.
        name:
          type: string
          description: The human-readable name of this tax class in the merchant’s BigCommerce store.
      required:
        - code
        - class_id
        - name
      x-internal: false
    response-quote:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the tax quote that was requested. This must match the ID of the requested quote.
        documents:
          type: array
          description: 'Represents an order quote or part of an order quote of tax-relevant items fulfilled from a single origin address to a single destination address, including arrays of shipping and handling fee objects for each item. Most order quotes contain a single document; however, BigCommerce supports "multi-address orders", which may come from or go to distinct sets of addresses and thus require multiple documents per quote.'
          items:
            $ref: '#/components/schemas/response-document'
      required:
        - id
        - documents
      title: Quote
      x-internal: false
    response-document:
      type: object
      title: Document
      properties:
        id:
          type: string
          description: A unique identifier for this consignment. Must match the ID of the corresponding Document Request.
        external_id:
          type: string
          description: 'An optional unique identifier for the document stored in the external provider’s system. Currently not used in any end-to-end operation, but may be logged by BigCommerce and thus be helpful when resolving issues.'
        items:
          type: array
          description: Collection of items contained within this consignment that have had tax liabilities calculated. An item may or may not have gift wrapping.
          items:
            allOf:
              - $ref: '#/components/schemas/response-item'
              - type: object
                properties:
                  type:
                    $ref: '#/components/schemas/item_type'
                  wrapping:
                    type: object
                    description: Optional gift wrapping for items in the consignment.
                    nullable: true
                    allOf:
                      - $ref: '#/components/schemas/response-item'
                      - type: object
                        properties:
                          type:
                            $ref: '#/components/schemas/wrapping_type'
                        required: 
                          - type
                required:
                  - type
        shipping:
          type: object
          description: Shipping line item present in each document request.
          allOf:
            - $ref: '#/components/schemas/response-item'
            - type: object
              properties:
                type:
                  $ref: '#/components/schemas/shipping_type'
              required:
                - type
        handling:
          type: object
          description: Handling line item present in each document request.
          allOf:
            - $ref: '#/components/schemas/response-item'
            - type: object
              properties:
                type:
                  $ref: '#/components/schemas/handling_type'
              required:
                - type
      required:
        - id
        - items
        - shipping
        - handling
      x-internal: false
    response-item:
      type: object
      description: |-
        The tax liabilities calculated for a specific item.

        Note: Tax liabilities should be calculated with **quantity** accounted for.
      title: Item
      properties:
        id:
          type: string
          description: A unique identifier for the line item these tax liabilities are calculated for. Must match the corresponding request line item ID.
        price:
          $ref: '#/components/schemas/response-taxprice'
      required:
        - id
        - price
      x-internal: false
    response-taxprice:
      type: object
      properties:
        amount_inclusive:
          type: number
          description: The price of this line item inclusive of tax. Must be equal to **amount_exclusive** + **total_tax**.
        amount_exclusive:
          type: number
          description: The price of this line item exclusive of tax. Must be equal to **amount_inclusive** - **total_tax**.
        total_tax:
          type: number
          description: The total amount of tax that applied to this line item. Must be equal to **amount_inclusive** - **amount_exclusive**.
        tax_rate:
          type: number
          format: double
          description: The total tax rate that applied to this item. This is the aggregated rate of the individual rates in **sales_tax_summary**.
        sales_tax_summary:
          type: array
          description: Breakdown of the sales taxes that applied to this item.
          items:
            $ref: '#/components/schemas/SalesTax'
      required:
        - amount_inclusive
        - amount_exclusive
        - total_tax
        - tax_rate
        - sales_tax_summary
      title: TaxPrice
      x-internal: false
    SalesTax:
      type: object
      properties:
        name:
          type: string
          description: 'The human-readable name of this tax. Used for reporting. Depending on store configuration, may also be visible in the itemization of taxes at checkout, on invoices, and in control panel views. May not be empty.'
        rate:
          type: number
          format: double
          description: Decimal tax rate applied by this component tax rate. Tax rates support up to four decimal places. For example "0.1" for 10% and "0.0125" for 1.25%.
          example: 0.1
        amount:
          type: number
          format: double
          description: 'The absolute amount of tax applied to the item this SalesTax component is attached to, for this component rate. For example, if an item was $10 and this was a 5% component tax rate, the amount would be 0.50 (50 cents)'
        tax_class:
          $ref: '#/components/schemas/TaxClass'
        id:
          type: string
          description: |-
            Optional unique identifier for this sales tax, describing the relevant tax classification rule on the Tax Provider platform.

            Supplying an identifier allows BigCommerce to group related taxes together from all items in the order.

            This identifier is persisted by BigCommerce and may be desirable for auditing purposes between BigCommerce and the Tax Provider. Currently supports persisting integer values only (the string type indicates we may support UUID values in the future).
          example: '1701'
      required:
        - name
        - rate
        - amount
      x-internal: false
    item_type:
      type: string
      description: |-
        The type of item for the line item in the document.

        Tax estimate requests for order-level refunds have an additional line item with the type `refund`.
      enum:
        - item
        - refund
    shipping_type:
      type: string
      description: |-
        The type of item for the line item in the document.
      enum:
        - shipping
    handling_type:
      type: string
      description: |-
        The type of item for the line item in the document.
      enum:
        - handling
    wrapping_type:
      type: string
      description: |-
        The type of item for the line item in the document.
      enum:
        - wrapping
  securitySchemes:
    Authorization:
      type: http
      scheme: basic
      description: |-
        The [HTTP Basic Authentication](https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication) (developer.mozilla.org) credentials used to authenticate each API request to the Tax Provider from the associated store; set and update `username`, `password`, and optionally `profile`, using the [Update a Connection](/docs/apps-api/tax-app-connection#update-a-connection) request. `profile` is an optional field and will be used with supporting providers only.
        
        For more, see [developer-configured authentication](/api-docs/getting-started/authentication#developer-configured-authentication) for Provider APIs.

security:
  - Authorization: []

openapi: '3.0.3'
info:
  title: Tax Rates & Zones
  version: '1.0.0'
  description: Manage manual tax rates and zones.
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
tags:
  - name: Tax Zones
  - name: Tax Rates
paths:
  '/tax/zones':
    parameters:
      
      - $ref: '#/components/parameters/Accept'
    get:
      parameters:
        - $ref: '#/components/parameters/zoneIdIn'
      tags:
        - Tax Zones
      summary: Get Tax Zones
      description: 'Retrieve a selection of tax zones when you provide a list of tax zone IDs. Otherwise, retrieve all tax zones defined on the store.'
      operationId: get-tax-zones
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tax_Zone'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
              examples:
                Example 1:
                  value:
                    data:
                      - id: 2
                        name: example zone
                        enabled: false
                        price_display_settings:
                          show_inclusive: false
                          show_both_on_detail_view: false
                          show_both_on_list_view: false
                        shopper_target_settings:
                          locations:
                            - country_code: AR
                              subdivision_codes:
                                - T
                                - V
                              postal_codes: []
                            - country_code: AU
                              subdivision_codes:
                                - WA
                                - VIC
                              postal_codes: []
                          customer_groups:
                            - 2
                    meta: {}
    put:
      parameters:
        - $ref: '#/components/parameters/Content-Type'
      tags:
        - Tax Zones
      summary: Update Tax Zones
      description: Update one or more tax zones. Only the tax zone `id` field is required. Fields unspecified by the request will retain their current state.
      operationId: update-tax-zones
      requestBody:
        $ref: '#/components/requestBodies/Tax_ZoneArray'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tax_Zone'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
              examples:
                Example 1:
                  value:
                    data:
                      - id: 23
                        name: Australia
                        enabled: false
                        price_display_settings:
                          show_inclusive: false
                          show_both_on_detail_view: false
                          show_both_on_list_view: false
                        shopper_target_settings:
                          locations:
                            - country_code: AU
                              subdivision_codes: []
                              postal_codes:
                                - '2238'
                                - '2173'
                          customer_groups:
                            - 2
                    meta: {}
    post:
      parameters:
        - $ref: '#/components/parameters/Content-Type'
      tags:
        - Tax Zones
      summary: Create Tax Zones
      description: |-
        Create one or more tax zones.

        > #### Note
        > You cannot create a default tax zone.
        
      operationId: create-tax-zones
      requestBody:
        $ref: '#/components/requestBodies/Tax_ZoneArrayPOST'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tax_Zone'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
              examples:
                Example 1:
                  value:
                    data:
                      - id: 2
                        name: example zone
                        enabled: true
                        price_display_settings:
                          show_inclusive: true
                          show_both_on_detail_view: true
                          show_both_on_list_view: true
                        shopper_target_settings:
                          locations:
                            - country_code: AR
                              subdivision_codes:
                                - T
                                - V
                              postal_codes: []
                            - country_code: AU
                              subdivision_codes:
                                - WA
                                - VIC
                              postal_codes: []
                          customer_groups:
                            - 0
                    meta: {}
    delete:
      parameters:
        - $ref: '#/components/parameters/zoneIdIn'
      tags:
        - Tax Zones
      summary: Delete Tax Zones
      description: |-
        Delete one or more tax zones. Deleting a tax zone removes all associated tax rates.

        > #### Note
        > You must specify which zone(s) to delete using the `id:in` query parameter.

      operationId: delete-tax-zones
      responses:
        '204':
          description: No Content
  '/tax/rates':
    parameters:
      
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
        - Tax Rates
      summary: Get Tax Rates
      description: Retrieve a list of tax rates.
      operationId: get-tax-rates
      parameters:
        - $ref: '#/components/parameters/rateIdIn'
        - $ref: '#/components/parameters/taxZoneIdIn'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tax_Rate'
                  meta:
                    $ref: '#/components/schemas/Meta'
              examples: {}
    put:
      parameters:
        - $ref: '#/components/parameters/Content-Type'
      tags:
        - Tax Rates
      summary: Update Tax Rates
      description: Update one or more tax rates. Only the tax rate `id` field is required. Fields unspecified by the request will retain their current state.
      operationId: update-tax-rates
      requestBody:
        $ref: '#/components/requestBodies/Tax_RateArray'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tax_Rate'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
              examples:
                Example 1:
                  value:
                    data:
                      - id: 3
                        tax_zone_id: 2
                        name: Sales Tax
                        enabled: true
                        priority: 1
                        class_rates:
                          - rate: 10
                            tax_class_id: 0
                    meta: {}
    post:
      parameters:
        - $ref: '#/components/parameters/Content-Type'
      tags:
        - Tax Rates
      summary: Create Tax Rates
      description: Create one or more tax rates. Tax rates must be associated with a `tax_zone_id`.
      operationId: create-tax-rates
      requestBody:
        $ref: '#/components/requestBodies/Tax_RateArrayPOST'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tax_Rate'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
              examples:
                Example 1:
                  value:
                    data:
                      - id: 3
                        tax_zone_id: 2
                        name: Sales Tax
                        enabled: true
                        priority: 1
                        class_rates:
                          - rate: 5
                            tax_class_id: 0
                    meta: {}
    delete:
      parameters:
        - $ref: '#/components/parameters/rateIdIn'
      tags:
        - Tax Rates
      summary: Delete Tax Rates
      description: |- 
        Delete one or more tax rates.

        > #### Note
        > You must specify which rate(s) to delete using the `id:in` query parameter.

      operationId: delete-tax-rates
      responses:
        '204':
          description: No Content
components:
  requestBodies:
    Tax_RateArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Tax_RatePUT'
          examples:
            Example 1:
              value:
                - id: 3
                  tax_zone_id: 2
                  name: Sales Tax
                  enabled: true
                  priority: 1
                  class_rates:
                    - rate: 10
                      tax_class_id: 0
      required: true
    Tax_RateArrayPOST:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Tax_RatePOST'
          examples:
            Example 1:
              value:
                - tax_zone_id: 2
                  name: Sales Tax
                  enabled: true
                  priority: 1
                  class_rates:
                    - rate: 5
                      tax_class_id: 0
      required: true
    Tax_ZoneArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Tax_ZonePUT'
          examples:
            Example 1:
              value:
                - id: 3
                  name: Australia
                  enabled: false
                  price_display_settings:
                    show_inclusive: false
                    show_both_on_detail_view: false
                    show_both_on_list_view: false
                  shopper_target_settings:
                    locations:
                      - country_code: AU
                        postal_codes:
                          - '2238'
                          - '2173'
                    customer_groups:
                      - 2
      required: true
    Tax_ZoneArrayPOST:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Tax_ZonePOST'
          examples:
            Example 1:
              value:
                - name: example zone
                  enabled: true
                  price_display_settings:
                    show_inclusive: true
                    show_both_on_detail_view: true
                    show_both_on_list_view: true
                  shopper_target_settings:
                    locations:
                      - country_code: AR
                        subdivision_codes:
                          - T
                          - V
                      - country_code: AU
                        subdivision_codes:
                          - WA
                          - VIC
                    customer_groups:
                      - 0
      required: true
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      type: apiKey
      in: header
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Information & Settings | modify | `store_v2_information` |
        |  Information & Settings | read-only | `store_v2_information_read_only` |

        ### Authentication header

        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |

        ### Further reading

        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
  schemas:
    Tax_Zone:
      type: object
      x-examples: {}
      properties:
        id:
          type: integer
          description: 'Tax Zone ID. Internal identifier used to get, update, or delete a specific tax zone.'
        name:
          type: string
          description: The human-readable name for this tax zone. The name displays on the merchant's control panel.
          example: Australia
        enabled:
          type: boolean
          description: Indicates whether a tax zone is enabled. Tax operations are only for enabled zones.
          default: true
        price_display_settings:
          type: object
          description: Settings that describe how a store displays prices to shoppers matched with this tax zone.
          properties:
            show_inclusive:
              type: boolean
              description: Indicates whether to show prices as tax inclusive or tax exclusive to shoppers matched with this tax zone.
            show_both_on_detail_view:
              type: boolean
              description: 'Indicates whether to show both tax inclusive and tax exclusive prices when viewing product detail; for example, on product pages. This view applies to shoppers matched with this tax zone.'
            show_both_on_list_view:
              type: boolean
              description: 'Indicates whether to show both tax inclusive and tax exclusive prices when viewing a list of products; for example, on category and brand pages. This view applies to shoppers matched with this tax zone.'
        shopper_target_settings:
          type: object
          description: Settings that describe which shoppers match this tax zone and help determine the most appropriate target for a shopper. You cannot define shopper target settings for the default tax zone because it must accommodate all shoppers who donʼt qualify for any other zone.
          properties:
            locations:
              type: array
              description: A tax zone may target shoppers in one or more locations.
              items:
                type: object
                properties:
                  country_code:
                    type: string
                    example: AU
                    description: Two-letter ISO 3166-1 country code
                  subdivision_codes:
                    type: array
                    example:
                      - NSW
                      - QLD
                    description: Three-letter ISO 3166-2 subdivision code
                    items:
                      type: string
                  postal_codes:
                    type: array
                    example:
                      - '2234'
                      - '2170'
                    items:
                      type: string
            customer_groups:
              type: array
              description: One or more customer groups that a tax zone targets. Empty array if zone applies to all customers.
              items:
                type: integer
    Tax_ZonePUT:
      type: object
      properties:
        id:
          type: integer
          description: 'Tax Zone ID. Internal identifier used to get, update, or delete a specific tax zone.'
        name:
          type: string
          description: The human-readable name for this tax zone. The name displays on the merchant's control panel.
          example: Australia
        enabled:
          type: boolean
          description: Indicates whether a tax zone is enabled. Tax operations are only for enabled zones.
          default: true
        price_display_settings:
          type: object
          description: Settings that describe how a store displays prices to shoppers matched with this tax zone.
          properties:
            show_inclusive:
              type: boolean
              description: Indicates whether to show prices as tax inclusive or tax exclusive to shoppers matched with this tax zone.
            show_both_on_detail_view:
              type: boolean
              description: 'Indicates whether to show both tax inclusive and tax exclusive prices when viewing product detail; for example, on product pages. This view applies to shoppers matched with this tax zone.'
            show_both_on_list_view:
              type: boolean
              description: 'Indicates whether to show both tax inclusive and tax exclusive prices when viewing a list of products; for example, on category and brand pages. This view applies to shoppers matched with this tax zone.'
        shopper_target_settings:
          type: object
          description: Settings that describe which shoppers match this tax zone and help determine the most appropriate target for a shopper. You cannot define shopper target settings for the default tax zone because it must accommodate all shoppers who donʼt qualify for any other zone.
          properties:
            locations:
              type: array
              description: A tax zone may target shoppers in one or more locations.
              items:
                type: object
                properties:
                  country_code:
                    type: string
                    example: AU
                    description: Two-letter ISO 3166-1 country code
                  subdivision_codes:
                    type: array
                    example:
                      - NSW
                      - QLD
                    description: Three-letter ISO 3166-2 subdivision code
                    items:
                      type: string
                  postal_codes:
                    type: array
                    example:
                      - '2234'
                      - '2170'
                    items:
                      type: string
            customer_groups:
              type: array
              description: One or more customer groups that a tax zone targets. Empty array if zone applies to all customers.
              items:
                type: integer
      required:
        - id
    Tax_ZonePOST:
      type: object
      properties:
        name:
          type: string
          description: The human-readable name for this tax zone. The name displays on the merchant's control panel.
          example: Australia
        enabled:
          type: boolean
          description: Indicates whether a tax zone is enabled. Tax operations are only for enabled zones.
          default: true
        price_display_settings:
          type: object
          description: Settings that describe how a store displays prices to shoppers matched with this tax zone.
          properties:
            show_inclusive:
              type: boolean
              description: Indicates whether to show prices as tax inclusive or tax exclusive to shoppers matched with this tax zone.
            show_both_on_detail_view:
              type: boolean
              description: 'Indicates whether to show both tax inclusive and tax exclusive prices when viewing product detail; for example, on product pages. This view applies to shoppers matched with this tax zone.'
              default: false
            show_both_on_list_view:
              type: boolean
              description: 'Indicates whether to show both tax inclusive and tax exclusive prices when viewing a list of products; for example, on category and brand pages. This view applies to shoppers matched with this tax zone.'
              default: false
          required:
            - show_inclusive
        shopper_target_settings:
          type: object
          description: Settings that describe which shoppers match this tax zone and help determine the most appropriate target for a shopper.
          properties:
            locations:
              type: array
              description: A tax zone may target shoppers in one or more locations.
              items:
                type: object
                properties:
                  country_code:
                    type: string
                    example: AU
                    description: Two-letter ISO 3166-1 country code
                  subdivision_codes:
                    type: array
                    example:
                      - NSW
                      - QLD
                    description: Three-letter ISO 3166-2 subdivision code
                    items:
                      type: string
                  postal_codes:
                    type: array
                    example:
                      - '2234'
                      - '2170'
                    items:
                      type: string
            customer_groups:
              type: array
              description: One or more customer groups that a tax zone targets. Empty array if zone applies to all customers.
              items:
                type: integer
          required:
            - locations
      required:
        - name
    Tax_Rate:
      type: object
      properties:
        class_rates:
          type: array
          description: Tax rates for tax classes. You must assign at least one tax rate for each tax class defined on a store.
          items:
            type: object
            properties:
              rate:
                type: number
                description: The tax rate that you apply to the items in a tax class.
                example: 5
              tax_class_id:
                type: integer
                description: ID of a tax class. You must associate a tax rate with a tax class. The rate will apply to all the items in this tax class.
                example: 1
        enabled:
          type: boolean
          description: Indicates whether a tax rate is enabled. Tax operations are only for enabled zones.
          default: true
        id:
          type: integer
          description: Tax Rate ID. Internal identifier to update and delete a specific tax rate.
          example: 3
        name:
          type: string
          description: 'The human-readable name for this tax zone. The name displays on the merchant control panel and to shoppers, depending on store tax settings.'
          example: Sales Tax
        priority:
          type: integer
          description: 'Allows for compounding tax rates, common in certain jurisdictions.'
          default: 1
        tax_zone_id:
          type: integer
          description: ID of an associated tax zone. You must associate a tax rate with a tax zone.
          example: 2
      x-examples: {}
    Tax_RatePUT:
      type: object
      properties:
        class_rates:
          type: array
          description: Tax rates for tax classes. You must assign at least one tax rate for each tax class defined on a store.
          items:
            type: object
            properties:
              rate:
                type: number
                description: The tax rate that you apply to the items in a tax class.
                example: 5
              tax_class_id:
                type: integer
                description: ID of a tax class. You must associate a tax rate with a tax class. The rate will apply to all the items in this tax class.
                example: 1
        enabled:
          type: boolean
          description: Indicates whether a tax rate is enabled. Tax operations are only for enabled zones.
          default: true
        id:
          type: integer
          description: Tax Rate ID. Internal identifier to update and delete a specific tax rate.
          example: 3
        name:
          type: string
          description: 'The human-readable name for this tax zone. The name displays on the merchant control panel and to shoppers, depending on store tax settings.'
          example: Sales Tax
        priority:
          type: integer
          description: 'Allows for compounding tax rates, common in certain jurisdictions.'
          default: 1
        tax_zone_id:
          type: integer
          description: ID of an associated tax zone. You must associate a tax rate with a tax zone.
          example: 2
      required:
        - id
    Tax_RatePOST:
      type: object
      properties:
        class_rates:
          type: array
          description: Tax rates for tax classes. You must assign at least one tax rate for each tax class defined on a store.
          items:
            type: object
            properties:
              rate:
                type: number
                description: The tax rate that you apply to the items in a tax class.
                example: 5
              tax_class_id:
                type: integer
                description: ID of a tax class. You must associate a tax rate with a tax class. The rate will apply to all items in this tax class.
                example: 1
            required:
              - rate
              - tax_class_id
        enabled:
          type: boolean
          description: Indicates whether a tax rate is enabled. Tax operations are only for enabled zones.
          default: true
        name:
          type: string
          description: 'The human-readable name for this tax zone. The name displays on the merchant control panel and to shoppers, depending on store tax settings.'
          example: Sales Tax
        priority:
          type: integer
          description: 'Allows for compounding tax rates, common in certain jurisdictions.'
          default: 1
        tax_zone_id:
          type: integer
          description: ID of an associated tax zone. You must associate a tax rate with a tax zone.
          example: 2
      required:
        - class_rates
        - name
        - tax_zone_id
    Meta:
      type: object
      properties:
        pagination:
          type: object
          properties:
            total:
              type: integer
            count:
              type: integer
            per_page:
              type: integer
            current_page:
              type: integer
            total_pages:
              type: integer
            links:
              type: object
              properties:
                current:
                  type: string
      x-examples:
        Example 1:
          pagination:
            total: 1
            count: 1
            per_page: 50
            current_page: 1
            total_pages: 1
            links:
              current: '?tax_zone_id%3Ain=1&page=1&limit=50'
      title: Meta
    MetaOpen:
      title: Response meta
      type: object
      properties: {}
      additionalProperties: true
      description: Response metadata.
  parameters:
    storeHash:
      name: store_hash
      in: path
      required: true
      description: Permanent ID of the BigCommerce store.
      schema:
        type: string
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    Content-Type:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
    idIn:
      name: 'id:in'
      in: query
      schema:
        type: array
        items:
          type: integer
        minItems: 1
      style: form
      explode: false
      description: Filter by `id`. Use a comma-separated CSV string of IDs for multiple selections. For example, `5` or `12,34,56`.
      required: false
    zoneIdIn:
      name: 'id:in'
      in: query
      schema:
        type: array
        items:
          type: integer
        minItems: 1
      style: form
      explode: false
      description: Filter by tax zone `id`. Use a comma-separated CSV string of IDs for multiple tax zones. For example, `5` or `12,34,56`.
      required: false
    rateIdIn:
      name: 'id:in'
      in: query
      schema:
        type: array
        items:
          type: integer
        minItems: 1
      style: form
      explode: false
      description: Filter by tax rate `id`. Use a comma-separated CSV string of IDs for multiple tax rates. For example, `5` or `12,34,56`.
      required: false
    taxZoneIdIn:
      name: 'tax_zone_id:in'
      in: query
      schema:
        type: array
        items:
          type: integer
        minItems: 1
      style: form
      explode: false
      description: Filter by tax zone `id`. Use a comma-separated CSV string of IDs for multiple tax zones. For example, `5` or `12,34,56`.
      required: false
security:
  - X-Auth-Token: []


openapi: '3.0.0'
info:
  title: Tax Settings
  version: ''
  description: Manage tax settings
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Tax Settings
paths:
  '/tax/settings':
    get:
      tags:
        - Tax Settings
      summary: Get Tax Settings
      description: Retrieves global-level tax settings.
      operationId: get-tax-settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tax_Settings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
    put:
      tags:
        - Tax Settings
      summary: Update Tax Settings
      description: Updates global-level tax settings.
      operationId: set-tax-settings
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tax_Settings_Req'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tax_Settings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
        '422':
          description: The request body does not meet the specification.
    parameters:
      - $ref: '#/components/parameters/Accept'
components:
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Information & Settings | modify | `store_v2_information` |
        |  Information & Settings | read-only | `store_v2_information_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header
  schemas:
    Tax_Settings:
      type: object
      properties:
        tax_entered_with_prices:
          type: boolean
          description: Whether prices entered on this store include a tax component or not.
        price_display_settings:
          type: object
          description: Settings that describe how prices display at the global level.
          properties:
            show_inclusive_in_control_panel:
              type: boolean
              description: Whether to show prices as tax inclusive or tax exclusive in the BigCommerce control panel.
            invoice_price_display_strategy:
              type: string
              description: 'Whether to show prices as tax inclusive or tax exclusive across all invoices, or use the shopperʼs tax zone for price display on invoices.'
              default: ZONE
              enum:
                - ZONE
                - INCLUSIVE
                - EXCLUSIVE
        fallback_strategy:
          type: string
          description: 'Describes the fallback behavior that applies when a tax provider produces an error. A merchant may decide to use a flat 10% fallback tax rate, their basic tax settings, or to block the transaction until they achieve a successful result.'
          default: FIXED
          enum:
            - FIXED
            - BASIC
            - DISABLE
        should_subtract_store_tax:
          default: true
          type: boolean
          description: This setting applies only if a merchant enters tax-inclusive prices. When enabled, the store subtracts the itemʼs store tax rate before calculating tax using the shopperʼs tax zone. The tax-exclusive amount will be the same across all tax zones. When disabled, the tax-inclusive price remains the same across all tax zones; only the tax amount will vary based on the shopperʼs location. The tax-exclusive amount may vary among tax zones. These calculations are relevant for tax pricing and tax quotations that use basic tax.    
    Tax_Settings_Req:
      type: object
      properties:
        tax_entered_with_prices:
          type: boolean
          description: Whether prices entered on this store include a tax component or not.
        price_display_settings:
          type: object
          description: Settings that describe how prices display at the global level.
          properties:
            show_inclusive_in_control_panel:
              type: boolean
              description: Whether to show prices as tax inclusive or tax exclusive in the BigCommerce control panel.
            invoice_price_display_strategy:
              type: string
              description: 'Whether to show prices as tax inclusive or tax exclusive across all invoices, or use the shopperʼs tax zone for price display on invoices.'
              enum:
                - ZONE
                - INCLUSIVE
                - EXCLUSIVE
        fallback_strategy:
          type: string
          description: 'Decribes the fallback behaviour that applies when a tax provider produces an error. A merchant may decide to use a flat 10% fallback tax rate, their basic tax settings, or to block the transaction until a successful result can be achieved.'
          enum:
            - FIXED
            - BASIC
            - DISABLE
        should_subtract_store_tax:
          default: true
          type: boolean
          description: This setting applies only if a merchant enters tax-inclusive prices. When enabled, the store subtracts the itemʼs store tax rate before calculating tax using the shopperʼs tax zone. The tax-exclusive amount will be the same across all tax zones. When disabled, the tax-inclusive price remains the same across all tax zones; only the tax amount will vary based on the shopperʼs location. The tax-exclusive amount may vary among tax zones. These calculations are relevant for tax pricing and tax quotations that use basic tax.
    MetaOpen:
      title: Response meta
      type: object
      properties: {}
      additionalProperties: true
      description: Response metadata.

openapi: '3.0.0'
info:
  title: Themes
  version: ''
  description: |-
    Backup, restore, download, and activate themes; and, get the status of theme jobs and read theme configurations.
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  license:
    name: ''
tags:
  - name: Themes
  - name: Theme Actions
  - name: Theme Configurations
  - name: Theme Custom Templates
  - name: Theme Jobs
security:
  - X-Auth-Token: []
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
paths:
  '/themes':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
        - Themes
      operationId: getStoreThemes
      summary: Get all Themes
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemesCollectionResponse'
              examples:
                response:
                  value:
                    data:
                      - uuid: 872b3e20-731f-0136-9d2f-633ff0d6ced1
                        variations:
                          - uuid: 877427a0-731f-0136-9d2f-633ff0d6ced1
                            name: Light
                            description: 'Ideal for a wide range of businesses and brands, this design is fully responsive, simple, and ready for you to add your branding, logo, and products. It comes ready to build a clean looking and beautiful store with features such as homepage carousel, social media icons, featured and top selling products, and faceted search (which is available on select BigCommerce plans). Fully express your brand by using our Theme Editor to quickly and easily style your site’s fonts and colors, all without the need to write code.'
                            external_id: light
                          - uuid: 87be3180-731f-0136-9d2f-633ff0d6ced1
                            name: Bold
                            description: 'Ideal for a wide range of businesses and brands, this design is fully responsive, simple, and ready for you to add your branding, logo, and products. It comes ready to build a clean looking and beautiful store with features such as homepage carousel, social media icons, featured and top selling products, and faceted search (which is available on select BigCommerce plans). Fully express your brand by using our Theme Editor to quickly and easily style your site’s fonts and colors, all without the need to write code.'
                            external_id: bold
                          - uuid: 87d48e90-731f-0136-9d2f-633ff0d6ced1
                            name: Warm
                            description: 'Ideal for a wide range of businesses and brands, this design is fully responsive, simple, and ready for you to add your branding, logo, and products. It comes ready to build a clean looking and beautiful store with features such as homepage carousel, social media icons, featured and top selling products, and faceted search (which is available on select BigCommerce plans). Fully express your brand by using our Theme Editor to quickly and easily style your site’s fonts and colors, all without the need to write code.'
                            external_id: warm
                        name: Cornerstone-blog
                        is_private: true
                        is_active: false
                      - uuid: e3d82ce0-9bae-0133-0de7-525400970412
                        variations:
                          - uuid: b16c3fe0-7bcb-0136-b5fc-07fe54a9e639
                            name: Light
                            description: 'Ideal for a wide range of businesses and brands, this design is fully responsive, simple, and ready for you to add your branding, logo, and products. It comes ready to build a clean looking and beautiful store with features such as homepage carousel, social media icons, featured and top selling products, and faceted search (which is available on select BigCommerce plans). Fully express your brand by using our Theme Editor to quickly and easily style your site’s fonts and colors, all without the need to write code.'
                            external_id: light
                          - uuid: b17d57e0-7bcb-0136-b5fc-07fe54a9e639
                            name: Bold
                            description: 'Ideal for a wide range of businesses and brands, this design is fully responsive, simple, and ready for you to add your branding, logo, and products. It comes ready to build a clean looking and beautiful store with features such as homepage carousel, social media icons, featured and top selling products, and faceted search (which is available on select BigCommerce plans). Fully express your brand by using our Theme Editor to quickly and easily style your site’s fonts and colors, all without the need to write code.'
                            external_id: bold
                          - uuid: b18ad610-7bcb-0136-b5fc-07fe54a9e639
                            name: Warm
                            description: 'Ideal for a wide range of businesses and brands, this design is fully responsive, simple, and ready for you to add your branding, logo, and products. It comes ready to build a clean looking and beautiful store with features such as homepage carousel, social media icons, featured and top selling products, and faceted search (which is available on select BigCommerce plans). Fully express your brand by using our Theme Editor to quickly and easily style your site’s fonts and colors, all without the need to write code.'
                            external_id: warm
                        name: Cornerstone
                        is_private: false
                        is_active: true
                      - uuid: 1242c920-a5a6-0133-a20e-525400970412
                        variations:
                          - uuid: fec9fe60-7ede-0136-effe-0cbd49ed50aa
                            name: Minimal
                            description: 'Fortune is a standout theme for cutting-edge online stores. Customers will be transfixed by its striking hero area, which puts your imagery on full display, along with its sleek navigation and unique product grid. Ideal for small-to-medium-sized catalogs, Fortune has everything you need to command and convert shoppers.'
                            external_id: minimal
                          - uuid: fee26530-7ede-0136-effe-0cbd49ed50aa
                            name: Bright
                            description: 'Fortune is a standout theme for cutting-edge online stores. Customers will be transfixed by its striking hero area, which puts your imagery on full display, along with its sleek navigation and unique product grid. Ideal for small-to-medium-sized catalogs, Fortune has everything you need to command and convert shoppers.'
                            external_id: bright
                          - uuid: fef38820-7ede-0136-effe-0cbd49ed50aa
                            name: Contrast
                            description: 'Fortune is a standout theme for cutting-edge online stores. Customers will be transfixed by its striking hero area, which puts your imagery on full display, along with its sleek navigation and unique product grid. Ideal for small-to-medium-sized catalogs, Fortune has everything you need to command and convert shoppers.'
                            external_id: contrast
                          - uuid: ff085ab0-7ede-0136-effe-0cbd49ed50aa
                            name: Highlight
                            description: 'Fortune is a standout theme for cutting-edge online stores. Customers will be transfixed by its striking hero area, which puts your imagery on full display, along with its sleek navigation and unique product grid. Ideal for small-to-medium-sized catalogs, Fortune has everything you need to command and convert shoppers.'
                            external_id: highlight
                        name: Fortune
                        is_private: false
                        is_active: false
                    meta: {}
      description: Returns a list of store *Themes*.
    post:
      tags:
        - Themes
      operationId: uploadTheme
      summary: Upload a Theme
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  description: The file.
                  type: string
                  format: binary
              required:
                - file
        required: true
      responses:
        '201':
          description: Job ID for the background job processing the theme upload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobId'
              examples:
                response:
                  value:
                    job_id: ceea1917b1518f5ae491da6ad8a56336
        default:
          description: Error message.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: |
                      Error payload for the BigCommerce API.
                    properties:
                      status:
                        description: |
                          The HTTP status code.
                        type: integer
                      title:
                        description: |
                          The error title describing the particular error.
                        type: string
                      type:
                        type: string
                      instance:
                        type: string
                    title: Base Error
                  - type: object
                    properties:
                      errors:
                        type: object
                        properties: {}
                        additionalProperties: true
                        title: DetailedErrors
                title: Error Response
      description: |-
        Uploads a new *Theme* to your BigCommerce store.

        **Required Fields**
        * file
  '/themes/{uuid}':
    get:
      tags:
        - Themes
      operationId: getStoreTheme
      summary: Get a Theme
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeResponse'
              examples:
                response:
                  value:
                    data:
                      uuid: e3d82ce0-9bae-0133-0de7-525400970412
                      variations:
                        - uuid: b16c3fe0-7bcb-0136-b5fc-07fe54a9e639
                          name: Light
                          description: 'Ideal for a wide range of businesses and brands, this design is fully responsive, simple, and ready for you to add your branding, logo, and products. It comes ready to build a clean looking and beautiful store with features such as homepage carousel, social media icons, featured and top selling products, and faceted search (which is available on select BigCommerce plans). Fully express your brand by using our Theme Editor to quickly and easily style your site’s fonts and colors, all without the need to write code.'
                          external_id: light
                        - uuid: b17d57e0-7bcb-0136-b5fc-07fe54a9e639
                          name: Bold
                          description: 'Ideal for a wide range of businesses and brands, this design is fully responsive, simple, and ready for you to add your branding, logo, and products. It comes ready to build a clean looking and beautiful store with features such as homepage carousel, social media icons, featured and top selling products, and faceted search (which is available on select BigCommerce plans). Fully express your brand by using our Theme Editor to quickly and easily style your site’s fonts and colors, all without the need to write code.'
                          external_id: bold
                        - uuid: b18ad610-7bcb-0136-b5fc-07fe54a9e639
                          name: Warm
                          description: 'Ideal for a wide range of businesses and brands, this design is fully responsive, simple, and ready for you to add your branding, logo, and products. It comes ready to build a clean looking and beautiful store with features such as homepage carousel, social media icons, featured and top selling products, and faceted search (which is available on select BigCommerce plans). Fully express your brand by using our Theme Editor to quickly and easily style your site’s fonts and colors, all without the need to write code.'
                          external_id: warm
                      name: Cornerstone
                      is_private: false
                      is_active: false
                    meta: {}
        default:
          description: Error message.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: |
                      Error payload for the BigCommerce API.
                    properties:
                      status:
                        description: |
                          The HTTP status code.
                        type: integer
                      title:
                        description: |
                          The error title describing the particular error.
                        type: string
                      type:
                        type: string
                      instance:
                        type: string
                    title: Base Error
                  - type: object
                    properties:
                      errors:
                        type: object
                        properties: {}
                        additionalProperties: true
                        title: Detailed Errors
                title: Error Response
      description: Returns a store *Theme*. The theme variation is not available at this endpoint.
    delete:
      tags:
        - Themes
      operationId: deleteStoreTheme
      summary: Delete a Theme
      responses:
        '204':
          description: ''
        default:
          description: Error message.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: |
                      Error payload for the BigCommerce API.
                    properties:
                      status:
                        description: |
                          The HTTP status code.
                        type: integer
                      title:
                        description: |
                          The error title describing the particular error.
                        type: string
                      type:
                        type: string
                      instance:
                        type: string
                    title: Base Error
                  - type: object
                    properties:
                      errors:
                        type: object
                        properties: {}
                        additionalProperties: true
                        title: DetailedErrors
                title: Error Response
      description: |-
        Deletes a store *Theme*.
        Theme variations can not be deleted using this endpoint. This will delete the theme and all variations.
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ThemeIdParam'
  '/themes/{uuid}/actions/download':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ThemeIdParam'
    post:
      tags:
        - Theme Actions
      operationId: downloadTheme
      summary: Download a Theme
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WhichThemeToDownload'
        required: true
        x-examples:
          application/json:
            which: last_created
      responses:
        '200':
          description: Job ID for the background job processing the download.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobId'
              examples:
                response:
                  value:
                    job_id: ceea1917b1518f5ae491da6ad8a56336
        default:
          description: Error message.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: |
                      Error payload for the BigCommerce API.
                    properties:
                      status:
                        description: |
                          The HTTP status code.
                        type: integer
                      title:
                        description: |
                          The error title describing the particular error.
                        type: string
                      type:
                        type: string
                      instance:
                        type: string
                    title: Base Error
                  - type: object
                    properties:
                      errors:
                        type: object
                        properties: {}
                        additionalProperties: true
                        title: Detailed Errors
                title: Error Response
      description: Downloads a stores *Theme*.
  '/themes/actions/activate':
    parameters:
      - $ref: '#/components/parameters/Accept'
    post:
      tags:
        - Theme Actions
      operationId: activateStoreTheme
      summary: Activate a Theme
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activate'
        description: Request parameters.
        required: true
        x-examples:
          application/json:
            variation_id: 87be3180-731f-0136-9d2f-633ff0d6ced1
            which: original
      responses:
        '204':
          description: This returns when the request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoContent'
        default:
          description: Error message.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: |
                      Error payload for the BigCommerce API.
                    properties:
                      status:
                        description: |
                          The HTTP status code.
                        type: integer
                      title:
                        description: |
                          The error title describing the particular error.
                        type: string
                      type:
                        type: string
                      instance:
                        type: string
                    title: Base Error
                  - type: object
                    properties:
                      errors:
                        type: object
                        properties: {}
                        additionalProperties: true
                        title: Detailed Errors
                title: Error Response
      description: |-
        Actives a store *Theme*.

        This returns a 204 response upon success.
  '/themes/jobs/{job_id}':
    get:
      tags:
        - Theme Jobs
      operationId: getJob
      summary: Get a Theme Job
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
              examples:
                response:
                  value:
                    data:
                      id: ceea1917b1518f5ae491da6ad8a56336
                      time: '2018-09-18T13:59:01Z'
                      status: COMPLETED
                      percent_complete: 100
                      result:
                        theme_id: ed1982d0-9d78-0136-33ba-0d84a0c6431b
                      warnings: []
                      errors: []
                    meta: {}
        default:
          description: Error message.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: |
                      Error payload for the BigCommerce API.
                    properties:
                      status:
                        description: |
                          The HTTP status code.
                        type: integer
                      title:
                        description: |
                          The error title describing the particular error.
                        type: string
                      type:
                        type: string
                      instance:
                        type: string
                    title: Base Error
                  - type: object
                    properties:
                      errors:
                        type: object
                        properties: {}
                        additionalProperties: true
                        title: Detailed Errors
                title: Error Response
      description: 'Returns a theme *Job*. If job is completed, the result is included in the response.'
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/JobIdParam'
  '/themes/{uuid}/configurations':
    get:
      responses:
        '200':
          $ref: '#/components/responses/themesConfigurations_RespCollection'
      tags:
        - Theme Configurations
      summary: Get Theme Configuration
      description: |-
        Returns a list of theme's configurations.

        **Usage Notes**:
        * At least one filter must be provided.
      parameters:
        - $ref: '#/components/parameters/ThemeIdParam'
        - schema:
            type: array
            items:
              type: string
          in: query
          name: 'uuid:in'
          description: Filter configurations by a list of configuration UUIDs.
        - schema:
            type: array
            items:
              type: integer
          in: query
          name: 'channel_id:in'
          description: Filter configurations by a list of channel_ids.
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
        - schema:
            type: string
          in: query
          name: variation_uuid
          description: Filter configurations by a variation_uuid.
    parameters:
      - $ref: '#/components/parameters/Accept'
      - schema:
          type: string
        name: uuid
        in: path
        required: true
      - in: query
        name: 'site_id:in'
        description: Filter configurations by a list of site_ids
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      - in: query
        name: 'uuid:in'
        description: Filter configurations by a list of configuration UUIDs
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - in: query
        name: variation_uuid
        description: Filter configurations by a variation_uuid
        schema:
          type: string
      - name: page
        description: |
          Specifies the page number in a limited (paginated) list.
        required: false
        in: query
        schema:
          type: integer
      - name: limit
        description: |
          Controls the number of items per page in a limited (paginated) list of products.
        required: false
        in: query
        schema:
          type: integer
  '/themes/{uuid}/configurations/validate':
    post:
      parameters:
        - $ref: '#/components/parameters/ContentType'
      responses:
        '200':
          description: Theme passes validation.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '422':
          description: 'Theme failed validation, detailed errors in response.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      summary: Validate Theme Configuration
      tags:
        - Theme Configurations
      description: Validates a theme configuration against the theme's schema without creating it. Useful for testing schemas before creation.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/themeConfiguration_Write'
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ThemeIdParam'
  '/themes/custom-templates/{version_uuid}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - schema:
          type: string
        name: version_uuid
        in: path
        required: true
    get:
      summary: Get Custom Templates
      tags:
        - Theme Custom Templates
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      product:
                        type: array
                        items:
                          type: string
                      category:
                        type: array
                        items:
                          type: string
                      brand:
                        type: array
                        items:
                          type: string
                      page:
                        type: array
                        items:
                          type: string
                  meta:
                    $ref: '#/components/schemas/OpenMeta'
              examples:
                example-1:
                  value:
                    data:
                      product:
                        - custom-product-1.html
                      category: []
                      brand:
                        - custom-brand-1.html
                      page:
                        - custom-page-1.html
                        - holiday-page.html
                    meta: {}
      operationId: get-themes-theme_uuid-custom-templates
      description: Enumerate available custom templates for in the theme files in a specific theme version for each supported entity type.
components:
  parameters:
    JobIdParam:
      name: job_id
      description: The job identifier.
      in: path
      required: true
      schema:
        type: string
    ThemeIdParam:
      name: uuid
      description: The theme identifier.
      in: path
      required: true
      schema:
        type: string
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
    PageParam:
      name: page
      description: |
        Specifies the page number in a limited (paginated) list.
      required: false
      in: query
      schema:
        type: integer
    LimitParam:
      name: limit
      description: |
        Controls the number of items per page in a limited (paginated) list of products.
      required: false
      in: query
      schema:
        type: integer
  responses:
    themesConfigurations_RespCollection:
      description: ''
      content:
        application/json:
          schema:
            description: |
              Response payload for the BigCommerce API.
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/themeConfiguration_Full'
              meta:
                $ref: '#/components/schemas/CollectionMeta'
          examples:
            response:
              value:
                data:
                  - uuid: in
                    theme_uuid: amet Ut
                    variation_id: ut
                    settings: {}
                    date_created: ei
                    site_id: 52736226
                meta:
                  pagination:
                    total: 36
                    count: 36
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      previous: nostrud in
                      current: '?page=1&limit=50'
                      next: in
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Themes | modify | `store_themes_manage` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header
  schemas:
    CollectionMeta:
      type: object
      description: 'Data about the response, including pagination and collection totals.'
      properties:
        pagination:
          type: object
          description: 'Data about the response, including pagination and collection totals.'
          title: Pagination
          properties:
            total:
              type: integer
              description: |
                Total number of items in the result set.
              example: 36
            count:
              type: integer
              description: |
                Total number of items in the collection response.
              example: 36
            per_page:
              type: integer
              description: |
                The amount of items returned in the collection per page, controlled by the limit parameter.
              example: 50
            current_page:
              type: integer
              description: |
                The page you are currently on within the collection.
              example: 1
            total_pages:
              type: integer
              description: |
                The total number of pages in the collection.
              example: 1
            links:
              type: object
              description: |
                Pagination links for the previous and next parts of the whole collection.
              properties:
                previous:
                  type: string
                  description: |
                    Link to the previous page returned in the response.
                current:
                  type: string
                  description: |
                    Link to the current page returned in the response.
                  example: '?page=1&limit=50'
                next:
                  type: string
                  description: |
                    Link to the next page returned in the response.
      title: Collection Meta
      x-internal: false
    Pagination:
      type: object
      description: 'Data about the response, including pagination and collection totals.'
      title: Pagination
      properties:
        total:
          type: integer
          description: |
            Total number of items in the result set.
          example: 36
        count:
          type: integer
          description: |
            Total number of items in the collection response.
          example: 36
        per_page:
          type: integer
          description: |
            The amount of items returned in the collection per page, controlled by the limit parameter.
          example: 50
        current_page:
          type: integer
          description: |
            The page you are currently on within the collection.
          example: 1
        total_pages:
          type: integer
          description: |
            The total number of pages in the collection.
          example: 1
        links:
          type: object
          description: |
            Pagination links for the previous and next parts of the whole collection.
          properties:
            previous:
              type: string
              description: |
                Link to the previous page returned in the response.
            current:
              type: string
              description: |
                Link to the current page returned in the response.
              example: '?page=1&limit=50'
            next:
              type: string
              description: |
                Link to the next page returned in the response.
      x-internal: false
    Meta:
      type: object
      description: 'Data about the response, including pagination and collection totals.'
      title: Collection Meta
      properties:
        pagination:
          type: object
          description: 'Data about the response, including pagination and collection totals.'
          title: Pagination
          properties:
            total:
              type: integer
              description: |
                Total number of items in the result set.
              example: 36
            count:
              type: integer
              description: |
                Total number of items in the collection response.
              example: 36
            per_page:
              type: integer
              description: |
                The amount of items returned in the collection per page, controlled by the limit parameter.
              example: 50
            current_page:
              type: integer
              description: |
                The page you are currently on within the collection.
              example: 1
            total_pages:
              type: integer
              description: |
                The total number of pages in the collection.
              example: 1
            links:
              type: object
              description: |
                Pagination links for the previous and next parts of the whole collection.
              properties:
                previous:
                  type: string
                  description: |
                    Link to the previous page returned in the response.
                current:
                  type: string
                  description: |
                    Link to the current page returned in the response.
                  example: '?page=1&limit=50'
                next:
                  type: string
                  description: |
                    Link to the next page returned in the response.
      x-internal: false
    ErrorResponse:
      allOf:
        - type: object
          description: |
            Error payload for the BigCommerce API.
          properties:
            status:
              description: |
                The HTTP status code.
              type: integer
            title:
              description: |
                The error title describing the particular error.
              type: string
            type:
              type: string
            instance:
              type: string
          title: Base Error
        - type: object
          properties:
            errors:
              type: object
              properties: {}
              additionalProperties: true
              title: Detailed Errors
      title: Error Response
      x-internal: false
    BaseError:
      type: object
      description: |
        Error payload for the BigCommerce API.
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
      title: Base Error
      x-internal: false
    DetailedErrors:
      type: object
      properties: {}
      additionalProperties: true
      title: Detailed Errors
      x-internal: false
    NotFound:
      description: Error payload for the BigCommerce API.
      type: object
      properties:
        status:
          description: |
            404 HTTP status code.
          type: integer
        title:
          description: The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
      title: Not Found
      x-internal: false
    JobId:
      description: The job identifier for theme upload or download.
      type: object
      properties:
        job_id:
          description: The job identifier.
          type: string
      title: Job Id
      x-internal: false
    NoContent:
      description: No-content response for the BigCommerce API.
      type: object
      properties:
        status:
          description: |
            204 HTTP status code.
          type: integer
        title:
          description: The error title describing the situation.
          type: string
        type:
          type: string
        instance:
          type: string
      title: No Content
      x-internal: false
    Job:
      description: The job for theme upload or download
      type: object
      title: Job
      properties:
        errors:
          description: The errors.
          type: array
          items:
            type: object
            properties:
              error:
                description: The error.
                type: string
              message:
                description: The message.
                type: string
        id:
          description: The identifier.
          type: string
        percent_complete:
          description: The percent complete.
          type: number
        result:
          description: The result.
          type: object
          additionalProperties: true
          properties: {}
        status:
          type: string
          description: The status.
          enum:
            - COMPLETED
            - QUEUED
            - WORKING
            - FAILED
        time:
          type: string
          description: The time.
          format: date-time
        warnings:
          description: The warnings.
          type: array
          items:
            type: object
            properties:
              message:
                description: The message.
                type: string
              warning:
                description: The warning.
                type: string
      x-internal: false
    Theme:
      description: A theme.
      type: object
      properties:
        variations:
          description: The variations.
          type: array
          items:
            description: A variation.
            type: object
            properties:
              description:
                description: The description.
                type: string
              external_id:
                description: The external identifier.
                type: string
              name:
                description: The name.
                type: string
              uuid:
                description: The identifier.
                type: string
        uuid:
          description: The identifier.
          type: string
        name:
          description: The theme name identifier.
          type: string
        is_private:
          description: Flag to identify private themes.
          type: boolean
      x-internal: false
    Activate:
      description: Request definition for activation endpoint.
      required:
        - variation_id
        - which
      properties:
        variation_id:
          description: The identifier for the variation to activate.
          type: string
        which:
          description: Which configuration to use.
          type: string
          enum:
            - original
            - last_activated
            - last_created
      title: Activate
      x-internal: false
    Variation:
      description: A variation.
      type: object
      properties:
        description:
          description: The description.
          type: string
        external_id:
          description: The external identifier.
          type: string
        name:
          description: The name.
          type: string
        uuid:
          description: The identifier.
          type: string
      x-internal: false
    ThemesCollectionResponse:
      description: |
        Response payload for the BigCommerce API.
      type: object
      properties:
        data:
          type: array
          items:
            description: A theme.
            type: object
            properties:
              variations:
                description: The variations.
                type: array
                items:
                  description: A variation.
                  type: object
                  properties:
                    description:
                      description: The description.
                      type: string
                    external_id:
                      description: The external identifier.
                      type: string
                    name:
                      description: The name.
                      type: string
                    uuid:
                      description: The identifier.
                      type: string
              uuid:
                description: The identifier.
                type: string
              name:
                description: The theme name identifier.
                type: string
              is_private:
                description: Flag to identify private themes.
                type: boolean
        meta:
          type: object
          description: 'Data about the response, including pagination and collection totals.'
          properties:
            pagination:
              type: object
              description: 'Data about the response, including pagination and collection totals.'
              title: Pagination
              properties:
                total:
                  type: integer
                  description: |
                    Total number of items in the result set.
                  example: 36
                count:
                  type: integer
                  description: |
                    Total number of items in the collection response.
                  example: 36
                per_page:
                  type: integer
                  description: |
                    The amount of items returned in the collection per page, controlled by the limit parameter.
                  example: 50
                current_page:
                  type: integer
                  description: |
                    The page you are currently on within the collection.
                  example: 1
                total_pages:
                  type: integer
                  description: |
                    The total number of pages in the collection.
                  example: 1
                links:
                  type: object
                  description: |
                    Pagination links for the previous and next parts of the whole collection.
                  properties:
                    previous:
                      type: string
                      description: |
                        Link to the previous page returned in the response.
                    current:
                      type: string
                      description: |
                        Link to the current page returned in the response.
                      example: '?page=1&limit=50'
                    next:
                      type: string
                      description: |
                        Link to the next page returned in the response.
          title: Collection Meta
      title: Themes Collection Response
      x-internal: false
    ThemeResponse:
      description: |
        Response payload for the BigCommerce API.
      type: object
      title: Theme Response
      properties:
        data:
          $ref: '#/components/schemas/Theme'
        meta:
          $ref: '#/components/schemas/CollectionMeta'
      x-internal: false
    JobResponse:
      type: object
      properties:
        data:
          description: The job for theme upload or download
          type: object
          title: Job
          properties:
            errors:
              description: The errors.
              type: array
              items:
                type: object
                properties:
                  error:
                    description: The error.
                    type: string
                  message:
                    description: The message.
                    type: string
            id:
              description: The identifier.
              type: string
            percent_complete:
              description: The percent complete.
              type: number
            result:
              description: The result.
              type: object
              additionalProperties: true
              properties: {}
            status:
              type: string
              description: The status.
              enum:
                - COMPLETED
                - QUEUED
                - WORKING
                - FAILED
            time:
              type: string
              description: The time.
              format: date-time
            warnings:
              description: The warnings.
              type: array
              items:
                type: object
                properties:
                  message:
                    description: The message.
                    type: string
                  warning:
                    description: The warning.
                    type: string
        meta:
          $ref: '#/components/schemas/OpenMeta'
      title: Job Response
      description: Response for /GET Jobs by Id.
      x-internal: false
    WhichThemeToDownload:
      description: 'An object specifying which theme to download. One of: `original`: the original Marketplace or uploaded custom theme; `last_activated`: the theme version most recently applied to the store; `last_created`: the theme version most recently created.'
      allOf:
        - description: |-
            A BigCommerce object specifying which theme to download.

            `original`: the original Marketplace or uploaded custom theme.

            `last_activated`: the theme version most recently applied to the store.

            `last_created`: the theme version most recently created.

            If `which` is missing or invalid in the request, its value will default to `last_activated`.
          example: original
          properties:
            which:
              description: Which revision to use.
              type: string
              enum:
                - original
                - last_activated
                - last_created
      title: Which Theme To Download
      type: object
      x-internal: false
    RequestHeaders:
      type: object
      description: 'These are the minium request headers needed for BigCommerce. '
      title: Request Headers
      properties:
        Accepts:
          type: string
          default: application/json
      x-internal: false
    themeConfiguration_Full:
      description: A theme.
      type: object
      properties:
        uuid:
          type: string
        theme_uuid:
          type: string
          description: The Theme to which the Configuration belongs.
        variation_id:
          type: string
          description: The Variation to which the Configuration belongs.
        settings:
          type: object
          description: 'The content of the configuration, which is a JSON object which will vary in structure from theme to theme.'
        date_created:
          type: string
        site_id:
          type: integer
          description: Site ID to which this configuration belongs. Will be 0 for the original configuration for a Theme.
      title: themeConfiguration_Full
      x-internal: false
    themeConfiguration_Write:
      description: A theme.
      type: object
      properties:
        variation_id:
          type: string
          description: The Variation to which the Configuration belongs.
        settings:
          type: object
          description: 'The content of the configuration, which is a JSON object which will vary in structure from theme to theme.'
      title: themeConfiguration_Write
      x-internal: false
    OpenMeta:
      title: Response meta
      type: object
      properties: {}
      additionalProperties: true
      description: Response metadata.

openapi: '3.0.3'
info:
  title: Webhooks v3
  version: ''
  description: 'Get notified when specific events occur on a BigCommerce store. For more information, see [Webhooks Overview](/api-docs/store-management/webhooks/overview).'
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    email: support@bigcommerce.com
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
tags:
  - name: Manage Webhooks (Single)
  - name: Manage Webhooks (Bulk)
  - name: Webhook Events
  - name: Webhooks Admin
security:
  - X-Auth-Token: []
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
paths:
  '/hooks':
    post:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/webhook_Full'
                  meta:
                    type: object
                    properties:
                      pagination:
                        $ref: '#/components/schemas/Pagination'
              examples:
                application/json:
                  value:
                    data:
                      id: 18048287
                      client_id: m9r6keqmo7h7f23btnpwernbez1kglkl
                      store_hash: sftg45fsd
                      created_at: 1561488106
                      updated_at: 1561488106
                      scope: store/order/*
                      destination: 'https://665b65a6.ngrok.io/webhooks'
                      is_active: true
                      headers:
                        custom: string
                    meta:
                      pagination:
                        count: 5
                        current_page: 1
                        links:
                          current: '?limit=100&page=1'
                          next: '?limit=100&page=1'
                          previous: '?limit=100&page=1'
                        per_page: 100
                        total: 5
                        total_pages: 1
          links:
            getHook:
              operationId: getWebhook
              parameters:
                webhook_id: $response.body#/id
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '422':
          $ref: '#/components/responses/422_UnprocessableEntity'
      summary: Create a Webhook
      description: Creates a webhook. Only one webhook at a time can be created. Custom headers can be added. Destination URL must be served on port 443 (custom ports are not currently supported).
      operationId: createWebhooks
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook_Base'
      tags:
        - Manage Webhooks (Bulk)
    get:
      responses:
        '200':
          $ref: '#/components/responses/webhooks_Resp'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
      summary: Get Webhooks
      description: |-
        Returns a list of all webhooks on a store associated to the `client_id` used to authenticate the request.

        *Note: BigCommerce determines the `client_id` from the `access_token`.*
      operationId: getAllWebhooks
      tags:
        - Manage Webhooks (Bulk)
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/FilterPageParam'
        - $ref: '#/components/parameters/FilterLimitParam'
        - $ref: '#/components/parameters/IsActive'
        - $ref: '#/components/parameters/FilterByScope'
        - $ref: '#/components/parameters/FilterByDestination'
  '/hooks/{webhook_id}':
    get:
      responses:
        '200':
          $ref: '#/components/responses/webhook_Resp'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '404':
          $ref: '#/components/responses/404_NotFound'
      description: Return a webhook by ID.
      operationId: getWebhook
      summary: Get a Webhook
      tags:
        - Manage Webhooks (Single)
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
    parameters:
      - $ref: '#/components/parameters/WebhookId' 
    put:
      responses:
        '200':
          $ref: '#/components/responses/webhook_Resp'
      summary: Update a Webhook
      description: Updates a webhook. Custom headers can be added.
      operationId: updateAWebhook
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook_Base'
        x-examples:
          application/json:
            scope: store/cart/lineItem/*
            destination: 'https://myapp.herokuapp.com/'
            is_active: true
            headers:
              User-Name: Hello
              Password: Goodbye
      tags:
        - Manage Webhooks (Single)
    delete:
      responses:
        '200':
          $ref: '#/components/responses/webhook_Resp'
      summary: Delete a Webhook
      description: 'Deletes a webhook. Only one webhook at a time can be deleted. When a webhook is deleted, it is returned in the response as a 200 OK.'
      operationId: deleteAWebhook
      tags:
        - Manage Webhooks (Single)
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
  '/hooks/admin':
    get:
      operationId: getHooksAdmin
      summary: Get Admin Info
      description: 'List all notification emails, webhooks, and denylisted domains associated with the API account.'
      parameters:
        - $ref: '#/components/parameters/IsActive'
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      emails:
                        description: Email addresses to be sent notifications.
                        type: array
                        items:
                          type: string
                          format: email
                          example: 'webhooks@example.com'
                      hooks_list:
                        description: 'List of all the webhooks associated with the provider API account, filtered by the "active" parameter.'
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID of the webhook
                            client_id:
                              type: string
                              minLength: 1
                              description: 'Client ID, unique to the store or app.'
                            store_hash:
                              minLength: 1
                              type: string
                              description: Permanent ID of the BigCommerce store.
                            scope:
                              type: string
                              minLength: 1
                              description: Event you subscribe to
                              example: store/order/*
                            destination:
                              type: string
                              minLength: 1
                              description: 'URL must be active, return a 200 response, and be served on port 443 (custom ports not currently supported)'
                            headers:
                              type: object
                              description: You can pass in any number of custom headers to validate webhooks being returned.
                            is_active:
                              type: boolean
                              description: If webhook is active or not
                              default: true
                            created_at:
                              type: integer
                              description: Created time
                            updated_at:
                              type: integer
                              description: Updated time
                      blocked_domains:
                        description: List of domains (destinations) that are currently on the denylist and are not being sent webhooks.
                        type: array
                        items:
                          type: object
                          properties:
                            destination:
                              description: Domain URL to which webhooks are sent.
                              type: string
                              format: url
                            time_left:
                              description: Remaining time in seconds that the domain is on the denylist.
                              type: integer
                            reasons:
                              type: array
                              items:
                                type: object
                                properties:
                                  failure_description:
                                    type: string
                                  count:
                                    type: integer
                                  timestamp:
                                    type: integer
                                    format: int64
                                    description: UTC timestamp in seconds that the events was created
                  meta:
                    type: object
                    properties:
                      pagination:
                        $ref: '#/components/schemas/Pagination'
              examples: {}
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
      tags:
        - Webhooks Admin
    put:
      operationId: putHooksAdmin
      summary: Upsert Email Notifications
      description: |
        Update email addresses that are sent notification emails when any domain associated with the API account is denylisted or when a webhook is deactivated. Supports `upsert` functionality in the case that no email address exists yet.
      requestBody:
        description: List of notification emails.
        content:
          application/json:
            schema:
              type: object
              properties:
                emails:
                  type: array
                  items:
                    type: string
                    format: email
                    example: 'webhooks@example.com'
            examples:
              Example:
                value:
                  emails:
                    - user@example.com
        required: true
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '422':
          $ref: '#/components/responses/422_UnprocessableEntity'
      tags:
        - Webhooks Admin
  '/hooks/events':
    get:
      tags:
        - Webhook Events
      summary: Get Events
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/FilterPageParam'
        - $ref: '#/components/parameters/FilterLimitParam'
        - $ref: '#/components/parameters/FilterMaxCreatedAtParam'
        - $ref: '#/components/parameters/FilterMinCreatedAtParam'
      operationId: getWebhookEvents
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/HistoryEvent'
                  meta:
                    type: object
                    properties:
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
      description: |
        Get a list of events that were sent but not successfully received. Events are stored for not less than one week.
components:
  parameters:
    WebhookId:
      name: webhook_id
      in: path
      description: The ID of a Webhook.
      required: true
      schema:
        type: integer
        minimum: 1
        example: 22561593
    IsActive:
      name: is_active
      in: query
      description: |
        Enables user to filter for webhooks that are active or not.
      schema:
        type: boolean
        example: true
    FilterByScope:
      name: scope
      in: query
      description: |
        Enables user to filter for webhooks by scope.
      schema:
        type: string
    FilterByDestination:
      name: destination
      in: query
      description: |
        Enables user to filter for webhooks by destination.
      schema:
        type: string
    FilterPageParam:
      name: page
      in: query
      description: |
        Page number.
      required: false
      schema:
        type: integer
        example: 1
    FilterLimitParam:
      name: limit
      in: query
      description: |
        Items count per page.
      required: false
      schema:
        type: integer
    FilterMaxCreatedAtParam:
      name: 'created_at:max'
      in: query
      description: |
        Maximum value for returned data.
      required: false
      schema:
        type: string
    FilterMinCreatedAtParam:
      name: 'created_at:min'
      in: query
      description: |
        Minimum value for returned data.
      required: false
      schema:
        type: string
    Accept:
      in: header
      name: Accept
      schema:
        type: string
        default: application/json
    Content-Type:
      name: Content-Type
      in: header
      schema:
        type: string
        default: application/json
  responses:
    webhooks_Resp:
      description: ''
      content:
        application/json:
          schema:
            description: ''
            type: object
            properties:
              data:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    client_id:
                      type: string
                      minLength: 1
                    store_hash:
                      type: string
                      minLength: 1
                    scope:
                      type: string
                      minLength: 1
                    destination:
                      type: string
                      minLength: 1
                    headers:
                      type: object
                      nullable: true
                    is_active:
                      type: boolean
                    created_at:
                      type: number
                    updated_at:
                      type: number
              meta:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
          examples: {}
    502_GatewayError:
      description: 'If something happens during the request that causes it to fail, a 502 response will be returned. A new request should be made; however, it could fail.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 502
                title: A login URL could not be generated. Please try another request.
                type: /api-docs/getting-started/api-status-codes
    503_ServiceUnavailable:
      description: 'If this occurs, you should retry the request. If you are unable to successfully make a request, please check the BigCommerce [system status](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up (in several hours usually)'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 503
                title: Service Unavailable
                type: /api-docs/getting-started/api-status-codes
    504_GatewayTimeout:
      description: 'If this occurs, you should retry the request. Typically retrying the request several times will result in a successful request; However, if you are unable to successfully make a request, please check the BigCommerce [system status](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up (in several hours usually)'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorDetailed_Full'
          examples:
            response:
              value:
                status: 504
                title: Gateway Timeout
                type: /api-docs/getting-started/api-status-codes
                errors: {}
    400_BadRequest:
      description: |-
        Malformed request syntax. Typically need to fix the JSON request body to resend successfully.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 400
                title: Input is invalid.
                type: /api-docs/getting-started/api-status-codes
    401_Unauthorized:
      description: Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 401
                title: Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.
                type: /api-docs/getting-started/api-status-codes
    403_Unauthorized:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 403
                title: Unauthorized Access. You do not have permission to make this request.
                type: /api-docs/getting-started/api-status-codes
    404_NotFound:
      description: 'If the requested webhook is not found, return a 404 Not Found.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 404
                title: 'Webhook with id [{webhook_id}] not found'
                type: /api-docs/getting-started/api-status-codes
    422_UnprocessableEntity:
      description: This occurs when missing or unacceptable data is passed for one or more fields. Please correct the values for the fields listed in the errors object.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorDetailed_Full'
          examples:
            response:
              value:
                status: 422
                title: JSON data is missing or invalid
                type: /api-docs/getting-started/api-status-codes
                errors:
                  destination: error.path.missing.
    webhook_Resp:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                data:
                  id: 22041448
                  client_id: hm6ttr1z8fzu2utb7d1p9qile9jtugv
                  store_hash: 29iql3rwa6
                  scope: store/order/*
                  destination: 'https://665b65a6.ngrok.io/webhooks'
                  headers: null
                  is_active: false
                  created_at: 1626812212
                  updated_at: 1627588222
                meta: {}
            properties:
              data:
                type: object
                properties:
                  id:
                    type: number
                  client_id:
                    type: string
                    minLength: 1
                  store_hash:
                    type: string
                    minLength: 1
                  scope:
                    type: string
                    minLength: 1
                  destination:
                    type: string
                    minLength: 1
                  headers: {}
                  is_active:
                    type: boolean
                  created_at:
                    type: number
                  updated_at:
                    type: number
              meta:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
          examples:
            application/json:
              value:
                data:
                  id: 18048287
                  client_id: m9r6keqmo7h7f23btnpwernbez1kglkl
                  store_hash: sftg45fsd
                  created_at: 1561488106
                  updated_at: 1561488106
                  scope: store/order/*
                  destination: 'https://665b65a6.ngrok.io/webhooks'
                  is_active: true
                  headers:
                    custom: string
                meta:
                  pagination:
                    count: 5
                    current_page: 1
                    links:
                      current: '?limit=100&page=1'
                      next: '?limit=100&page=1'
                      previous: '?limit=100&page=1'
                    per_page: 100
                    total: 5
                    total_pages: 1
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        None required. Create and manage webhooks with the default scope of an API account.

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header
  schemas:
    store_cart_wildcard:
      description: |-
        Fires for each of the following events:
        * `store/cart/created`
        * `store/cart/updated`
        * `store/cart/deleted`
        * `store/cart/couponApplied`
        * `store/cart/abandoned`
        * `store/cart/converted`
        * `store/cart/lineItem`
        
        See individual events for more information.
      title: store/cart/*
      x-examples: {}
      x-internal: false
    store_cart_created:
      description: |-
        This webhook fires on new cart creation when any of the following occur:
        * a storefront shopper adds their first product to a cart during a new session
        * an application makes a successful `POST` request to `/carts` using either the [REST Storefront](/docs/rest-storefront/carts#create-a-cart) API or the [REST Management](/docs/rest-management/carts/carts-single#create-a-cart) API
        * a storefront makes a successful call to create a cart using the [GraphQL Storefront API](/api-docs/storefront/graphql/carts-and-checkout)

        Cart creation also fires the `store/cart/updated` webhook.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

      x-examples: {}
      title: store/cart/created
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook.
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                  example: cart
                  enum:
                    - cart
                    - cart_line_item
                id:
                  type: string
                  description: ID of the cart
                  example: 09346904-4175-44fd-be53-f7e598531b6c
      x-tags:
        - created
      type: object
      x-internal: false
    store_cart_updated:
      title: store/cart/updated
      description: |-
        Fires when one of the following occurs:
        * A cartʼs line items are modified by adding a new item to a cart, updating an existing itemʼs quantity, or deleting an item.
        * A shopper enters or changes their email address during guest checkout. This includes signing in to a customer account after creating a guest cart, which associates the accountʼs email address with the cart.

        The `store/cart/created` webhook firing also triggers this webhook because adding a product to an empty cart is considered an update. 

        Changes to the following fields trigger this event:
        * Quantity
        * Item Price

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook.
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                  example: cart
                id:
                  type: string
                  description: ID of the cart
                  example: 09346904-4175-44fd-be53-f7e598531b6c
      x-tags:
        - created
      type: object
      x-internal: false
    store_cart_deleted:
      title: store/cart/deleted
      description: |-
        Fires when a cart is deleted. Carts are deleted in two ways; when all items are removed from a cart, and when an API consumer explicitly removes the cart using a `DELETE` request. Cart deletion ends the cart lifecycle. The `store/cart/updated` webhook also fires when the last item is removed.


        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/deleted",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook.
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                  example: cart
                id:
                  type: string
                  description: ID of the cart
                  example: 09346904-4175-44fd-be53-f7e598531b6c
      x-tags:
        - deleted
      type: object
      x-internal: false
    store_cart_couponApplied:
      title: store/cart/couponApplied
      description: |-
        Fires when a new coupon code is applied to a cart. The webhook request body includes the ID of the coupon code.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/couponApplied",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c",
            "couponId": 1
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                  example: cart
                id:
                  type: string
                  description: ID of the cart
                  example: 09346904-4175-44fd-be53-f7e598531b6c
                couponId:
                  type: integer
                  description: ID of the coupon
                  example: 1
      x-tags:
        - created
      type: object
      x-internal: false
    store_cart_abandoned:
      title: store/cart/abandoned
      description: |-
        This webhook fires after a cart is abandoned. BigCommerce considers a cart abandoned when it has no activity for at least one hour. This webhook is available for all store plans, regardless of whether the Abandoned Cart Saver feature is enabled.


        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/abandoned",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c",
            "token": "1eed6d2d979776ff18e695ceeb10ea61"
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                  example: cart
                id:
                  type: string
                  description: ID of the cart
                  example: 09346904-4175-44fd-be53-f7e598531b6c
                token:
                  type: string
                  example: 1eed6d2d979776ff18e695ceeb10ea61
                  description: Use this token to obtain cart data.
      type: object
      x-internal: false
    store_cart_converted:
      title: store/cart/converted
      description: |-
        Fires when a cart/checkout is converted into an order, which is typically after the checkout payment step on the storefront. At this point, the cart is automatically deleted and no longer accessible. This webhook returns both the cart/checkout ID and order ID for correlation purposes.


        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/converted",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c",
            "orderId": 252
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `cart`.
                  default: cart
                id:
                  type: string
                  description: ID of the cart
                  example: 09346904-4175-44fd-be53-f7e598531b6c
                orderId:
                  type: integer
                  description: ID of the order created.
                  example: 252
      x-tags:
        - created
      type: object
      x-internal: false
    store_cart_lineItem_wildcard:
      title: store/cart/lineItem/*
      description: |-
        This webhook subscribes to all cart line item events. 

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c",
            "cartId": "b0386708-fef3-45de-9d8b-fbe3031450a4"
          }
        }
        ```

      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: Can be `cart` or `cart_line_item`.
                id:
                  type: string
                  description: ID of the cart.
                cartId:
                  type: string
                  description: ID of the cart.
      x-tags:
        - created
      type: object
      x-internal: false
    store_cart_lineItem_created:
      title: store/cart/lineItem/created
      description: |-
        Fires when a new item is added to the cart.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/lineItem/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c",
            "cartId": "b0386708-fef3-45de-9d8b-fbe3031450a4"            
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                  example: cart
                id:
                  type: string
                  description: ID of the line item
                  example: 09346904-4175-44fd-be53-f7e598531b6c
                cartId:
                  type: string
                  description: ID of the cart
                  example: b0386708-fef3-45de-9d8b-fbe3031450a4
      x-tags:
        - created
      type: object
      x-internal: false
    store_cart_lineItem_updated:
      title: store/cart/lineItem/updated
      description: |-
        Fires when an item’s quantity has changed or the product options change.

        Changes to the following fields trigger this event:
        * Quantity
        * Item Price

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/lineItem/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c",
            "cartId": "b0386708-fef3-45de-9d8b-fbe3031450a4"            
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                  example: cart
                id:
                  type: string
                  description: ID of the line item
                  example: 09346904-4175-44fd-be53-f7e598531b6c
                cartId:
                  type: string
                  description: ID of the cart
                  example: b0386708-fef3-45de-9d8b-fbe3031450a4
      type: object
      x-tags:
        - updated
      x-internal: false
    store_cart_lineItem_deleted:
      title: store/cart/lineItem/deleted
      description: |-
        Fires when an item is deleted from the cart.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/lineItem/deleted",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c",
            "cartId": "b0386708-fef3-45de-9d8b-fbe3031450a4"
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: Can be `cart` or `cart_line_item`.
                  example: cart
                id:
                  type: string
                  description: ID of the line item.
                  example: 09346904-4175-44fd-be53-f7e598531b6c
                cartId:
                  type: string
                  description: ID of the cart.
                  example: b0386708-fef3-45de-9d8b-fbe3031450a4
      type: object
      x-tags:
        - deleted
      x-internal: false
    store_category_wildcard:
      title: store/category/*
      description: |
        Fires for all `store/category` events.
      x-examples: {}
      allOf: []
      x-tags:
        - created
      x-internal: false
    store_category_created:
      title: store/category/created
      type: object
      description: |-
        Fires when a category is created.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/category/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "category",
            "id": 42
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - $ref: '#/components/schemas/callback_category_data'
      x-tags:
        - created
      x-internal: false
    store_category_updated:
      title: store/category/updated
      description: |-
        Fires when a category is updated. 
        
        Changes to the following fields trigger this event:
        * URL
        * Name
        * Redirect Old URLs
        * Description
        * Parent Category
        * Template Layout File
        * Sort Order
        * Default Product Sort
        * Category Image
        * Page Title
        * Meta Keywords
        * Meta Description
        * Search Keywords
        * Google Product Category
        * Enable Google Shopping


        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/category/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "category",
            "id": 42
          }
        }
        ```

      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `category`.
                  default: category
                id:
                  type: integer
                  description: ID of the category
                  example: 42
      x-tags:
        - updated
      type: object
      x-internal: false
    store_category_deleted:
      title: store/category/deleted
      description: |-
        Fires when a category is deleted.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/category/deleted",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "category",
            "id": "42"
          }
        }
        ```

      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `category`.
                  default: category
                  example: category
                id:
                  type: integer
                  description: ID of the category
                  example: 42
      x-tags:
        - deleted
      type: object
      x-internal: false
    store_channel_wildcard:
      title: store/channel/*
      description: Fires for all `store/channel` events.
      allOf: []
      x-tags:
        - created
      x-internal: false
    store_channel_created:
      title: store/channel/created
      description: |-
        Fires when a channel is created in the control panel or by API.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/channel/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "channel",
            "id": 173331
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `channel`.
                  default: channel
                  example: channel
                  readOnly: true
                id:
                  type: integer
                  description: ID of the channel
                  example: 173331
      x-tags:
        - created
      type: object
      x-internal: false
    store_channel_updated:
      title: store/channel/updated
      description: |-
        This webhook is triggered when a channel is updated in the control panel or by API. 

        Changes to the following fields trigger this event:
        * name
        * external_id
        * status
        * is_listable_from_ui
        * is_visible
        * config_meta


        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/channel/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "channel",
            "id": 173331
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `channel`.
                  default: channel
                  example: channel
                  readOnly: true
                id:
                  type: integer
                  description: ID of the channel
                  example: 173331
      x-tags:
        - created
      type: object
      x-internal: false
    store_customer_wildcard:
      title: store/customer/*
      description: |
        Fires for all `store/customer` events.
      x-examples: {}
      allOf: []
      x-tags:
        - created
      x-internal: false
    store_customer_created:
      title: store/customer/created
      description: |-
        Fires when a new customer is created.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/customer/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "customer",
            "id": 32
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `customer`.
                  default: customer
                  example: customer
                  readOnly: true
                id:
                  type: integer
                  description: ID of the customer
                  example: 32
      x-tags:
        - created
      type: object
      x-internal: false
    store_customer_updated:
      title: store/customer/updated
      description: |-
        This webhook is triggered when a customer is updated. In addition, this webhook is triggered when a shopper initially enters custom form field values within the account sign-up form. Please note that neither changing existing data in customer form fields nor changing a customerʼs address will trigger the webhook.


        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/customer/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "customer",
            "id": 32
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `customer`.
                  default: customer
                  example: customer
                  readOnly: true
                id:
                  type: integer
                  description: ID of the customer
                  example: 32
      x-tags:
        - created
      type: object
      x-internal: false
    store_customer_deleted:
      title: store/customer/deleted
      description: |-
        This webhook is triggered when a customer is deleted.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/customer/deleted",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "customer",
            "id": 32
          }
        }
        ```
      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `customer`.
                  default: customer
                  example: customer
                  readOnly: true
                id:
                  type: integer
                  description: ID of the customer.
                  example: 32
      x-tags:
        - created
      type: object
      x-internal: false
    store_customer_address_updated:
      title: store/customer/address/updated
      description: |-
        Fires when a customer address is updated.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/customer/address/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "customer",
            "id": 60,
            "address": {
              "customer_id": 32
            }
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `customer`.
                  example: customer
                id:
                  type: integer
                  description: ID of the customer address.
                  example: 60
                address:
                  type: object
                  properties:
                    customer_id:
                      type: integer
                      description: ID of the customer.
                      example: 32
      x-tags:
        - created
      type: object
      x-internal: false
    store_customer_address_created:
      title: store/customer/address/created
      description: |-
        Fires when a customer address is created.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/customer/address/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "customer",
            "id": 60,
            "address": {
              "customer_id": 32
            }
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `customer`.
                  example: customer
                id:
                  type: integer
                  description: ID of the customer address.
                  example: 60
                address:
                  type: object
                  properties:
                    customer_id:
                      type: integer
                      description: ID of the customer.
                      example: 32
      x-tags:
        - created
      type: object
      x-internal: false
    store_customer_address_deleted:
      title: store/customer/address/deleted
      description: |-
        Fires when a customer address is deleted.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/customer/address/deleted",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "customer",
            "id": 60,
            "address": {
              "customer_id": 32
            }
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `customer`.
                  example: customer
                id:
                  type: integer
                  description: ID of the customer address.
                  example: 60
                address:
                  type: object
                  properties:
                    customer_id:
                      type: integer
                      description: ID of the customer.
                      example: 32
      x-tags:
        - created
      type: object
      x-internal: false
    store_customer_payment_instrument_default_updated:
      title: store/customer/payment/instrument/default/updated
      description: |-
        Fires when a customer default payment instrument is updated.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/customer/payment/instrument/default/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "customer",
            "id": 32
          }
        }
        ```

      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                  default: '"customer"'
                  example: '"customer"'
                  readOnly: true
                id:
                  type: integer
                  description: ID of the customer.
                  example: 32
      x-tags:
        - created
      type: object
      x-internal: false
    store_order_wildcard:
      title: store/order/*
      description: Fires for all `store/order` events.
      type: object
      x-internal: false
    store_order_created:
      title: store/order/created
      description: |-
        This webhook is triggered when an order is created in the control panel, using an app, or by API.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/order/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "order",
            "id": 250
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `order`.
                  default: order
                  example: order
                id:
                  type: integer
                  description: ID of the order.
                  example: 250
      x-tags:
        - created
      type: object
      x-internal: false
    store_order_updated:
      title: store/order/updated
      description: |-
        Fires when a previously-created order is updated.  

        Changes to the following fields trigger this event: 
        * Status
        * Coupon Code
        * Billing and Shipping Address
        * Product Type
        * Search Keywords
        * Related Products
        * Warranty Information
        * Page Title
        * Meta Description
        * Gift Wrapping options
        * Bin Picking Number (BPN)
        * Fixed Shipping Price
        * Free Shipping
        * Open Graph Sharing Type
        * Availability Text
        * Purchasability
        * Release Date
        * Remove pre-order status on this date

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/order/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "order",
            "id": 250
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `order`.
                  default: order
                  example: order
                id:
                  type: integer
                  description: ID of the order.
                  example: 250
      x-tags:
        - created
      type: object
      x-internal: false
    store_order_archived:
      title: store/order/archived
      description: |-
        Fires when an order is archived.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/order/archived",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "order",
            "id": 250
          }
        }
        ```
      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `order`.
                  default: order
                  example: order
                id:
                  type: integer
                  description: ID of the order.
                  example: 250
      x-tags:
        - created
      type: object
      x-internal: false
    store_order_statusUpdated:
      title: store/order/statusUpdated
      description: |-
        This webhook is triggered when an order status changes; for example, from `Pending` to `Awaiting Payment`.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/order/statusUpdated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "order",
            "id": 250,
            "status": {
              "previous_status_id": 1,
              "new_status_id": 11
            }
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `order`.
                  example: order
                id:
                  type: integer
                  description: ID of the order.
                  example: 250
                status:
                  type: object
                  properties:
                    previous_status_id:
                      type: integer
                      description: ID of the previous status.
                      example: 1
                    new_status_id:
                      type: integer
                      description: ID of the updated status.
                      example: 11
      x-tags:
        - created
      type: object
      x-internal: false
    store_order_message_created:
      title: store/order/message/created
      description: |-
        This webhook is triggered when an order message is created by a customer or in the control panel.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/order/message/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
         "data": {
            "type": "order",
            "id": 250,
            "message": {
              "order_message_id": 3
            }
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `order`.
                  example: order
                id:
                  type: integer
                  description: ID of the order.
                  example: 250
                message:
                  type: object
                  properties:
                    order_message_id:
                      type: integer
                      description: ID of the message on the order.
                      example: 3
      x-tags:
        - created
      type: object
      x-internal: false
    store_order_refund_created:
      title: store/order/refund/created
      description: |-
        This webhook is triggered when a refund is submitted against an order.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/order/refund/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "order",
            "id": 250,
            "refund": {
              "refund_id": 3
            }
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `order`.
                  example: order
                id:
                  type: integer
                  description: ID of the order.
                  example: 250
                refund:
                  type: object
                  properties:
                    refund_id:
                      type: integer
                      description: ID of the refund submitted against the order.
                      example: 3
      x-tags:
        - created
      type: object
      x-internal: false
    store_product_wildcard:
      title: store/product/*
      description: Fires for all `store/product` events.
      type: object
      x-internal: false
    store_product_deleted:
      title: store/product/deleted
      description: |-
        This webhook is triggered when a product is deleted.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/product/deleted",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "product",
            "id": 205
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type ill always be `product`.
                  default: product
                  example: product
                id:
                  type: integer
                  description: ID of the product.
                  example: 205
      x-tags:
        - created
      type: object
      x-internal: false
    store_product_created:
      title: store/product/created
      description: |-
        Fires when a new product is created.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/product/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "product",
            "id": 205
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `product`.
                  default: product
                  example: product
                id:
                  type: integer
                  description: ID of the product.
                  example: 205
      x-tags:
        - created
      type: object
      x-internal: false
    store_product_updated:
      title: store/product/updated
      description: |-
        Fires when product details are edited. 

        Changes to the following fields trigger this event:
        * Product Type
        * Search Keywords
        * Related Products
        * Warranty Information
        * Page Title
        * Meta Description
        * Gift Wrapping options
        * Bin Picking Number (BPN)
        * Fixed Shipping Price
        * Free Shipping
        * Open Graph Sharing Type
        * Availability Text
        * Purchasability
        * Release Date
        * Remove pre-order status on this date
        * Preorder Message
        * Inventory Stock
        * Inventory Low Stock
        * Track inventory
        * Product UPC/EAN
        * SKU
        * Cost
        * Tax Class
        * Weight
        * Width
        * Height
        * Depth
        * Condition
        * Show condition on storefront
        * Brand
        * Default Price
        * Sale Price
        * MSRP
        * Product Name
        * Description
        * Visible on Storefront
        * Sort Order
        * Categories
        * Product URL
        * Set as a Featured Product on my Storefront

        However, changes to the following fields don't trigger this event:

        * Manufacturer Part Number (MPN)
        * Global Trade Number (GTN)
        * Tax Provider Tax Code
        * Product Image
        * Product Image Description
        * Product Files
        * Customs Information

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/product/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "product",
            "id": 205
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type ill always be `product`.
                  default: product
                  example: product
                id:
                  type: integer
                  description: ID of the product.
                  example: 205
      x-tags:
        - created
      type: object
      x-internal: false
    store_product_inventory_updated:
      title: store/product/inventory/updated
      description: |-
        This webhook is triggered when product inventory is updated. 
        
        Changes to the following fields trigger this event: 
        * Inventory Stock

        However, changes to the following fields don't trigger this event:
        * Track Inventory
        * Inventory Low Stock


        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/product/inventory/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "product",
            "id": 167,
            "inventory": {
              "product_id": 167,
              "method": "absolute",
              "value": 2
            }
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `product`.
                  example: product
                id:
                  type: integer
                  description: ID of the product.
                  example: 167
                inventory:
                  type: object
                  properties:
                    product_id:
                      type: integer
                      description: ID of the product.
                      example: 167
                    method:
                      type: string
                      description: |-
                        How the inventory was adjusted. Value will be one of the following:
                        * `absolute` - inventory updated through the API or the control panel.
                        * `relative` - inventory updated by an order.
                      enum:
                        - absolute
                        - relative
                    value:
                      type: integer
                      description: 'This value is the difference between an item’s inventory count before and after the inventory updates. This value is negative if an item’s inventory count decreases. For example, reducing inventory by three returns a value of `-3`. This value is positive if an item’s inventory count increases. For example, returning two items to the inventory returns a value of `2`.'
                      example: 2
      x-tags:
        - created
      type: object
      x-internal: false
    store_product_inventory_order_updated:
      title: store/product/inventory/order/updated
      description: |-
        This webhook is triggered when a product’s inventory increases or decreases. 
        
        Changes to the following fields trigger this event: 
        * Quantity

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/product/inventory/order/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "product",
            "id": 167,
            "inventory": {
              "product_id": 167,
              "method": "absolute",
              "value": 2
            }
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: Type will always be `product`.
                  example: product
                id:
                  type: integer
                  description: ID of the product.
                  example: 167
                inventory:
                  type: object
                  properties:
                    product_id:
                      type: integer
                      description: ID of the product.
                      example: 167
                    method:
                      type: string
                      description: |-
                        How the inventory was adjusted. Value will be one of the following:
                        * `absolute` - inventory updated using the API or the control panel.
                        * `relative` - inventory updated by an order.
                      enum:
                        - absolute
                        - relative
                    value:
                      type: integer
                      description: 'This value is the difference between an item’s inventory count before and after the inventory updates. This value is negative if an item’s inventory count decreases. For example, reducing inventory by three returns a value of `-3`. This value is positive if an item’s inventory count increases. For example, returning two items to the inventory returns a value of `2`.'
                      example: 2
      x-tags:
        - created
      type: object
      x-internal: false
    store_shipment_wildcard:
      title: store/shipment/*
      description: Fires for all `store/shipment` events.
      type: object
      x-internal: false
    store_shipment_created:
      title: store/shipment/created
      description: |-
        Fires when a shipment is created.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/shipment/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "shipment",
            "id": 12,
            "orderId": 251
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `shipment`.
                  example: shipment
                id:
                  type: integer
                  description: ID of the shipment.
                  example: 12
                orderId:
                  type: integer
                  description: ID of the order.
                  example: 251
      x-tags:
        - created
      type: object
      x-internal: false
    store_shipment_updated:
      title: store/shipment/updated
      description: |-
        Fires when a shipment is updated.

        Changes to the following fields trigger this event:
        * Shipping Tracking Number

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/shipment/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "shipment",
            "id": 12,
            "orderId": 251
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `shipment`.
                  example: shipment
                id:
                  type: integer
                  description: ID of the shipment.
                  example: 12
                orderId:
                  type: integer
                  description: ID of the order.
                  example: 251
      x-tags:
        - created
      type: object
      x-internal: false
    store_shipment_deleted:
      title: store/shipment/deleted
      description: |-
        This webhook is triggered when a shipment is deleted.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/shipment/deleted",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "shipment",
            "id": 12,
            "orderId": 251
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `shipment`.
                  example: shipment
                id:
                  type: integer
                  description: ID of the shipment.
                  example: 12
                orderId:
                  type: integer
                  description: ID of the order.
                  example: 251
      x-tags:
        - created
      type: object
      x-internal: false
    store_sku_wildcard:
      title: store/sku/*
      description: Fires for all `store/sku` events.
      type: object
      x-internal: false
    store_sku_created:
      title: store/sku/created
      description: |-
        This webhook is triggered when a new SKU is created.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/sku/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "sku",
            "id": 461,
            "sku": {
              "product_id": 206,
              "variant_id": 509
            }
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `"sku"`.
                  example: sku
                id:
                  type: integer
                  description: ID of the SKU.
                  example: 461
                sku:
                  type: object
                  properties:
                    product_id:
                      type: integer
                      description: ID of the product.
                      example: 206
                    variant_id:
                      type: integer
                      description: ID of the variant.
                      example: 509
      x-tags:
        - created
      type: object
      x-internal: false
    store_sku_updated:
      title: store/sku/updated
      description: |-
        Fires when a SKU is updated.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/sku/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "sku",
            "id": 461,
            "sku": {
              "product_id": 206,
              "variant_id": 509
            }
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `"sku"`.
                  example: sku
                id:
                  type: integer
                  description: ID of the SKU.
                  example: 461
                sku:
                  type: object
                  properties:
                    product_id:
                      type: integer
                      description: ID of the product.
                      example: 206
                    variant_id:
                      type: integer
                      description: ID of the variant.
                      example: 509
      x-tags:
        - created
      type: object
      x-internal: false
    store_sku_deleted:
      title: store/sku/deleted
      description: |-
        Fires when a SKU is deleted.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/sku/deleted",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "sku",
            "id": 461,
            "sku": {
              "product_id": 206,
              "variant_id": 509
            }
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `"sku"`.
                  example: sku
                id:
                  type: integer
                  description: ID of the SKU.
                  example: 461
                sku:
                  type: object
                  properties:
                    product_id:
                      type: integer
                      description: ID of the product.
                      example: 206
                    variant_id:
                      type: integer
                      description: ID of the variant.
                      example: 509
      x-tags:
        - created
      type: object
      x-internal: false
    store_sku_inventory_updated:
      title: store/sku/inventory/updated
      description: |-
        Fires when a SKU is updated.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/sku/inventory/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "sku",
            "id": 461,
            "inventory": {
              "product_id": 167,
              "method": "absolute",
              "value": 2,
              "variant_id": 509
            }
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `sku`.
                  example: sku
                id:
                  type: integer
                  description: ID of the SKU.
                  example: 461
                inventory:
                  type: object
                  properties:
                    product_id:
                      type: integer
                      description: ID of the product.
                      example: 167
                    method:
                      type: string
                      description: |-
                        How the inventory was adjusted. Value will be one of the following:
                        * `absolute` - inventory updated by an order.
                        * `relative` - inventory updated using the API or the control panel.
                      enum:
                        - absolute
                        - relative
                    value:
                      type: integer
                      description: 'The number of items that the inventory changed by. This can be negative if the inventory is decreased `-3` or positive if an item is returned to the inventory from an order, `2`'
                      example: 2
                    variant_id:
                      type: integer
                      description: ID of the variant.
                      example: 509
      x-tags:
        - created
      type: object
      x-internal: false
    store_sku_inventory_order_updated:
      title: store/sku/inventory/order/updated
      description: |-
        Fires when the inventory is updated.
        
        Changes to the following fields trigger this event:
        * Quantity

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/sku/inventory/order/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "sku",
            "id": 461,
            "inventory": {
              "product_id": 167,
              "method": "absolute",
              "value": 2,
              "variant_id": 509
            }
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `sku`.
                  example: sku
                id:
                  type: integer
                  description: ID of the SKU.
                  example: 461
                inventory:
                  type: object
                  properties:
                    product_id:
                      type: integer
                      description: ID of the product.
                      example: 167
                    method:
                      type: string
                      description: |-
                        How the inventory was adjusted. Value will be one of the following:
                        * `absolute` - inventory updated by an order.
                        * `relative` - inventory updated using the API or the control panel.
                      enum:
                        - absolute
                        - relative
                    value:
                      type: integer
                      description: 'The number of items that the inventory changed by. This can be negative if the inventory is decreased `-3` or positive if an item is returned to the inventory from an order, `2`'
                      example: 2
                    variant_id:
                      type: integer
                      description: ID of the variant.
                      example: 509
      x-tags:
        - created
      type: object
      x-internal: false
    store_app_uninstalled:
      title: store/app/uninstalled
      description: |-
        Fires when a client store is canceled and uninstalled from the platform.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/app/uninstalled",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "store"
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `store`.
                  example: store
      x-tags:
        - created
      type: object
      x-internal: false
    store_information_updated:
      title: store/information/updated
      description: |-
        Fires when changes are made to store settings. 

        Changes to the following fields trigger this event:
        * Store Name
        * Store Address
        * Store Country
        * Address Type
        * Email
        * Phone

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/information/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "store"
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: ''
                  example: store
      x-tags:
        - created
      type: object
      x-internal: false
    store_subscriber_wildcard:
      title: store/subscriber/*
      description: Fires for all `store/subscriber` events.
      type: object
      x-internal: false
    store_subscriber_created:
      title: store/subscriber/created
      description: |-
        Fires when a subscriber is created. 

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/subscriber/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "subscriber",
            "id": 5
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: Will always be `subscriber`
                  example: subscriber
                id:
                  type: integer
                  description: ID of the subscriber
                  example: 5
      x-tags:
        - created
      type: object
      x-internal: false
    store_subscriber_updated:
      title: store/subscriber/updated
      description: |-
        The webhook fires when a subscriber is updated. 

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/subscriber/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "subscriber",
            "id": 5
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `subscriber`.
                  example: subscriber
                id:
                  type: integer
                  description: ID of the subscriber.
                  example: 5
      x-tags:
        - created
      type: object
      x-internal: false
    store_subscriber_deleted:
      title: store/subscriber/deleted
      description: |-
        This webhook is triggered when a subscriber is deleted.

        ```json title="Example callback object" lineNumbers
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/subscriber/deleted",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "subscriber",
            "id": 5
          }
        }
        ```

      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            data:
              type: object
              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
              properties:
                type:
                  type: string
                  description: The type will always be `subscriber`.
                  example: subscriber
                id:
                  type: integer
                  description: ID of the subscriber.
                  example: 5
      x-tags:
        - created
      type: object
      x-internal: false
    error_Full:
      type: object
      title: error_Full
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          description: This value is typically a link to BigCommerce API Status codes.
          type: string
      x-internal: false
    errorDetailed_Full:
      type: object
      title: errorDetailed_Full
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          description: Typically a link to BigCommerce API Status codes
          type: string
        errors:
          type: object
      x-internal: false
    webhook_Base:
      type: object
      title: webhook_Base
      x-internal: false
      properties:
        scope:
          type: string
          example: store/order/*
          description: Event you subscribe to.
        destination:
          type: string
          example: 'https://665b65a6.ngrok.io/webhooks'
          description: 'URL must be active, return a 200 response, and be served on port 443 (custom ports not currently supported).'
        is_active:
          type: boolean
          example: true
          description: Boolean value that indicates whether the webhook is active or not.
        events_history_enabled:
          type: boolean
          example: true
          description: Deprecated. Boolean value that identifies whether events are stored that could not be received.
          deprecated: true
        headers:
          type: object
          description: 'Headers used to validate that webhooks are active. You can pass in any number of custom headers to validate webhooks are being returned. '
          nullable: true
          properties:
            custom:
              type: string
      required:
        - scope
        - destination
    webhook_Full:
      allOf:
        - $ref: '#/components/schemas/webhook_Base'
        - title: webhook_Full
          properties:
            id:
              type: integer
              description: ID of the webhook.
              example: 18048287
            client_id:
              type: string
              description: 'Client ID, unique to the store or app.'
              example: m9r6keqmo7h7f23btnpwernbez1kglkl
            store_hash:
              type: string
              description: Permanent ID of the BigCommerce store.
              example: sftg45fsd
            created_at:
              type: integer
              example: 1561488106
              description: Time when the webhook was created.
            updated_at:
              type: integer
              example: 1561488106
              description: Time when the webhook was updated.
    HistoryEvent:
      type: object
      properties:
        scope:
          type: string
          description: Alias where the event occurred.
        store_id:
          type: string
          description: A numerical identifier that is unique to each store.
        data:
          type: object
          description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
        hash:
          type: string
          description: The payload data encoded in JSON format and then passed through SH1 encryption.
        created_at:
          type: integer
          format: int64
          description: UTC timestamp, in seconds, that the events was created.
        producer:
          type: string
          description: Will always follow the pattern stores/store_hash. This is the store that created the webhook.
    Pagination:
      type: object
      description: |
        Data about the response, including pagination and collection totals.
      properties:
        total:
          type: integer
          description: Total number of returned items across all pages.
        count:
          type: integer
          description: Number of items on current page.
        per_page:
          type: integer
          description: Maximum number of items per page.
        current_page:
          type: integer
          description: Current page number.
        total_pages:
          type: integer
          description: Total number of pages.
        links:
          type: object
          properties:
            previous:
              type: string
              description: Link to the previous page returned in the response.
            current:
              type: string
              description: Link to the current page returned in the response.
            next:
              type: string
              description: Link to the next page returned in the response.
      x-internal: false
    webhook_callback_base:
      description: ''
      x-examples:
        example-1:
          created_at: 1561482670
          store_id: '1025646'
          producer: 'stores/{store_hash}'
          scope: store/cart/created
          hash: 352e4afc6dd3fc85ea26bfdf3f91852604d57528
      title: ''
      allOf:
        - properties:
            created_at:
              type: integer
              example: 1561482670
              description: Hook creation date, in Unix timestamp format.
              readOnly: true
            store_id:
              type: string
              minLength: 1
              example: '1025646'
              description: A numerical identifier that is unique to each store.
            producer:
              type: string
              minLength: 1
              example: 'stores/{store_hash}'
              description: Will always follow the pattern `stores/store_hash`. This is the store that created the webhook.
            scope:
              type: string
              minLength: 1
              example: store/cart/created
              description: The event registered when the webhook was created.
            hash:
              type: string
              minLength: 1
              example: 352e4afc6dd3fc85ea26bfdf3f91852604d57528
              description: The payload data encoded in JSON format and then passed through SH1 encryption.
      type: object
      x-internal: false
    callback_category_data:
      title: callback_category_data
      type: object
      description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
      properties:
        data:
          type: object
          description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            type:
              type: string
              description: This type will always be `category`.
              default: category
            id:
              type: integer
              description: ID of the category.
              example: 42
      x-internal: false

openapi: '3.0.1'
info:
  title: Widgets
  version: ''
  description: |-
    Create and manage widget templates, widgets, regions, and placements.

    ## Subresources

    ### Widget templates
    [Widget templates](/rest-content/widgets/widget-template) are reusable Handlebars-enabled HTML templates that define the structure of the widget on a page.

    ### Widgets
    [Widgets](/docs/rest-content/widgets/widget) are units of content placed on specific pages in a Stencil theme. Widgets consist of a widget configuration and a widget template UUID and render as part of the storefront’s HTML.

    ### Regions
    [Regions](/docs/rest-content/widgets/regions) are specific locations in the Stencil theme template files where you can place a widget.

    ### Placements
    [Placements](/docs/rest-content/widgets/placement) determine the region where you place widgets and in what order.

    ## Additional Information

    * [Widgets API Overview](/api-docs/store-management/widgets/overview)
    * [Widget UI Schema](/stencil-docs/page-builder/widget-ui-schema)
    * [Widget UI Input Types](/stencil-docs/page-builder/schema-settings)
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
tags:
  - name: Regions
  - name: Widget Template
    description: BigCommerce Widget Templates API Definition.
  - name: Widget
    description: BigCommerce Widgets API Definition.
  - name: Placement
    description: BigCommerce Placements API Definition.
security:
  - X-Auth-Token: []
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
paths:
  '/content/widget-templates':
    post:
      tags:
        - Widget Template
      summary: Create a Widget Template
      operationId: createWidgetTemplate
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/widgetTemplate_Post'
        required: true
        x-examples:
          application/json: |-
            {
              "name": "Header Images",
              "template": "{{#each images}}{{/each}}"
            }
          Custom Configuration Widget: |-
            {
              "name":"Header Images",
              "template":"{{#each images}}{{/each}}",
              "schema":[
                {
                  "type":"array",
                  "label":"Images",
                  "id":"images",
                  "defaultCount":3,
                  "entryLabel":"Image",
                  "thumbnail":"imageUrl.src",
                  "schema":[
                    {
                      "type":"tab",
                      "label":"Content",
                      "sections":[
                        {
                          "settings":[
                            {
                              "type":"imageManager",
                              "id":"imageUrl",
                              "default":{
                                "src":"https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on",
                                "type":"IMAGE_MANAGER"
                                }
                                },
                                {
                                  "label":"Link",
                                  "type":"input",
                                  "id":"link",
                                  "default":"#"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
      responses:
        '200':
          $ref: '#/components/responses/WidgetTemplate_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      description: |-
        Creates a **Widget Template**.

        ***Note:*** *There is a limit of 1000 custom widget templates per store.*

        **Required Fields**
        * name
        * template
    get:
      tags:
        - Widget Template
      operationId: getWidgetTemplates
      parameters:
        - name: page
          description: |
            Specifies the page number in a limited (paginated) list of products.
          required: false
          in: query
          schema:
            type: integer
        - name: limit
          description: |
            Controls the number of items per page in a limited (paginated) list of products.
          required: false
          in: query
          schema:
            type: integer
        - in: query
          name: widget_template_kind
          description: The kind of widget template.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/ContentType'
        - in: query
          name: 'channel_id:in'
          description: Filter items by channel_id.
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/WidgetTemplateCollection_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      description: Returns a list of **Widget Templates**.
      summary: Get All Widget Templates
  '/content/widget-templates/{uuid}/preview':
    post:
      tags:
        - Widget Template
      summary: Render a Widget Template
      description: Render a widget template and return the widget html.
      operationId: previewWidget
      parameters:
        - $ref: '#/components/parameters/TemplateUUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WidgetTemplatePreview'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetTemplatePreviewResponse'
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
    parameters:
      - schema:
          type: string
        name: uuid
        in: path
        required: true
        description: The identifier for a specific widget.
  '/content/widget-templates/{uuid}':
    get:
      tags:
        - Widget Template
      summary: Get a Widget Template
      operationId: getWidgetTemplate
      parameters:
        - schema:
            type: string
          in: query
          name: version_uuid
          description: This is an optional query parameter used to attempt to fetch a specific Widget Template version.
      responses:
        '200':
          $ref: '#/components/responses/WidgetTemplate_Resp'
        '404':
          $ref: '#/components/responses/Error404_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      description: Returns a single **Widget Template**.
    put:
      tags:
        - Widget Template
      summary: Update a Widget Template
      operationId: updateWidgetTemplate
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/widgetTemplate_Put'
        required: true
        x-examples:
          application/json:
            name: Header Images
            template: '{{#each images}}{{/each}}'
            create_new_version: true
      responses:
        '200':
          $ref: '#/components/responses/WidgetTemplate_Resp'
        '404':
          $ref: '#/components/responses/Error404_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      description: Updates a **Widget Template**.
    delete:
      tags:
        - Widget Template
      summary: Delete A Widget Template
      operationId: deleteWidgetTemplate
      responses:
        '204':
          description: An empty response.
        '404':
          $ref: '#/components/responses/Error404_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      description: Deletes a **Widget Template**.
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/TemplateUUID'
  '/content/widgets':
    post:
      tags:
        - Widget
      summary: Create a Widget
      operationId: createWidget
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/widget_Post'
        required: true
        x-examples:
          application/json:
            name: Header Images
            template: '{{#each images}}{{/each}}'
            widget_configuration:
              images:
                - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on'
                - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2&imbypass=on'
                - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on'
            widget_template_uuid: f8459145-da8f-4d98-93e4-83aa47da61c6
      responses:
        '200':
          $ref: '#/components/responses/Widget_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      description: |-
        Creates a **Widget**.

        **Note:** There is a limit of 100,000 widgets per store and 150 widgets per page. For more information, see [Store Limits](https://support.bigcommerce.com/s/article/Platform-Limits#storelimits).
    get:
      tags:
        - Widget
      summary: Get All Widgets
      operationId: getWidgets
      parameters:
        - name: page
          description: |
            Specifies the page number in a limited (paginated) list of products.
          required: false
          in: query
          schema:
            type: integer
        - name: limit
          description: |
            Controls the number of items per page in a limited (paginated) list of products.
          required: false
          in: query
          schema:
            type: integer
        - in: query
          name: widget_template_kind
          description: The kind of widget template.
          required: false
          schema:
            type: string
        - in: query
          name: widget_template_uuid
          description: The identifier for a specific widget template.
          required: false
          schema:
            type: string
            format: uuid
        - in: query
          name: name
          description: The URL encoded name of the widget.
          schema:
            type: string
        - in: query
          name: 'name:in'
          description: 'Use to pass in comma-separated list of widget names. Example: `/widgets?name:in=test-widget-name,header%20images`'
          schema:
            type: array
            items: {}
        - in: query
          name: 'channel_id:in'
          description: Filter items by channel_id.
          schema:
            type: integer
        - schema:
            type: string
          in: query
          name: 'site_id:in'
          description: A comma-separated list of site ids to filter the results by.
      responses:
        '200':
          $ref: '#/components/responses/WidgetCollection_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      description: Returns a list of **Widgets**. Optional parameters can be passed in.
    parameters:
      - $ref: '#/components/parameters/Accept'
  '/content/widgets/{uuid}':
    get:
      tags:
        - Widget
      summary: Get a Widget
      operationId: getWidget
      responses:
        '200':
          $ref: '#/components/responses/Widget_Resp'
        '404':
          $ref: '#/components/responses/Error404_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      description: Returns a single **Widget**.
    put:
      tags:
        - Widget
      summary: Update a Widget
      operationId: updateWidget
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/widget_Put'
        required: true
        x-examples:
          application/json:
            name: Header Images
            widget_configuration:
              images:
                - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on'
                - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2&imbypass=on'
                - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on'
            widget_template_uuid: f8459145-da8f-4d98-93e4-83aa47da61c6
      responses:
        '200':
          $ref: '#/components/responses/Widget_Resp'
        '404':
          $ref: '#/components/responses/Error404_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      description: Updates a **Widget**.
    delete:
      tags:
        - Widget
      summary: Delete a Widget
      operationId: deleteWidget
      responses:
        '204':
          description: An empty response.
        '404':
          $ref: '#/components/responses/Error404_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      description: Deletes a **Widget**.
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/WidgetUUID'
  '/content/placements':
    post:
      tags:
        - Placement
      summary: Create a Placement
      operationId: createPlacement
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/placement_Post'
        required: true
        x-examples:
          application/json:
            widget_uuid: a8940709-5655-4401-a341-62c44e3180b2
            entity_id: '21'
            template_file: pages/category
            status: active
            sort_order: 1
            region: category_header_banner
      responses:
        '200':
          $ref: '#/components/responses/Placement_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      description: |-
        Creates a **Placement**.

        **Template Files**

        To view the list of values accepted by the `template_file` property, including **custom** templates, see [Placements](/api-docs/store-management/widgets/overview#placements).
    get:
      tags:
        - Placement
      summary: Get All Placements
      operationId: getPlacements
      parameters:
        - name: page
          description: |
            Specifies the page number in a limited (paginated) list of products.
          required: false
          in: query
          schema:
            type: integer
        - name: limit
          description: |
            Controls the number of items per page in a limited (paginated) list of products.
          required: false
          in: query
          schema:
            type: integer
        - in: query
          name: widget_template_kind
          description: The kind of widget template.
          required: false
          schema:
            type: string
        - in: query
          name: template_file
          description: 'The template file, for example: `pages/home`.'
          required: false
          schema:
            type: string
        - name: widget_uuid
          description: The identifier for a specific widget.
          in: query
          required: false
          schema:
            type: string
            format: uuid
        - in: query
          name: widget_template_uuid
          description: The identifier for a specific widget template.
          required: false
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/ChannelIDInParam'
        - $ref: '#/components/parameters/SiteIDInParam'
      responses:
        '200':
          $ref: '#/components/responses/PlacementsCollection_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      description: Returns a list of **Placements**.
    parameters:
      - $ref: '#/components/parameters/Accept'
  '/content/placements/{uuid}':
    get:
      tags:
        - Placement
      summary: Get a Placement
      operationId: getPlacement
      responses:
        '200':
          $ref: '#/components/responses/Placement_Resp'
        '404':
          $ref: '#/components/responses/Error404_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      description: Returns a single **Placement**.
    put:
      tags:
        - Placement
      summary: Update a Placement
      operationId: updatePlacement
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/placement_Put'
        required: true
        x-examples:
          application/json:
            sort_order: 1
            region: home_header_image
            template_file: pages/home
            status: active
      responses:
        '200':
          $ref: '#/components/responses/Placement_Resp'
        '404':
          $ref: '#/components/responses/Error404_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      description: Updates a **Placement**.
    delete:
      tags:
        - Placement
      summary: Delete a Placement
      operationId: deletePlacement
      responses:
        '204':
          description: An empty response.
        '404':
          $ref: '#/components/responses/Error404_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      description: Deletes a **Placement**.
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/PlacementUUID'
  '/content/regions':
    get:
      responses:
        '200':
          $ref: '#/components/responses/ThemeRegions_Resp'
        '404':
          $ref: '#/components/responses/Error404_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      summary: Get Theme Regions
      description: Returns a list of unique **Theme Regions** in a file.
      operationId: getContentRegions
      tags:
        - Regions
      parameters:
        - $ref: '#/components/parameters/Accept'
        - in: query
          name: template_file
          description: 'The template file, for example: `templateFile=pages/home`.'
          required: true
          schema:
            type: string
components:
  parameters:
    TemplateUUID:
      name: uuid
      description: The identifier for a specific template.
      required: true
      in: path
      schema:
        type: string
        format: uuid
    FilterWidgetTemplateUUIDParam:
      in: query
      name: widget_template_uuid
      description: The identifier for a specific widget template.
      required: false
      schema:
        type: string
        format: uuid
    FilterWidgetTemplateKindParam:
      in: query
      name: widget_template_kind
      description: The kind of widget template.
      required: false
      schema:
        type: string
    FilterTemplateFileParam:
      in: query
      name: template_file
      description: 'The template file, for example: `pages/home`.'
      required: false
      schema:
        type: string
    RequiredTemplateFile:
      in: query
      name: templateFile
      description: 'The template file, for example: `templateFile=pages/home`.'
      required: true
      schema:
        type: string
    LayoutUUID:
      name: uuid
      description: The identifier for a specific layout.
      required: true
      in: path
      schema:
        type: string
        format: uuid
    PlacementUUID:
      name: uuid
      description: The identifier for a specific placement.
      required: true
      in: path
      schema:
        type: string
        format: uuid
    WidgetUUID:
      name: uuid
      description: The identifier for a specific widget.
      required: true
      in: path
      schema:
        type: string
        format: uuid
    FilterWidgetUUIDParam:
      name: widget_uuid
      description: The identifier for a specific widget.
      in: query
      required: false
      schema:
        type: string
        format: uuid
    PageParam:
      name: page
      description: |
        Specifies the page number in a limited (paginated) list of products.
      required: false
      in: query
      schema:
        type: integer
    LimitParam:
      name: limit
      description: |
        Controls the number of items per page in a limited (paginated) list of products.
      required: false
      in: query
      schema:
        type: integer
    QueryWidgetsParam:
      name: query
      in: query
      description: |
        The query string associated with a widget's name and description.
      schema:
        type: string
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
    ChannelIDInParam:
      name: 'channel_id:in'
      in: query
      required: false
      schema:
        type: string
      description: A comma-separated list of channel ids to filter the results by.
    SiteIDInParam:
      name: 'site_id:in'
      in: query
      required: false
      schema:
        type: string
      description: A comma-separated list of site IDs to filter the results by.
  responses:
    ThemeRegions_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/themeRegion'
              meta:
                $ref: '#/components/schemas/Meta'
          examples:
            response:
              value:
                data:
                  - name: header_bottom
                  - name: category_header_banner
                meta: {}
    LayoutCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  properties:
                    uuid:
                      type: string
                      format: uuid
                      description: The primary identifier.
                    entity_id:
                      type: string
                      description: The specific instance of a page
                    template_file:
                      type: string
                      description: The page template name.
                    region:
                      type: string
                      description: The name of the region defined in the Stencil theme file.
                    markup:
                      type: string
                      description: The HTML layout which defines complex positioning for placements.
                    date_created:
                      type: string
                      format: datetime
                      description: The date on which this object was initially created.
                    date_modified:
                      type: string
                      format: datetime
                      description: The date on which this object was last updated.
                  title: Layout
              meta:
                type: object
                description: 'Data about the response, including pagination and collection totals.'
                properties:
                  pagination:
                    type: object
                    description: |
                      Data about the response, including pagination and collection totals.
                    properties:
                      total:
                        type: integer
                        description: |
                          Total number of items in the result set.
                      count:
                        type: integer
                        description: |
                          Total number of items in the collection response.
                      per_page:
                        type: integer
                        description: |
                          The amount of items returned in the collection per page, controlled by the limit parameter.
                      current_page:
                        type: integer
                        description: |
                          The page you are currently on within the collection.
                      total_pages:
                        type: integer
                        description: |
                          The total number of pages in the collection.
                      links:
                        type: object
                        description: |
                          Pagination links for the previous and next parts of the whole collection.
                        properties:
                          previous:
                            type: string
                            description: |
                              Link to the previous page returned in the response.
                          current:
                            type: string
                            description: |
                              Link to the current page returned in the response.
                          next:
                            type: string
                            description: |
                              Link to the next page returned in the response.
                title: Collection Meta
          examples:
            response:
              value:
                data:
                  - uuid: cacdadcf-07ec-43f3-aec4-f8e3382d7618
                    template_file: pages/category
                    entity_id: '21'
                    region: category_header_banner
                    markup: ' '
                    date_created: '2019-02-25T18:38:08.455Z'
                    date_modified: '2019-02-25T18:38:08.455Z'
                meta:
                  pagination:
                    total: 1
                    count: 1
                    per_page: 50
                    current_page: 1
                    total_pages: 1
    LayoutResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  properties:
                    uuid:
                      type: string
                      format: uuid
                      description: The primary identifier.
                    entity_id:
                      type: string
                      description: The specific instance of a page
                    template_file:
                      type: string
                      description: The page template name.
                    region:
                      type: string
                      description: The name of the region defined in the Stencil theme file.
                    markup:
                      type: string
                      description: The HTML layout which defines complex positioning for placements.
                    date_created:
                      type: string
                      format: datetime
                      description: The date on which this object was initially created.
                    date_modified:
                      type: string
                      format: datetime
                      description: The date on which this object was last updated.
                  title: Layout
    PlacementsCollection_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/placement_Full'
              meta:
                $ref: '#/components/schemas/metaCollection'
          examples:
            response:
              value:
                data:
                  - channel_id: 1
                    date_created: '2020-12-21T20:43:16.796Z'
                    date_modified: '2020-12-21T20:43:16.796Z'
                    entity_id: '21'
                    region: category_header_banner
                    sort_order: 1
                    status: active
                    template_file: pages/category
                    uuid: 89eac5b3-91d7-48e5-92e7-ff53ecf07f8c
                    widget:
                      channel_id: 1
                      date_created: '2020-12-21T19:54:16.406Z'
                      date_modified: '2020-12-21T20:40:45.173Z'
                      description: ''
                      name: Header Images
                      storefront_api_query_params: {}
                      uuid: 1f05183e-dfa4-4583-af28-250b47e177b2
                      version_uuid: c863f77b-e5b4-4462-a9ed-2aff9005140e
                      widget_configuration:
                        _:
                          id: 1f05183e-dfa4-4583-af28-250b47e177b2
                        images:
                          - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on'
                          - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2&imbypass=on'
                          - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on'
                      widget_template:
                        channel_id: 1
                        client_rerender: false
                        current_version_uuid: c863f77b-e5b4-4462-a9ed-2aff9005140e
                        date_created: '2020-12-21T19:49:29.110Z'
                        date_modified: '2020-12-21T19:49:29.110Z'
                        icon_name: default
                        kind: custom
                        name: Header Images
                        schema: []
                        storefront_api_query: ''
                        template: '{{#each images}}{{/each}}'
                        template_engine: handlebars_v3
                        uuid: f8459145-da8f-4d98-93e4-83aa47da61c6
                meta:
                  pagination:
                    count: 1
                    current_page: 1
                    per_page: 50
                    total: 1
                    total_pages: 1
    Placement_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/placement_Full'
              meta:
                $ref: '#/components/schemas/Meta'
          examples:
            response:
              value:
                data:
                  channel_id: 1
                  date_created: '2020-12-21T20:43:16.796Z'
                  date_modified: '2020-12-21T20:43:16.796Z'
                  entity_id: '21'
                  region: category_header_banner
                  sort_order: 1
                  status: active
                  template_file: pages/category
                  uuid: 89eac5b3-91d7-48e5-92e7-ff53ecf07f8c
                  widget:
                    channel_id: 1
                    date_created: '2020-12-21T19:54:16.406Z'
                    date_modified: '2020-12-21T20:40:45.173Z'
                    description: ''
                    name: Header Images
                    storefront_api_query_params: {}
                    uuid: 1f05183e-dfa4-4583-af28-250b47e177b2
                    version_uuid: c863f77b-e5b4-4462-a9ed-2aff9005140e
                    widget_configuration:
                      _:
                        id: 1f05183e-dfa4-4583-af28-250b47e177b2
                      images:
                        - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on'
                        - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2&imbypass=on'
                        - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on'
                    widget_template:
                      channel_id: 1
                      client_rerender: false
                      current_version_uuid: c863f77b-e5b4-4462-a9ed-2aff9005140e
                      date_created: '2020-12-21T19:49:29.110Z'
                      date_modified: '2020-12-21T19:49:29.110Z'
                      icon_name: default
                      kind: custom
                      name: Header Images
                      schema: []
                      storefront_api_query: ''
                      template: '{{#each images}}{{/each}}'
                      template_engine: handlebars_v3
                      uuid: f8459145-da8f-4d98-93e4-83aa47da61c6
                meta: {}
    WidgetTemplateCollection_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/widgetTemplate_Full'
              meta:
                $ref: '#/components/schemas/metaCollection'
          examples:
            response:
              value:
                data:
                  - channel_id: 1
                    client_rerender: false
                    current_version_uuid: 4bd7619e-7992-4454-8610-84fb16449761
                    date_created: '2020-12-21T19:36:16.896Z'
                    date_modified: '2020-12-21T19:36:16.896Z'
                    icon_name: default
                    kind: custom
                    name: Header Images
                    schema: []
                    storefront_api_query: ''
                    template: '{{#each images}}{{/each}}'
                    template_engine: handlebars_v3
                    uuid: f8459145-da8f-4d98-93e4-83aa47da61c6
                  - channel_id: 1
                    client_rerender: false
                    current_version_uuid: c23dd66b-fa3f-451d-88ef-9f4082c6051e
                    date_created: '2020-12-21T19:36:59.384Z'
                    date_modified: '2020-12-21T19:36:59.384Z'
                    icon_name: default
                    kind: custom
                    name: Simple List
                    schema: []
                    storefront_api_query: ''
                    template: '<ul>{{#each list_items}}<li style=''color:{{color}};''>{{text}}</li>{{/each}}</ul>'
                    template_engine: handlebars_v3
                    uuid: 42b42cbb-e2d8-4f2a-97ea-06755032115a
                  - channel_id: 1
                    client_rerender: false
                    current_version_uuid: bc820372-368e-4a96-a6d6-f313edba5617
                    date_created: '2020-12-21T19:38:08.036Z'
                    date_modified: '2020-12-21T19:38:08.036Z'
                    icon_name: default
                    kind: custom
                    name: Simple Text with Styling
                    schema: []
                    storefront_api_query: ''
                    template: |
                      {{text}}
                    template_engine: handlebars_v3
                    uuid: 17dcc919-982a-4cc0-8ede-a5b49f9ab6dc
                  - channel_id: 1
                    client_rerender: false
                    current_version_uuid: 873b0a03-b219-46ec-8f06-c3c4522ef25d
                    date_created: '2020-12-21T19:38:30.223Z'
                    date_modified: '2020-12-21T19:38:30.223Z'
                    icon_name: default
                    kind: custom
                    name: YouTube Embed
                    schema: []
                    storefront_api_query: ''
                    template: ''
                    template_engine: handlebars_v3
                    uuid: d9e7fd0e-d5c2-45c9-8919-ce68a5590c12
                  - channel_id: 1
                    client_rerender: false
                    current_version_uuid: 8fa7ff13-fcfb-4106-9c32-5a084224a444
                    date_created: '2020-12-21T19:38:46.557Z'
                    date_modified: '2020-12-21T19:38:46.557Z'
                    icon_name: default
                    kind: custom
                    name: Slider Template
                    schema: []
                    storefront_api_query: ''
                    template: |-
                      {{#each slides}}
                      {{/each}}
                    template_engine: handlebars_v3
                    uuid: 30714957-0e01-4c4e-8551-25591261d0d0
                  - channel_id: 0
                    client_rerender: false
                    current_version_uuid: 7494d009-c695-43ce-a1eb-ba75ef663ba2
                    date_created: '2020-06-23T18:07:12.110Z'
                    date_modified: '2020-06-23T18:07:12.110Z'
                    icon_name: default
                    kind: pp-cartpage-fullbanner
                    name: PayPal Credit Banner - Cart Page (728x90)
                    schema: []
                    storefront_api_query: ''
                    template: ''
                    template_engine: handlebars_v3
                    uuid: 2ff24732-6848-47ba-9a7f-c8b1d444f270
                  - channel_id: 0
                    client_rerender: false
                    current_version_uuid: ee4978a6-31f9-47e2-ab38-810dd1c78e34
                    date_created: '2020-06-23T18:07:12.136Z'
                    date_modified: '2020-06-23T18:07:12.136Z'
                    icon_name: default
                    kind: pp-homepage-fullbanner
                    name: PayPal Credit Banner - Home Page (728x90)
                    schema: []
                    storefront_api_query: ''
                    template: ''
                    template_engine: handlebars_v3
                    uuid: 3002bf5b-5eca-4ac2-8f1f-5240c2b74712
                meta:
                  pagination:
                    total: 7
                    count: 7
                    per_page: 50
                    current_page: 1
                    total_pages: 1
    WidgetTemplate_Resp:
      description: ''
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  data:
                    $ref: '#/components/schemas/widgetTemplate_Full'
              - properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
          examples:
            response:
              value:
                data:
                  channel_id: 1
                  client_rerender: false
                  current_version_uuid: 4bd7619e-7992-4454-8610-84fb16449761
                  date_created: '2020-12-21T19:36:16.896Z'
                  date_modified: '2020-12-21T19:36:16.896Z'
                  icon_name: default
                  kind: custom
                  name: Header Images
                  schema: []
                  storefront_api_query: ''
                  template: '{{#each images}}{{/each}}'
                  template_engine: handlebars_v3
                  uuid: f8459145-da8f-4d98-93e4-83aa47da61c6
                meta: {}
    WidgetCollection_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/widget_Full'
              meta:
                $ref: '#/components/schemas/metaCollection'
          examples:
            response:
              value:
                data:
                  - channel_id: 1
                    date_created: '2020-12-21T19:54:16.406Z'
                    date_modified: '2020-12-21T19:54:16.406Z'
                    description: ''
                    name: Header Images
                    storefront_api_query_params: {}
                    uuid: 1f05183e-dfa4-4583-af28-250b47e177b2
                    version_uuid: c863f77b-e5b4-4462-a9ed-2aff9005140e
                    widget_configuration:
                      _:
                        id: 1f05183e-dfa4-4583-af28-250b47e177b2
                      images:
                        - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on'
                        - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2&imbypass=on'
                        - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on'
                    widget_template:
                      channel_id: 1
                      client_rerender: false
                      current_version_uuid: c863f77b-e5b4-4462-a9ed-2aff9005140e
                      date_created: '2020-12-21T19:49:29.110Z'
                      date_modified: '2020-12-21T19:49:29.110Z'
                      icon_name: default
                      kind: custom
                      name: Header Images
                      schema: []
                      storefront_api_query: ''
                      template: '{{#each images}}{{/each}}'
                      template_engine: handlebars_v3
                      uuid: f8459145-da8f-4d98-93e4-83aa47da61c6
                  - channel_id: 1
                    date_created: '2020-12-21T20:26:18.557Z'
                    date_modified: '2020-12-21T20:26:18.557Z'
                    description: ''
                    name: Simple List
                    storefront_api_query_params: {}
                    uuid: 7a842254-96ad-475f-9fe5-a59695e9685f
                    version_uuid: c23dd66b-fa3f-451d-88ef-9f4082c6051e
                    widget_configuration:
                      _:
                        id: 7a842254-96ad-475f-9fe5-a59695e9685f
                      list_items:
                        - color: blue
                          text: The color is blue
                        - color: green
                          text: The color is green
                        - color: red
                          text: The color is red
                    widget_template:
                      channel_id: 1
                      client_rerender: false
                      current_version_uuid: c23dd66b-fa3f-451d-88ef-9f4082c6051e
                      date_created: '2020-12-21T19:36:59.384Z'
                      date_modified: '2020-12-21T19:36:59.384Z'
                      icon_name: default
                      kind: custom
                      name: Simple List
                      schema: []
                      storefront_api_query: ''
                      template: '<ul>{{#each list_items}}<li style=''color:{{color}};''>{{text}}</li>{{/each}}</ul>'
                      template_engine: handlebars_v3
                      uuid: 42b42cbb-e2d8-4f2a-97ea-06755032115a
                meta:
                  pagination:
                    count: 2
                    current_page: 1
                    per_page: 50
                    total: 2
                    total_pages: 1
    Widget_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/widget_Full'
              meta:
                $ref: '#/components/schemas/Meta'
          examples:
            response:
              value:
                data:
                  channel_id: 1
                  date_created: '2020-12-21T19:54:16.406Z'
                  date_modified: '2020-12-21T19:54:16.406Z'
                  description: ''
                  name: Header Images
                  storefront_api_query_params: {}
                  uuid: 1f05183e-dfa4-4583-af28-250b47e177b2
                  version_uuid: c863f77b-e5b4-4462-a9ed-2aff9005140e
                  widget_configuration:
                    _:
                      id: 1f05183e-dfa4-4583-af28-250b47e177b2
                    images:
                      - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on'
                      - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2&imbypass=on'
                      - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on'
                  widget_template:
                    channel_id: 1
                    client_rerender: false
                    current_version_uuid: c863f77b-e5b4-4462-a9ed-2aff9005140e
                    date_created: '2020-12-21T19:49:29.110Z'
                    date_modified: '2020-12-21T19:49:29.110Z'
                    icon_name: default
                    kind: custom
                    name: Header Images
                    schema: []
                    storefront_api_query: ''
                    template: '{{#each images}}{{/each}}'
                    template_engine: handlebars_v3
                    uuid: f8459145-da8f-4d98-93e4-83aa47da61c6
                meta: {}
    Error422_Resp:
      description: |
        This is the result of missing required fields, or of invalid data. See the response for more details.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Base'
    Error404_Resp:
      description: The resource was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Base'
          examples:
            example-1:
              value:
                status: 0
                title: string
                type: string
                instance: string
                errors: {}
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Content | modify | `store_v2_content` |
        |  Content | read-only | `store_v2_content_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header
  schemas:
    WidgetTemplatePreview:
      properties:
        widget_configuration:
          type: object
          description: The JSON data that populates the template.
          format: json
      x-tags:
        - Models
    WidgetTemplatePreviewResponse:
      type: object
      properties:
        data:
          properties:
            html:
              type: string
              description: The HTML render of the widget template.
              format: html
      x-tags:
        - Models
      title: ''
    widgetTemplate_Put:
      allOf:
        - $ref: '#/components/schemas/widgetTemplate_Base'
        - type: object
          properties:
            create_new_version:
              type: boolean
              description: Can be added to create a new widget template version instead of updating the current one.
            channel_id:
              type: integer
              description: The id of the channel on which to place this template.
      title: widgetTemplate_Put
      x-internal: false
    widgetTemplate_Post:
      title: widgetTemplate_Post
      type: object
      description: ''
      x-internal: false
      properties:
        name:
          type: string
          description: User-friendly name.
        schema:
          $ref: '#/components/schemas/widgetSchema'
        template:
          type: string
          description: Handlebars HTML content. Also has access to Stencil Paper helpers.
          format: html
        storefront_api_query:
          type: string
          description: The GraphQL Storefront API query that provides widget data.
        channel_id:
          type: integer
          description: The id of the channel on which to create this template. Defaults to the first channel created on the store.
      required:
        - name
        - template
      x-examples:
        example-1:
          name: string
          schema:
            - tab
          template: string
          storefront_api_query: string
          channel_id: 0
    widgetTemplate_Full:
      allOf:
        - $ref: '#/components/schemas/widgetTemplate_Base'
        - type: object
          properties:
            uuid:
              type: string
              format: uuid
              description: The primary identifier.
            kind:
              type: string
              description: The kind of widget template.
            date_created:
              type: string
              format: datetime
              description: The date on which this object was initially created.
            date_modified:
              type: string
              format: datetime
              description: The date on which this object was last updated.
            current_version_uuid:
              type: string
              description: The identifier to the current version of this widget template.
            icon_name:
              type: string
              default: default
              description: A read-only value. Do not attempt to set or modify this value in a POST or PUT operation.
      title: widgetTemplate_Full
      description: ''
      x-internal: false
    widget_Full:
      title: widget_Full
      allOf:
        - $ref: '#/components/schemas/widget_Base'
        - type: object
          properties:
            uuid:
              type: string
              format: uuid
              description: The primary identifier.
            widget_template:
              $ref: '#/components/schemas/widgetTemplate_Full'
            date_created:
              type: string
              format: datetime
              description: The date on which this object was initially created.
            date_modified:
              type: string
              format: datetime
              description: The date on which this object was last updated.
            version_uuid:
              type: string
              description: The identifier of the widget template version associated with this widget.
            channel_id:
              type: integer
              description: The ID of the channel on which this widget exists.
      x-internal: false
    widget_Post:
      title: widget_Post
      x-internal: false
      type: object
      properties:
        name:
          type: string
          description: User friendly name.
        description:
          type: string
          description: The user-friendly description.
        widget_configuration:
          type: object
          description: The JSON data that populates the template.
          format: json
        widget_template_uuid:
          type: string
          description: The widget template UUID.
        channel_id:
          type: integer
          description: The ID of the channel on which to create this widget. Defaults to the first channel created on the store.
      required:
        - name
        - widget_template_uuid
    widget_Put:
      title: widget_Put
      allOf:
        - $ref: '#/components/schemas/widget_Base'
        - type: object
          properties:
            widget_template_uuid:
              type: string
              description: The widget template UUID.
            channel_id:
              type: integer
            upgrade:
              type: boolean
              description: Upgrade the Widget to latest version of the WidgetTemplate.
      x-internal: false
    placement_Post:
      title: placement_Post
      allOf:
        - type: object
          properties:
            widget_uuid:
              type: string
              description: A widget identifier.
            template_file:
              type: string
              description: The template file that you would like to target.
            channel_id:
              type: integer
              description: The id of the channel on which to create this placement. Defaults to the first channel created on the store.
              example: 1
          required:
            - widget_uuid
            - template_file
        - $ref: '#/components/schemas/placement_Base'
      x-internal: false
    placement_Put:
      title: placement_Put
      allOf:
        - type: object
          properties:
            template_file:
              type: string
              description: The template file that you would like to target.
            widget_uuid:
              type: string
              description: A widget identifier.
            channel_id:
              type: integer
              description: The ID of the channel on which this placement exists.
        - $ref: '#/components/schemas/placement_Base'
      x-internal: false
    placement_Full:
      title: placement_Full
      allOf:
        - type: object
          properties:
            uuid:
              type: string
              format: uuid
              description: The primary identifier.
            template_file:
              type: string
              description: The template file that you would like to target.
            date_created:
              type: string
              format: datetime
              description: The date on which this object was initially created.
            date_modified:
              type: string
              format: datetime
              description: The date on which this object was last updated.
            channel_id:
              type: integer
              description: The ID of the channel on which this placement exists.
        - $ref: '#/components/schemas/placement_Base'
        - type: object
          properties:
            widget:
              $ref: '#/components/schemas/widget_Full'
      x-internal: false
    metaCollection:
      type: object
      description: 'Data about the response, including pagination and collection totals.'
      title: metaCollection
      properties:
        pagination:
          $ref: '#/components/schemas/pagination'
      x-internal: false
    pagination:
      type: object
      description: |
        Data about the response, including pagination and collection totals.
      properties:
        total:
          type: integer
          description: |
            Total number of items in the result set.
        count:
          type: integer
          description: |
            Total number of items in the collection response.
        per_page:
          type: integer
          description: |
            The amount of items returned in the collection per page, controlled by the limit parameter.
        current_page:
          type: integer
          description: |
            The page you are currently on within the collection.
        total_pages:
          type: integer
          description: |
            The total number of pages in the collection.
        links:
          type: object
          description: |
            Pagination links for the previous and next parts of the whole collection.
          properties:
            previous:
              type: string
              description: |
                Link to the previous page returned in the response.
            current:
              type: string
              description: |
                Link to the current page returned in the response.
            next:
              type: string
              description: |
                Link to the next page returned in the response.
      title: pagination
      x-internal: false
    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            errors:
              $ref: '#/components/schemas/DetailedErrors'
      x-tags:
        - Models
    error_Base:
      type: object
      description: Error payload for the BigCommerce API.
      properties:
        status:
          description: The HTTP status code.
          type: integer
        title:
          description: The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
        errors:
          type: object
      x-internal: false
      title: error_Base
    BaseError:
      type: object
      description: |
        Error payload for the BigCommerce API.
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
      x-tags:
        - Models
    DetailedErrors:
      type: object
      properties: {}
      additionalProperties: true
      title: Detailed Errors
      x-tags:
        - Models
    themeRegion:
      properties:
        name:
          type: string
          description: The region name.
      title: themeRegion
      x-internal: false
    Meta:
      title: Response meta
      type: object
      properties: {}
      additionalProperties: true
      description: Response metadata.
    placement_Base:
      type: object
      title: placement_Base
      properties:
        entity_id:
          type: string
          description: 'The identifier of a page you would like to target. For product pages, choose product ID. For category pages, choose category ID. Home page does not support `entity_id`.'
        sort_order:
          type: integer
          description: The sort order to control the position of a content widget in a region.
        region:
          type: string
          description: The name of the region in which to insert content widgets.
        status:
          type: string
          enum:
            - inactive
            - active
          description: Sets the placement as either inactive or active.
          default: inactive
      x-internal: false
    widgetTemplate_Base:
      type: object
      title: widgetTemplate_Base
      properties:
        name:
          type: string
          description: The user-friendly name.
        schema:
          $ref: '#/components/schemas/widgetSchema'
        template:
          type: string
          format: html
          description: The widget template HTML. Supports Handlebars and Paper helpers.
        storefront_api_query:
          type: string
          description: The GraphQL Storefront API query that provides widget data.
      description: ''
      x-internal: false
    widget_Base:
      type: object
      title: widget_Base
      properties:
        name:
          type: string
          description: The user-friendly name.
        description:
          type: string
          description: The user-friendly description.
        widget_configuration:
          type: object
          format: json
          description: The JSON data that populates the template.
      x-internal: false
      x-examples: {}
    new-model:
      type: array
      items:
        type: object
        properties:
          type:
            type: string
          label:
            type: string
          id:
            type: string
          default:
            type: integer
          typeMeta:
            type: string
          conditional:
            $ref: '#/components/schemas/widgetSchemaConditional'
      x-internal: false
    widgetSchemaTab:
      type: object
      title: widgetSchemaTab
      description: '**Tab.** Use the **tab** settings type to create settings visible in Page Builder.'
      properties:
        type:
          type: string
          description: The type of setting component to display.
          enum:
            - tab
        label:
          type: string
          example: Content
          description: The user-friendly message to inform the user how this setting will be used.
        sections:
          type: array
          description: Groups of related settings.
          items:
            type: object
            title: widgetSchemaTabSections
            properties:
              label:
                type: string
                description: The user-friendly message to inform the user how this setting will be used.
                example: Product
              settings:
                type: array
                description: 'For examples of schema settings, see [Widget UI Input Types](/stencil-docs/page-builder/schema-settings).'
                items:
                  type: object
                  title: widgetSchemaSetting_Base
                  description: 'For examples of each type of setting, see [Page Builder > Schema Settings](/stencil-docs/page-builder/schema-settings/alignment) in Theme Docs.'
                  properties:
                    type:
                      type: string
                      description: |-
                        The type of setting component to display. You can view the list of elements below to discover which are available to use.

                        For examples of each type of setting, see [Page Builder > Schema Settings](/stencil-docs/page-builder/schema-settings/alignment) in Theme Docs.
                      enum:
                        - alignment
                        - boolean
                        - boxModel
                        - code
                        - color
                        - imageManager
                        - input
                        - number
                        - productId
                        - productImage
                        - range
                        - regexInput
                        - select
                        - text
                        - toggle
                    label:
                      type: string
                      description: The user friendly message to inform the user how this setting will be used.
                    id:
                      type: string
                      description: The variable name where the setting value will be available in the widget template.
                    default:
                      type: string
                      description: The default value to use when rendering the widget for the first time. Make sure to set sensible defaults to make your widget easier to use.
                    typeMeta:
                      type: object
                      description: Additional information needed based on the selected setting type.
                      properties:
                        selectOptions:
                          type: array
                          items:
                            type: object
                            properties:
                              label:
                                type: string
                                example: Image
                              value:
                                type: string
                                example: image
                    conditional:
                      type: object
                      title: widgetSchemaConditional
                      description: 'An optional property that can be added to each setting to control whether it should be displayed to the user while editing in Page Builder. This does not clear the value in the setting, just controls the display of the setting.'
                      x-examples:
                        Conditional attribute:
                          key: backgroundType
                          operator: IN
                          value:
                            - color
                      properties:
                        key:
                          type: string
                          description: The ID of the `setting` object the conditional attribute is related to.
                          example: backgroundType
                        operator:
                          type: string
                          description: 'Specifies the operation used to determine whether to display the setting. The `IN` operator is currently the only supported operator. The setting will be displayed if the conditional’s `value` property is equal to the selected value of the `selectOptions`. '
                          example: IN
                        value:
                          type: array
                          description: A single-object array containing a value from the `typeMeta`'s `selectOptions`.
                          items: {}
      x-internal: false
      x-examples: {}
    widgetSchemaTabSections:
      type: object
      title: widgetSchemaTabSections
      properties:
        label:
          type: string
        settings:
          type: array
          description: 'For examples of each type of setting, see [Page Builder > Schema Settings](/stencil-docs/page-builder/schema-settings/alignment) in Theme Docs.'
          items:
            $ref: '#/components/schemas/widgetSchemaSetting_Base'
      x-internal: false
    widgetSchemaArray:
      type: object
      title: widgetSchemaArray
      description: '**Array.** Use the **array** settings type to build collections of elements within the widget. Each element in the array can contain tabs, sections, and an entire schema.'
      properties:
        type:
          type: string
          enum:
            - array
        label:
          type: string
        id:
          type: string
        defaultCount:
          type: integer
          description: number of elements in the list to display by default.
        entryLabel:
          type: string
          description: name for each element in the list
        thumbnail:
          type: object
          description: used to display an image stored at the specified attribute name
          properties:
            type:
              type: string
              example: image
            valueKey:
              type: string
              example: imageUrl.src
        schema:
          description: The schema used for each element in the array.
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/widgetSchemaHidden'
              - $ref: '#/components/schemas/widgetSchemaTab'
      x-internal: false
    widgetSchemaSetting_Base:
      type: object
      title: widgetSchemaSetting_Base
      description: 'For examples of each type of setting, see [Page Builder > Schema Settings](/stencil-docs/page-builder/schema-settings/alignment) in Theme Docs.'
      properties:
        type:
          type: string
          description: |-
            The type of setting component to display. You can view the list of elements below to discover which are available to use.

            For examples of each type of setting, see [Page Builder > Schema Settings](/stencil-docs/page-builder/schema-settings/alignment) in Theme Docs.
          enum:
            - alignment
            - boolean
            - boxModel
            - code
            - color
            - imageManager
            - input
            - number
            - productId
            - productImage
            - range
            - regexInput
            - select
            - text
            - toggle
        label:
          type: string
          description: The user friendly message to inform the user how this setting will be used.
        id:
          type: string
          description: The variable name where the setting value will be available in the widget template.
        default:
          type: string
          description: The default value to use when rendering the widget for the first time. Make sure to set sensible defaults to make your widget easier to use.
        typeMeta:
          type: object
          description: Additional information needed based on the selected setting type.
          properties:
            selectOptions:
              type: array
              items:
                type: object
                properties:
                  label:
                    type: string
                    example: Image
                  value:
                    type: string
                    example: image
        conditional:
          $ref: '#/components/schemas/widgetSchemaConditional'
      x-internal: false
    widgetSchema:
      type: array
      description: 'The schema for the widget’s merchant-facing UI. For more information on the available schema settings, see [Widget UI Schema](/stencil-docs/page-builder/widget-ui-schema). '
      title: ''
      items:
        anyOf:
          - $ref: '#/components/schemas/widgetSchemaTab'
          - $ref: '#/components/schemas/widgetSchemaArray'
          - $ref: '#/components/schemas/widgetSchemaHidden'
      x-internal: false
    widgetSchemaHidden:
      type: object
      title: widgetSchemaHidden
      description: '**Hidden.** Use the **hidden** settings type to create controls that have no user interface drawn in Page Builder. Hidden settings are not grouped into any other tabs or arrays.'
      x-internal: false
      properties:
        type:
          type: string
          enum:
            - hidden
          example: hidden
        settings:
          type: array
          items:
            type: object
            title: widgetSchemaSetting_Base
            description: 'For examples of each type of setting, see [Page Builder > Schema Settings](/stencil-docs/page-builder/schema-settings/alignment) in Theme Docs.'
            properties:
              type:
                type: string
                description: |-
                  The type of setting component to display. You can view the list of elements below to discover which are available to use.

                  For examples of each type of setting, see [Page Builder > Schema Settings](/stencil-docs/page-builder/schema-settings/alignment) in Theme Docs.
                enum:
                  - alignment
                  - boolean
                  - boxModel
                  - code
                  - color
                  - imageManager
                  - input
                  - number
                  - productId
                  - productImage
                  - range
                  - regexInput
                  - select
                  - text
                  - toggle
              label:
                type: string
                description: The user friendly message to inform the user how this setting will be used.
              id:
                type: string
                description: The variable name where the setting value will be available in the widget template.
              default:
                type: string
                description: The default value to use when rendering the widget for the first time. Make sure to set sensible defaults to make your widget easier to use.
              typeMeta:
                type: object
                description: Additional information needed based on the selected setting type.
                properties:
                  selectOptions:
                    type: array
                    items:
                      type: object
                      properties:
                        label:
                          type: string
                          example: Image
                        value:
                          type: string
                          example: image
              conditional:
                type: object
                title: widgetSchemaConditional
                description: 'An optional property that can be added to each setting to control whether it should be displayed to the user while editing in Page Builder. This does not clear the value in the setting, just controls the display of the setting.'
                x-examples:
                  Conditional attribute:
                    key: backgroundType
                    operator: IN
                    value:
                      - color
                properties:
                  key:
                    type: string
                    description: The ID of the `setting` object the conditional attribute is related to.
                    example: backgroundType
                  operator:
                    type: string
                    description: 'Specifies the operation used to determine whether to display the setting. The `IN` operator is currently the only supported operator. The setting will be displayed if the conditional’s `value` property is equal to the selected value of the `selectOptions`. '
                    example: IN
                  value:
                    type: array
                    description: A single-object array containing a value from the `typeMeta`'s `selectOptions`.
                    items: {}
    widgetSchemaTabSectionsSettings:
      type: object
      properties: {}
      title: widgetSchemaTabSectionsSettings
      x-internal: false
    widgetSchemaConditional:
      type: object
      title: widgetSchemaConditional
      description: 'An optional property that can be added to each setting to control whether it should be displayed to the user while editing in Page Builder. This does not clear the value in the setting, just controls the display of the setting.'
      x-examples:
        Conditional attribute:
          key: backgroundType
          operator: IN
          value:
            - color
      properties:
        key:
          type: string
          description: The ID of the `setting` object the conditional attribute is related to.
          example: backgroundType
        operator:
          type: string
          description: 'Specifies the operation used to determine whether to display the setting. The `IN` operator is currently the only supported operator. The setting will be displayed if the conditional’s `value` property is equal to the selected value of the `selectOptions`. '
          example: IN
        value:
          type: array
          description: A single-object array containing a value from the `typeMeta`'s `selectOptions`.
          items: {}
      x-internal: false

openapi: '3.0.1'
info:
  title: Wishlist
  description: |-
    Create and manage customer [wishlists](https://support.bigcommerce.com/s/article/Wishlists).

    ## Additional Information
    * [Wishlists](https://support.bigcommerce.com/s/article/Wishlists)
  version: ''
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Wishlists
    description: ''
  - name: Wishlists Items
paths:
  '/wishlists':
    get:
      tags:
        - Wishlists
      summary: Get All Wishlists
      description: Returns a list of wishlists. Optional filter parameters can be passed in.
      operationId: WishlistsGet
      parameters:
        - name: customer_id
          in: query
          description: All wishlists relating to the customer.
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: The page number of results per page. 1 is the default and starts from record 0.
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: The numbers of items to return per page. Default is 50 and maximum is 250.
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/wishlist_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection'
              example:
                data:
                  - id: 1
                    customer_id: 4
                    name: My Wish List
                    is_public: false
                    token: 02d55481-13eb-4d1e-9d79-9062b518570d
                    items: []
                  - id: 2
                    customer_id: 11
                    name: Christmas
                    is_public: false
                    token: 02d55481-13eb-4d1e-9d79-9062b518570d
                    items:
                      - id: 1
                        product_id: 167
                      - id: 2
                        product_id: 174
                      - id: 3
                        product_id: 184
                  - id: 3
                    customer_id: 20
                    name: Birthday
                    is_public: false
                    token: 02d55481-13eb-4d1e-9d79-9062b518570d
                    items:
                      - id: 4
                        product_id: 184
                      - id: 5
                        product_id: 183
                  - id: 4
                    customer_id: 20
                    name: Christmas
                    is_public: false
                    token: 02d55481-13eb-4d1e-9d79-9062b518570d
                    items:
                      - id: 6
                        product_id: 201
                  - id: 5
                    customer_id: 19
                    name: Wish List
                    is_public: false
                    token: 02d55481-13eb-4d1e-9d79-9062b518570d
                    items:
                      - id: 7
                        product_id: 173
                      - id: 8
                        product_id: 176
                meta:
                  pagination:
                    total: 0
                    count: 5
                    per_page: 50
                    current_page: 1
                    total_pages: 0
        '401':
          description: Authentication information is missing or invalid.
          content:
            application/json:
              schema:
                title: Error
                type: object
                properties:
                  status:
                    type: integer
                    format: int32
                  title:
                    type: string
                  type:
                    type: string
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                title: Error
                type: object
                properties:
                  status:
                    type: integer
                    format: int32
                  title:
                    type: string
                  type:
                    type: string
    post:
      tags:
        - Wishlists
      summary: Create a Wishlist
      description: |-
        Creates a wishlist and wishlist item. More than one item can be added in the POST.

        **Required Fields**
        * name
        * customer_id
      operationId: WishlistsPost
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wishlist_Post'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/wishlist_Full'
                  meta:
                    type: object
                    properties: {}
                    additionalProperties: true
                    description: Response metadata.
              example:
                data:
                  id: 30
                  customer_id: 10
                  name: Christmas List
                  is_public: true
                  token: d2d55481-13eb-4d1e-9d79-9062b518570d
                  items:
                    - id: 44
                      product_id: 77
                      variant_id: 1
                    - id: 45
                      product_id: 80
                      variant_id: 1
                    - id: 46
                      product_id: 81
                      variant_id: 1
                    - id: 47
                      product_id: 86
                      variant_id: 1
                    - id: 48
                      product_id: 88
                      variant_id: 1
                meta: {}
        '401':
          description: Authentication information is missing or invalid.
          content:
            application/json:
              schema:
                title: Error
                type: object
                properties:
                  status:
                    type: integer
                    format: int32
                  title:
                    type: string
                  type:
                    type: string
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                title: Error
                type: object
                properties:
                  status:
                    type: integer
                    format: int32
                  title:
                    type: string
                  type:
                    type: string
      x-codegen-request-body-name: body
  '/wishlists/{wishlist_id}/items/{item_id}':
    delete:
      tags:
        - Wishlists Items
      summary: Delete Wishlist Item
      description: Deletes a wishlist item.
      operationId: WishlistsItemsByIdDelete
      parameters:
        - $ref: '#/components/parameters/WishlistID'
        - $ref: '#/components/parameters/Accept'
        - name: item_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/wishlist_Full'
                  meta:
                    type: object
                    properties: {}
                    additionalProperties: true
                    description: Response metadata.
              example:
                data:
                  id: 30
                  customer_id: 10
                  name: Christmas List
                  is_public: true
                  token: d2d55481-13eb-4d1e-9d79-9062b518570d
                  items:
                    - id: 44
                      product_id: 77
                      variant_id: 1
                    - id: 45
                      product_id: 80
                      variant_id: 1
                    - id: 46
                      product_id: 81
                      variant_id: 1
                    - id: 47
                      product_id: 86
                      variant_id: 1
                    - id: 48
                      product_id: 88
                      variant_id: 1
                meta: {}
        '401':
          description: Authentication information is missing or invalid.
          content:
            application/json:
              schema:
                title: Error
                type: object
                properties:
                  status:
                    type: integer
                    format: int32
                  title:
                    type: string
                  type:
                    type: string
        '404':
          description: Wishlist not found.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                title: Error
                type: object
                properties:
                  status:
                    type: integer
                    format: int32
                  title:
                    type: string
                  type:
                    type: string
  '/wishlists/{wishlist_id}':
    get:
      tags:
        - Wishlists
      summary: Get a Wishlist
      description: Returns a single wishlist.
      operationId: WishlistsByIdGet
      parameters:
        - $ref: '#/components/parameters/WishlistID'
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/wishlist_Full'
                  meta:
                    type: object
                    properties: {}
                    additionalProperties: true
                    description: Response metadata.
              example:
                data:
                  id: 30
                  customer_id: 10
                  name: Christmas List
                  is_public: true
                  token: d2d55481-13eb-4d1e-9d79-9062b518570d
                  items:
                    - id: 44
                      product_id: 77
                      variant_id: 1
                    - id: 45
                      product_id: 80
                      variant_id: 1
                    - id: 46
                      product_id: 81
                      variant_id: 1
                    - id: 47
                      product_id: 86
                      variant_id: 1
                    - id: 48
                      product_id: 88
                      variant_id: 1
                meta: {}
        '401':
          description: Authentication information is missing or invalid.
          content:
            application/json:
              schema:
                title: Error
                type: object
                properties:
                  status:
                    type: integer
                    format: int32
                  title:
                    type: string
                  type:
                    type: string
        '404':
          description: Wishlist not found.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                title: Error
                type: object
                properties:
                  status:
                    type: integer
                    format: int32
                  title:
                    type: string
                  type:
                    type: string
    put:
      tags:
        - Wishlists
      summary: Update a Wishlist
      description: |-
        Updates a wishlist.

        Use this endpoint to update existing wishlist items, change the wishlist's name and whether the wishlist is available publicly. To add or delete a wishlist item, see [Wishlist Items](/docs/rest-management/wishlists/wishlists-items).
      operationId: WishlistsByIdPut
      parameters:
        - $ref: '#/components/parameters/WishlistID'
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wishlist_Put'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/wishlist_Full'
                  meta:
                    type: object
                    properties: {}
                    additionalProperties: true
                    description: Response metadata.
              example:
                data:
                  id: 30
                  customer_id: 10
                  name: Christmas List
                  is_public: true
                  token: d2d55481-13eb-4d1e-9d79-9062b518570d
                  items:
                    - id: 44
                      product_id: 77
                      variant_id: 1
                    - id: 45
                      product_id: 80
                      variant_id: 1
                    - id: 46
                      product_id: 81
                      variant_id: 1
                    - id: 47
                      product_id: 86
                      variant_id: 1
                    - id: 48
                      product_id: 88
                      variant_id: 1
                meta: {}
        '401':
          description: Authentication information is missing or invalid.
          content:
            application/json:
              schema:
                title: Error
                type: object
                properties:
                  status:
                    type: integer
                    format: int32
                  title:
                    type: string
                  type:
                    type: string
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                title: Error
                type: object
                properties:
                  status:
                    type: integer
                    format: int32
                  title:
                    type: string
                  type:
                    type: string
      x-codegen-request-body-name: body
    delete:
      tags:
        - Wishlists
      summary: Delete a Wishlist
      description: Deletes a wishlist.
      operationId: WishlistsByIdDelete
      parameters:
        - $ref: '#/components/parameters/WishlistID'
        - $ref: '#/components/parameters/Accept'
      responses:
        '204':
          description: ''
          content: {}
        '401':
          description: Authentication information is missing or invalid.
          content:
            application/json:
              schema:
                title: Error
                type: object
                properties:
                  status:
                    type: integer
                    format: int32
                  title:
                    type: string
                  type:
                    type: string
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                title: Error
                type: object
                properties:
                  status:
                    type: integer
                    format: int32
                  title:
                    type: string
                  type:
                    type: string
  '/wishlists/{wishlist_id}/items':
    post:
      tags:
        - Wishlists Items
      summary: Add Wishlist Item
      description: Adds a wishlist item. More than one item can be added at a time.
      operationId: WishlistsItemsByIdPost
      parameters:
        - $ref: '#/components/parameters/WishlistID'
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wishlistItem_Post'
        required: false
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/wishlist_Full'
                  meta:
                    type: object
                    properties: {}
                    additionalProperties: true
                    description: Response metadata.
              example:
                data:
                  id: 30
                  customer_id: 10
                  name: Christmas List
                  is_public: true
                  token: d2d55481-13eb-4d1e-9d79-9062b518570d
                  items:
                    - id: 44
                      product_id: 77
                      variant_id: 1
                    - id: 45
                      product_id: 80
                      variant_id: 1
                    - id: 46
                      product_id: 81
                      variant_id: 1
                    - id: 47
                      product_id: 86
                      variant_id: 1
                    - id: 48
                      product_id: 88
                      variant_id: 1
                meta: {}
        '401':
          description: Authentication information is missing or invalid.
          content:
            application/json:
              schema:
                title: Error
                type: object
                properties:
                  status:
                    type: integer
                    format: int32
                  title:
                    type: string
                  type:
                    type: string
        '404':
          description: Wishlist not found.
          content: {}
        '500':
          description: Internal server error.
          content: {}
      x-codegen-request-body-name: body
components:
  schemas:
    wishlist_Post:
      title: wishlist_Post
      required:
        - customer_id
      type: object
      properties:
        customer_id:
          type: integer
          description: The customer id.
          format: int32
          example: 12
        is_public:
          type: boolean
          description: Whether the wishlist is available to the public.
          example: false
        name:
          type: string
          description: The title of the wishlist.
          example: School Shopping
        items:
          type: array
          description: Array of wishlist items.
          items:
            title: Add item to wishlist
            type: object
            properties:
              product_id:
                type: integer
                description: The ID of the product.
                format: int32
                example: 12
              variant_id:
                type: integer
                description: The variant ID of the product.
                format: int32
                example: 152
      x-internal: false
    wishlist_Put:
      title: wishlist_Put
      required:
        - customer_id
        - items
      type: object
      properties:
        customer_id:
          type: integer
          description: The customer ID. A read-only value.
          format: int32
        is_public:
          type: boolean
          description: Whether the wishlist is available to the public.
        name:
          type: string
          description: The title of the wishlist.
        items:
          type: array
          description: Array of wishlist items.
          items:
            title: Wishlist item
            type: object
            properties:
              id:
                type: integer
                description: The ID of the item.
                format: int32
                example: 12
              product_id:
                type: integer
                description: The ID of the product.
                format: int32
                example: 55
              variant_id:
                type: integer
                description: The variant ID of the product.
                format: int32
                example: 22
      x-internal: false
    wishlist_Full:
      title: wishlist_Full
      type: object
      properties:
        id:
          type: integer
          description: 'Wishlist ID, provided after creating a wishlist with a POST.'
          format: int32
          example: 30
        customer_id:
          type: integer
          description: The ID the customer to which the wishlist belongs.
          format: int32
          example: 12
        name:
          type: string
          description: The name of the wishlist.
          example: Christmas List
        is_public:
          type: boolean
          description: Whether the wishlist is available to the public.
          example: true
        token:
          type: string
          description: The token of the wishlist. This is created internally within BigCommerce. The wishlist ID is to be used for external apps. Read-Only.
          format: uuid
          example: 02d55481-13eb-4d1e-9d79-9062b518570d
        items:
          type: array
          description: Array of wishlist items.
          items:
            $ref: '#/components/schemas/wishlistItem_Full'
      x-internal: false
    wishlistItem_Full:
      title: wishlistItem_Full
      type: object
      properties:
        id:
          type: integer
          description: The ID of the item.
          format: int32
          example: 12
        product_id:
          type: integer
          description: The ID of the product.
          format: int32
          example: 55
        variant_id:
          type: integer
          description: The variant ID of the product.
          format: int32
          example: 22
      x-internal: false
    wishlistItem_Post:
      type: object
      title: wishlistItem_Post
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              product_id:
                type: integer
                example: 12
              variant_id:
                type: integer
                example: 152
      x-examples:
        example-1:
          items:
            - product_id: 12
              variant_id: 152
    pagination:
      title: pagination
      type: object
      properties:
        total:
          type: integer
          description: Total number of items in the result set.
          format: int32
        count:
          type: integer
          description: Total number of items in the collection response.
          format: int32
        per_page:
          type: integer
          description: 'The amount of items returned in the collection per page, controlled by the limit parameter.'
          format: int32
        current_page:
          type: integer
          description: The page you are currently on within the collection.
          format: int32
        total_pages:
          type: integer
          description: The total number of pages in the collection.
          format: int32
      description: 'Data about the response, including pagination and collection totals.'
      x-internal: false
    error:
      title: error
      type: object
      properties:
        status:
          type: integer
          format: int32
        title:
          type: string
        type:
          type: string
      x-internal: false
    metaCollection:
      title: metaCollection
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/pagination'
      x-internal: false
  responses:
    Unauthorized:
      description: Authentication information is missing or invalid.
      content:
        application/json:
          schema:
            title: Error
            type: object
            properties:
              status:
                type: integer
                format: int32
              title:
                type: string
              type:
                type: string
    Wishlist_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/wishlist_Full'
              meta:
                type: object
                properties: {}
                additionalProperties: true
                description: Response metadata.
          example:
            data:
              id: 30
              customer_id: 10
              name: Christmas List
              is_public: true
              token: d2d55481-13eb-4d1e-9d79-9062b518570d
              items:
                - id: 44
                  product_id: 77
                  variant_id: 1
                - id: 45
                  product_id: 80
                  variant_id: 1
                - id: 46
                  product_id: 81
                  variant_id: 1
                - id: 47
                  product_id: 86
                  variant_id: 1
                - id: 48
                  product_id: 88
                  variant_id: 1
            meta: {}
    wishlist_Resp_Collection:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/wishlist_Full'
              meta:
                $ref: '#/components/schemas/metaCollection'
          example:
            data:
              - id: 1
                customer_id: 4
                name: My Wish List
                is_public: false
                token: 02d55481-13eb-4d1e-9d79-9062b518570d
                items: []
              - id: 2
                customer_id: 11
                name: Christmas
                is_public: false
                token: 02d55481-13eb-4d1e-9d79-9062b518570e
                items:
                  - id: 1
                    product_id: 167
                  - id: 2
                    product_id: 174
                  - id: 3
                    product_id: 184
              - id: 3
                customer_id: 20
                name: Birthday
                is_public: false
                token: 02d55481-13eb-4d1e-9d79-9062b518570f
                items:
                  - id: 4
                    product_id: 184
                  - id: 5
                    product_id: 183
              - id: 4
                customer_id: 20
                name: Christmas
                is_public: false
                token: 02d55481-13eb-4d1e-9d79-9062b518570f
                items:
                  - id: 6
                    product_id: 201
              - id: 5
                customer_id: 19
                name: Wish List
                is_public: false
                token: 02d55481-13eb-4d1e-9d79-9062b518570f
                items:
                  - id: 7
                    product_id: 173
                  - id: 8
                    product_id: 176
            meta:
              pagination:
                total: 0
                count: 5
                per_page: 50
                current_page: 1
                total_pages: 0
  parameters:
    FilterCustomerID:
      name: customer_id
      in: query
      description: All wishlists relating to the customer.
      schema:
        type: integer
        format: int32
    FilterPage:
      name: page
      in: query
      description: The page number of results per page. 1 is the default and starts from record 0.
      schema:
        type: integer
        format: int32
    FilterLimit:
      name: limit
      in: query
      description: The numbers of items to return per page. Default is 50 and maximum is 250.
      schema:
        type: integer
        format: int32
    WishlistID:
      name: wishlist_id
      in: path
      description: ID of the Wishlist.
      required: true
      schema:
        type: integer
        format: int32
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Customers | modify | `store_v2_customers` |
        |  Customers | read-only | `store_v2_customers_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header


